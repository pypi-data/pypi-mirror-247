Metadata-Version: 2.1
Name: key_shuffler
Version: 0.1.0
Summary: Simply python library for encrypting private keys using character shuffle method
Home-page: https://github.com/indicatedl/key_shuffler.git
Download-URL: https://github.com/indicatedl/key_shuffler/archive/refs/tags/v0.1.0.zip
Author: indicatedl
Author-email: indcated@gmail.com
License: MIT License
Classifier: Topic :: Communications :: Email
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Customer Service
Classifier: Intended Audience :: Financial and Insurance Industry
Requires-Python: >=3.10.0
Description-Content-Type: text/markdown

[![Telegram channel](https://img.shields.io/endpoint?url=https://runkit.io/damiankrawczyk/telegram-badge/branches/master?url=https://t.me/cryptogovnozavod)](https://t.me/cryptogovnozavod)
[![PyPI version](https://badge.fury.io/py/key_shuffler.svg)](https://badge.fury.io/py/key_shuffler)
[![image](https://img.shields.io/pypi/pyversions/key_shuffler.svg)](https://pypi.org/project/key_shuffler/)
[![Github last commit date](https://img.shields.io/github/last-commit/indicatedl/key_shuffler.svg?label=Updated&logo=github&cacheSeconds=600)](https://github.com/indicatedl/key_shuffler/commits)
[![works badge](https://cdn.jsdelivr.net/gh/nikku/works-on-my-machine@v0.2.0/badge.svg)](https://github.com/nikku/works-on-my-machine)  

# key_shuffler

Simply python library for encrypting private keys using character shuffle method.
Supports any blockchains, but is guaranteed to mask only EVM/Aptos private keys.
It checks the correctly entered password by checking the case of the last 2 characters of the key.

---

# Installation 
```
pip install key-shuffler
```

# Usage

## Р’ РєР°С‡РµСЃС‚РІРµ РѕС‚РґРµР»СЊРЅРѕРіРѕ СЃРєСЂРёРїС‚Р° РґР»СЏ С€РёС„СЂРѕРІРєРё/СЂР°СЃС€РёС„СЂРѕРІРєРё С„Р°Р№Р»Р° (СЃРєР°С‡Р°Р№С‚Рµ СЃ РіРёС‚С…Р°Р±Р°)

РћС‚РєСЂС‹С‚СЊ РґРёСЂРµРєС‚РѕСЂРёСЋ:
```
cd C:\...\key_shuffler
```
РџРѕРјРµСЃС‚РёС‚СЊ РєРѕРїРёСЋ РїСЂРёРІР°С‚РЅС‹С… РєР»СЋС‡РµР№ РІ \examples\wallets.txt РІ С„РѕСЂРјР°С‚Рµ _private_key_ РёР»Рё _address:private_key_

Р—Р°РїСѓСЃС‚РёС‚СЊ СЃРєСЂРёРїС‚ РєРѕРјР°РЅРґРѕР№:
```
python examples\file_encryptor.py
```

## Р’РЅРµРґСЂРµРЅРёРµ РІ СЃСѓС‰РµСЃС‚РІСѓСЋС‰РёР№ СЃРѕС„С‚

Р’ РѕР±С‰РµРј СЃР»СѓС‡Р°Рµ:
РќР°Р№С‚Рё РІ .py С„Р°Р№Р»Р°С… СЃРѕС„С‚Р° (С‡Р°С‰Рµ РІСЃРµРіРѕ РІ config.py/settings.py/main.py) РїРѕР»СѓС‡РµРЅРёРµ РєРѕС€РµР»СЊРєРѕРІ РёР· .txt С„Р°Р№Р»Р° РїСѓС‚РµРј РїРѕРёСЃРєР° РїРѕ РєР»СЋС‡РµРІРѕР№ С„СЂР°Р·Рµ "with open" Р»РёР±Рѕ "with aiofiles.open"
```python
with open(WALLETS_FILE, 'r') as file:
    ........
    wallets = ....
```
Р—Р°РјРµРЅРёС‚СЊ РІРµСЃСЊ Р±Р»РѕРє with open...., РІРєР»СЋС‡Р°СЏ РІСЃРµ С‡С‚Рѕ РЅР°С…РѕРґРёС‚СЃСЏ СЃ РѕС‚СЃС‚СѓРїРѕРј РїРѕРґ РЅРёРј РЅР°
```python
from key_shuffler import KeyShuffler
wallets = KeyShuffler.decrypt_file('your_file.txt')
```

РџСЂРёРјРµСЂ: Р±С‹Р»Рѕ
```python
with open("accounts.txt", "r") as file:
    ACCOUNTS = [row.strip() for row in file]
```
РЎС‚Р°Р»Рѕ:
```python
from key_shuffler import KeyShuffler
ACCOUNTS = KeyShuffler.decrypt_file("accounts.txt")
```


# DONATE (EVM CHAINS) - 0xd8dcc73675a36f618fe780049429ec66f8402199
