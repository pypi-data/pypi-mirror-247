# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.payout_upload_rfi_document_request_dto import PayoutUploadRfiDocumentRequestDTO  # noqa: E501

class TestPayoutUploadRfiDocumentRequestDTO(unittest.TestCase):
    """PayoutUploadRfiDocumentRequestDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PayoutUploadRfiDocumentRequestDTO:
        """Test PayoutUploadRfiDocumentRequestDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PayoutUploadRfiDocumentRequestDTO`
        """
        model = PayoutUploadRfiDocumentRequestDTO()  # noqa: E501
        if include_optional:
            return PayoutUploadRfiDocumentRequestDTO(
                rfi_response_request = [
                    nium.models.rfi_response_request.RfiResponseRequest(
                        rfi_hash_id = '', 
                        rfi_response_info = nium.models.rfi_response_info.RfiResponseInfo(
                            additional_info = {
                                'key' : ''
                                }, 
                            address = nium.models.address_dto.AddressDTO(
                                address_line1 = '', 
                                address_line2 = '', 
                                city = '', 
                                country = '', 
                                postcode = '', 
                                state = '', ), 
                            bank_account_number = '', 
                            bank_name = '', 
                            company_name = '', 
                            date_of_birth = '', 
                            first_name = '', 
                            identification_doc = nium.models.identification_doc_dto.IdentificationDocDTO(
                                identification_doc_color = '', 
                                identification_doc_expiry = '', 
                                identification_doc_holder_name = '', 
                                identification_doc_issuance_country = '', 
                                identification_doc_reference_number = '', 
                                identification_document = [
                                    nium.models.identification_document_dto.IdentificationDocumentDTO(
                                        document = '', 
                                        file_name = '', 
                                        file_type = '', )
                                    ], 
                                identification_issuing_authority = '', 
                                identification_issuing_date = '', 
                                identification_type = '', 
                                identification_value = '', ), 
                            last_name = '', 
                            middle_name = '', 
                            nationality = '', ), )
                    ]
            )
        else:
            return PayoutUploadRfiDocumentRequestDTO(
                rfi_response_request = [
                    nium.models.rfi_response_request.RfiResponseRequest(
                        rfi_hash_id = '', 
                        rfi_response_info = nium.models.rfi_response_info.RfiResponseInfo(
                            additional_info = {
                                'key' : ''
                                }, 
                            address = nium.models.address_dto.AddressDTO(
                                address_line1 = '', 
                                address_line2 = '', 
                                city = '', 
                                country = '', 
                                postcode = '', 
                                state = '', ), 
                            bank_account_number = '', 
                            bank_name = '', 
                            company_name = '', 
                            date_of_birth = '', 
                            first_name = '', 
                            identification_doc = nium.models.identification_doc_dto.IdentificationDocDTO(
                                identification_doc_color = '', 
                                identification_doc_expiry = '', 
                                identification_doc_holder_name = '', 
                                identification_doc_issuance_country = '', 
                                identification_doc_reference_number = '', 
                                identification_document = [
                                    nium.models.identification_document_dto.IdentificationDocumentDTO(
                                        document = '', 
                                        file_name = '', 
                                        file_type = '', )
                                    ], 
                                identification_issuing_authority = '', 
                                identification_issuing_date = '', 
                                identification_type = '', 
                                identification_value = '', ), 
                            last_name = '', 
                            middle_name = '', 
                            nationality = '', ), )
                    ],
        )
        """

    def testPayoutUploadRfiDocumentRequestDTO(self):
        """Test PayoutUploadRfiDocumentRequestDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
