# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.account_validation_request_dto import AccountValidationRequestDTO  # noqa: E501

class TestAccountValidationRequestDTO(unittest.TestCase):
    """AccountValidationRequestDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountValidationRequestDTO:
        """Test AccountValidationRequestDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountValidationRequestDTO`
        """
        model = AccountValidationRequestDTO()  # noqa: E501
        if include_optional:
            return AccountValidationRequestDTO(
                account_number = '',
                bank_account_type = 'CHECKING',
                bank_code = '',
                beneficiary = nium.models.beneficiary_account_details_dto.BeneficiaryAccountDetailsDTO(
                    account_type = 'INDIVIDUAL', 
                    address = '', 
                    alias = '', 
                    city = '', 
                    contact_number = '', 
                    country_code = '', 
                    email = '', 
                    name = '', 
                    postcode = '', 
                    remitter_beneficiary_relationship = '', 
                    state = '', ),
                destination_country = '',
                destination_currency = '',
                payout_method = 'CARD',
                proxy_type = '',
                proxy_value = '',
                routing_info = [
                    nium.models.bank_routing_info.BankRoutingInfo(
                        type = 'IFSC', 
                        value = '', )
                    ]
            )
        else:
            return AccountValidationRequestDTO(
                bank_account_type = 'CHECKING',
                destination_currency = '',
                payout_method = 'CARD',
        )
        """

    def testAccountValidationRequestDTO(self):
        """Test AccountValidationRequestDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
