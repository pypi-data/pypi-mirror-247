# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.client_fee_details_response_dto import ClientFeeDetailsResponseDTO  # noqa: E501

class TestClientFeeDetailsResponseDTO(unittest.TestCase):
    """ClientFeeDetailsResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ClientFeeDetailsResponseDTO:
        """Test ClientFeeDetailsResponseDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ClientFeeDetailsResponseDTO`
        """
        model = ClientFeeDetailsResponseDTO()  # noqa: E501
        if include_optional:
            return ClientFeeDetailsResponseDTO(
                default = True,
                fees = [
                    nium.models.fee_response_dto.FeeResponseDTO(
                        auth_currency = 'SGD', 
                        fee_currency = 'ANY', 
                        fee_name = 'ATM_FEE', 
                        fee_value = 1.5, 
                        fixed = True, 
                        slab_from = 0, 
                        slab_to = 999999999, 
                        status = 'Active', 
                        threshold_fee_value = 9999, 
                        transaction_currency = 'ANY', )
                    ],
                segment = 'Silver',
                status = 'Active'
            )
        else:
            return ClientFeeDetailsResponseDTO(
        )
        """

    def testClientFeeDetailsResponseDTO(self):
        """Test ClientFeeDetailsResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
