# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.wallet_fund_dto import WalletFundDTO  # noqa: E501

class TestWalletFundDTO(unittest.TestCase):
    """WalletFundDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WalletFundDTO:
        """Test WalletFundDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WalletFundDTO`
        """
        model = WalletFundDTO()  # noqa: E501
        if include_optional:
            return WalletFundDTO(
                amount = 500,
                country_ip_address = '2.2.2.2',
                currency_map = {
                    'key' : 1.337
                    },
                destination_currency_code = 'SGD',
                device_key = '1234567890',
                funding_channel = 'bank_transfer',
                funding_instrument_expiry = '',
                funding_instrument_holder_name = 'John Smith',
                funding_instrument_id = '',
                funding_instrument_number = '',
                funding_instrument_security_number = '',
                invoice_details = nium.models.invoice_details.InvoiceDetails(
                    date = '2022-09-21', 
                    description = 'Card payment', 
                    items = Trade Details, 
                    name = 'Jack Stan', 
                    number = '45667090', ),
                ip_address = '1.1.1.1',
                pocket_name = 'DEFAULT',
                save = True,
                session_id = '1234',
                source_amount = 15.34,
                source_currency_code = 'SGD',
                statement_narrative = ''
            )
        else:
            return WalletFundDTO(
                destination_currency_code = 'SGD',
                funding_channel = 'bank_transfer',
                source_currency_code = 'SGD',
        )
        """

    def testWalletFundDTO(self):
        """Test WalletFundDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
