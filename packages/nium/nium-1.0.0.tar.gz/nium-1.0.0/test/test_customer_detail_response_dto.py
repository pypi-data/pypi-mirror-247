# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.customer_detail_response_dto import CustomerDetailResponseDTO  # noqa: E501

class TestCustomerDetailResponseDTO(unittest.TestCase):
    """CustomerDetailResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomerDetailResponseDTO:
        """Test CustomerDetailResponseDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomerDetailResponseDTO`
        """
        model = CustomerDetailResponseDTO()  # noqa: E501
        if include_optional:
            return CustomerDetailResponseDTO(
                compliance_status = '',
                customer_hash_id = '2992c5c6-823b-4fa9-a64b-add0ea88bb66',
                kyc_status = '',
                payment_ids = [
                    nium.models.payment_id_dto.PaymentIdDTO(
                        bank_name = 'JPM_SG', 
                        currency_code = 'SGD', 
                        unique_payer_id = 'null', 
                        unique_payment_id = '20024397230', )
                    ],
                redirect_url = '',
                wallet_hash_id = 'b4c0d385-cd92-46a0-af6f-d8332268e6ed'
            )
        else:
            return CustomerDetailResponseDTO(
        )
        """

    def testCustomerDetailResponseDTO(self):
        """Test CustomerDetailResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
