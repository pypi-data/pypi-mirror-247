# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.stakeholder_details_response_dto import StakeholderDetailsResponseDTO  # noqa: E501

class TestStakeholderDetailsResponseDTO(unittest.TestCase):
    """StakeholderDetailsResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StakeholderDetailsResponseDTO:
        """Test StakeholderDetailsResponseDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StakeholderDetailsResponseDTO`
        """
        model = StakeholderDetailsResponseDTO()  # noqa: E501
        if include_optional:
            return StakeholderDetailsResponseDTO(
                address = nium.models.corporate_address_dto.CorporateAddressDTO(
                    address1 = '221 Mulford Drive', 
                    address2 = 'Johnson Square', 
                    city = 'Sydney', 
                    country = 'AU', 
                    state = 'New South Wales', 
                    zip_code = '2001', ),
                birth_country = '',
                date_of_birth = '1947-02-15',
                designation = '',
                document_details = [
                    nium.models.corporate_document_details_dto.CorporateDocumentDetailsDTO(
                        document_issuance_country = 'SG', 
                        identification_type = 'PASSPORT', 
                        identification_value = '234234423', )
                    ],
                email = 'john@qwe.com',
                first_name = 'John',
                gender = 'Male',
                last_name = 'Cary',
                middle_name = 'Lucius Arthur',
                mobile = '9876543210',
                nationality = 'AU',
                professional_details = [
                    nium.models.professional_details.ProfessionalDetails(
                        employment_industry = '', 
                        employment_status = '', 
                        position = '', 
                        position_end_date = '', 
                        position_start_date = '', 
                        share_percentage = '', )
                    ],
                reference_id = '',
                resident = True,
                tax_details = [
                    nium.models.tax_details.TaxDetails(
                        country = '', 
                        tax_number = '', )
                    ]
            )
        else:
            return StakeholderDetailsResponseDTO(
        )
        """

    def testStakeholderDetailsResponseDTO(self):
        """Test StakeholderDetailsResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
