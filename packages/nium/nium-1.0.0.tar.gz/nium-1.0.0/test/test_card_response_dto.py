# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.card_response_dto import CardResponseDTO  # noqa: E501

class TestCardResponseDTO(unittest.TestCase):
    """CardResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CardResponseDTO:
        """Test CardResponseDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CardResponseDTO`
        """
        model = CardResponseDTO()  # noqa: E501
        if include_optional:
            return CardResponseDTO(
                card_hash_id = 'dcfe0a79-9386-4b50-a1e1-7299f6bfb0c0',
                card_type = 'GPR_VIR',
                card_status = 'VIRTUAL_ACTIVE',
                masked_card_number = '4572-50xx-xxxx-0123',
                proxy_number = '0007570020000010123',
                logo_id = '177',
                plastic_id = '750065001',
                region_code = 'AU',
                block_reason = 'fraud,cardLost,cardStolen,damaged',
                replaced_on = 'null',
                issuance_mode = 'NORMAL_DELIVERY_LOCAL',
                issuance_type = 'primaryCard',
                embossing_line1 = 'John Smith',
                embossing_line2 = '',
                first_name = 'John',
                middle_name = 'W',
                last_name = 'Smith',
                email = 'johnsmith@xyzmail.com',
                country_code = 'AU',
                mobile = '0412345111',
                demog_overridden = False,
                created_at = '2021-03-12 04:16:46',
                updated_at = '2021-03-12 04:16:46',
                tokens = [
                    nium.models.card_tokens_dto.CardTokensDTO(
                        provider_type = 'applePay', 
                        token_reference_number = 'DNITHE400000000000000037', 
                        token_number = '0004611350190078050', 
                        token_requester_id = '40010030273', 
                        device_id = '04312E7B342C80014328036811932950DA075B1C4DD45672', 
                        device_type = '01', 
                        status = 'DEACTIVATED', 
                        created_at = '2021-05-28 06:06:11', 
                        updated_at = '2021-05-28 06:24:33', )
                    ]
            )
        else:
            return CardResponseDTO(
        )
        """

    def testCardResponseDTO(self):
        """Test CardResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
