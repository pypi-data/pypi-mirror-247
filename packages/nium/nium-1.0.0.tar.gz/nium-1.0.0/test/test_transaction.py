# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.transaction import Transaction  # noqa: E501

class TestTransaction(unittest.TestCase):
    """Transaction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Transaction:
        """Test Transaction
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Transaction`
        """
        model = Transaction()  # noqa: E501
        if include_optional:
            return Transaction(
                bban = '',
                booking_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                card_acceptor_address = nium.models.card_acceptor_address.CardAcceptorAddress(
                    city = '', 
                    country = '', ),
                card_acceptor_id = '',
                card_transaction_id = '',
                currency = '',
                iban = '',
                masked_pan = '',
                masked_pan = '',
                msisdn = '',
                original_amount = nium.models.transaction_amount.TransactionAmount(
                    amount = '', 
                    currency = '', ),
                pan = '',
                transaction_amount = nium.models.transaction_amount.TransactionAmount(
                    amount = '', 
                    currency = '', ),
                transaction_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return Transaction(
        )
        """

    def testTransaction(self):
        """Test Transaction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
