# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.corporate_detail_response_dto import CorporateDetailResponseDTO  # noqa: E501

class TestCorporateDetailResponseDTO(unittest.TestCase):
    """CorporateDetailResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CorporateDetailResponseDTO:
        """Test CorporateDetailResponseDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CorporateDetailResponseDTO`
        """
        model = CorporateDetailResponseDTO()  # noqa: E501
        if include_optional:
            return CorporateDetailResponseDTO(
                results = nium.models.result.Result(
                    business_details = [
                        nium.models.public_corporate_business_details.PublicCorporateBusinessDetails(
                            addresses = nium.models.corporate_addresses.CorporateAddresses(
                                registered_address = nium.models.corporate_registered_address.CorporateRegisteredAddress(
                                    address_line1 = '', 
                                    address_line2 = '', 
                                    city = '', 
                                    country = '', 
                                    postcode = '', 
                                    state = '', ), ), 
                            business_name = '', 
                            business_registration_number = '', 
                            business_type = '', 
                            search_reference_id = '', 
                            website = '', )
                        ], )
            )
        else:
            return CorporateDetailResponseDTO(
        )
        """

    def testCorporateDetailResponseDTO(self):
        """Test CorporateDetailResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
