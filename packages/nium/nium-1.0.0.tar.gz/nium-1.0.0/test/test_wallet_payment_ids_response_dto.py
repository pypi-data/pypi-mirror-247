# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.wallet_payment_ids_response_dto import WalletPaymentIdsResponseDTO  # noqa: E501

class TestWalletPaymentIdsResponseDTO(unittest.TestCase):
    """WalletPaymentIdsResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WalletPaymentIdsResponseDTO:
        """Test WalletPaymentIdsResponseDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WalletPaymentIdsResponseDTO`
        """
        model = WalletPaymentIdsResponseDTO()  # noqa: E501
        if include_optional:
            return WalletPaymentIdsResponseDTO(
                tags = {
                    'key' : ''
                    },
                account_category = 'SELF_FUNDING_ACCOUNT',
                account_name = '',
                account_type = '',
                bank_address = '',
                bank_name = '',
                currency_code = '',
                full_bank_name = '',
                routing_code_type1 = '',
                routing_code_type2 = '',
                routing_code_value1 = '',
                routing_code_value2 = '',
                status = 'ACTIVE',
                unique_payer_id = '',
                unique_payment_id = ''
            )
        else:
            return WalletPaymentIdsResponseDTO(
        )
        """

    def testWalletPaymentIdsResponseDTO(self):
        """Test WalletPaymentIdsResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
