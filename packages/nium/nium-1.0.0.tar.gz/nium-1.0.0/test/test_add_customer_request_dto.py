# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.add_customer_request_dto import AddCustomerRequestDTO  # noqa: E501

class TestAddCustomerRequestDTO(unittest.TestCase):
    """AddCustomerRequestDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddCustomerRequestDTO:
        """Test AddCustomerRequestDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddCustomerRequestDTO`
        """
        model = AddCustomerRequestDTO()  # noqa: E501
        if include_optional:
            return AddCustomerRequestDTO(
                tags = [
                    nium.models.customer_tag_dto.CustomerTagDTO(
                        key = '', 
                        value = '', )
                    ],
                additional_info = {
                    'key' : ''
                    },
                billing_address1 = '',
                billing_address2 = '',
                billing_city = '',
                billing_country = '',
                billing_landmark = '',
                billing_state = '',
                billing_zip_code = '',
                compliance_level = 'SCREENING',
                correspondence_address1 = '',
                correspondence_address2 = '',
                correspondence_city = '',
                correspondence_country = '',
                correspondence_landmark = '',
                correspondence_state = '',
                correspondence_zip_code = '',
                country_code = '',
                country_ip = '',
                country_of_birth = '',
                customer_hash_id = '',
                date_of_birth = '',
                delivery_address1 = '',
                delivery_address2 = '',
                delivery_city = '',
                delivery_country = '',
                delivery_landmark = '',
                delivery_state = '',
                delivery_zip_code = '',
                designation = '',
                device_info = '',
                email = '',
                employee_id = '',
                estimated_monthly_funding = 'MF001',
                estimated_monthly_funding_currency = '',
                expected_countries_to_send_receive_from = [
                    ''
                    ],
                first_name = '',
                gender = 'Male',
                identification_doc = [
                    nium.models.compliance_identification_doc_dto.ComplianceIdentificationDocDTO(
                        identification_doc_color = '', 
                        identification_doc_expiry = '', 
                        identification_doc_holder_name = '', 
                        identification_doc_issuance_country = '', 
                        identification_doc_reference_number = '', 
                        identification_document = [
                            nium.models.identification_document_dto.IdentificationDocumentDTO(
                                document = '', 
                                file_name = '', 
                                file_type = '', )
                            ], 
                        identification_issuing_authority = '', 
                        identification_issuing_date = '', 
                        identification_type = '', 
                        identification_value = '', )
                    ],
                intended_use_of_account = 'IU100',
                international_payments_supported = True,
                ip_address = '',
                is_tnc_accepted = True,
                kyc_mode = 'E_KYC',
                last_name = '',
                middle_name = '',
                mobile = '',
                nationality = '',
                native_language_name = '',
                occupation = 'OC0001',
                parent_customer_hash_id = '190dddbe-fdbc-48fe-a7c2-d55266e9acf5',
                pep = True,
                preferred_name = '',
                segment = '',
                session_id = '',
                tax_details = [
                    nium.models.customer_tax_detail_dto.CustomerTaxDetailDTO(
                        country_of_residence = 'FR', 
                        tax_id_number = 'FR123456', )
                    ],
                upgrade_request = True,
                verification_consent = True
            )
        else:
            return AddCustomerRequestDTO(
        )
        """

    def testAddCustomerRequestDTO(self):
        """Test AddCustomerRequestDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
