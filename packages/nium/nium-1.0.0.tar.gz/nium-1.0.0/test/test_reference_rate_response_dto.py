# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.reference_rate_response_dto import ReferenceRateResponseDto  # noqa: E501

class TestReferenceRateResponseDto(unittest.TestCase):
    """ReferenceRateResponseDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReferenceRateResponseDto:
        """Test ReferenceRateResponseDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReferenceRateResponseDto`
        """
        model = ReferenceRateResponseDto()  # noqa: E501
        if include_optional:
            return ReferenceRateResponseDto(
                as_of_date = '2022-03-15T06:46:03.000Z',
                card_scheme = 'VISA',
                card_scheme_fx_rate = 1,
                card_scheme_fx_rate_last_updated_at = '2022-03-15T06:46:03.000Z',
                card_scheme_fx_rate_with_fx_markup = 1,
                card_scheme_markup_over_ecb = 0.349,
                ecb_rate = 1.349,
                ecb_rate_last_updated_at = '2022-03-15T06:46:03.000Z',
                from_amount = 1,
                from_currency = 'SGD',
                fx_markup = 1,
                to_amount_with_ecb_rate = 2.349,
                to_amount_with_transaction_fee_and_fx_markup = 1,
                to_currency = 'USD',
                transaction_fee = 0.1
            )
        else:
            return ReferenceRateResponseDto(
        )
        """

    def testReferenceRateResponseDto(self):
        """Test ReferenceRateResponseDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
