# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.applicant_details import ApplicantDetails  # noqa: E501

class TestApplicantDetails(unittest.TestCase):
    """ApplicantDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicantDetails:
        """Test ApplicantDetails
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicantDetails`
        """
        model = ApplicantDetails()  # noqa: E501
        if include_optional:
            return ApplicantDetails(
                additional_info = {
                    'key' : ''
                    },
                address = nium.models.address.Address(
                    address_line1 = '', 
                    address_line2 = '', 
                    city = '', 
                    country = '', 
                    postcode = '', 
                    state = '', ),
                birth_country = '',
                contact_details = nium.models.contact_details.ContactDetails(
                    contact_no = '', 
                    country_code = '', 
                    email = '', ),
                date_of_birth = '',
                document_details = [
                    nium.models.document_detail.DocumentDetail(
                        document = [
                            nium.models.document.Document(
                                file_name = '', 
                                file_type = '', )
                            ], 
                        document_color = '', 
                        document_expiry_date = '', 
                        document_holder_name = '', 
                        document_issuance_country = '', 
                        document_issuance_state = '', 
                        document_issued_date = '', 
                        document_issuing_authority = '', 
                        document_number = '6565666', 
                        document_reference_number = '', 
                        document_type = '', )
                    ],
                first_name = '',
                gender = '',
                kyc_mode = '',
                last_name = '',
                middle_name = '',
                nationality = '',
                occupation = 'OC0001',
                professional_details = [
                    nium.models.professional_details.ProfessionalDetails(
                        position = '', 
                        position_end_date = '', 
                        position_start_date = '', 
                        share_percentage = '', )
                    ],
                reference_id = '',
                tax_details = [
                    nium.models.tax_details.TaxDetails(
                        country = '', 
                        tax_number = '', )
                    ]
            )
        else:
            return ApplicantDetails(
        )
        """

    def testApplicantDetails(self):
        """Test ApplicantDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
