# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.transaction_limits_dto import TransactionLimitsDTO  # noqa: E501

class TestTransactionLimitsDTO(unittest.TestCase):
    """TransactionLimitsDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransactionLimitsDTO:
        """Test TransactionLimitsDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransactionLimitsDTO`
        """
        model = TransactionLimitsDTO()  # noqa: E501
        if include_optional:
            return TransactionLimitsDTO(
                card_hash_id = '',
                transaction_limits = [
                    nium.models.transaction_limit_dto.TransactionLimitDTO(
                        additional_percentage = 10, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        masked_card_number = '9876-50xx-xxxx-4321', 
                        status = 'Active', 
                        type = 'MONTHLY_AMOUNT_LIMIT', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        value = '90', )
                    ]
            )
        else:
            return TransactionLimitsDTO(
                transaction_limits = [
                    nium.models.transaction_limit_dto.TransactionLimitDTO(
                        additional_percentage = 10, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        masked_card_number = '9876-50xx-xxxx-4321', 
                        status = 'Active', 
                        type = 'MONTHLY_AMOUNT_LIMIT', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        value = '90', )
                    ],
        )
        """

    def testTransactionLimitsDTO(self):
        """Test TransactionLimitsDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
