# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.api_response_of_transaction_channels_response_dto import ApiResponseOfTransactionChannelsResponseDTO  # noqa: E501

class TestApiResponseOfTransactionChannelsResponseDTO(unittest.TestCase):
    """ApiResponseOfTransactionChannelsResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiResponseOfTransactionChannelsResponseDTO:
        """Test ApiResponseOfTransactionChannelsResponseDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiResponseOfTransactionChannelsResponseDTO`
        """
        model = ApiResponseOfTransactionChannelsResponseDTO()  # noqa: E501
        if include_optional:
            return ApiResponseOfTransactionChannelsResponseDTO(
                body = nium.models.transaction_channels_response_dto.TransactionChannelsResponseDTO(
                    channels = [
                        nium.models.transaction_channel_response_dto.TransactionChannelResponseDTO(
                            channel = 'IN_STORE', 
                            status = 'Inactive', )
                        ], ),
                code = '200 OK',
                message = 'Success',
                status = 'OK'
            )
        else:
            return ApiResponseOfTransactionChannelsResponseDTO(
        )
        """

    def testApiResponseOfTransactionChannelsResponseDTO(self):
        """Test ApiResponseOfTransactionChannelsResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
