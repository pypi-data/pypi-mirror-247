# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.business_details_response_v2_dto import BusinessDetailsResponseV2DTO  # noqa: E501

class TestBusinessDetailsResponseV2DTO(unittest.TestCase):
    """BusinessDetailsResponseV2DTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BusinessDetailsResponseV2DTO:
        """Test BusinessDetailsResponseV2DTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BusinessDetailsResponseV2DTO`
        """
        model = BusinessDetailsResponseV2DTO()  # noqa: E501
        if include_optional:
            return BusinessDetailsResponseV2DTO(
                applicant_details = nium.models.applicant_details_v2.ApplicantDetailsV2(
                    address = nium.models.address_v2.AddressV2(
                        address_line1 = '', 
                        address_line2 = '', 
                        city = 'Sydney', 
                        country = 'AU', 
                        post_code = '2001', 
                        state = 'New South Wales', ), 
                    birth_country = '', 
                    contact_details = nium.models.contact_details_response_dto.ContactDetailsResponseDTO(
                        contact_no = '', 
                        country_code = '', 
                        email = '', ), 
                    date_of_birth = '', 
                    document_details = [
                        nium.models.corporate_document_details2_dto.CorporateDocumentDetails2DTO(
                            document_issuance_country = 'SG', 
                            identification_type = 'PASSPORT', 
                            identification_value = '234234423', )
                        ], 
                    first_name = '', 
                    gender = '', 
                    is_pep = True, 
                    is_resident = '', 
                    last_name = '', 
                    middle_name = '', 
                    nationality = '', 
                    occupation = 'OC0001', 
                    professional_details = [
                        nium.models.professional_details_response_dto.ProfessionalDetailsResponseDTO(
                            position = '', 
                            position_start_date = '', 
                            share_percentage = '', )
                        ], 
                    reference_id = '', 
                    tax_details = [
                        nium.models.tax_details_response_dto.TaxDetailsResponseDTO(
                            country = 'France', 
                            tax_number = 'FR123456', )
                        ], ),
                association_detail = nium.models.association_details.AssociationDetails(
                    association_chair_person = '', 
                    association_name = '', 
                    association_number = '', ),
                business_address = nium.models.address_v2.AddressV2(
                    address_line1 = '', 
                    address_line2 = '', 
                    city = 'Sydney', 
                    country = 'AU', 
                    post_code = '2001', 
                    state = 'New South Wales', ),
                business_extract_covered_stakeholder = '',
                business_name = 'ABCD XYZ LTD',
                business_registration_number = '10519001',
                business_type = 'Public Company',
                description = '',
                document_details = [
                    nium.models.corporate_document_details2_dto.CorporateDocumentDetails2DTO(
                        document_issuance_country = 'SG', 
                        identification_type = 'PASSPORT', 
                        identification_value = '234234423', )
                    ],
                former_name = '',
                legal_details = nium.models.legal_details_v2.LegalDetailsV2(
                    legislation_name = '', 
                    legislation_type = '', 
                    listed_exchange = '', 
                    registered_country = '', 
                    registered_date = '', 
                    registration_type = '', ),
                partnership_details = nium.models.partnership_details.PartnershipDetails(
                    partner_country = '', 
                    partner_name = '', 
                    partner_state = '', ),
                reference_id = '',
                registered_address = nium.models.address_v2.AddressV2(
                    address_line1 = '', 
                    address_line2 = '', 
                    city = 'Sydney', 
                    country = 'AU', 
                    post_code = '2001', 
                    state = 'New South Wales', ),
                regulatory_details = nium.models.regulatory_details.RegulatoryDetails(
                    regulated_trust_type = [
                        ''
                        ], 
                    unregulated_trust_type = [
                        ''
                        ], ),
                settlor_name = '',
                stakeholders = [
                    nium.models.stakeholder_v2.StakeholderV2(
                        business_partner = nium.models.business_partner_v2.BusinessPartnerV2(
                            business_entity_type = '', 
                            business_name = '', 
                            business_registration_number = '', 
                            business_type = '', 
                            legal_details = nium.models.business_partner_legal_details.BusinessPartnerLegalDetails(
                                registered_country = '', 
                                registered_date = '', ), 
                            registered_address = nium.models.address_v2.AddressV2(
                                address_line1 = '', 
                                address_line2 = '', 
                                city = 'Sydney', 
                                country = 'AU', 
                                post_code = '2001', 
                                state = 'New South Wales', ), 
                            share_percentage = '', ), 
                        reference_id = '', 
                        stakeholder_details = nium.models.stakeholder_details_v2.StakeholderDetailsV2(
                            address = nium.models.address_v2.AddressV2(
                                address_line1 = '', 
                                address_line2 = '', 
                                city = 'Sydney', 
                                country = 'AU', 
                                post_code = '2001', 
                                state = 'New South Wales', ), 
                            birth_country = '', 
                            contact_details = nium.models.stakeholder_contact_details_response_dto.StakeholderContactDetailsResponseDTO(
                                contact_no = '', 
                                email = '', ), 
                            date_of_birth = '', 
                            document_details = [
                                nium.models.corporate_document_details2_dto.CorporateDocumentDetails2DTO(
                                    document_issuance_country = 'SG', 
                                    identification_type = 'PASSPORT', 
                                    identification_value = '234234423', )
                                ], 
                            first_name = '', 
                            gender = '', 
                            is_pep = True, 
                            last_name = '', 
                            middle_name = '', 
                            nationality = '', 
                            professional_details = [
                                nium.models.professional_details_response_dto.ProfessionalDetailsResponseDTO(
                                    position = '', 
                                    position_start_date = '', 
                                    share_percentage = '', )
                                ], 
                            tax_details = [
                                nium.models.tax_details_response_dto.TaxDetailsResponseDTO(
                                    country = 'France', 
                                    tax_number = 'FR123456', )
                                ], ), )
                    ],
                stock_symbol = '',
                tax_details = [
                    nium.models.tax_details_response_dto.TaxDetailsResponseDTO(
                        country = 'France', 
                        tax_number = 'FR123456', )
                    ],
                trade_name = 'ABCD XYZ',
                trustee_name = '',
                website = ''
            )
        else:
            return BusinessDetailsResponseV2DTO(
        )
        """

    def testBusinessDetailsResponseV2DTO(self):
        """Test BusinessDetailsResponseV2DTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
