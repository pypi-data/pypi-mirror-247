# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.resource import Resource  # noqa: E501

class TestResource(unittest.TestCase):
    """Resource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Resource:
        """Test Resource
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Resource`
        """
        model = Resource()  # noqa: E501
        if include_optional:
            return Resource(
                description = '',
                file = nium.models.file.File(
                    absolute = True, 
                    absolute_file = nium.models.file.File(
                        absolute = True, 
                        absolute_path = '', 
                        canonical_file = , 
                        canonical_path = '', 
                        directory = True, 
                        file = True, 
                        free_space = 56, 
                        hidden = True, 
                        name = '', 
                        parent = '', 
                        parent_file = , 
                        path = '', 
                        total_space = 56, 
                        usable_space = 56, ), 
                    absolute_path = '', 
                    canonical_file = , 
                    canonical_path = '', 
                    directory = True, 
                    file = True, 
                    free_space = 56, 
                    hidden = True, 
                    name = '', 
                    parent = '', 
                    parent_file = , 
                    path = '', 
                    total_space = 56, 
                    usable_space = 56, ),
                filename = '',
                input_stream = nium.models.input_stream.InputStream(),
                open = True,
                readable = True,
                uri = nium.models.uri.URI(
                    host = '', 
                    absolute = True, 
                    authority = '', 
                    fragment = '', 
                    opaque = True, 
                    path = '', 
                    port = 56, 
                    query = '', 
                    raw_authority = '', 
                    raw_fragment = '', 
                    raw_path = '', 
                    raw_query = '', 
                    raw_scheme_specific_part = '', 
                    raw_user_info = '', 
                    scheme = '', 
                    scheme_specific_part = '', 
                    user_info = '', ),
                url = nium.models.url.URL(
                    host = '', 
                    authority = '', 
                    content = nium.models.content.content(), 
                    default_port = 56, 
                    file = '', 
                    path = '', 
                    port = 56, 
                    protocol = '', 
                    query = '', 
                    ref = '', 
                    user_info = '', )
            )
        else:
            return Resource(
        )
        """

    def testResource(self):
        """Test Resource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
