# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.customer_rfi_details_response import CustomerRfiDetailsResponse  # noqa: E501

class TestCustomerRfiDetailsResponse(unittest.TestCase):
    """CustomerRfiDetailsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomerRfiDetailsResponse:
        """Test CustomerRfiDetailsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomerRfiDetailsResponse`
        """
        model = CustomerRfiDetailsResponse()  # noqa: E501
        if include_optional:
            return CustomerRfiDetailsResponse(
                description = 'dateOfBirth',
                document_type = 'POA',
                mandatory = True,
                remarks = 'DOB does not match the PO',
                required_data = [
                    nium.models.rfi_attribute_response.RfiAttributeResponse(
                        label = 'Date Of Birth', 
                        type = 'data', 
                        value = 'dateOfBirth', )
                    ],
                rfi_hash_id = 'ee8e7875-d835-4175-9df1-ab9272db445f',
                rfi_id = 'ee8e7875-d835-4175-9df1-ab9272db445f',
                rfi_status = 'RFI_REQUESTED',
                rfi_type = 'INTERNAL',
                type = 'data'
            )
        else:
            return CustomerRfiDetailsResponse(
        )
        """

    def testCustomerRfiDetailsResponse(self):
        """Test CustomerRfiDetailsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
