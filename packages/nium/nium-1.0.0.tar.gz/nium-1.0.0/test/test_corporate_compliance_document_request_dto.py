# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.corporate_compliance_document_request_dto import CorporateComplianceDocumentRequestDTO  # noqa: E501

class TestCorporateComplianceDocumentRequestDTO(unittest.TestCase):
    """CorporateComplianceDocumentRequestDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CorporateComplianceDocumentRequestDTO:
        """Test CorporateComplianceDocumentRequestDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CorporateComplianceDocumentRequestDTO`
        """
        model = CorporateComplianceDocumentRequestDTO()  # noqa: E501
        if include_optional:
            return CorporateComplianceDocumentRequestDTO(
                business_details = nium.models.corporate_document_upload_business_details_dto.CorporateDocumentUploadBusinessDetailsDTO(
                    applicant_details = nium.models.corporate_document_upload_applicant_details_dto.CorporateDocumentUploadApplicantDetailsDTO(
                        document_details = [
                            nium.models.document_detail.DocumentDetail(
                                document = [
                                    nium.models.document.Document(
                                        file_name = '', 
                                        file_type = '', )
                                    ], 
                                document_color = '', 
                                document_expiry_date = '', 
                                document_holder_name = '', 
                                document_issuance_country = '', 
                                document_issuance_state = '', 
                                document_issued_date = '', 
                                document_issuing_authority = '', 
                                document_number = '', 
                                document_reference_number = '', 
                                document_type = '', )
                            ], 
                        reference_id = '', ), 
                    document_details = [
                        nium.models.corporate_business_details_document_detail_dto.CorporateBusinessDetailsDocumentDetailDTO(
                            document_type = '', )
                        ], 
                    reference_id = '', 
                    stakeholders = [
                        nium.models.corporate_document_upload_stakeholders_dto.CorporateDocumentUploadStakeholdersDTO(
                            reference_id = '', 
                            stakeholder_details = nium.models.corporate_document_upload_stakeholder_details_dto.CorporateDocumentUploadStakeholderDetailsDTO(), )
                        ], ),
                region = ''
            )
        else:
            return CorporateComplianceDocumentRequestDTO(
        )
        """

    def testCorporateComplianceDocumentRequestDTO(self):
        """Test CorporateComplianceDocumentRequestDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
