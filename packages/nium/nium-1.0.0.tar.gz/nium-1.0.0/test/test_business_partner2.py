# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.business_partner2 import BusinessPartner2  # noqa: E501

class TestBusinessPartner2(unittest.TestCase):
    """BusinessPartner2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BusinessPartner2:
        """Test BusinessPartner2
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BusinessPartner2`
        """
        model = BusinessPartner2()  # noqa: E501
        if include_optional:
            return BusinessPartner2(
                addresses = nium.models.addresses.Addresses(
                    business_address = nium.models.business_address.BusinessAddress(
                        address_line1 = '', 
                        address_line2 = '', 
                        city = '', 
                        country = '', 
                        postcode = '', 
                        state = '', ), 
                    registered_address = nium.models.registered_address.RegisteredAddress(
                        address_line1 = '', 
                        address_line2 = '', 
                        city = '', 
                        country = '', 
                        postcode = '', 
                        state = '', ), ),
                business_entity_type = '',
                business_in_other_countries = [
                    None
                    ],
                business_name = '',
                business_registration_number = '',
                business_type = '',
                description = '',
                document_details = nium.models.document_detail.DocumentDetail(
                    document = [
                        nium.models.document.Document(
                            file_name = '', 
                            file_type = '', )
                        ], 
                    document_color = '', 
                    document_expiry_date = '', 
                    document_holder_name = '', 
                    document_issuance_country = '', 
                    document_issuance_state = '', 
                    document_issued_date = '', 
                    document_issuing_authority = '', 
                    document_number = '6565666', 
                    document_reference_number = '', 
                    document_type = '', ),
                legal_details = nium.models.legal_details.LegalDetails(
                    legislation_name = '', 
                    legislation_type = '', 
                    listed_exchange = '', 
                    registered_country = '', 
                    registered_date = '', 
                    registration_type = '', ),
                purpose_code = '',
                regulatory_details = nium.models.regulatory_details.RegulatoryDetails(
                    regulated_trust_type = [
                        ''
                        ], 
                    unregulated_trust_type = [
                        ''
                        ], ),
                share_percentage = '',
                ticker = '',
                trade_name = '',
                trustee_name = '',
                website = ''
            )
        else:
            return BusinessPartner2(
        )
        """

    def testBusinessPartner2(self):
        """Test BusinessPartner2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
