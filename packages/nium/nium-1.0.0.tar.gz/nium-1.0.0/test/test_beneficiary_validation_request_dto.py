# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.beneficiary_validation_request_dto import BeneficiaryValidationRequestDTO  # noqa: E501

class TestBeneficiaryValidationRequestDTO(unittest.TestCase):
    """BeneficiaryValidationRequestDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BeneficiaryValidationRequestDTO:
        """Test BeneficiaryValidationRequestDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BeneficiaryValidationRequestDTO`
        """
        model = BeneficiaryValidationRequestDTO()  # noqa: E501
        if include_optional:
            return BeneficiaryValidationRequestDTO(
                beneficiary_account_number = '',
                beneficiary_account_type = '',
                beneficiary_bank_code = '',
                beneficiary_contact_number = '',
                beneficiary_country_code = '',
                beneficiary_name = '',
                destination_country = '',
                destination_currency = '',
                payout_method = '',
                proxy_type = '',
                proxy_value = '',
                routing_code_type1 = '',
                routing_code_value1 = ''
            )
        else:
            return BeneficiaryValidationRequestDTO(
                destination_country = '',
                payout_method = '',
        )
        """

    def testBeneficiaryValidationRequestDTO(self):
        """Test BeneficiaryValidationRequestDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
