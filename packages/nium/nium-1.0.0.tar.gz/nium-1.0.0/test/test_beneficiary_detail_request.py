# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.beneficiary_detail_request import BeneficiaryDetailRequest  # noqa: E501

class TestBeneficiaryDetailRequest(unittest.TestCase):
    """BeneficiaryDetailRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BeneficiaryDetailRequest:
        """Test BeneficiaryDetailRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BeneficiaryDetailRequest`
        """
        model = BeneficiaryDetailRequest()  # noqa: E501
        if include_optional:
            return BeneficiaryDetailRequest(
                account_type = '',
                address = '',
                autosweep_payout_account = True,
                beneficiary_contact_name = '',
                beneficiary_dob = '2023-07-08',
                beneficiary_entity_type = '',
                beneficiary_establishment_date = '2023-07-08',
                city = '',
                contact_country_code = '',
                contact_number = '',
                country_code = '',
                default_autosweep_payout_account = True,
                email = '',
                name = '',
                postcode = '',
                relationship = '',
                state = ''
            )
        else:
            return BeneficiaryDetailRequest(
                account_type = '',
                country_code = '',
                name = '',
        )
        """

    def testBeneficiaryDetailRequest(self):
        """Test BeneficiaryDetailRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
