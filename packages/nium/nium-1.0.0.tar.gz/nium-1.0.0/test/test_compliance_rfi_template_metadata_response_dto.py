# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.compliance_rfi_template_metadata_response_dto import ComplianceRFITemplateMetadataResponseDTO  # noqa: E501

class TestComplianceRFITemplateMetadataResponseDTO(unittest.TestCase):
    """ComplianceRFITemplateMetadataResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ComplianceRFITemplateMetadataResponseDTO:
        """Test ComplianceRFITemplateMetadataResponseDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ComplianceRFITemplateMetadataResponseDTO`
        """
        model = ComplianceRFITemplateMetadataResponseDTO()  # noqa: E501
        if include_optional:
            return ComplianceRFITemplateMetadataResponseDTO(
                rfi_templates = [
                    nium.models.rfi_template.RfiTemplate(
                        reference_id = '5fe45995-b529-44fd-8af9-0042fd020942', 
                        remarks = 'test', 
                        status = 'RFI_RESPONDED', 
                        template = nium.models.template.Template(
                            document_type = 'POI', 
                            name = 'businessName', 
                            required_fields = [
                                nium.models.required_fields.RequiredFields(
                                    field_label = 'Identity Document Type', 
                                    field_value = 'documentType', 
                                    type = 'data', )
                                ], 
                            rfi_type = 'applicant', 
                            type = 'document', ), 
                        template_id = 'ccb58d50-5dad-4bff-a418-3c2d5426e4c2', )
                    ]
            )
        else:
            return ComplianceRFITemplateMetadataResponseDTO(
        )
        """

    def testComplianceRFITemplateMetadataResponseDTO(self):
        """Test ComplianceRFITemplateMetadataResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
