# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.rfi_response_request import RfiResponseRequest  # noqa: E501

class TestRfiResponseRequest(unittest.TestCase):
    """RfiResponseRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RfiResponseRequest:
        """Test RfiResponseRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RfiResponseRequest`
        """
        model = RfiResponseRequest()  # noqa: E501
        if include_optional:
            return RfiResponseRequest(
                address_line1 = '',
                address_line2 = '',
                billing_country = '',
                city = '',
                country = '',
                date_of_birth = '',
                employment_status = '',
                first_name = '',
                gender = '',
                identification_doc = nium.models.rfi_identification_doc.RfiIdentificationDoc(
                    identification_doc_color = '', 
                    identification_doc_expiry = '', 
                    identification_doc_holder_name = '', 
                    identification_doc_issuance_country = '', 
                    identification_doc_reference_number = '', 
                    identification_document = [
                        nium.models.identification_document_dto.IdentificationDocumentDTO(
                            document = '', 
                            file_name = '', 
                            file_type = '', )
                        ], 
                    identification_issuing_authority = '', 
                    identification_issuing_date = '', 
                    identification_type = '', 
                    identification_value = '', ),
                industry_type = '',
                intended_use_of_account = '',
                is_pep = 'true',
                last_name = '',
                middle_name = '',
                nationality = '',
                postcode = '',
                rfi_hash_id = '',
                source_of_funds = '',
                state = ''
            )
        else:
            return RfiResponseRequest(
                rfi_hash_id = '',
        )
        """

    def testRfiResponseRequest(self):
        """Test RfiResponseRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
