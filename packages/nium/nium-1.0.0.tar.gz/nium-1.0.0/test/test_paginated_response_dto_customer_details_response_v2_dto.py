# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.paginated_response_dto_customer_details_response_v2_dto import PaginatedResponseDTOCustomerDetailsResponseV2DTO  # noqa: E501

class TestPaginatedResponseDTOCustomerDetailsResponseV2DTO(unittest.TestCase):
    """PaginatedResponseDTOCustomerDetailsResponseV2DTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedResponseDTOCustomerDetailsResponseV2DTO:
        """Test PaginatedResponseDTOCustomerDetailsResponseV2DTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedResponseDTOCustomerDetailsResponseV2DTO`
        """
        model = PaginatedResponseDTOCustomerDetailsResponseV2DTO()  # noqa: E501
        if include_optional:
            return PaginatedResponseDTOCustomerDetailsResponseV2DTO(
                content = [
                    nium.models.customer_details_response_v2_dto.CustomerDetailsResponseV2DTO(
                        tags = {
                            'key' : ''
                            }, 
                        account_details = [
                            nium.models.customer_account_detail.CustomerAccountDetail(
                                wallet_hash_id = '', )
                            ], 
                        block_comment = 'null', 
                        block_reason = 'CUSTOMER_REQUEST', 
                        block_updated_by = 'NIUM', 
                        compliance_level = 'SCREENING_KY', 
                        compliance_remarks = 'APPLICANT -> VERIFIED|DIRECTOR -> VERIFIED', 
                        compliance_status = '', 
                        corporate_customer = nium.models.corporate_customer_response_dto.CorporateCustomerResponseDTO(
                            business_details = nium.models.business_details_response_v2_dto.BusinessDetailsResponseV2DTO(
                                applicant_details = nium.models.applicant_details_v2.ApplicantDetailsV2(
                                    address = nium.models.address_v2.AddressV2(
                                        address_line1 = '', 
                                        address_line2 = '', 
                                        city = 'Sydney', 
                                        country = 'AU', 
                                        post_code = '2001', 
                                        state = 'New South Wales', ), 
                                    birth_country = '', 
                                    contact_details = nium.models.contact_details_response_dto.ContactDetailsResponseDTO(
                                        contact_no = '', 
                                        country_code = '', 
                                        email = '', ), 
                                    date_of_birth = '', 
                                    document_details = [
                                        nium.models.corporate_document_details2_dto.CorporateDocumentDetails2DTO(
                                            document_issuance_country = 'SG', 
                                            identification_type = 'PASSPORT', 
                                            identification_value = '234234423', )
                                        ], 
                                    first_name = '', 
                                    gender = '', 
                                    is_pep = True, 
                                    is_resident = '', 
                                    last_name = '', 
                                    middle_name = '', 
                                    nationality = '', 
                                    occupation = 'OC0001', 
                                    professional_details = [
                                        nium.models.professional_details_response_dto.ProfessionalDetailsResponseDTO(
                                            position = '', 
                                            position_start_date = '', 
                                            share_percentage = '', )
                                        ], 
                                    reference_id = '', 
                                    tax_details = [
                                        nium.models.tax_details_response_dto.TaxDetailsResponseDTO(
                                            country = 'France', 
                                            tax_number = 'FR123456', )
                                        ], ), 
                                association_detail = nium.models.association_details.AssociationDetails(
                                    association_chair_person = '', 
                                    association_name = '', 
                                    association_number = '', ), 
                                business_address = nium.models.address_v2.AddressV2(
                                    address_line1 = '', 
                                    address_line2 = '', 
                                    city = 'Sydney', 
                                    country = 'AU', 
                                    post_code = '2001', 
                                    state = 'New South Wales', ), 
                                business_extract_covered_stakeholder = '', 
                                business_name = 'ABCD XYZ LTD', 
                                business_registration_number = '10519001', 
                                business_type = 'Public Company', 
                                description = '', 
                                document_details = [
                                    nium.models.corporate_document_details2_dto.CorporateDocumentDetails2DTO(
                                        document_issuance_country = 'SG', 
                                        identification_type = 'PASSPORT', 
                                        identification_value = '234234423', )
                                    ], 
                                former_name = '', 
                                legal_details = nium.models.legal_details_v2.LegalDetailsV2(
                                    legislation_name = '', 
                                    legislation_type = '', 
                                    listed_exchange = '', 
                                    registered_country = '', 
                                    registered_date = '', 
                                    registration_type = '', ), 
                                partnership_details = nium.models.partnership_details.PartnershipDetails(
                                    partner_country = '', 
                                    partner_name = '', 
                                    partner_state = '', ), 
                                reference_id = '', 
                                registered_address = , 
                                regulatory_details = nium.models.regulatory_details.RegulatoryDetails(
                                    regulated_trust_type = [
                                        ''
                                        ], 
                                    unregulated_trust_type = [
                                        ''
                                        ], ), 
                                settlor_name = '', 
                                stakeholders = [
                                    nium.models.stakeholder_v2.StakeholderV2(
                                        business_partner = nium.models.business_partner_v2.BusinessPartnerV2(
                                            business_entity_type = '', 
                                            business_name = '', 
                                            business_registration_number = '', 
                                            business_type = '', 
                                            share_percentage = '', ), 
                                        reference_id = '', 
                                        stakeholder_details = nium.models.stakeholder_details_v2.StakeholderDetailsV2(
                                            birth_country = '', 
                                            date_of_birth = '', 
                                            first_name = '', 
                                            gender = '', 
                                            is_pep = True, 
                                            last_name = '', 
                                            middle_name = '', 
                                            nationality = '', ), )
                                    ], 
                                stock_symbol = '', 
                                tax_details = [
                                    nium.models.tax_details_response_dto.TaxDetailsResponseDTO(
                                        country = 'France', 
                                        tax_number = 'FR123456', )
                                    ], 
                                trade_name = 'ABCD XYZ', 
                                trustee_name = '', 
                                website = '', ), 
                            case_id = '', 
                            client_id = '', 
                            compliance_region = '', 
                            risk_assessment_info = nium.models.risk_assessment_info_v2.RiskAssessmentInfoV2(
                                annual_turnover = '', 
                                country_of_operation = [
                                    ''
                                    ], 
                                industry_sector = '', 
                                intended_use_of_account = '', 
                                ofac_licence_present = True, 
                                restricted_countries = [
                                    ''
                                    ], 
                                total_employees = '', 
                                transaction_countries = [
                                    ''
                                    ], 
                                travel_restricted_country = True, ), ), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        customer_hash_id = '', 
                        customer_type = 'INDIVIDUAL', 
                        individual_customer = nium.models.individual_customer_response_dto.IndividualCustomerResponseDTO(
                            billing_address1 = '', 
                            billing_address2 = 'Johnson Square', 
                            billing_city = 'Sydney', 
                            billing_country = 'AU', 
                            billing_landmark = 'null', 
                            billing_state = 'New South Wales', 
                            billing_zip_code = '2001', 
                            country_code = 'AU', 
                            country_of_birth = 'null', 
                            date_of_birth = '1992-08-09', 
                            designation = 'null', 
                            email = 'xyzabc@abcmail.com', 
                            employee_id = 'null', 
                            estimated_monthly_funding = '1000-5000', 
                            estimated_monthly_funding_currency = 'EUR', 
                            expected_countries_to_send_receive_from = FR, 
                            first_name = 'ABCD XYZ', 
                            gender = 'Male', 
                            identification_data = [
                                {
                                    'key' : ''
                                    }
                                ], 
                            international_payments_supported = True, 
                            last_name = 'PVT LTD', 
                            middle_name = 'null', 
                            mobile = '950030024', 
                            nationality = 'AU', 
                            native_language_name = 'null', 
                            occupation = 'OC0001', 
                            parent_customer_hash_id = '', 
                            pep = False, 
                            preferred_name = 'ABCD XYZ LT', ), 
                        kyc_mode = 'MANUAL_KYC', 
                        remarks = 'VERIFIED', 
                        segment = '', 
                        status = 'Clear', 
                        terms_and_condition_acceptance_flag = False, 
                        terms_and_condition_name = 'B2BGENERIC', 
                        terms_and_condition_version_id = '1', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        verification_consent = False, )
                    ],
                pagination = nium.models.pagination.Pagination(
                    total_elements = 56, 
                    total_pages = 56, )
            )
        else:
            return PaginatedResponseDTOCustomerDetailsResponseV2DTO(
        )
        """

    def testPaginatedResponseDTOCustomerDetailsResponseV2DTO(self):
        """Test PaginatedResponseDTOCustomerDetailsResponseV2DTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
