# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.e_verify_customer_registration_request_dto import EVerifyCustomerRegistrationRequestDTO  # noqa: E501

class TestEVerifyCustomerRegistrationRequestDTO(unittest.TestCase):
    """EVerifyCustomerRegistrationRequestDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EVerifyCustomerRegistrationRequestDTO:
        """Test EVerifyCustomerRegistrationRequestDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EVerifyCustomerRegistrationRequestDTO`
        """
        model = EVerifyCustomerRegistrationRequestDTO()  # noqa: E501
        if include_optional:
            return EVerifyCustomerRegistrationRequestDTO(
                billing_address1 = '',
                billing_address2 = '',
                billing_city = '',
                billing_country = '',
                billing_state = '',
                billing_zip_code = '',
                country_code = '',
                country_ip = '',
                country_of_birth = '',
                customer_hash_id = '',
                date_of_birth = '',
                device_info = '',
                email = '',
                estimated_monthly_funding = '',
                estimated_monthly_funding_currency = '',
                expected_countries_to_send_receive_from = [
                    ''
                    ],
                first_name = '',
                gender = '',
                intended_use_of_account = '',
                international_payments_supported = True,
                ip_address = '',
                last_name = '',
                middle_name = '',
                mobile = '',
                nationality = '',
                native_language_name = '',
                pep = True,
                preferred_name = '',
                segment = '',
                session_id = '',
                tax_details = [
                    nium.models.customer_tax_detail_dto.CustomerTaxDetailDTO(
                        country_of_residence = 'FR', 
                        tax_id_number = 'FR123456', )
                    ],
                upgrade_request = True,
                verification_consent = True
            )
        else:
            return EVerifyCustomerRegistrationRequestDTO(
                billing_address1 = '',
                billing_city = '',
                billing_country = '',
                billing_zip_code = '',
                country_code = '',
                customer_hash_id = '',
                date_of_birth = '',
                email = '',
                first_name = '',
                last_name = '',
                mobile = '',
                nationality = '',
                verification_consent = True,
        )
        """

    def testEVerifyCustomerRegistrationRequestDTO(self):
        """Test EVerifyCustomerRegistrationRequestDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
