# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.account_status_response import AccountStatusResponse  # noqa: E501

class TestAccountStatusResponse(unittest.TestCase):
    """AccountStatusResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountStatusResponse:
        """Test AccountStatusResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountStatusResponse`
        """
        model = AccountStatusResponse()  # noqa: E501
        if include_optional:
            return AccountStatusResponse(
                bank_name = '',
                client_hash_id = '',
                country = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                currency = 'USD',
                customer_hash_id = '',
                funding_channel = 'DIRECT_DEBIT',
                funding_instrument_id = '',
                masked_account_number = '',
                redirect_url = '',
                routing_type = '',
                routing_value = '',
                saved = True,
                status = 'ACTIVE',
                status_description = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                wallet_hash_id = ''
            )
        else:
            return AccountStatusResponse(
        )
        """

    def testAccountStatusResponse(self):
        """Test AccountStatusResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
