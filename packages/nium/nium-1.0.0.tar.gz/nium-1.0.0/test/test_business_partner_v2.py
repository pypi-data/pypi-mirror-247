# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.business_partner_v2 import BusinessPartnerV2  # noqa: E501

class TestBusinessPartnerV2(unittest.TestCase):
    """BusinessPartnerV2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BusinessPartnerV2:
        """Test BusinessPartnerV2
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BusinessPartnerV2`
        """
        model = BusinessPartnerV2()  # noqa: E501
        if include_optional:
            return BusinessPartnerV2(
                business_entity_type = '',
                business_name = '',
                business_registration_number = '',
                business_type = '',
                legal_details = nium.models.business_partner_legal_details.BusinessPartnerLegalDetails(
                    registered_country = '', 
                    registered_date = '', ),
                registered_address = nium.models.address_v2.AddressV2(
                    address_line1 = '', 
                    address_line2 = '', 
                    city = 'Sydney', 
                    country = 'AU', 
                    post_code = '2001', 
                    state = 'New South Wales', ),
                share_percentage = ''
            )
        else:
            return BusinessPartnerV2(
        )
        """

    def testBusinessPartnerV2(self):
        """Test BusinessPartnerV2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
