# coding: utf-8

"""
    NIUM Platform

    NIUM Platform

    The version of the OpenAPI document: 2023.12.5
    Contact: experience@nium.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nium.models.beneficiary_response_dto import BeneficiaryResponseDTO  # noqa: E501

class TestBeneficiaryResponseDTO(unittest.TestCase):
    """BeneficiaryResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BeneficiaryResponseDTO:
        """Test BeneficiaryResponseDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BeneficiaryResponseDTO`
        """
        model = BeneficiaryResponseDTO()  # noqa: E501
        if include_optional:
            return BeneficiaryResponseDTO(
                autosweep_payout_account = True,
                beneficiary_account_number = '',
                beneficiary_account_type = '',
                beneficiary_address = '',
                beneficiary_bank_account_type = 'Current',
                beneficiary_bank_code = '',
                beneficiary_bank_name = '',
                beneficiary_card_expiry_date = '',
                beneficiary_card_issuer_name = '',
                beneficiary_card_meta_data = nium.models.card_meta_data_response_dto.CardMetaDataResponseDTO(
                    billing_currency_code = '', 
                    billing_currency_minor_digits = '', 
                    card_issuer_country_code = '', 
                    card_type_code = '', 
                    fast_funds_indicator = '', 
                    is_bank_supported = True, 
                    is_card_valid = True, 
                    issuer_name = '', 
                    online_gambing_block_indicator = '', 
                    push_funds_block_indicator = '', ),
                beneficiary_card_number_mask = '',
                beneficiary_card_token = '',
                beneficiary_card_type = '',
                beneficiary_city = '',
                beneficiary_contact_country_code = '',
                beneficiary_contact_name = '',
                beneficiary_contact_number = '',
                beneficiary_country_code = '',
                beneficiary_created_at = '',
                beneficiary_dob = '',
                beneficiary_email = '',
                beneficiary_entity_type = '',
                beneficiary_establishment_date = '',
                beneficiary_hash_id = '',
                beneficiary_identification_type = '',
                beneficiary_identification_value = '',
                beneficiary_name = '',
                beneficiary_postcode = '',
                beneficiary_state = '',
                beneficiary_updated_at = '',
                default_autosweep_payout_account = True,
                destination_country = '',
                destination_currency = '',
                payout_created_at = '',
                payout_hash_id = '',
                payout_method = 'LOCAL',
                payout_updated_at = '',
                proxy_type = '',
                proxy_value = '',
                remitter_beneficiary_relationship = '',
                routing_code_type1 = '',
                routing_code_type2 = '',
                routing_code_value1 = '',
                routing_code_value2 = ''
            )
        else:
            return BeneficiaryResponseDTO(
        )
        """

    def testBeneficiaryResponseDTO(self):
        """Test BeneficiaryResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
