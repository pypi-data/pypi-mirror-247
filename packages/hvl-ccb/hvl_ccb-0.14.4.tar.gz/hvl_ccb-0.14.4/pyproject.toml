[build-system]
build-backend="setuptools.build_meta"
requires     =["setuptools"]

[project]
authors=[
    {name="Mikołaj Rybiński, David Graber, Henrik Menne, Alise Chachereau, Henning Janssen, David Taylor, Joseph Engelbrecht, Chi-Ching Hsu"},
]
classifiers=[
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.9",
]
dependencies=[
    "aenum>=3.1.11",
    "asyncua>=1.0.1",
    "bitstring>=3.1.9",
    "numpy>=1.23.4",
    "pymodbus>=3.1.1",
    "pyserial>=3.5",
    "pyvisa-py>=0.5.3",
    "pyvisa>=1.12.0",
    "typeguard>=3.0.0",
]

description="Python common code base to control devices high voltage research devices, in particular, as used in Christian Franck's High Voltage Lab (HVL), D-ITET, ETH"
dynamic=["readme", "version"]
entry-points={}
keywords=["hvl_ccb"]
license={text="GNU General Public License v3"}
maintainers=[
    {name="Chi-Ching Hsu", email="contact-project+ethz-hvl-hvl-ccb-15975897-issue-@incoming.gitlab.com"},
    {name="Henning Janssen", email="contact-project+ethz-hvl-hvl-ccb-15975897-issue-@incoming.gitlab.com"},
]
name="hvl_ccb"
requires-python=">=3.9, <3.11"

[project.optional-dependencies]
all=["hvl_ccb[tiepie, labjack, picotech]"]
dev=[
    "Sphinx>=3.4.3",
    "black>=23.12.0",
    "build",
    "bumpver>=2023.1126",
    "coverage>=5.4",
    "flake8-pyproject>=1.2.3",
    "flake8>=3.8.4",
    "ipdb>=0.13.4",
    "ipython>=7.19.0",
    "isort>=5.12.0",
    "mypy>=0.800",
    "pip>=21.0",
    "pre-commit>=2.17",
    "pytest-cov>=2.11.1",
    "pytest-mock>=3.5.1",
    "pytest-profiling>=1.7.0",
    "pytest-xdist>=2.2.0",
    "pytest>=6.2.2",
    "sphinx_rtd_theme>=0.5.1",
    "tox>=4.0.15",
    "twine>=3.3.0",
    "watchdog>=1.0.2",
    "wheel>=0.36.2",
]
labjack=["labjack-ljm>=1.21.0"]
picotech=["PicoSDK==1.0"]
tiepie=["python-libtiepie-bi"]

[tool.setuptools.dynamic]
readme ={file=["HISTORY.rst", "INSTALLATION.rst", "README.rst"]}
version={file=["VERSION"]}

[tool.setuptools.package-data]
hvl_ccb=["py.typed"]

[tool.setuptools.packages.find]
include=["hvl_ccb*"]
where  =["src"]

[project.urls]
Changelog    ="https://pypi.org/project/hvl-ccb/#history"
Documentation="https://hvl-ccb.readthedocs.io/en/latest/"
Homepage     ="https://gitlab.com/ethz_hvl/hvl_ccb/"
Repository   ="https://gitlab.com/ethz_hvl/hvl_ccb/"

[tool.bumpver]
commit         =true
commit_message ="Bump version: {old_version} → {new_version}"
current_version="0.14.4"
tag            =true
tag_message    ="Bump version: {old_version} → {new_version}"
version_pattern="MAJOR.MINOR.PATCH"

[tool.bumpver.file_patterns]
"VERSION"                =['{version}$']
"src/hvl_ccb/__init__.py"=['^__version__ = "{version}"$']

[tool.flake8]
exclude        ="docs"
extend-ignore  ="E203"
max-line-length=88

[tool.isort]
balanced_wrapping=true
extend_skip_glob =".venv*"
profile          ="black"
src_paths        =["examples", "src", "test"]

[tool.coverage.report]
precision=2

[tool.pytest]
collect_ignore=["setup.py"]

[tool.pytest.ini_options]
filterwarnings=["ignore::UserWarning"]
#;    ignore::DeprecationWarning

[tool.mypy]
plugins=["numpy.typing.mypy_plugin"]

[[tool.mypy.overrides]]
ignore_missing_imports=true
module=[
    "aenum.*",
    "asyncua.*",
    "bitstring.*",
    "labjack.*",
    "libtiepie.*",
    "pymodbus.*",
    "pyvisa.*",
    "serial.*",
    "visa.*",
]

[tool.aliases]
test="pytest"

[tool.bdist_wheel]
universal=1

[tool.tox]
legacy_tox_ini="""
[tox]
envlist = py39, py310, flake8, black, mypy, isort

[testenv]
extras = all, dev
setenv =
	PYTHONPATH = {toxinidir}
deps =
	PicoSDK@git+https://github.com/trybik/picosdk-python-wrappers.git@fix_lib_load_linux#egg=PicoSDK-1.0
commands =
	py.test --cov {envsitepackagesdir}/hvl_ccb --cov-report term --cov-report xml --basetemp={envtmpdir} tests/

[testenv:flake8]
basepython = python3
deps = flake8-pyproject
skip_install = True
skipsdist = True
commands = flake8 src tests

[testenv:black]
basepython = python3
deps = black
skip_install = True
skipsdist = True
commands = black --check --preview src/ tests/ examples/

[testenv:isort]
basepython = python3
deps = isort
skip_install = True
skipsdist = True
commands = isort --check src/ tests/ examples/

[testenv:mypy]
basepython = python3
deps =
	mypy
	numpy
skip_install = True
skipsdist = True
commands = mypy --show-error-codes src
"""
