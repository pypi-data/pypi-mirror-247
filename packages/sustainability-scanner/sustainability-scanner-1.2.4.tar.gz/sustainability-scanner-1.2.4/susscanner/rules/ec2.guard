#
# Amazon EC2 checks
# These rules focus on 
# 1/ removing Bastion hosts by using AWS Systems Manager Session Manager

let sec_groups_ingress = Resources.*[ Type == 'AWS::EC2::SecurityGroupIngress' ]

let sec_groups = Resources.*[ Type == 'AWS::EC2::SecurityGroup'
                              Properties.SecurityGroupIngress exists
]

let ec2_instances = Resources.*[ Type == 'AWS::EC2::Instance']

# This rule recommends using Systems Manager Session Manager instead of
# creating bastion hosts.
#
rule from_port_is_ssh when %sec_groups_ingress !empty OR %sec_groups !empty {
    %sec_groups_ingress.Properties {
        when FromPort exists {
            when FromPort is_string {
                FromPort != "22"
            }
            when FromPort !is_string {
                FromPort != 22
            }
        }
    }
    %sec_groups.Properties {
        SecurityGroupIngress[*] {
            when FromPort exists {
                when FromPort is_string {
                    FromPort != "22"
                }
                when FromPort !is_string {
                    FromPort != 22
                }
            }
        }
    }
}

rule to_port_is_ssh when %sec_groups_ingress !empty OR %sec_groups !empty {
    %sec_groups_ingress.Properties {
        when ToPort exists {
            when ToPort is_string {
                ToPort != "22"
            }
            when ToPort !is_string {
                ToPort != 22
            }
        }
    }
    %sec_groups.Properties {
        SecurityGroupIngress[*] {
            when ToPort exists {
                when ToPort is_string {
                    ToPort != "22"
                }
                when ToPort !is_string {
                    ToPort != 22
                }
            }
        }
    }
}

rule port_range_includes_ssh when %sec_groups_ingress !empty OR %sec_groups !empty {
    %sec_groups_ingress.Properties {
        when FromPort exists {
            when ToPort exists ToPort !is_string FromPort !is_string {
                when FromPort != 22 ToPort != 22 {
                    FromPort > 22 or
                    ToPort < 22
                }
            }
            when ToPort exists ToPort is_string FromPort is_string {
                when FromPort != "22" ToPort != "22" {
                    FromPort > "22" or
                    ToPort < "22"
                }
            }
        }
    }

    %sec_groups.Properties {
        SecurityGroupIngress[*] {
            when FromPort exists {
                when ToPort exists ToPort !is_string FromPort !is_string {
                    when FromPort != 22 ToPort != 22 {
                        FromPort > 22 or
                        ToPort < 22
                    }
                }
                when ToPort exists ToPort is_string FromPort is_string {
                    when FromPort != "22" ToPort != "22" {
                        FromPort > "22" or
                        ToPort < "22"
                    }
                }
            }
        }
    }
}

