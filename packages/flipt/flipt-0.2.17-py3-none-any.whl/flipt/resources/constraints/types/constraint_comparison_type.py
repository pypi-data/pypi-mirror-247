# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ConstraintComparisonType(str, enum.Enum):
    """
    The default is UNKNOWN_COMPARISON_TYPE
    """

    UNKNOWN_COMPARISON_TYPE = "UNKNOWN_COMPARISON_TYPE"
    STRING_COMPARISON_TYPE = "STRING_COMPARISON_TYPE"
    NUMBER_COMPARISON_TYPE = "NUMBER_COMPARISON_TYPE"
    BOOLEAN_COMPARISON_TYPE = "BOOLEAN_COMPARISON_TYPE"
    DATETIME_COMPARISON_TYPE = "DATETIME_COMPARISON_TYPE"

    def visit(
        self,
        unknown_comparison_type: typing.Callable[[], T_Result],
        string_comparison_type: typing.Callable[[], T_Result],
        number_comparison_type: typing.Callable[[], T_Result],
        boolean_comparison_type: typing.Callable[[], T_Result],
        datetime_comparison_type: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ConstraintComparisonType.UNKNOWN_COMPARISON_TYPE:
            return unknown_comparison_type()
        if self is ConstraintComparisonType.STRING_COMPARISON_TYPE:
            return string_comparison_type()
        if self is ConstraintComparisonType.NUMBER_COMPARISON_TYPE:
            return number_comparison_type()
        if self is ConstraintComparisonType.BOOLEAN_COMPARISON_TYPE:
            return boolean_comparison_type()
        if self is ConstraintComparisonType.DATETIME_COMPARISON_TYPE:
            return datetime_comparison_type()
