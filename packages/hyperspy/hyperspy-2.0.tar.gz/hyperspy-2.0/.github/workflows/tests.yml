name: Tests

on: [push, pull_request]

jobs:
  run_test_site:
    name: ${{ matrix.os }}-py${{ matrix.PYTHON_VERSION }}${{ matrix.LABEL }}
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 30
    env:
      MPLBACKEND: agg
      PIP_ARGS: --upgrade -e
      PYTEST_ARGS: --pyargs hyperspy --reruns 3 -n 2 --instafail
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows, macos]
        PYTHON_VERSION: ['3.9', '3.10', ]
        PIP_SELECTOR: ['[all, tests, coverage]']
        include:
          # test oldest supported version of main dependencies on python 3.8
          - os: ubuntu
            PYTHON_VERSION: '3.8'
            PIP_SELECTOR: '[all, tests, coverage]'
            OLDEST_SUPPORTED_VERSION: true
            DEPENDENCIES: dask[array]==2021.3.1 matplotlib==3.1.3 numba==0.52 numpy==1.20.0 scipy==1.5 scikit-image==0.18 scikit-learn==1.0.1
            LABEL: -oldest
          # test minimum requirement
          - os: ubuntu
            PYTHON_VERSION: '3.12'
            PIP_SELECTOR: '[tests, coverage]'
            LABEL: -minimum
            # Run coverage
          - os: ubuntu
            PYTHON_VERSION: '3.8'
            PIP_SELECTOR: '[all, tests, coverage]'
          - os: ubuntu
            PYTHON_VERSION: '3.11'
            PIP_SELECTOR: '[all, tests, coverage]'

    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          fetch-tags: true

      - name: Fetch tags upstream
        if: ${{ github.repository_owner != 'hyperspy' }}
        # Needs to fetch the tags from upstream to get the
        # correct version with setuptools_scm
        run: |
          git remote add upstream https://github.com/hyperspy/hyperspy.git
          git fetch upstream --tags

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}

      - name: Display version
        run: |
          python --version
          pip --version

      - name: Install oldest supported version
        if: ${{ matrix.OLDEST_SUPPORTED_VERSION }}
        run: |
          pip install ${{ matrix.DEPENDENCIES }} -v

      - name: Install
        shell: bash
        run: |
          pip install ${{ env.PIP_ARGS }} .'${{ matrix.PIP_SELECTOR }}'

      - name: Pip list
        run: |
          pip list

      - name: Run test suite
        run: |
          pytest ${{ env.PYTEST_ARGS }} --cov=. --cov-report=xml

      - name: Run doctest (Docstring)
        run: |
          pytest ${{ env.PYTEST_ARGS }} --doctest-modules --ignore=hyperspy/tests

      - name: Upload coverage to Codecov
        if: ${{ always() }}
        uses: codecov/codecov-action@v3
