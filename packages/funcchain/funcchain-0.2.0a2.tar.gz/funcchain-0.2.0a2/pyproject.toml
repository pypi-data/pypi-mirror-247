[project]
name = "funcchain"
version = "0.2.0-alpha.2"
description = "ðŸ”– write prompts as python functions"
authors = [
    { name = "Shroominic", email = "contact@shroominic.com" }
]
dependencies = [
    "langchain>=0.0.347",
    "pydantic-settings>=2.1.0",
    "docstring-parser>=0.15",
    "rich>=13.7.0",
    "jinja2>=3.1.2",
    "pillow>=10.1.0",
]
license = "MIT"
readme = "README.md"
requires-python = ">= 3.10, <3.13"
keywords = ["funcchain", "ai", "llm", "langchain", "pydantic", "pythonic", "cognitive systems", "agent framework"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[project.urls]
Code = "https://github.com/shroominic/funcchain"
Documentation = "https://shroominic.github.io/funcchain"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "ruff",
    "mypy",
    "isort",
    "pytest",
    "ipython",
    "pre-commit",
    "funcchain[all]",
    "mkdocs-material>=9.4",
    "beautifulsoup4>=4.12",
    "python-dotenv>=1",
]

[project.optional-dependencies]
local = [
    "llama-cpp-python>=0.2.20",
    "huggingface_hub>=0.19.4",
]
openai = [
    "openai>=1.3.4",
    "tiktoken>=0.5.1",
]
all = [
    "funcchain[local]",
    "funcchain[openai]",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/funcchain"]

[tool.pytest.ini_options]
addopts = "-p no:warnings"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 120

[tool.flake8]
max-line-length = 120

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
