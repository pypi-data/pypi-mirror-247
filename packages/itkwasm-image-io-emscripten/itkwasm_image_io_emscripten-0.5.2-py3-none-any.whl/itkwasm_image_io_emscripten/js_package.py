# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var cr=Object.defineProperty;var Br=(e,A)=>{for(var t in A)cr(e,t,{get:A[t],enumerable:!0})};var dr={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},y=dr;var Cr={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},b=Cr;function Er(e,A){let t=null;switch(e){case y.UInt8:{t=new Uint8Array(A);break}case y.Int8:{t=new Int8Array(A);break}case y.UInt16:{t=new Uint16Array(A);break}case y.Int16:{t=new Int16Array(A);break}case y.UInt32:{t=new Uint32Array(A);break}case y.Int32:{t=new Int32Array(A);break}case y.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(A):t=new Uint8Array(A);break}case y.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(A):t=new Uint8Array(A);break}case b.Float32:{t=new Float32Array(A);break}case b.Float64:{t=new Float64Array(A);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var N=Er;var Qr={Unknown:"Unknown",Scalar:"Scalar",RGB:"RGB",RGBA:"RGBA",Offset:"Offset",Vector:"Vector",Point:"Point",CovariantVector:"CovariantVector",SymmetricSecondRankTensor:"SymmetricSecondRankTensor",DiffusionTensor3D:"DiffusionTensor3D",Complex:"Complex",FixedArray:"FixedArray",Array:"Array",Matrix:"Matrix",VariableLengthVector:"VariableLengthVector",VariableSizeMatrix:"VariableSizeMatrix"},ge=Qr;var Se=class{dimension;componentType;pixelType;components;constructor(A=2,t=y.UInt8,r=ge.Scalar,o=1){this.dimension=A,this.componentType=t,this.pixelType=r,this.components=o}},ot=Se;function yr(e,A,t,r,o){e[r+t*A]=o}var nt=yr;var Ne=class{imageType;name="image";origin;spacing;direction;size;metadata;data;constructor(A=new ot){this.imageType=A;let t=A.dimension;this.origin=new Array(t),this.origin.fill(0),this.spacing=new Array(t),this.spacing.fill(1),this.direction=new Float64Array(t*t),this.direction.fill(0);for(let r=0;r<t;r++)nt(this.direction,t,r,r,1);this.size=new Array(t),this.size.fill(0),this.metadata=new Map,this.data=null}},Y=Ne;function hr(e){let A=new Y(e.imageType);if(A.name=e.name,A.origin=Array.from(e.origin),A.spacing=Array.from(e.spacing),A.direction=e.direction.slice(),A.size=Array.from(e.size),e.data!==null){let t=e.data.constructor;A.data=new t(e.data.length),A.data!=null&&A.data.set(e.data,0)}return A}var We=hr;function wr(e){if(e.length<1)throw Error("At least one images is required.");let A=e[0];if(A.data===null)throw Error("Image data is null.");let t=new Y(A.imageType);t.origin=Array.from(A.origin),t.spacing=Array.from(A.spacing);let r=t.imageType.dimension;t.direction=A.direction.slice();let o=r-1;t.size=Array.from(A.size);let n=e.reduce((I,a)=>I+a.size[o],0);t.size[o]=n;let i=t.size.reduce((I,a)=>I*a,1)*t.imageType.components,g=A.data.constructor;t.data=new g(i);let m=t.imageType.components;for(let I=0;I<t.size.length-1;I++)m*=t.size[I];let u=0;if(t.data!=null)for(let I=0;I<e.length;I++)t.data.set(e[I].data,m*u),u+=e[I].size[o];else throw Error("Could not create result image data.");return t}var Pe=wr;function Rr(e){let A=e.slice((e.lastIndexOf(".")-1>>>0)+2);if(A.toLowerCase()==="gz"){let t=e.slice(0,-3).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}else if(A.toLowerCase()==="cbor"){let t=e.slice(0,-5).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}else if(A.toLowerCase()==="zst"){let t=e.slice(0,-10).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}else if(A.toLowerCase()==="zip"){let t=e.slice(0,-4).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}return A}var ee=Rr;function br(e,A){let t={...e.imageType};if(typeof A<"u"&&typeof A.pixelType<"u"&&(t.pixelType=A.pixelType,A.pixelType===ge.Scalar&&t.components!==1))throw new Error("Cannot cast multi-component image to a scalar image");typeof A<"u"&&typeof A.componentType<"u"&&A.componentType!==e.imageType.componentType&&(t.componentType=A.componentType);let r=new Y(t);if(r.name=e.name,r.origin=Array.from(e.origin),r.spacing=Array.from(e.spacing),r.direction=e.direction.slice(),r.size=Array.from(e.size),r.metadata=new Map(JSON.parse(JSON.stringify(Array.from(e.metadata)))),e.data!==null)if(typeof A<"u"&&typeof A.componentType<"u"&&A.componentType!==e.imageType.componentType)switch(e.imageType.componentType){case y.UInt8:case y.Int8:case y.UInt16:case y.Int16:case y.UInt32:case y.Int32:case b.Float32:case b.Float64:switch(r.imageType.componentType){case y.UInt8:r.data=new Uint8Array(e.data);break;case y.Int8:r.data=new Int8Array(e.data);break;case y.UInt16:r.data=new Uint16Array(e.data);break;case y.Int16:r.data=new Int16Array(e.data);break;case y.UInt32:r.data=new Uint32Array(e.data);break;case y.Int32:r.data=new Int32Array(e.data);break;case b.Float32:r.data=new Float32Array(e.data);break;case b.Float64:r.data=new Float64Array(e.data);break;case y.UInt64:r.data=new BigUint64Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=BigInt.asIntN(64,BigInt(e.data[o]));break;case y.Int64:r.data=new BigInt64Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=BigInt.asUintN(64,BigInt(e.data[o]));break}break;case y.UInt64:case y.Int64:switch(r.imageType.componentType){case y.UInt8:r.data=new Uint8Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case y.Int8:r.data=new Int8Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case y.UInt16:r.data=new Uint16Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case y.Int16:r.data=new Int16Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case y.UInt32:r.data=new Uint32Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case y.Int32:r.data=new Int32Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case b.Float32:r.data=new Float32Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case b.Float64:r.data=new Float64Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case y.UInt64:r.data=new BigUint64Array(e.data);break;case y.Int64:r.data=new BigInt64Array(e.data);break}break}else{let o=e.data.constructor;r.data=new o(e.data.length),r.data!=null&&r.data.set(e.data,0)}return r}var T=br;var Oe=class{fcn;workerQueue;runInfo;constructor(A,t){this.fcn=t,this.workerQueue=new Array(A),this.workerQueue.fill(null),this.runInfo=[]}runTasks(A,t=null){let r={taskQueue:[],results:[],addingTasks:!1,postponed:!1,runningWorkers:0,index:0,completedTasks:0,progressCallback:t,canceled:!1};return this.runInfo.push(r),r.index=this.runInfo.length-1,{promise:new Promise((o,n)=>{r.resolve=o,r.reject=n,r.results=new Array(A.length),r.completedTasks=0,r.addingTasks=!0,A.forEach((i,g)=>{this.addTask(r.index,g,i)}),r.addingTasks=!1}),runId:r.index}}terminateWorkers(){for(let A=0;A<this.workerQueue.length;A++){let t=this.workerQueue[A];t?.terminate(),this.workerQueue[A]=null}}cancel(A){let t=this.runInfo[A];t!=null&&(t.canceled=!0)}addTask(A,t,r){let o=this.runInfo[A];if(o?.canceled===!0){o.reject("Remaining tasks canceled"),this.clearTask(o.index);return}if(this.workerQueue.length>0){let n=this.workerQueue.pop();o.runningWorkers++,this.fcn(n,...r).then(({webWorker:i,...g})=>{if(this.workerQueue.push(i),this.runInfo[A]!==null){if(o.runningWorkers--,o.results[t]=g,o.completedTasks++,o.progressCallback!=null&&o.progressCallback(o.completedTasks,o.results.length),o.taskQueue.length>0){let m=o.taskQueue.shift();this.addTask(A,m[0],m[1])}else if(!o.addingTasks&&o.runningWorkers===0){let m=o.results;o.resolve(m),this.clearTask(o.index)}}}).catch(i=>{o.reject(i),this.clearTask(o.index)})}else o.runningWorkers!==0||o.postponed?o.taskQueue.push([t,r]):(o.postponed=!0,setTimeout(()=>{o.postponed=!1,this.addTask(o.index,t,r)},50))}clearTask(A){this.runInfo[A].results=[],this.runInfo[A].taskQueue=[],this.runInfo[A].progressCallback=null,this.runInfo[A].canceled=null,this.runInfo[A].reject=()=>{},this.runInfo[A].resolve=()=>{}}},xe=Oe;var kr={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",Mesh:"Mesh",PolyData:"PolyData",JsonCompatible:"JsonCompatible"},l=kr;var st=Symbol("Comlink.proxy"),Dr=Symbol("Comlink.endpoint"),Je=Symbol("Comlink.releaseProxy"),Ge=Symbol("Comlink.finalizer"),pe=Symbol("Comlink.thrown"),It=e=>typeof e=="object"&&e!==null||typeof e=="function",Fr={canHandle:e=>It(e)&&e[st],serialize(e){let{port1:A,port2:t}=new MessageChannel;return lt(e,A),[t,[t]]},deserialize(e){return e.start(),Le(e)}},Ur={canHandle:e=>It(e)&&pe in e,serialize({value:e}){let A;return e instanceof Error?A={isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:A={isError:!1,value:e},[A,[]]},deserialize(e){throw e.isError?Object.assign(new Error(e.value.message),e.value):e.value}},gt=new Map([["proxy",Fr],["throw",Ur]]);function Sr(e,A){for(let t of e)if(A===t||t==="*"||t instanceof RegExp&&t.test(A))return!0;return!1}function lt(e,A=globalThis,t=["*"]){A.addEventListener("message",function r(o){if(!o||!o.data)return;if(!Sr(t,o.origin)){console.warn(`Invalid origin '${o.origin}' for comlink proxy`);return}let{id:n,type:i,path:g}=Object.assign({path:[]},o.data),m=(o.data.argumentList||[]).map(H),u;try{let I=g.slice(0,-1).reduce((f,s)=>f[s],e),a=g.reduce((f,s)=>f[s],e);switch(i){case"GET":u=a;break;case"SET":I[g.slice(-1)[0]]=H(o.data.value),u=!0;break;case"APPLY":u=a.apply(I,m);break;case"CONSTRUCT":{let f=new a(...m);u=xr(f)}break;case"ENDPOINT":{let{port1:f,port2:s}=new MessageChannel;lt(e,s),u=Me(f,[f])}break;case"RELEASE":u=void 0;break;default:return}}catch(I){u={value:I,[pe]:0}}Promise.resolve(u).catch(I=>({value:I,[pe]:0})).then(I=>{let[a,f]=fe(I);A.postMessage(Object.assign(Object.assign({},a),{id:n}),f),i==="RELEASE"&&(A.removeEventListener("message",r),pt(A),Ge in e&&typeof e[Ge]=="function"&&e[Ge]())}).catch(I=>{let[a,f]=fe({value:new TypeError("Unserializable return value"),[pe]:0});A.postMessage(Object.assign(Object.assign({},a),{id:n}),f)})}),A.start&&A.start()}function Nr(e){return e.constructor.name==="MessagePort"}function pt(e){Nr(e)&&e.close()}function Le(e,A){return Te(e,[],A)}function le(e){if(e)throw new Error("Proxy has been released and is not useable")}function ut(e){return q(e,{type:"RELEASE"}).then(()=>{pt(e)})}var ue=new WeakMap,me="FinalizationRegistry"in globalThis&&new FinalizationRegistry(e=>{let A=(ue.get(e)||0)-1;ue.set(e,A),A===0&&ut(e)});function Wr(e,A){let t=(ue.get(A)||0)+1;ue.set(A,t),me&&me.register(e,A,e)}function Pr(e){me&&me.unregister(e)}function Te(e,A=[],t=function(){}){let r=!1,o=new Proxy(t,{get(n,i){if(le(r),i===Je)return()=>{Pr(o),ut(e),r=!0};if(i==="then"){if(A.length===0)return{then:()=>o};let g=q(e,{type:"GET",path:A.map(m=>m.toString())}).then(H);return g.then.bind(g)}return Te(e,[...A,i])},set(n,i,g){le(r);let[m,u]=fe(g);return q(e,{type:"SET",path:[...A,i].map(I=>I.toString()),value:m},u).then(H)},apply(n,i,g){le(r);let m=A[A.length-1];if(m===Dr)return q(e,{type:"ENDPOINT"}).then(H);if(m==="bind")return Te(e,A.slice(0,-1));let[u,I]=at(g);return q(e,{type:"APPLY",path:A.map(a=>a.toString()),argumentList:u},I).then(H)},construct(n,i){le(r);let[g,m]=at(i);return q(e,{type:"CONSTRUCT",path:A.map(u=>u.toString()),argumentList:g},m).then(H)}});return Wr(o,e),o}function Or(e){return Array.prototype.concat.apply([],e)}function at(e){let A=e.map(fe);return[A.map(t=>t[0]),Or(A.map(t=>t[1]))]}var mt=new WeakMap;function Me(e,A){return mt.set(e,A),e}function xr(e){return Object.assign(e,{[st]:!0})}function fe(e){for(let[A,t]of gt)if(t.canHandle(e)){let[r,o]=t.serialize(e);return[{type:"HANDLER",name:A,value:r},o]}return[{type:"RAW",value:e},mt.get(e)||[]]}function H(e){switch(e.type){case"HANDLER":return gt.get(e.name).deserialize(e.value);case"RAW":return e.value}}function q(e,A,t){return new Promise(r=>{let o=Gr();e.addEventListener("message",function n(i){!i.data||!i.data.id||i.data.id!==o||(e.removeEventListener("message",n),r(i.data))}),e.start&&e.start(),e.postMessage(Object.assign({id:o},A),t)})}function Gr(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function Ae(e,A){return function(){return e.apply(A,arguments)}}var{toString:Tr}=Object.prototype,{getPrototypeOf:qe}=Object,Be=(e=>A=>{let t=Tr.call(A);return e[t]||(e[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),O=e=>(e=e.toLowerCase(),A=>Be(A)===e),de=e=>A=>typeof A===e,{isArray:K}=Array,te=de("undefined");function Jr(e){return e!==null&&!te(e)&&e.constructor!==null&&!te(e.constructor)&&W(e.constructor.isBuffer)&&e.constructor.isBuffer(e)}var dt=O("ArrayBuffer");function Lr(e){let A;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?A=ArrayBuffer.isView(e):A=e&&e.buffer&&dt(e.buffer),A}var Mr=de("string"),W=de("function"),Ct=de("number"),Ce=e=>e!==null&&typeof e=="object",Hr=e=>e===!0||e===!1,ce=e=>{if(Be(e)!=="object")return!1;let A=qe(e);return(A===null||A===Object.prototype||Object.getPrototypeOf(A)===null)&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)},Yr=O("Date"),qr=O("File"),Kr=O("Blob"),jr=O("FileList"),vr=e=>Ce(e)&&W(e.pipe),zr=e=>{let A;return e&&(typeof FormData=="function"&&e instanceof FormData||W(e.append)&&((A=Be(e))==="formdata"||A==="object"&&W(e.toString)&&e.toString()==="[object FormData]"))},Vr=O("URLSearchParams"),_r=e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function re(e,A,{allOwnKeys:t=!1}={}){if(e===null||typeof e>"u")return;let r,o;if(typeof e!="object"&&(e=[e]),K(e))for(r=0,o=e.length;r<o;r++)A.call(null,e[r],r,e);else{let n=t?Object.getOwnPropertyNames(e):Object.keys(e),i=n.length,g;for(r=0;r<i;r++)g=n[r],A.call(null,e[g],g,e)}}function Et(e,A){A=A.toLowerCase();let t=Object.keys(e),r=t.length,o;for(;r-- >0;)if(o=t[r],A===o.toLowerCase())return o;return null}var Qt=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,yt=e=>!te(e)&&e!==Qt;function Ye(){let{caseless:e}=yt(this)&&this||{},A={},t=(r,o)=>{let n=e&&Et(A,o)||o;ce(A[n])&&ce(r)?A[n]=Ye(A[n],r):ce(r)?A[n]=Ye({},r):K(r)?A[n]=r.slice():A[n]=r};for(let r=0,o=arguments.length;r<o;r++)arguments[r]&&re(arguments[r],t);return A}var Zr=(e,A,t,{allOwnKeys:r}={})=>(re(A,(o,n)=>{t&&W(o)?e[n]=Ae(o,t):e[n]=o},{allOwnKeys:r}),e),Xr=e=>(e.charCodeAt(0)===65279&&(e=e.slice(1)),e),$r=(e,A,t,r)=>{e.prototype=Object.create(A.prototype,r),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:A.prototype}),t&&Object.assign(e.prototype,t)},ei=(e,A,t,r)=>{let o,n,i,g={};if(A=A||{},e==null)return A;do{for(o=Object.getOwnPropertyNames(e),n=o.length;n-- >0;)i=o[n],(!r||r(i,e,A))&&!g[i]&&(A[i]=e[i],g[i]=!0);e=t!==!1&&qe(e)}while(e&&(!t||t(e,A))&&e!==Object.prototype);return A},Ai=(e,A,t)=>{e=String(e),(t===void 0||t>e.length)&&(t=e.length),t-=A.length;let r=e.indexOf(A,t);return r!==-1&&r===t},ti=e=>{if(!e)return null;if(K(e))return e;let A=e.length;if(!Ct(A))return null;let t=new Array(A);for(;A-- >0;)t[A]=e[A];return t},ri=(e=>A=>e&&A instanceof e)(typeof Uint8Array<"u"&&qe(Uint8Array)),ii=(e,A)=>{let r=(e&&e[Symbol.iterator]).call(e),o;for(;(o=r.next())&&!o.done;){let n=o.value;A.call(e,n[0],n[1])}},oi=(e,A)=>{let t,r=[];for(;(t=e.exec(A))!==null;)r.push(t);return r},ni=O("HTMLFormElement"),ai=e=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(t,r,o){return r.toUpperCase()+o}),ct=(({hasOwnProperty:e})=>(A,t)=>e.call(A,t))(Object.prototype),si=O("RegExp"),ht=(e,A)=>{let t=Object.getOwnPropertyDescriptors(e),r={};re(t,(o,n)=>{let i;(i=A(o,n,e))!==!1&&(r[n]=i||o)}),Object.defineProperties(e,r)},Ii=e=>{ht(e,(A,t)=>{if(W(e)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let r=e[t];if(W(r)){if(A.enumerable=!1,"writable"in A){A.writable=!1;return}A.set||(A.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},gi=(e,A)=>{let t={},r=o=>{o.forEach(n=>{t[n]=!0})};return K(e)?r(e):r(String(e).split(A)),t},li=()=>{},pi=(e,A)=>(e=+e,Number.isFinite(e)?e:A),He="abcdefghijklmnopqrstuvwxyz",Bt="0123456789",wt={DIGIT:Bt,ALPHA:He,ALPHA_DIGIT:He+He.toUpperCase()+Bt},ui=(e=16,A=wt.ALPHA_DIGIT)=>{let t="",{length:r}=A;for(;e--;)t+=A[Math.random()*r|0];return t};function mi(e){return!!(e&&W(e.append)&&e[Symbol.toStringTag]==="FormData"&&e[Symbol.iterator])}var fi=e=>{let A=new Array(10),t=(r,o)=>{if(Ce(r)){if(A.indexOf(r)>=0)return;if(!("toJSON"in r)){A[o]=r;let n=K(r)?[]:{};return re(r,(i,g)=>{let m=t(i,o+1);!te(m)&&(n[g]=m)}),A[o]=void 0,n}}return r};return t(e,0)},ci=O("AsyncFunction"),Bi=e=>e&&(Ce(e)||W(e))&&W(e.then)&&W(e.catch),c={isArray:K,isArrayBuffer:dt,isBuffer:Jr,isFormData:zr,isArrayBufferView:Lr,isString:Mr,isNumber:Ct,isBoolean:Hr,isObject:Ce,isPlainObject:ce,isUndefined:te,isDate:Yr,isFile:qr,isBlob:Kr,isRegExp:si,isFunction:W,isStream:vr,isURLSearchParams:Vr,isTypedArray:ri,isFileList:jr,forEach:re,merge:Ye,extend:Zr,trim:_r,stripBOM:Xr,inherits:$r,toFlatObject:ei,kindOf:Be,kindOfTest:O,endsWith:Ai,toArray:ti,forEachEntry:ii,matchAll:oi,isHTMLForm:ni,hasOwnProperty:ct,hasOwnProp:ct,reduceDescriptors:ht,freezeMethods:Ii,toObjectSet:gi,toCamelCase:ai,noop:li,toFiniteNumber:pi,findKey:Et,global:Qt,isContextDefined:yt,ALPHABET:wt,generateString:ui,isSpecCompliantForm:mi,toJSONObject:fi,isAsyncFn:ci,isThenable:Bi};function j(e,A,t,r,o){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=e,this.name="AxiosError",A&&(this.code=A),t&&(this.config=t),r&&(this.request=r),o&&(this.response=o)}c.inherits(j,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:c.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var Rt=j.prototype,bt={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(e=>{bt[e]={value:e}});Object.defineProperties(j,bt);Object.defineProperty(Rt,"isAxiosError",{value:!0});j.from=(e,A,t,r,o,n)=>{let i=Object.create(Rt);return c.toFlatObject(e,i,function(m){return m!==Error.prototype},g=>g!=="isAxiosError"),j.call(i,e.message,A,t,r,o),i.cause=e,i.name=e.name,n&&Object.assign(i,n),i};var h=j;var Ee=null;function Ke(e){return c.isPlainObject(e)||c.isArray(e)}function Dt(e){return c.endsWith(e,"[]")?e.slice(0,-2):e}function kt(e,A,t){return e?e.concat(A).map(function(o,n){return o=Dt(o),!t&&n?"["+o+"]":o}).join(t?".":""):A}function di(e){return c.isArray(e)&&!e.some(Ke)}var Ci=c.toFlatObject(c,{},null,function(A){return/^is[A-Z]/.test(A)});function Ei(e,A,t){if(!c.isObject(e))throw new TypeError("target must be an object");A=A||new(Ee||FormData),t=c.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(B,Q){return!c.isUndefined(Q[B])});let r=t.metaTokens,o=t.visitor||I,n=t.dots,i=t.indexes,m=(t.Blob||typeof Blob<"u"&&Blob)&&c.isSpecCompliantForm(A);if(!c.isFunction(o))throw new TypeError("visitor must be a function");function u(p){if(p===null)return"";if(c.isDate(p))return p.toISOString();if(!m&&c.isBlob(p))throw new h("Blob is not supported. Use a Buffer instead.");return c.isArrayBuffer(p)||c.isTypedArray(p)?m&&typeof Blob=="function"?new Blob([p]):Buffer.from(p):p}function I(p,B,Q){let w=p;if(p&&!Q&&typeof p=="object"){if(c.endsWith(B,"{}"))B=r?B:B.slice(0,-2),p=JSON.stringify(p);else if(c.isArray(p)&&di(p)||(c.isFileList(p)||c.endsWith(B,"[]"))&&(w=c.toArray(p)))return B=Dt(B),w.forEach(function(P,fr){!(c.isUndefined(P)||P===null)&&A.append(i===!0?kt([B],fr,n):i===null?B:B+"[]",u(P))}),!1}return Ke(p)?!0:(A.append(kt(Q,B,n),u(p)),!1)}let a=[],f=Object.assign(Ci,{defaultVisitor:I,convertValue:u,isVisitable:Ke});function s(p,B){if(!c.isUndefined(p)){if(a.indexOf(p)!==-1)throw Error("Circular reference detected in "+B.join("."));a.push(p),c.forEach(p,function(w,S){(!(c.isUndefined(w)||w===null)&&o.call(A,w,c.isString(S)?S.trim():S,B,f))===!0&&s(w,B?B.concat(S):[S])}),a.pop()}}if(!c.isObject(e))throw new TypeError("data must be an object");return s(e),A}var J=Ei;function Ft(e){let A={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,function(r){return A[r]})}function Ut(e,A){this._pairs=[],e&&J(e,this,A)}var St=Ut.prototype;St.append=function(A,t){this._pairs.push([A,t])};St.toString=function(A){let t=A?function(r){return A.call(this,r,Ft)}:Ft;return this._pairs.map(function(o){return t(o[0])+"="+t(o[1])},"").join("&")};var Qe=Ut;function Qi(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function ie(e,A,t){if(!A)return e;let r=t&&t.encode||Qi,o=t&&t.serialize,n;if(o?n=o(A,t):n=c.isURLSearchParams(A)?A.toString():new Qe(A,t).toString(r),n){let i=e.indexOf("#");i!==-1&&(e=e.slice(0,i)),e+=(e.indexOf("?")===-1?"?":"&")+n}return e}var je=class{constructor(){this.handlers=[]}use(A,t,r){return this.handlers.push({fulfilled:A,rejected:t,synchronous:r?r.synchronous:!1,runWhen:r?r.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){c.forEach(this.handlers,function(r){r!==null&&A(r)})}},ve=je;var ye={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var Nt=typeof URLSearchParams<"u"?URLSearchParams:Qe;var Wt=typeof FormData<"u"?FormData:null;var Pt=typeof Blob<"u"?Blob:null;var Ot={isBrowser:!0,classes:{URLSearchParams:Nt,FormData:Wt,Blob:Pt},protocols:["http","https","file","blob","url","data"]};var ze={};Br(ze,{hasBrowserEnv:()=>xt,hasStandardBrowserEnv:()=>yi,hasStandardBrowserWebWorkerEnv:()=>hi});var xt=typeof window<"u"&&typeof document<"u",yi=(e=>xt&&["ReactNative","NativeScript","NS"].indexOf(e)<0)(typeof navigator<"u"&&navigator.product),hi=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function";var D={...ze,...Ot};function Ve(e,A){return J(e,new D.classes.URLSearchParams,Object.assign({visitor:function(t,r,o,n){return D.isNode&&c.isBuffer(t)?(this.append(r,t.toString("base64")),!1):n.defaultVisitor.apply(this,arguments)}},A))}function wi(e){return c.matchAll(/\w+|\[(\w*)]/g,e).map(A=>A[0]==="[]"?"":A[1]||A[0])}function Ri(e){let A={},t=Object.keys(e),r,o=t.length,n;for(r=0;r<o;r++)n=t[r],A[n]=e[n];return A}function bi(e){function A(t,r,o,n){let i=t[n++],g=Number.isFinite(+i),m=n>=t.length;return i=!i&&c.isArray(o)?o.length:i,m?(c.hasOwnProp(o,i)?o[i]=[o[i],r]:o[i]=r,!g):((!o[i]||!c.isObject(o[i]))&&(o[i]=[]),A(t,r,o[i],n)&&c.isArray(o[i])&&(o[i]=Ri(o[i])),!g)}if(c.isFormData(e)&&c.isFunction(e.entries)){let t={};return c.forEachEntry(e,(r,o)=>{A(wi(r),o,t,0)}),t}return null}var he=bi;function ki(e,A,t){if(c.isString(e))try{return(A||JSON.parse)(e),c.trim(e)}catch(r){if(r.name!=="SyntaxError")throw r}return(t||JSON.stringify)(e)}var _e={transitional:ye,adapter:["xhr","http"],transformRequest:[function(A,t){let r=t.getContentType()||"",o=r.indexOf("application/json")>-1,n=c.isObject(A);if(n&&c.isHTMLForm(A)&&(A=new FormData(A)),c.isFormData(A))return o&&o?JSON.stringify(he(A)):A;if(c.isArrayBuffer(A)||c.isBuffer(A)||c.isStream(A)||c.isFile(A)||c.isBlob(A))return A;if(c.isArrayBufferView(A))return A.buffer;if(c.isURLSearchParams(A))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),A.toString();let g;if(n){if(r.indexOf("application/x-www-form-urlencoded")>-1)return Ve(A,this.formSerializer).toString();if((g=c.isFileList(A))||r.indexOf("multipart/form-data")>-1){let m=this.env&&this.env.FormData;return J(g?{"files[]":A}:A,m&&new m,this.formSerializer)}}return n||o?(t.setContentType("application/json",!1),ki(A)):A}],transformResponse:[function(A){let t=this.transitional||_e.transitional,r=t&&t.forcedJSONParsing,o=this.responseType==="json";if(A&&c.isString(A)&&(r&&!this.responseType||o)){let i=!(t&&t.silentJSONParsing)&&o;try{return JSON.parse(A)}catch(g){if(i)throw g.name==="SyntaxError"?h.from(g,h.ERR_BAD_RESPONSE,this,null,this.response):g}}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:D.classes.FormData,Blob:D.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};c.forEach(["delete","get","head","post","put","patch"],e=>{_e.headers[e]={}});var v=_e;var Di=c.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Gt=e=>{let A={},t,r,o;return e&&e.split(`
`).forEach(function(i){o=i.indexOf(":"),t=i.substring(0,o).trim().toLowerCase(),r=i.substring(o+1).trim(),!(!t||A[t]&&Di[t])&&(t==="set-cookie"?A[t]?A[t].push(r):A[t]=[r]:A[t]=A[t]?A[t]+", "+r:r)}),A};var Tt=Symbol("internals");function oe(e){return e&&String(e).trim().toLowerCase()}function we(e){return e===!1||e==null?e:c.isArray(e)?e.map(we):String(e)}function Fi(e){let A=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,r;for(;r=t.exec(e);)A[r[1]]=r[2];return A}var Ui=e=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());function Ze(e,A,t,r,o){if(c.isFunction(r))return r.call(this,A,t);if(o&&(A=t),!!c.isString(A)){if(c.isString(r))return A.indexOf(r)!==-1;if(c.isRegExp(r))return r.test(A)}}function Si(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(A,t,r)=>t.toUpperCase()+r)}function Ni(e,A){let t=c.toCamelCase(" "+A);["get","set","has"].forEach(r=>{Object.defineProperty(e,r+t,{value:function(o,n,i){return this[r].call(this,A,o,n,i)},configurable:!0})})}var z=class{constructor(A){A&&this.set(A)}set(A,t,r){let o=this;function n(g,m,u){let I=oe(m);if(!I)throw new Error("header name must be a non-empty string");let a=c.findKey(o,I);(!a||o[a]===void 0||u===!0||u===void 0&&o[a]!==!1)&&(o[a||m]=we(g))}let i=(g,m)=>c.forEach(g,(u,I)=>n(u,I,m));return c.isPlainObject(A)||A instanceof this.constructor?i(A,t):c.isString(A)&&(A=A.trim())&&!Ui(A)?i(Gt(A),t):A!=null&&n(t,A,r),this}get(A,t){if(A=oe(A),A){let r=c.findKey(this,A);if(r){let o=this[r];if(!t)return o;if(t===!0)return Fi(o);if(c.isFunction(t))return t.call(this,o,r);if(c.isRegExp(t))return t.exec(o);throw new TypeError("parser must be boolean|regexp|function")}}}has(A,t){if(A=oe(A),A){let r=c.findKey(this,A);return!!(r&&this[r]!==void 0&&(!t||Ze(this,this[r],r,t)))}return!1}delete(A,t){let r=this,o=!1;function n(i){if(i=oe(i),i){let g=c.findKey(r,i);g&&(!t||Ze(r,r[g],g,t))&&(delete r[g],o=!0)}}return c.isArray(A)?A.forEach(n):n(A),o}clear(A){let t=Object.keys(this),r=t.length,o=!1;for(;r--;){let n=t[r];(!A||Ze(this,this[n],n,A,!0))&&(delete this[n],o=!0)}return o}normalize(A){let t=this,r={};return c.forEach(this,(o,n)=>{let i=c.findKey(r,n);if(i){t[i]=we(o),delete t[n];return}let g=A?Si(n):String(n).trim();g!==n&&delete t[n],t[g]=we(o),r[g]=!0}),this}concat(...A){return this.constructor.concat(this,...A)}toJSON(A){let t=Object.create(null);return c.forEach(this,(r,o)=>{r!=null&&r!==!1&&(t[o]=A&&c.isArray(r)?r.join(", "):r)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([A,t])=>A+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(A){return A instanceof this?A:new this(A)}static concat(A,...t){let r=new this(A);return t.forEach(o=>r.set(o)),r}static accessor(A){let r=(this[Tt]=this[Tt]={accessors:{}}).accessors,o=this.prototype;function n(i){let g=oe(i);r[g]||(Ni(o,i),r[g]=!0)}return c.isArray(A)?A.forEach(n):n(A),this}};z.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);c.reduceDescriptors(z.prototype,({value:e},A)=>{let t=A[0].toUpperCase()+A.slice(1);return{get:()=>e,set(r){this[t]=r}}});c.freezeMethods(z);var F=z;function ne(e,A){let t=this||v,r=A||t,o=F.from(r.headers),n=r.data;return c.forEach(e,function(g){n=g.call(t,n,o.normalize(),A?A.status:void 0)}),o.normalize(),n}function ae(e){return!!(e&&e.__CANCEL__)}function Jt(e,A,t){h.call(this,e??"canceled",h.ERR_CANCELED,A,t),this.name="CanceledError"}c.inherits(Jt,h,{__CANCEL__:!0});var L=Jt;function Xe(e,A,t){let r=t.config.validateStatus;!t.status||!r||r(t.status)?e(t):A(new h("Request failed with status code "+t.status,[h.ERR_BAD_REQUEST,h.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var Lt=D.hasStandardBrowserEnv?{write(e,A,t,r,o,n){let i=[e+"="+encodeURIComponent(A)];c.isNumber(t)&&i.push("expires="+new Date(t).toGMTString()),c.isString(r)&&i.push("path="+r),c.isString(o)&&i.push("domain="+o),n===!0&&i.push("secure"),document.cookie=i.join("; ")},read(e){let A=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return A?decodeURIComponent(A[3]):null},remove(e){this.write(e,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function $e(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}function eA(e,A){return A?e.replace(/\/+$/,"")+"/"+A.replace(/^\/+/,""):e}function se(e,A){return e&&!$e(A)?eA(e,A):A}var Mt=D.hasStandardBrowserEnv?function(){let A=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),r;function o(n){let i=n;return A&&(t.setAttribute("href",i),i=t.href),t.setAttribute("href",i),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return r=o(window.location.href),function(i){let g=c.isString(i)?o(i):i;return g.protocol===r.protocol&&g.host===r.host}}():function(){return function(){return!0}}();function AA(e){let A=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return A&&A[1]||""}function Wi(e,A){e=e||10;let t=new Array(e),r=new Array(e),o=0,n=0,i;return A=A!==void 0?A:1e3,function(m){let u=Date.now(),I=r[n];i||(i=u),t[o]=m,r[o]=u;let a=n,f=0;for(;a!==o;)f+=t[a++],a=a%e;if(o=(o+1)%e,o===n&&(n=(n+1)%e),u-i<A)return;let s=I&&u-I;return s?Math.round(f*1e3/s):void 0}}var Ht=Wi;function Yt(e,A){let t=0,r=Ht(50,250);return o=>{let n=o.loaded,i=o.lengthComputable?o.total:void 0,g=n-t,m=r(g),u=n<=i;t=n;let I={loaded:n,total:i,progress:i?n/i:void 0,bytes:g,rate:m||void 0,estimated:m&&i&&u?(i-n)/m:void 0,event:o};I[A?"download":"upload"]=!0,e(I)}}var Pi=typeof XMLHttpRequest<"u",qt=Pi&&function(e){return new Promise(function(t,r){let o=e.data,n=F.from(e.headers).normalize(),{responseType:i,withXSRFToken:g}=e,m;function u(){e.cancelToken&&e.cancelToken.unsubscribe(m),e.signal&&e.signal.removeEventListener("abort",m)}let I;if(c.isFormData(o)){if(D.hasStandardBrowserEnv||D.hasStandardBrowserWebWorkerEnv)n.setContentType(!1);else if((I=n.getContentType())!==!1){let[B,...Q]=I?I.split(";").map(w=>w.trim()).filter(Boolean):[];n.setContentType([B||"multipart/form-data",...Q].join("; "))}}let a=new XMLHttpRequest;if(e.auth){let B=e.auth.username||"",Q=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";n.set("Authorization","Basic "+btoa(B+":"+Q))}let f=se(e.baseURL,e.url);a.open(e.method.toUpperCase(),ie(f,e.params,e.paramsSerializer),!0),a.timeout=e.timeout;function s(){if(!a)return;let B=F.from("getAllResponseHeaders"in a&&a.getAllResponseHeaders()),w={data:!i||i==="text"||i==="json"?a.responseText:a.response,status:a.status,statusText:a.statusText,headers:B,config:e,request:a};Xe(function(P){t(P),u()},function(P){r(P),u()},w),a=null}if("onloadend"in a?a.onloadend=s:a.onreadystatechange=function(){!a||a.readyState!==4||a.status===0&&!(a.responseURL&&a.responseURL.indexOf("file:")===0)||setTimeout(s)},a.onabort=function(){a&&(r(new h("Request aborted",h.ECONNABORTED,e,a)),a=null)},a.onerror=function(){r(new h("Network Error",h.ERR_NETWORK,e,a)),a=null},a.ontimeout=function(){let Q=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",w=e.transitional||ye;e.timeoutErrorMessage&&(Q=e.timeoutErrorMessage),r(new h(Q,w.clarifyTimeoutError?h.ETIMEDOUT:h.ECONNABORTED,e,a)),a=null},D.hasStandardBrowserEnv&&(g&&c.isFunction(g)&&(g=g(e)),g||g!==!1&&Mt(f))){let B=e.xsrfHeaderName&&e.xsrfCookieName&&Lt.read(e.xsrfCookieName);B&&n.set(e.xsrfHeaderName,B)}o===void 0&&n.setContentType(null),"setRequestHeader"in a&&c.forEach(n.toJSON(),function(Q,w){a.setRequestHeader(w,Q)}),c.isUndefined(e.withCredentials)||(a.withCredentials=!!e.withCredentials),i&&i!=="json"&&(a.responseType=e.responseType),typeof e.onDownloadProgress=="function"&&a.addEventListener("progress",Yt(e.onDownloadProgress,!0)),typeof e.onUploadProgress=="function"&&a.upload&&a.upload.addEventListener("progress",Yt(e.onUploadProgress)),(e.cancelToken||e.signal)&&(m=B=>{a&&(r(!B||B.type?new L(null,e,a):B),a.abort(),a=null)},e.cancelToken&&e.cancelToken.subscribe(m),e.signal&&(e.signal.aborted?m():e.signal.addEventListener("abort",m)));let p=AA(f);if(p&&D.protocols.indexOf(p)===-1){r(new h("Unsupported protocol "+p+":",h.ERR_BAD_REQUEST,e));return}a.send(o||null)})};var tA={http:Ee,xhr:qt};c.forEach(tA,(e,A)=>{if(e){try{Object.defineProperty(e,"name",{value:A})}catch{}Object.defineProperty(e,"adapterName",{value:A})}});var Kt=e=>`- ${e}`,Oi=e=>c.isFunction(e)||e===null||e===!1,Re={getAdapter:e=>{e=c.isArray(e)?e:[e];let{length:A}=e,t,r,o={};for(let n=0;n<A;n++){t=e[n];let i;if(r=t,!Oi(t)&&(r=tA[(i=String(t)).toLowerCase()],r===void 0))throw new h(`Unknown adapter '${i}'`);if(r)break;o[i||"#"+n]=r}if(!r){let n=Object.entries(o).map(([g,m])=>`adapter ${g} `+(m===!1?"is not supported by the environment":"is not available in the build")),i=A?n.length>1?`since :
`+n.map(Kt).join(`
`):" "+Kt(n[0]):"as no adapter specified";throw new h("There is no suitable adapter to dispatch the request "+i,"ERR_NOT_SUPPORT")}return r},adapters:tA};function rA(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new L(null,e)}function be(e){return rA(e),e.headers=F.from(e.headers),e.data=ne.call(e,e.transformRequest),["post","put","patch"].indexOf(e.method)!==-1&&e.headers.setContentType("application/x-www-form-urlencoded",!1),Re.getAdapter(e.adapter||v.adapter)(e).then(function(r){return rA(e),r.data=ne.call(e,e.transformResponse,r),r.headers=F.from(r.headers),r},function(r){return ae(r)||(rA(e),r&&r.response&&(r.response.data=ne.call(e,e.transformResponse,r.response),r.response.headers=F.from(r.response.headers))),Promise.reject(r)})}var jt=e=>e instanceof F?e.toJSON():e;function G(e,A){A=A||{};let t={};function r(u,I,a){return c.isPlainObject(u)&&c.isPlainObject(I)?c.merge.call({caseless:a},u,I):c.isPlainObject(I)?c.merge({},I):c.isArray(I)?I.slice():I}function o(u,I,a){if(c.isUndefined(I)){if(!c.isUndefined(u))return r(void 0,u,a)}else return r(u,I,a)}function n(u,I){if(!c.isUndefined(I))return r(void 0,I)}function i(u,I){if(c.isUndefined(I)){if(!c.isUndefined(u))return r(void 0,u)}else return r(void 0,I)}function g(u,I,a){if(a in A)return r(u,I);if(a in e)return r(void 0,u)}let m={url:n,method:n,data:n,baseURL:i,transformRequest:i,transformResponse:i,paramsSerializer:i,timeout:i,timeoutMessage:i,withCredentials:i,withXSRFToken:i,adapter:i,responseType:i,xsrfCookieName:i,xsrfHeaderName:i,onUploadProgress:i,onDownloadProgress:i,decompress:i,maxContentLength:i,maxBodyLength:i,beforeRedirect:i,transport:i,httpAgent:i,httpsAgent:i,cancelToken:i,socketPath:i,responseEncoding:i,validateStatus:g,headers:(u,I)=>o(jt(u),jt(I),!0)};return c.forEach(Object.keys(Object.assign({},e,A)),function(I){let a=m[I]||o,f=a(e[I],A[I],I);c.isUndefined(f)&&a!==g||(t[I]=f)}),t}var ke="1.6.2";var iA={};["object","boolean","number","function","string","symbol"].forEach((e,A)=>{iA[e]=function(r){return typeof r===e||"a"+(A<1?"n ":" ")+e}});var vt={};iA.transitional=function(A,t,r){function o(n,i){return"[Axios v"+ke+"] Transitional option '"+n+"'"+i+(r?". "+r:"")}return(n,i,g)=>{if(A===!1)throw new h(o(i," has been removed"+(t?" in "+t:"")),h.ERR_DEPRECATED);return t&&!vt[i]&&(vt[i]=!0,console.warn(o(i," has been deprecated since v"+t+" and will be removed in the near future"))),A?A(n,i,g):!0}};function xi(e,A,t){if(typeof e!="object")throw new h("options must be an object",h.ERR_BAD_OPTION_VALUE);let r=Object.keys(e),o=r.length;for(;o-- >0;){let n=r[o],i=A[n];if(i){let g=e[n],m=g===void 0||i(g,n,e);if(m!==!0)throw new h("option "+n+" must be "+m,h.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new h("Unknown option "+n,h.ERR_BAD_OPTION)}}var De={assertOptions:xi,validators:iA};var M=De.validators,V=class{constructor(A){this.defaults=A,this.interceptors={request:new ve,response:new ve}}request(A,t){typeof A=="string"?(t=t||{},t.url=A):t=A||{},t=G(this.defaults,t);let{transitional:r,paramsSerializer:o,headers:n}=t;r!==void 0&&De.assertOptions(r,{silentJSONParsing:M.transitional(M.boolean),forcedJSONParsing:M.transitional(M.boolean),clarifyTimeoutError:M.transitional(M.boolean)},!1),o!=null&&(c.isFunction(o)?t.paramsSerializer={serialize:o}:De.assertOptions(o,{encode:M.function,serialize:M.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let i=n&&c.merge(n.common,n[t.method]);n&&c.forEach(["delete","get","head","post","put","patch","common"],p=>{delete n[p]}),t.headers=F.concat(i,n);let g=[],m=!0;this.interceptors.request.forEach(function(B){typeof B.runWhen=="function"&&B.runWhen(t)===!1||(m=m&&B.synchronous,g.unshift(B.fulfilled,B.rejected))});let u=[];this.interceptors.response.forEach(function(B){u.push(B.fulfilled,B.rejected)});let I,a=0,f;if(!m){let p=[be.bind(this),void 0];for(p.unshift.apply(p,g),p.push.apply(p,u),f=p.length,I=Promise.resolve(t);a<f;)I=I.then(p[a++],p[a++]);return I}f=g.length;let s=t;for(a=0;a<f;){let p=g[a++],B=g[a++];try{s=p(s)}catch(Q){B.call(this,Q);break}}try{I=be.call(this,s)}catch(p){return Promise.reject(p)}for(a=0,f=u.length;a<f;)I=I.then(u[a++],u[a++]);return I}getUri(A){A=G(this.defaults,A);let t=se(A.baseURL,A.url);return ie(t,A.params,A.paramsSerializer)}};c.forEach(["delete","get","head","options"],function(A){V.prototype[A]=function(t,r){return this.request(G(r||{},{method:A,url:t,data:(r||{}).data}))}});c.forEach(["post","put","patch"],function(A){function t(r){return function(n,i,g){return this.request(G(g||{},{method:A,headers:r?{"Content-Type":"multipart/form-data"}:{},url:n,data:i}))}}V.prototype[A]=t(),V.prototype[A+"Form"]=t(!0)});var Ie=V;var oA=class e{constructor(A){if(typeof A!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(n){t=n});let r=this;this.promise.then(o=>{if(!r._listeners)return;let n=r._listeners.length;for(;n-- >0;)r._listeners[n](o);r._listeners=null}),this.promise.then=o=>{let n,i=new Promise(g=>{r.subscribe(g),n=g}).then(o);return i.cancel=function(){r.unsubscribe(n)},i},A(function(n,i,g){r.reason||(r.reason=new L(n,i,g),t(r.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){if(this.reason){A(this.reason);return}this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;let t=this._listeners.indexOf(A);t!==-1&&this._listeners.splice(t,1)}static source(){let A;return{token:new e(function(o){A=o}),cancel:A}}},zt=oA;function nA(e){return function(t){return e.apply(null,t)}}function aA(e){return c.isObject(e)&&e.isAxiosError===!0}var sA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(sA).forEach(([e,A])=>{sA[A]=e});var Vt=sA;function _t(e){let A=new Ie(e),t=Ae(Ie.prototype.request,A);return c.extend(t,Ie.prototype,A,{allOwnKeys:!0}),c.extend(t,A,null,{allOwnKeys:!0}),t.create=function(o){return _t(G(e,o))},t}var R=_t(v);R.Axios=Ie;R.CanceledError=L;R.CancelToken=zt;R.isCancel=ae;R.VERSION=ke;R.toFormData=J;R.AxiosError=h;R.Cancel=R.CanceledError;R.all=function(A){return Promise.all(A)};R.spread=nA;R.isAxiosError=aA;R.mergeConfig=G;R.AxiosHeaders=F;R.formToJSON=e=>he(c.isHTMLForm(e)?new FormData(e):e);R.getAdapter=Re.getAdapter;R.HttpStatusCode=Vt;R.default=R;var x=R;var{Axios:QI,AxiosError:yI,CanceledError:hI,isCancel:wI,CancelToken:RI,VERSION:bI,all:kI,Cancel:DI,isAxiosError:FI,spread:UI,toFormData:SI,AxiosHeaders:NI,HttpStatusCode:WI,formToJSON:PI,getAdapter:OI,mergeConfig:xI}=x;function Zt(e){let A=Le(e),t=e;return t.workerProxy=A,t.originalTerminate=t.terminate,t.terminate=()=>{t.workerProxy[Je](),t.originalTerminate()},{workerProxy:A,worker:t}}async function Gi(e,A){let t;if(e!=null){let n=e;return n.workerProxy!==void 0?(t=n.workerProxy,{workerProxy:t,worker:n}):Zt(e)}let r=A,o=null;if(r===null)o=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(r.startsWith("http")){let n=await x.get(r,{responseType:"blob"}),i=URL.createObjectURL(n.data);o=new Worker(i,{type:"module"})}else o=new Worker(r,{type:"module"});return Zt(o)}var Xt=Gi;async function Ti(e,A){let t="unknown";typeof e!="string"?t=e.href:e.startsWith("http")?t=e:t=typeof A<"u"?`${A}/${e}`:e,t.endsWith(".js")&&(t=t.substring(0,t.length-3)),t.endsWith(".wasm")&&(t=t.substring(0,t.length-5));let r=`${t}.wasm`,n=(await x.get(r,{responseType:"arraybuffer"})).data;return(await import(`${t}.js`)).default({wasmBinary:n})}var $t=Ti;var er=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var rr=typeof globalThis.SharedArrayBuffer=="function",Ar=new TextEncoder,tr=new TextDecoder("utf-8");function Ji(e,A){let t={flags:"r",encoding:"binary"},r=e.fs_open(A,t.flags),n=e.fs_stat(A).size,i=null;rr?i=new SharedArrayBuffer(n):i=new ArrayBuffer(n);let g=new Uint8Array(i);return e.fs_read(r,g,0,n,0),e.fs_close(r),g}function ir(e,A,t){let r=null;rr?r=new SharedArrayBuffer(t):r=new ArrayBuffer(t);let o=new Uint8Array(r),n=new Uint8Array(e.HEAPU8.buffer,A,t);return o.set(n),o}function k(e,A,t,r){let o=0;return A!==null&&(o=e.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,r,A.buffer.byteLength]),e.HEAPU8.set(new Uint8Array(A.buffer),o)),o}function _(e,A,t){let r=JSON.stringify(A),o=e.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,r.length]);e.writeAsciiToMemory(r,o,!1)}function U(e,A,t,r){let o=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,A,t]),n=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,A,t]),i=ir(e,o,n);return N(r,i.buffer)}function IA(e,A){let t=e.ccall("itk_wasm_output_json_address","number",["number","number"],[0,A]),r=e.AsciiToString(t);return JSON.parse(r)}function Li(e,A,t,r){r!=null&&r.length>0&&r.forEach(function(u,I){switch(u.type){case l.TextStream:{let a=Ar.encode(u.data.data),f=k(e,a,I,0),s={size:a.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};_(e,s,I);break}case l.JsonCompatible:{let a=Ar.encode(JSON.stringify(u.data)),f=k(e,a,I,0),s={size:a.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};_(e,s,I);break}case l.BinaryStream:{let a=u.data.data,f=k(e,a,I,0),s={size:a.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};_(e,s,I);break}case l.TextFile:{e.fs_writeFile(u.data.path,u.data.data);break}case l.BinaryFile:{e.fs_writeFile(u.data.path,u.data.data);break}case l.Image:{let a=u.data,f=k(e,a.data,I,0),s=k(e,a.direction,I,1),p=typeof a.metadata?.entries<"u"?JSON.stringify(Array.from(a.metadata.entries())):"[]",B={imageType:a.imageType,name:a.name,origin:a.origin,spacing:a.spacing,direction:`data:application/vnd.itk.address,0:${s}`,size:a.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:p};_(e,B,I);break}case l.Mesh:{let a=u.data,f=k(e,a.points,I,0),s=k(e,a.cells,I,1),p=k(e,a.pointData,I,2),B=k(e,a.cellData,I,3),Q={meshType:a.meshType,name:a.name,numberOfPoints:a.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:a.numberOfCells,cells:`data:application/vnd.itk.address,0:${s}`,cellBufferSize:a.cellBufferSize,numberOfPointPixels:a.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${p}`,numberOfCellPixels:a.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${B}`};_(e,Q,I);break}case l.PolyData:{let a=u.data,f=k(e,a.points,I,0),s=k(e,a.vertices,I,1),p=k(e,a.lines,I,2),B=k(e,a.polygons,I,3),Q=k(e,a.triangleStrips,I,4),w=k(e,a.pointData,I,5),S=k(e,a.pointData,I,6),P={polyDataType:a.polyDataType,name:a.name,numberOfPoints:a.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:a.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${s}`,linesBufferSize:a.linesBufferSize,lines:`data:application/vnd.itk.address,0:${p}`,polygonsBufferSize:a.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${B}`,triangleStripsBufferSize:a.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${Q}`,numberOfPointPixels:a.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${w}`,numberOfCellPixels:a.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${S}`};_(e,P,I);break}default:throw Error("Unsupported input InterfaceType")}}),e.resetModuleStdout(),e.resetModuleStderr();let o=e.stackSave(),n=0;try{n=e.callMain(A.slice())}catch(u){throw typeof u=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",e.getModuleStdout()),console.error("stderr:",e.getModuleStderr()),typeof e.getExceptionMessage<"u"?console.error("exception:",e.getExceptionMessage(u)):console.error("Build module in Debug mode for exception message information.")),u}finally{e.stackRestore(o)}let i=e.getModuleStdout(),g=e.getModuleStderr(),m=[];return t!=null&&t.length>0&&n===0&&t.forEach(function(u,I){let a=null;switch(u.type){case l.TextStream:{let s=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,I,0]),p=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,I,0]),B=new Uint8Array(e.HEAPU8.buffer,s,p);a={data:tr.decode(B)};break}case l.JsonCompatible:{let s=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,I,0]),p=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,I,0]),B=new Uint8Array(e.HEAPU8.buffer,s,p);a=JSON.parse(tr.decode(B));break}case l.BinaryStream:{let s=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,I,0]),p=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,I,0]);a={data:ir(e,s,p)};break}case l.TextFile:{a={path:u.data.path,data:e.fs_readFile(u.data.path,{encoding:"utf8"})};break}case l.BinaryFile:{a={path:u.data.path,data:Ji(e,u.data.path)};break}case l.Image:{let s=IA(e,I);s.data=U(e,I,0,s.imageType.componentType),s.direction=U(e,I,1,b.Float64),s.metadata=new Map(s.metadata),a=s;break}case l.Mesh:{let s=IA(e,I);s.numberOfPoints>0?s.points=U(e,I,0,s.meshType.pointComponentType):s.points=N(s.meshType.pointComponentType,new ArrayBuffer(0)),s.numberOfCells>0?s.cells=U(e,I,1,s.meshType.cellComponentType):s.cells=N(s.meshType.cellComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=U(e,I,2,s.meshType.pointPixelComponentType):s.pointData=N(s.meshType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=U(e,I,3,s.meshType.cellPixelComponentType):s.cellData=N(s.meshType.cellPixelComponentType,new ArrayBuffer(0)),a=s;break}case l.PolyData:{let s=IA(e,I);s.numberOfPoints>0?s.points=U(e,I,0,b.Float32):s.points=new Float32Array,s.verticesBufferSize>0?s.vertices=U(e,I,1,y.UInt32):s.vertices=new Uint32Array,s.linesBufferSize>0?s.lines=U(e,I,2,y.UInt32):s.lines=new Uint32Array,s.polygonsBufferSize>0?s.polygons=U(e,I,3,y.UInt32):s.polygons=new Uint32Array,s.triangleStripsBufferSize>0?s.triangleStrips=U(e,I,4,y.UInt32):s.triangleStrips=new Uint32Array,s.numberOfPointPixels>0?s.pointData=U(e,I,5,s.polyDataType.pointPixelComponentType):s.pointData=N(s.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=U(e,I,6,s.polyDataType.cellPixelComponentType):s.cellData=N(s.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),a=s;break}default:throw Error("Unsupported output InterfaceType")}let f={type:u.type,data:a};m.push(f)}),{returnValue:n,stdout:i,stderr:g,outputs:m}}var or=Li;var Mi=typeof globalThis.SharedArrayBuffer<"u";function Hi(e){if(e==null)return[];let A=[];for(let t=0;t<e.length;t++){let r=Yi(e[t]);r!==null&&A.push(r)}return A}function Yi(e){if(e==null)return null;let A=null;return e.buffer!==void 0?A=e.buffer:e.byteLength!==void 0&&(A=e),Mi&&A instanceof SharedArrayBuffer?null:A}var nr=Hi;function qi(e){return[e.data,e.direction]}var ar=qi;function Ki(e){return[e.points,e.pointData,e.cells,e.cellData]}var sr=Ki;function ji(e){return[e.points,e.vertices,e.lines,e.polygons,e.triangleStrips,e.pointData,e.cellData]}var Ir=ji;var vi;function Fe(){return vi}var zi;function Ue(){return zi}var gA=new Map;function Vi(){let e=Ue();return typeof e>"u"&&(e=null),e}function gr(){let e=Fe();return typeof e>"u"&&(e=new URL("/pipelines",document.location.origin).href),e}async function _i(e,A){let t=e,r=e;if(typeof e!="string"&&(t=new URL(e.href),r=t.href),gA.has(r))return gA.get(r);{let o=await $t(e,A?.toString()??gr());return gA.set(r,o),o}}async function Zi(e,A,t,r,o,n){if(!await er()){let Q="WebAssembly SIMD support is required -- please update your browser.";throw alert(Q),new Error(Q)}if(e===!1){let Q=await _i(A.toString(),n?.pipelineBaseUrl);return or(Q,t,r,o)}let i=e,g=n?.pipelineWorkerUrl??Vi(),m=typeof g!="string"&&typeof g?.href<"u"?g.href:g,{workerProxy:u,worker:I}=await Xt(i,m);i=I;let a=[];o!=null&&o.length>0&&o.forEach(function(Q){if(Q.type===l.BinaryStream){let w=Q.data.data;a.push(w)}else if(Q.type===l.BinaryFile){let w=Q.data.data;a.push(w)}else if(Q.type===l.Image){let w=Q.data;w.data!==null&&a.push(...ar(w))}else if(Q.type===l.Mesh){let w=Q.data;a.push(...sr(w))}else if(Q.type===l.PolyData){let w=Q.data;a.push(...Ir(w))}});let f=n?.pipelineBaseUrl??gr(),s=typeof f!="string"&&typeof f?.href<"u"?f.href:f,p=o!=null?Me(o,nr(a)):null,B=await u.runPipeline(A.toString(),s,t,r,p);return{returnValue:B.returnValue,stdout:B.stdout,stderr:B.stderr,outputs:B.outputs,webWorker:i}}var d=Zi;var lr={name:"@itk-wasm/image-io",version:"0.5.2",packageManager:"pnpm@8.11.0",description:"Input and output for scientific and medical image file formats.",type:"module",module:"./dist/index.js",types:"./dist/index-all.d.ts",exports:{".":{types:"./dist/index-all.d.js",browser:"./dist/index.js",node:"./dist/index-node.js",default:"./dist/index-all.js"}},scripts:{start:"pnpm copyShoelaceAssets && vite -c build/vite.config.js",test:"pnpm test:node && pnpm test:browser","test:node":"ava","test:browser":"pnpm test:browser:chrome && pnpm test:browser:firefox","test:browser:firefox":"start-server-and-test vite:start http-get://localhost:5004 cypress:runFirefox","test:browser:chrome":"start-server-and-test vite:start http-get://localhost:5004 cypress:runChrome","test:browser:debug":"start-server-and-test rollup:start http-get://localhost:5004 cypress:open","cypress:open":"pnpx cypress open","cypress:runChrome":"pnpx cypress run --browser chrome","cypress:runFirefox":"pnpx cypress run --browser firefox",build:"pnpm build:tsc && pnpm build:browser:workerEmbedded && pnpm build:browser:workerEmbeddedMin && pnpm build:demo","build:browser:workerEmbedded":"esbuild --loader:.worker.js=dataurl --bundle --format=esm --outfile=./dist/bundle/index-worker-embedded.js ./src/index-worker-embedded.ts","build:browser:workerEmbeddedMin":"esbuild --minify --loader:.worker.js=dataurl --bundle --format=esm --outfile=./dist/bundle/index-worker-embedded.min.js ./src/index-worker-embedded.min.ts","build:tsc":"tsc --pretty",copyShoelaceAssets:"shx mkdir -p test/browser/demo-app/public && shx cp -r node_modules/@shoelace-style/shoelace/dist/assets test/browser/demo-app/public/","build:demo":"pnpm copyShoelaceAssets && vite -c build/vite.config.js build","vite:start":"pnpm copyShoelaceAssets && vite -c build/vite.config.js","rollup:start":"pnpm copyShoelaceAssets && pnpm build:demo && concurrently npm:rollup:preview npm:rollup:dev","rollup:dev":"vite build --config build/vite-rollup-watch.config.ts","rollup:preview":"vite preview --config build/vite-rollup-watch.config.ts"},keywords:["itk","wasm","webassembly","wasi"],author:"",license:"Apache-2.0",dependencies:{axios:"^1.6.2","itk-wasm":"workspace:^","mime-types":"^2.1.35"},devDependencies:{"@itk-wasm/image-io-build":"workspace:*","@shoelace-style/shoelace":"^2.12.0","@types/mime-types":"^2.1.4","@types/node":"^20.10.4",ava:"^5.3.1",concurrently:"^8.2.2",cypress:"^13.6.1",esbuild:"^0.19.9",shx:"^0.3.4","start-server-and-test":"^2.0.3",typescript:"^5.3.3",vite:"^5.0.10","vite-plugin-static-copy":"^1.0.0"},repository:{type:"git",url:"https://github.com/InsightSoftwareConsortium/itk-wasm"},ava:{files:["test/node/**/*","!test/node/common.js"]}};var lA,$i=`https://cdn.jsdelivr.net/npm/@itk-wasm/image-io@${lr.version}/dist/pipelines`;function Cg(e){lA=e}function C(){if(typeof lA<"u")return lA;let e=Fe();return typeof e<"u"?e:$i}var pA,eo=null;function pr(e){pA=e}function E(){if(typeof pA<"u")return pA;let e=Ue();return typeof e<"u"?e:eo}async function Ao(e){let t=(await x.get(`${e}/index.json`,{responseType:"json"})).data,r=await x.get(`${e}/data/data.raw`,{responseType:"arraybuffer"});t.data=N(t.imageType.componentType,r.data);let o=await x.get(`${e}/data/direction.raw`,{responseType:"arraybuffer"});return t.direction=N(b.Float64,o.data),t}var to=Ao;var ro=new Map([["image/jpeg","jpeg"],["image/png","png"],["image/tiff","tiff"],["image/x-ms-bmp","bmp"],["image/x-bmp","bmp"],["image/bmp","bmp"],["application/dicom","gdcm"]]),Z=ro;var io=new Map([["bmp","bmp"],["dcm","gdcm"],["gipl","gipl"],["gipl.gz","gipl"],["hdf5","hdf5"],["jpg","jpeg"],["jpeg","jpeg"],["iwi","wasm"],["iwi.cbor","wasm"],["iwi.cbor.zst","wasmZstd"],["lsm","lsm"],["mnc","mnc"],["mnc.gz","mnc"],["mnc2","mnc"],["mgh","mgh"],["mgz","mgh"],["mgh.gz","mgh"],["mha","meta"],["mhd","meta"],["mrc","mrc"],["nia","nifti"],["nii","nifti"],["nii.gz","nifti"],["hdr","nifti"],["nrrd","nrrd"],["nhdr","nrrd"],["png","png"],["pic","bioRad"],["tif","tiff"],["tiff","tiff"],["vtk","vtk"],["isq","scanco"],["aim","scanco"],["fdf","fdf"]]),X=io;async function oo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="png-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var uA=oo;async function no(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="png-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var mA=no;async function ao(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="meta-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var fA=ao;async function so(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="meta-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var cA=so;async function Io(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="tiff-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var BA=Io;async function go(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="tiff-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var dA=go;async function lo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="nifti-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var CA=lo;async function po(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="nifti-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var EA=po;async function uo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="jpeg-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var QA=uo;async function mo(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="jpeg-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var yA=mo;async function fo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="nrrd-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var hA=fo;async function co(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="nrrd-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var wA=co;async function Bo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="vtk-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var RA=Bo;async function Co(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="vtk-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var bA=Co;async function Eo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="bmp-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var kA=Eo;async function Qo(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="bmp-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var DA=Qo;async function yo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="hdf5-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var FA=yo;async function ho(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="hdf5-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var UA=ho;async function wo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="minc-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var SA=wo;async function Ro(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="minc-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var NA=Ro;async function bo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="mrc-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var WA=bo;async function ko(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="mrc-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var PA=ko;async function Do(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="lsm-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var OA=Do;async function Fo(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="lsm-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var xA=Fo;async function Uo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="mgh-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var GA=Uo;async function So(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="mgh-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var TA=So;async function No(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="bio-rad-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var JA=No;async function Wo(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="bio-rad-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var LA=Wo;async function Po(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="gipl-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var MA=Po;async function Oo(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="gipl-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var HA=Oo;async function xo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="ge-adw-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var YA=xo;async function Go(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="ge-adw-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var qA=Go;async function To(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="ge4-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var KA=To;async function Jo(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="ge4-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var jA=Jo;async function Lo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="ge5-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var vA=Lo;async function Mo(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="ge5-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var zA=Mo;async function Ho(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="gdcm-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var VA=Ho;async function Yo(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="gdcm-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var _A=Yo;async function qo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="scanco-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var ZA=qo;async function Ko(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="scanco-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var XA=Ko;async function jo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="fdf-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var $A=jo;async function vo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="wasm-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var et=vo;async function zo(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="wasm-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var At=zo;async function Vo(e,A,t={}){let r=[{type:l.JsonCompatible},{type:l.Image}],o=A;if(A instanceof File){let Q=await A.arrayBuffer();o={path:A.name,data:new Uint8Array(Q)}}let n=[{type:l.BinaryFile,data:o}],i=[],g=o.path;i.push(g);let m="0";i.push(m);let u="1";i.push(u),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let I="wasm-zstd-read-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,r,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldRead:p[0]?.data,image:p[1]?.data}}var tt=Vo;async function _o(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="wasm-zstd-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var rt=_o;var Zo=new Map([["png",[uA,mA]],["meta",[fA,cA]],["tiff",[BA,dA]],["nifti",[CA,EA]],["jpeg",[QA,yA]],["nrrd",[hA,wA]],["vtk",[RA,bA]],["bmp",[kA,DA]],["hdf5",[FA,UA]],["minc",[SA,NA]],["mrc",[WA,PA]],["lsm",[OA,xA]],["mgh",[GA,TA]],["bioRad",[JA,LA]],["gipl",[MA,HA]],["geAdw",[YA,qA]],["ge4",[KA,jA]],["ge5",[vA,zA]],["gdcm",[VA,_A]],["scanco",[ZA,XA]],["fdf",[$A,null]],["wasm",[et,At]],["wasmZstd",[tt,rt]]]),$=Zo;async function Xo(e,A,t={}){let r=A.type??"",o=A.name??A.path??"fileName",n=ee(o).toLowerCase(),i=e,g=A;if(A instanceof Blob){let p=await A.arrayBuffer();g={path:A.name,data:new Uint8Array(p)}}let m=null;if(r&&Z.has(r))m=Z.get(r);else if(X.has(n))m=X.get(n);else for(let p of $.values())if(p[0]!==null){let{webWorker:B,couldRead:Q,image:w}=await p[0](i,{path:g.path,data:g.data.slice()},{informationOnly:t.informationOnly});if(i=B,Q)return typeof t<"u"&&(w=T(w,t)),{webWorker:i,image:w}}if(!m)throw Error("Could not find IO for: "+o);let I=$.get(m)[0],{webWorker:a,couldRead:f,image:s}=await I(i,g,{informationOnly:t.informationOnly});if(i=a,!f)throw Error("Could not read: "+o);return typeof t<"u"&&(s=T(s,t)),{webWorker:i,image:s}}var it=Xo;var $o=typeof globalThis.navigator?.hardwareConcurrency=="number"?globalThis.navigator.hardwareConcurrency:6,ur=new xe($o,it);async function en(e,A){let t=1,r=0,o=!1;typeof A=="object"&&(typeof A.zSpacing<"u"&&(t=A.zSpacing),typeof A.zOrigin<"u"&&(r=A.zOrigin),typeof A.sortedSeries<"u"&&(o=A.sortedSeries));let n=Array.from(e,async function(a){if(a instanceof File){let f=await a.arrayBuffer();return{path:a.name,data:new Uint8Array(f)}}return a}),i=await Promise.all(n);o||i.sort((a,f)=>a.path<f.path?-1:a.path>f.path?1:0);let g=[];for(let a=0;a<i.length;a++)g.push([i[a]]);let u=(await ur.runTasks(g).promise).map(a=>{let f=a.image;return f.imageType.dimension=3,f.size.push(1),f.spacing.push(t),f.origin.push(r),f.direction=new Float64Array(9),f.direction.fill(0),f.direction[0]=1,f.direction[4]=1,f.direction[8]=1,f}),I=Pe(u);return typeof A=="object"&&(typeof A.componentType<"u"||typeof A.pixelType<"u")&&(I=T(I,A)),{image:I,webWorkerPool:ur}}var An=en;async function tn(e,A,t,r={}){let o=A;(typeof r.componentType<"u"||typeof r.pixelType<"u")&&(o=T(A,r));let n=r.mimeType,i=ee(t).toLowerCase(),g=e,m=null;if(typeof n<"u"&&Z.has(n))m=Z.get(n);else if(X.has(i))m=X.get(i);else for(let B of $.values())if(B[1]!==null){let{webWorker:Q,couldWrite:w,serializedImage:S}=await B[1](g,We(o),t,r);if(g=Q,w)return{webWorker:g,serializedImage:S}}if(!m)throw Error("Could not find IO for: "+t);let I=$.get(m)[1],{webWorker:a,couldWrite:f,serializedImage:s}=await I(g,o,t,r);if(g=a,!f)throw Error("Could not write: "+t);return{webWorker:g,serializedImage:s}}var rn=tn;async function on(e,A,t,r={}){let o=[{type:l.JsonCompatible},{type:l.BinaryFile,data:{path:t,data:new Uint8Array}}],n=[{type:l.Image,data:A}],i=[],g="0";i.push(g);let m="0";i.push(m);let u=t;i.push(u),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let I="fdf-write-image",{webWorker:a,returnValue:f,stderr:s,outputs:p}=await d(e,I,i,o,n,{pipelineBaseUrl:C(),pipelineWorkerUrl:E()});if(f!==0&&s!=="")throw new Error(s);return{webWorker:a,couldWrite:p[0]?.data,serializedImage:p[1]?.data}}var nn=on;var mr='data:text/javascript;charset=utf-8,var tt=Object.defineProperty;var et=(A,I)=>{for(var t in I)tt(A,t,{get:I[t],enumerable:!0})};var vA=Symbol("Comlink.proxy"),gt=Symbol("Comlink.endpoint"),rt=Symbol("Comlink.releaseProxy"),mA=Symbol("Comlink.finalizer"),eA=Symbol("Comlink.thrown"),$A=A=>typeof A=="object"&&A!==null||typeof A=="function",it={canHandle:A=>$A(A)&&A[vA],serialize(A){let{port1:I,port2:t}=new MessageChannel;return oA(A,I),[t,[t]]},deserialize(A){return A.start(),st(A)}},ot={canHandle:A=>$A(A)&&eA in A,serialize({value:A}){let I;return A instanceof Error?I={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:I={isError:!1,value:A},[I,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},AI=new Map([["proxy",it],["throw",ot]]);function Bt(A,I){for(let t of A)if(I===t||t==="*"||t instanceof RegExp&&t.test(I))return!0;return!1}function oA(A,I=globalThis,t=["*"]){I.addEventListener("message",function e(g){if(!g||!g.data)return;if(!Bt(t,g.origin)){console.warn(`Invalid origin \'${g.origin}\' for comlink proxy`);return}let{id:i,type:r,path:s}=Object.assign({path:[]},g.data),a=(g.data.argumentList||[]).map(b),n;try{let C=s.slice(0,-1).reduce((f,Q)=>f[Q],A),o=s.reduce((f,Q)=>f[Q],A);switch(r){case"GET":n=o;break;case"SET":C[s.slice(-1)[0]]=b(g.data.value),n=!0;break;case"APPLY":n=o.apply(C,a);break;case"CONSTRUCT":{let f=new o(...a);n=at(f)}break;case"ENDPOINT":{let{port1:f,port2:Q}=new MessageChannel;oA(A,Q),n=SA(f,[f])}break;case"RELEASE":n=void 0;break;default:return}}catch(C){n={value:C,[eA]:0}}Promise.resolve(n).catch(C=>({value:C,[eA]:0})).then(C=>{let[o,f]=iA(C);I.postMessage(Object.assign(Object.assign({},o),{id:i}),f),r==="RELEASE"&&(I.removeEventListener("message",e),II(I),mA in A&&typeof A[mA]=="function"&&A[mA]())}).catch(C=>{let[o,f]=iA({value:new TypeError("Unserializable return value"),[eA]:0});I.postMessage(Object.assign(Object.assign({},o),{id:i}),f)})}),I.start&&I.start()}function Ct(A){return A.constructor.name==="MessagePort"}function II(A){Ct(A)&&A.close()}function st(A,I){return pA(A,[],I)}function tA(A){if(A)throw new Error("Proxy has been released and is not useable")}function tI(A){return M(A,{type:"RELEASE"}).then(()=>{II(A)})}var gA=new WeakMap,rA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let I=(gA.get(A)||0)-1;gA.set(A,I),I===0&&tI(A)});function Qt(A,I){let t=(gA.get(I)||0)+1;gA.set(I,t),rA&&rA.register(A,I,A)}function nt(A){rA&&rA.unregister(A)}function pA(A,I=[],t=function(){}){let e=!1,g=new Proxy(t,{get(i,r){if(tA(e),r===rt)return()=>{nt(g),tI(A),e=!0};if(r==="then"){if(I.length===0)return{then:()=>g};let s=M(A,{type:"GET",path:I.map(a=>a.toString())}).then(b);return s.then.bind(s)}return pA(A,[...I,r])},set(i,r,s){tA(e);let[a,n]=iA(s);return M(A,{type:"SET",path:[...I,r].map(C=>C.toString()),value:a},n).then(b)},apply(i,r,s){tA(e);let a=I[I.length-1];if(a===gt)return M(A,{type:"ENDPOINT"}).then(b);if(a==="bind")return pA(A,I.slice(0,-1));let[n,C]=_A(s);return M(A,{type:"APPLY",path:I.map(o=>o.toString()),argumentList:n},C).then(b)},construct(i,r){tA(e);let[s,a]=_A(r);return M(A,{type:"CONSTRUCT",path:I.map(n=>n.toString()),argumentList:s},a).then(b)}});return Qt(g,A),g}function Et(A){return Array.prototype.concat.apply([],A)}function _A(A){let I=A.map(iA);return[I.map(t=>t[0]),Et(I.map(t=>t[1]))]}var eI=new WeakMap;function SA(A,I){return eI.set(A,I),A}function at(A){return Object.assign(A,{[vA]:!0})}function iA(A){for(let[I,t]of AI)if(t.canHandle(A)){let[e,g]=t.serialize(A);return[{type:"HANDLER",name:I,value:e},g]}return[{type:"RAW",value:A},eI.get(A)||[]]}function b(A){switch(A.type){case"HANDLER":return AI.get(A.name).deserialize(A.value);case"RAW":return A.value}}function M(A,I,t){return new Promise(e=>{let g=ct();A.addEventListener("message",function i(r){!r.data||!r.data.id||r.data.id!==g||(A.removeEventListener("message",i),e(r.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:g},I),t)})}function ct(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function W(A,I){return function(){return A.apply(I,arguments)}}var{toString:ft}=Object.prototype,{getPrototypeOf:NA}=Object,CA=(A=>I=>{let t=ft.call(I);return A[t]||(A[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),U=A=>(A=A.toLowerCase(),I=>CA(I)===A),sA=A=>I=>typeof I===A,{isArray:q}=Array,Z=sA("undefined");function lt(A){return A!==null&&!Z(A)&&A.constructor!==null&&!Z(A.constructor)&&F(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var oI=U("ArrayBuffer");function Dt(A){let I;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?I=ArrayBuffer.isView(A):I=A&&A.buffer&&oI(A.buffer),I}var ut=sA("string"),F=sA("function"),BI=sA("number"),QA=A=>A!==null&&typeof A=="object",ht=A=>A===!0||A===!1,BA=A=>{if(CA(A)!=="object")return!1;let I=NA(A);return(I===null||I===Object.prototype||Object.getPrototypeOf(I)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},dt=U("Date"),yt=U("File"),wt=U("Blob"),mt=U("FileList"),pt=A=>QA(A)&&F(A.pipe),St=A=>{let I;return A&&(typeof FormData=="function"&&A instanceof FormData||F(A.append)&&((I=CA(A))==="formdata"||I==="object"&&F(A.toString)&&A.toString()==="[object FormData]"))},Ft=U("URLSearchParams"),Rt=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function V(A,I,{allOwnKeys:t=!1}={}){if(A===null||typeof A>"u")return;let e,g;if(typeof A!="object"&&(A=[A]),q(A))for(e=0,g=A.length;e<g;e++)I.call(null,A[e],e,A);else{let i=t?Object.getOwnPropertyNames(A):Object.keys(A),r=i.length,s;for(e=0;e<r;e++)s=i[e],I.call(null,A[s],s,A)}}function CI(A,I){I=I.toLowerCase();let t=Object.keys(A),e=t.length,g;for(;e-- >0;)if(g=t[e],I===g.toLowerCase())return g;return null}var sI=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,QI=A=>!Z(A)&&A!==sI;function RA(){let{caseless:A}=QI(this)&&this||{},I={},t=(e,g)=>{let i=A&&CI(I,g)||g;BA(I[i])&&BA(e)?I[i]=RA(I[i],e):BA(e)?I[i]=RA({},e):q(e)?I[i]=e.slice():I[i]=e};for(let e=0,g=arguments.length;e<g;e++)arguments[e]&&V(arguments[e],t);return I}var Nt=(A,I,t,{allOwnKeys:e}={})=>(V(I,(g,i)=>{t&&F(g)?A[i]=W(g,t):A[i]=g},{allOwnKeys:e}),A),Ut=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),Gt=(A,I,t,e)=>{A.prototype=Object.create(I.prototype,e),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:I.prototype}),t&&Object.assign(A.prototype,t)},kt=(A,I,t,e)=>{let g,i,r,s={};if(I=I||{},A==null)return I;do{for(g=Object.getOwnPropertyNames(A),i=g.length;i-- >0;)r=g[i],(!e||e(r,A,I))&&!s[r]&&(I[r]=A[r],s[r]=!0);A=t!==!1&&NA(A)}while(A&&(!t||t(A,I))&&A!==Object.prototype);return I},Lt=(A,I,t)=>{A=String(A),(t===void 0||t>A.length)&&(t=A.length),t-=I.length;let e=A.indexOf(I,t);return e!==-1&&e===t},Jt=A=>{if(!A)return null;if(q(A))return A;let I=A.length;if(!BI(I))return null;let t=new Array(I);for(;I-- >0;)t[I]=A[I];return t},Ht=(A=>I=>A&&I instanceof A)(typeof Uint8Array<"u"&&NA(Uint8Array)),Yt=(A,I)=>{let e=(A&&A[Symbol.iterator]).call(A),g;for(;(g=e.next())&&!g.done;){let i=g.value;I.call(A,i[0],i[1])}},bt=(A,I)=>{let t,e=[];for(;(t=A.exec(I))!==null;)e.push(t);return e},Mt=U("HTMLFormElement"),qt=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(t,e,g){return e.toUpperCase()+g}),rI=(({hasOwnProperty:A})=>(I,t)=>A.call(I,t))(Object.prototype),Kt=U("RegExp"),nI=(A,I)=>{let t=Object.getOwnPropertyDescriptors(A),e={};V(t,(g,i)=>{let r;(r=I(g,i,A))!==!1&&(e[i]=r||g)}),Object.defineProperties(A,e)},Ot=A=>{nI(A,(I,t)=>{if(F(A)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let e=A[t];if(F(e)){if(I.enumerable=!1,"writable"in I){I.writable=!1;return}I.set||(I.set=()=>{throw Error("Can not rewrite read-only method \'"+t+"\'")})}})},Tt=(A,I)=>{let t={},e=g=>{g.forEach(i=>{t[i]=!0})};return q(A)?e(A):e(String(A).split(I)),t},xt=()=>{},Pt=(A,I)=>(A=+A,Number.isFinite(A)?A:I),FA="abcdefghijklmnopqrstuvwxyz",iI="0123456789",EI={DIGIT:iI,ALPHA:FA,ALPHA_DIGIT:FA+FA.toUpperCase()+iI},jt=(A=16,I=EI.ALPHA_DIGIT)=>{let t="",{length:e}=I;for(;A--;)t+=I[Math.random()*e|0];return t};function Wt(A){return!!(A&&F(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var Zt=A=>{let I=new Array(10),t=(e,g)=>{if(QA(e)){if(I.indexOf(e)>=0)return;if(!("toJSON"in e)){I[g]=e;let i=q(e)?[]:{};return V(e,(r,s)=>{let a=t(r,g+1);!Z(a)&&(i[s]=a)}),I[g]=void 0,i}}return e};return t(A,0)},Vt=U("AsyncFunction"),Xt=A=>A&&(QA(A)||F(A))&&F(A.then)&&F(A.catch),B={isArray:q,isArrayBuffer:oI,isBuffer:lt,isFormData:St,isArrayBufferView:Dt,isString:ut,isNumber:BI,isBoolean:ht,isObject:QA,isPlainObject:BA,isUndefined:Z,isDate:dt,isFile:yt,isBlob:wt,isRegExp:Kt,isFunction:F,isStream:pt,isURLSearchParams:Ft,isTypedArray:Ht,isFileList:mt,forEach:V,merge:RA,extend:Nt,trim:Rt,stripBOM:Ut,inherits:Gt,toFlatObject:kt,kindOf:CA,kindOfTest:U,endsWith:Lt,toArray:Jt,forEachEntry:Yt,matchAll:bt,isHTMLForm:Mt,hasOwnProperty:rI,hasOwnProp:rI,reduceDescriptors:nI,freezeMethods:Ot,toObjectSet:Tt,toCamelCase:qt,noop:xt,toFiniteNumber:Pt,findKey:CI,global:sI,isContextDefined:QI,ALPHABET:EI,generateString:jt,isSpecCompliantForm:Wt,toJSONObject:Zt,isAsyncFn:Vt,isThenable:Xt};function K(A,I,t,e,g){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",I&&(this.code=I),t&&(this.config=t),e&&(this.request=e),g&&(this.response=g)}B.inherits(K,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:B.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var aI=K.prototype,cI={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{cI[A]={value:A}});Object.defineProperties(K,cI);Object.defineProperty(aI,"isAxiosError",{value:!0});K.from=(A,I,t,e,g,i)=>{let r=Object.create(aI);return B.toFlatObject(A,r,function(a){return a!==Error.prototype},s=>s!=="isAxiosError"),K.call(r,A.message,I,t,e,g),r.cause=A,r.name=A.name,i&&Object.assign(r,i),r};var l=K;var nA=null;function UA(A){return B.isPlainObject(A)||B.isArray(A)}function lI(A){return B.endsWith(A,"[]")?A.slice(0,-2):A}function fI(A,I,t){return A?A.concat(I).map(function(g,i){return g=lI(g),!t&&i?"["+g+"]":g}).join(t?".":""):I}function zt(A){return B.isArray(A)&&!A.some(UA)}var _t=B.toFlatObject(B,{},null,function(I){return/^is[A-Z]/.test(I)});function vt(A,I,t){if(!B.isObject(A))throw new TypeError("target must be an object");I=I||new(nA||FormData),t=B.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(c,u){return!B.isUndefined(u[c])});let e=t.metaTokens,g=t.visitor||C,i=t.dots,r=t.indexes,a=(t.Blob||typeof Blob<"u"&&Blob)&&B.isSpecCompliantForm(I);if(!B.isFunction(g))throw new TypeError("visitor must be a function");function n(E){if(E===null)return"";if(B.isDate(E))return E.toISOString();if(!a&&B.isBlob(E))throw new l("Blob is not supported. Use a Buffer instead.");return B.isArrayBuffer(E)||B.isTypedArray(E)?a&&typeof Blob=="function"?new Blob([E]):Buffer.from(E):E}function C(E,c,u){let d=E;if(E&&!u&&typeof E=="object"){if(B.endsWith(c,"{}"))c=e?c:c.slice(0,-2),E=JSON.stringify(E);else if(B.isArray(E)&&zt(E)||(B.isFileList(E)||B.endsWith(c,"[]"))&&(d=B.toArray(E)))return c=lI(c),d.forEach(function(N,It){!(B.isUndefined(N)||N===null)&&I.append(r===!0?fI([c],It,i):r===null?c:c+"[]",n(N))}),!1}return UA(E)?!0:(I.append(fI(u,c,i),n(E)),!1)}let o=[],f=Object.assign(_t,{defaultVisitor:C,convertValue:n,isVisitable:UA});function Q(E,c){if(!B.isUndefined(E)){if(o.indexOf(E)!==-1)throw Error("Circular reference detected in "+c.join("."));o.push(E),B.forEach(E,function(d,R){(!(B.isUndefined(d)||d===null)&&g.call(I,d,B.isString(R)?R.trim():R,c,f))===!0&&Q(d,c?c.concat(R):[R])}),o.pop()}}if(!B.isObject(A))throw new TypeError("data must be an object");return Q(A),I}var L=vt;function DI(A){let I={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(e){return I[e]})}function uI(A,I){this._pairs=[],A&&L(A,this,I)}var hI=uI.prototype;hI.append=function(I,t){this._pairs.push([I,t])};hI.toString=function(I){let t=I?function(e){return I.call(this,e,DI)}:DI;return this._pairs.map(function(g){return t(g[0])+"="+t(g[1])},"").join("&")};var EA=uI;function $t(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function X(A,I,t){if(!I)return A;let e=t&&t.encode||$t,g=t&&t.serialize,i;if(g?i=g(I,t):i=B.isURLSearchParams(I)?I.toString():new EA(I,t).toString(e),i){let r=A.indexOf("%23");r!==-1&&(A=A.slice(0,r)),A+=(A.indexOf("?")===-1?"?":"&")+i}return A}var GA=class{constructor(){this.handlers=[]}use(I,t,e){return this.handlers.push({fulfilled:I,rejected:t,synchronous:e?e.synchronous:!1,runWhen:e?e.runWhen:null}),this.handlers.length-1}eject(I){this.handlers[I]&&(this.handlers[I]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(I){B.forEach(this.handlers,function(e){e!==null&&I(e)})}},kA=GA;var aA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var dI=typeof URLSearchParams<"u"?URLSearchParams:EA;var yI=typeof FormData<"u"?FormData:null;var wI=typeof Blob<"u"?Blob:null;var mI={isBrowser:!0,classes:{URLSearchParams:dI,FormData:yI,Blob:wI},protocols:["http","https","file","blob","url","data"]};var LA={};et(LA,{hasBrowserEnv:()=>pI,hasStandardBrowserEnv:()=>Ae,hasStandardBrowserWebWorkerEnv:()=>Ie});var pI=typeof window<"u"&&typeof document<"u",Ae=(A=>pI&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),Ie=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function";var w={...LA,...mI};function JA(A,I){return L(A,new w.classes.URLSearchParams,Object.assign({visitor:function(t,e,g,i){return w.isNode&&B.isBuffer(t)?(this.append(e,t.toString("base64")),!1):i.defaultVisitor.apply(this,arguments)}},I))}function te(A){return B.matchAll(/\\w+|\\[(\\w*)]/g,A).map(I=>I[0]==="[]"?"":I[1]||I[0])}function ee(A){let I={},t=Object.keys(A),e,g=t.length,i;for(e=0;e<g;e++)i=t[e],I[i]=A[i];return I}function ge(A){function I(t,e,g,i){let r=t[i++],s=Number.isFinite(+r),a=i>=t.length;return r=!r&&B.isArray(g)?g.length:r,a?(B.hasOwnProp(g,r)?g[r]=[g[r],e]:g[r]=e,!s):((!g[r]||!B.isObject(g[r]))&&(g[r]=[]),I(t,e,g[r],i)&&B.isArray(g[r])&&(g[r]=ee(g[r])),!s)}if(B.isFormData(A)&&B.isFunction(A.entries)){let t={};return B.forEachEntry(A,(e,g)=>{I(te(e),g,t,0)}),t}return null}var cA=ge;function re(A,I,t){if(B.isString(A))try{return(I||JSON.parse)(A),B.trim(A)}catch(e){if(e.name!=="SyntaxError")throw e}return(t||JSON.stringify)(A)}var HA={transitional:aA,adapter:["xhr","http"],transformRequest:[function(I,t){let e=t.getContentType()||"",g=e.indexOf("application/json")>-1,i=B.isObject(I);if(i&&B.isHTMLForm(I)&&(I=new FormData(I)),B.isFormData(I))return g&&g?JSON.stringify(cA(I)):I;if(B.isArrayBuffer(I)||B.isBuffer(I)||B.isStream(I)||B.isFile(I)||B.isBlob(I))return I;if(B.isArrayBufferView(I))return I.buffer;if(B.isURLSearchParams(I))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),I.toString();let s;if(i){if(e.indexOf("application/x-www-form-urlencoded")>-1)return JA(I,this.formSerializer).toString();if((s=B.isFileList(I))||e.indexOf("multipart/form-data")>-1){let a=this.env&&this.env.FormData;return L(s?{"files[]":I}:I,a&&new a,this.formSerializer)}}return i||g?(t.setContentType("application/json",!1),re(I)):I}],transformResponse:[function(I){let t=this.transitional||HA.transitional,e=t&&t.forcedJSONParsing,g=this.responseType==="json";if(I&&B.isString(I)&&(e&&!this.responseType||g)){let r=!(t&&t.silentJSONParsing)&&g;try{return JSON.parse(I)}catch(s){if(r)throw s.name==="SyntaxError"?l.from(s,l.ERR_BAD_RESPONSE,this,null,this.response):s}}return I}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:w.classes.FormData,Blob:w.classes.Blob},validateStatus:function(I){return I>=200&&I<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};B.forEach(["delete","get","head","post","put","patch"],A=>{HA.headers[A]={}});var O=HA;var ie=B.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),SI=A=>{let I={},t,e,g;return A&&A.split(`%0A`).forEach(function(r){g=r.indexOf(":"),t=r.substring(0,g).trim().toLowerCase(),e=r.substring(g+1).trim(),!(!t||I[t]&&ie[t])&&(t==="set-cookie"?I[t]?I[t].push(e):I[t]=[e]:I[t]=I[t]?I[t]+", "+e:e)}),I};var FI=Symbol("internals");function z(A){return A&&String(A).trim().toLowerCase()}function fA(A){return A===!1||A==null?A:B.isArray(A)?A.map(fA):String(A)}function oe(A){let I=Object.create(null),t=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,e;for(;e=t.exec(A);)I[e[1]]=e[2];return I}var Be=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function YA(A,I,t,e,g){if(B.isFunction(e))return e.call(this,I,t);if(g&&(I=t),!!B.isString(I)){if(B.isString(e))return I.indexOf(e)!==-1;if(B.isRegExp(e))return e.test(I)}}function Ce(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(I,t,e)=>t.toUpperCase()+e)}function se(A,I){let t=B.toCamelCase(" "+I);["get","set","has"].forEach(e=>{Object.defineProperty(A,e+t,{value:function(g,i,r){return this[e].call(this,I,g,i,r)},configurable:!0})})}var T=class{constructor(I){I&&this.set(I)}set(I,t,e){let g=this;function i(s,a,n){let C=z(a);if(!C)throw new Error("header name must be a non-empty string");let o=B.findKey(g,C);(!o||g[o]===void 0||n===!0||n===void 0&&g[o]!==!1)&&(g[o||a]=fA(s))}let r=(s,a)=>B.forEach(s,(n,C)=>i(n,C,a));return B.isPlainObject(I)||I instanceof this.constructor?r(I,t):B.isString(I)&&(I=I.trim())&&!Be(I)?r(SI(I),t):I!=null&&i(t,I,e),this}get(I,t){if(I=z(I),I){let e=B.findKey(this,I);if(e){let g=this[e];if(!t)return g;if(t===!0)return oe(g);if(B.isFunction(t))return t.call(this,g,e);if(B.isRegExp(t))return t.exec(g);throw new TypeError("parser must be boolean|regexp|function")}}}has(I,t){if(I=z(I),I){let e=B.findKey(this,I);return!!(e&&this[e]!==void 0&&(!t||YA(this,this[e],e,t)))}return!1}delete(I,t){let e=this,g=!1;function i(r){if(r=z(r),r){let s=B.findKey(e,r);s&&(!t||YA(e,e[s],s,t))&&(delete e[s],g=!0)}}return B.isArray(I)?I.forEach(i):i(I),g}clear(I){let t=Object.keys(this),e=t.length,g=!1;for(;e--;){let i=t[e];(!I||YA(this,this[i],i,I,!0))&&(delete this[i],g=!0)}return g}normalize(I){let t=this,e={};return B.forEach(this,(g,i)=>{let r=B.findKey(e,i);if(r){t[r]=fA(g),delete t[i];return}let s=I?Ce(i):String(i).trim();s!==i&&delete t[i],t[s]=fA(g),e[s]=!0}),this}concat(...I){return this.constructor.concat(this,...I)}toJSON(I){let t=Object.create(null);return B.forEach(this,(e,g)=>{e!=null&&e!==!1&&(t[g]=I&&B.isArray(e)?e.join(", "):e)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([I,t])=>I+": "+t).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(I){return I instanceof this?I:new this(I)}static concat(I,...t){let e=new this(I);return t.forEach(g=>e.set(g)),e}static accessor(I){let e=(this[FI]=this[FI]={accessors:{}}).accessors,g=this.prototype;function i(r){let s=z(r);e[s]||(se(g,r),e[s]=!0)}return B.isArray(I)?I.forEach(i):i(I),this}};T.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);B.reduceDescriptors(T.prototype,({value:A},I)=>{let t=I[0].toUpperCase()+I.slice(1);return{get:()=>A,set(e){this[t]=e}}});B.freezeMethods(T);var m=T;function _(A,I){let t=this||O,e=I||t,g=m.from(e.headers),i=e.data;return B.forEach(A,function(s){i=s.call(t,i,g.normalize(),I?I.status:void 0)}),g.normalize(),i}function v(A){return!!(A&&A.__CANCEL__)}function RI(A,I,t){l.call(this,A??"canceled",l.ERR_CANCELED,I,t),this.name="CanceledError"}B.inherits(RI,l,{__CANCEL__:!0});var J=RI;function bA(A,I,t){let e=t.config.validateStatus;!t.status||!e||e(t.status)?A(t):I(new l("Request failed with status code "+t.status,[l.ERR_BAD_REQUEST,l.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var NI=w.hasStandardBrowserEnv?{write(A,I,t,e,g,i){let r=[A+"="+encodeURIComponent(I)];B.isNumber(t)&&r.push("expires="+new Date(t).toGMTString()),B.isString(e)&&r.push("path="+e),B.isString(g)&&r.push("domain="+g),i===!0&&r.push("secure"),document.cookie=r.join("; ")},read(A){let I=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return I?decodeURIComponent(I[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function MA(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function qA(A,I){return I?A.replace(/\\/+$/,"")+"/"+I.replace(/^\\/+/,""):A}function $(A,I){return A&&!MA(I)?qA(A,I):I}var UI=w.hasStandardBrowserEnv?function(){let I=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),e;function g(i){let r=i;return I&&(t.setAttribute("href",r),r=t.href),t.setAttribute("href",r),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\\?/,""):"",hash:t.hash?t.hash.replace(/^%23/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return e=g(window.location.href),function(r){let s=B.isString(r)?g(r):r;return s.protocol===e.protocol&&s.host===e.host}}():function(){return function(){return!0}}();function KA(A){let I=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return I&&I[1]||""}function Qe(A,I){A=A||10;let t=new Array(A),e=new Array(A),g=0,i=0,r;return I=I!==void 0?I:1e3,function(a){let n=Date.now(),C=e[i];r||(r=n),t[g]=a,e[g]=n;let o=i,f=0;for(;o!==g;)f+=t[o++],o=o%A;if(g=(g+1)%A,g===i&&(i=(i+1)%A),n-r<I)return;let Q=C&&n-C;return Q?Math.round(f*1e3/Q):void 0}}var GI=Qe;function kI(A,I){let t=0,e=GI(50,250);return g=>{let i=g.loaded,r=g.lengthComputable?g.total:void 0,s=i-t,a=e(s),n=i<=r;t=i;let C={loaded:i,total:r,progress:r?i/r:void 0,bytes:s,rate:a||void 0,estimated:a&&r&&n?(r-i)/a:void 0,event:g};C[I?"download":"upload"]=!0,A(C)}}var ne=typeof XMLHttpRequest<"u",LI=ne&&function(A){return new Promise(function(t,e){let g=A.data,i=m.from(A.headers).normalize(),{responseType:r,withXSRFToken:s}=A,a;function n(){A.cancelToken&&A.cancelToken.unsubscribe(a),A.signal&&A.signal.removeEventListener("abort",a)}let C;if(B.isFormData(g)){if(w.hasStandardBrowserEnv||w.hasStandardBrowserWebWorkerEnv)i.setContentType(!1);else if((C=i.getContentType())!==!1){let[c,...u]=C?C.split(";").map(d=>d.trim()).filter(Boolean):[];i.setContentType([c||"multipart/form-data",...u].join("; "))}}let o=new XMLHttpRequest;if(A.auth){let c=A.auth.username||"",u=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";i.set("Authorization","Basic "+btoa(c+":"+u))}let f=$(A.baseURL,A.url);o.open(A.method.toUpperCase(),X(f,A.params,A.paramsSerializer),!0),o.timeout=A.timeout;function Q(){if(!o)return;let c=m.from("getAllResponseHeaders"in o&&o.getAllResponseHeaders()),d={data:!r||r==="text"||r==="json"?o.responseText:o.response,status:o.status,statusText:o.statusText,headers:c,config:A,request:o};bA(function(N){t(N),n()},function(N){e(N),n()},d),o=null}if("onloadend"in o?o.onloadend=Q:o.onreadystatechange=function(){!o||o.readyState!==4||o.status===0&&!(o.responseURL&&o.responseURL.indexOf("file:")===0)||setTimeout(Q)},o.onabort=function(){o&&(e(new l("Request aborted",l.ECONNABORTED,A,o)),o=null)},o.onerror=function(){e(new l("Network Error",l.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let u=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",d=A.transitional||aA;A.timeoutErrorMessage&&(u=A.timeoutErrorMessage),e(new l(u,d.clarifyTimeoutError?l.ETIMEDOUT:l.ECONNABORTED,A,o)),o=null},w.hasStandardBrowserEnv&&(s&&B.isFunction(s)&&(s=s(A)),s||s!==!1&&UI(f))){let c=A.xsrfHeaderName&&A.xsrfCookieName&&NI.read(A.xsrfCookieName);c&&i.set(A.xsrfHeaderName,c)}g===void 0&&i.setContentType(null),"setRequestHeader"in o&&B.forEach(i.toJSON(),function(u,d){o.setRequestHeader(d,u)}),B.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),r&&r!=="json"&&(o.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&o.addEventListener("progress",kI(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&o.upload&&o.upload.addEventListener("progress",kI(A.onUploadProgress)),(A.cancelToken||A.signal)&&(a=c=>{o&&(e(!c||c.type?new J(null,A,o):c),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(a),A.signal&&(A.signal.aborted?a():A.signal.addEventListener("abort",a)));let E=KA(f);if(E&&w.protocols.indexOf(E)===-1){e(new l("Unsupported protocol "+E+":",l.ERR_BAD_REQUEST,A));return}o.send(g||null)})};var OA={http:nA,xhr:LI};B.forEach(OA,(A,I)=>{if(A){try{Object.defineProperty(A,"name",{value:I})}catch{}Object.defineProperty(A,"adapterName",{value:I})}});var JI=A=>`- ${A}`,Ee=A=>B.isFunction(A)||A===null||A===!1,lA={getAdapter:A=>{A=B.isArray(A)?A:[A];let{length:I}=A,t,e,g={};for(let i=0;i<I;i++){t=A[i];let r;if(e=t,!Ee(t)&&(e=OA[(r=String(t)).toLowerCase()],e===void 0))throw new l(`Unknown adapter \'${r}\'`);if(e)break;g[r||"%23"+i]=e}if(!e){let i=Object.entries(g).map(([s,a])=>`adapter ${s} `+(a===!1?"is not supported by the environment":"is not available in the build")),r=I?i.length>1?`since :%0A`+i.map(JI).join(`%0A`):" "+JI(i[0]):"as no adapter specified";throw new l("There is no suitable adapter to dispatch the request "+r,"ERR_NOT_SUPPORT")}return e},adapters:OA};function TA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new J(null,A)}function DA(A){return TA(A),A.headers=m.from(A.headers),A.data=_.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),lA.getAdapter(A.adapter||O.adapter)(A).then(function(e){return TA(A),e.data=_.call(A,A.transformResponse,e),e.headers=m.from(e.headers),e},function(e){return v(e)||(TA(A),e&&e.response&&(e.response.data=_.call(A,A.transformResponse,e.response),e.response.headers=m.from(e.response.headers))),Promise.reject(e)})}var HI=A=>A instanceof m?A.toJSON():A;function G(A,I){I=I||{};let t={};function e(n,C,o){return B.isPlainObject(n)&&B.isPlainObject(C)?B.merge.call({caseless:o},n,C):B.isPlainObject(C)?B.merge({},C):B.isArray(C)?C.slice():C}function g(n,C,o){if(B.isUndefined(C)){if(!B.isUndefined(n))return e(void 0,n,o)}else return e(n,C,o)}function i(n,C){if(!B.isUndefined(C))return e(void 0,C)}function r(n,C){if(B.isUndefined(C)){if(!B.isUndefined(n))return e(void 0,n)}else return e(void 0,C)}function s(n,C,o){if(o in I)return e(n,C);if(o in A)return e(void 0,n)}let a={url:i,method:i,data:i,baseURL:r,transformRequest:r,transformResponse:r,paramsSerializer:r,timeout:r,timeoutMessage:r,withCredentials:r,withXSRFToken:r,adapter:r,responseType:r,xsrfCookieName:r,xsrfHeaderName:r,onUploadProgress:r,onDownloadProgress:r,decompress:r,maxContentLength:r,maxBodyLength:r,beforeRedirect:r,transport:r,httpAgent:r,httpsAgent:r,cancelToken:r,socketPath:r,responseEncoding:r,validateStatus:s,headers:(n,C)=>g(HI(n),HI(C),!0)};return B.forEach(Object.keys(Object.assign({},A,I)),function(C){let o=a[C]||g,f=o(A[C],I[C],C);B.isUndefined(f)&&o!==s||(t[C]=f)}),t}var uA="1.6.2";var xA={};["object","boolean","number","function","string","symbol"].forEach((A,I)=>{xA[A]=function(e){return typeof e===A||"a"+(I<1?"n ":" ")+A}});var YI={};xA.transitional=function(I,t,e){function g(i,r){return"[Axios v"+uA+"] Transitional option \'"+i+"\'"+r+(e?". "+e:"")}return(i,r,s)=>{if(I===!1)throw new l(g(r," has been removed"+(t?" in "+t:"")),l.ERR_DEPRECATED);return t&&!YI[r]&&(YI[r]=!0,console.warn(g(r," has been deprecated since v"+t+" and will be removed in the near future"))),I?I(i,r,s):!0}};function ae(A,I,t){if(typeof A!="object")throw new l("options must be an object",l.ERR_BAD_OPTION_VALUE);let e=Object.keys(A),g=e.length;for(;g-- >0;){let i=e[g],r=I[i];if(r){let s=A[i],a=s===void 0||r(s,i,A);if(a!==!0)throw new l("option "+i+" must be "+a,l.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new l("Unknown option "+i,l.ERR_BAD_OPTION)}}var hA={assertOptions:ae,validators:xA};var H=hA.validators,x=class{constructor(I){this.defaults=I,this.interceptors={request:new kA,response:new kA}}request(I,t){typeof I=="string"?(t=t||{},t.url=I):t=I||{},t=G(this.defaults,t);let{transitional:e,paramsSerializer:g,headers:i}=t;e!==void 0&&hA.assertOptions(e,{silentJSONParsing:H.transitional(H.boolean),forcedJSONParsing:H.transitional(H.boolean),clarifyTimeoutError:H.transitional(H.boolean)},!1),g!=null&&(B.isFunction(g)?t.paramsSerializer={serialize:g}:hA.assertOptions(g,{encode:H.function,serialize:H.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let r=i&&B.merge(i.common,i[t.method]);i&&B.forEach(["delete","get","head","post","put","patch","common"],E=>{delete i[E]}),t.headers=m.concat(r,i);let s=[],a=!0;this.interceptors.request.forEach(function(c){typeof c.runWhen=="function"&&c.runWhen(t)===!1||(a=a&&c.synchronous,s.unshift(c.fulfilled,c.rejected))});let n=[];this.interceptors.response.forEach(function(c){n.push(c.fulfilled,c.rejected)});let C,o=0,f;if(!a){let E=[DA.bind(this),void 0];for(E.unshift.apply(E,s),E.push.apply(E,n),f=E.length,C=Promise.resolve(t);o<f;)C=C.then(E[o++],E[o++]);return C}f=s.length;let Q=t;for(o=0;o<f;){let E=s[o++],c=s[o++];try{Q=E(Q)}catch(u){c.call(this,u);break}}try{C=DA.call(this,Q)}catch(E){return Promise.reject(E)}for(o=0,f=n.length;o<f;)C=C.then(n[o++],n[o++]);return C}getUri(I){I=G(this.defaults,I);let t=$(I.baseURL,I.url);return X(t,I.params,I.paramsSerializer)}};B.forEach(["delete","get","head","options"],function(I){x.prototype[I]=function(t,e){return this.request(G(e||{},{method:I,url:t,data:(e||{}).data}))}});B.forEach(["post","put","patch"],function(I){function t(e){return function(i,r,s){return this.request(G(s||{},{method:I,headers:e?{"Content-Type":"multipart/form-data"}:{},url:i,data:r}))}}x.prototype[I]=t(),x.prototype[I+"Form"]=t(!0)});var AA=x;var PA=class A{constructor(I){if(typeof I!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(i){t=i});let e=this;this.promise.then(g=>{if(!e._listeners)return;let i=e._listeners.length;for(;i-- >0;)e._listeners[i](g);e._listeners=null}),this.promise.then=g=>{let i,r=new Promise(s=>{e.subscribe(s),i=s}).then(g);return r.cancel=function(){e.unsubscribe(i)},r},I(function(i,r,s){e.reason||(e.reason=new J(i,r,s),t(e.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(I){if(this.reason){I(this.reason);return}this._listeners?this._listeners.push(I):this._listeners=[I]}unsubscribe(I){if(!this._listeners)return;let t=this._listeners.indexOf(I);t!==-1&&this._listeners.splice(t,1)}static source(){let I;return{token:new A(function(g){I=g}),cancel:I}}},bI=PA;function jA(A){return function(t){return A.apply(null,t)}}function WA(A){return B.isObject(A)&&A.isAxiosError===!0}var ZA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(ZA).forEach(([A,I])=>{ZA[I]=A});var MI=ZA;function qI(A){let I=new AA(A),t=W(AA.prototype.request,I);return B.extend(t,AA.prototype,I,{allOwnKeys:!0}),B.extend(t,I,null,{allOwnKeys:!0}),t.create=function(g){return qI(G(A,g))},t}var h=qI(O);h.Axios=AA;h.CanceledError=J;h.CancelToken=bI;h.isCancel=v;h.VERSION=uA;h.toFormData=L;h.AxiosError=l;h.Cancel=h.CanceledError;h.all=function(I){return Promise.all(I)};h.spread=jA;h.isAxiosError=WA;h.mergeConfig=G;h.AxiosHeaders=m;h.formToJSON=A=>cA(B.isHTMLForm(A)?new FormData(A):A);h.getAdapter=lA.getAdapter;h.HttpStatusCode=MI;h.default=h;var dA=h;var{Axios:oi,AxiosError:Bi,CanceledError:Ci,isCancel:si,CancelToken:Qi,VERSION:ni,all:Ei,Cancel:ai,isAxiosError:ci,spread:fi,toFormData:li,AxiosHeaders:Di,HttpStatusCode:ui,formToJSON:hi,getAdapter:di,mergeConfig:yi}=dA;var IA,k,XA,VA={env:{emscripten_notify_memory_growth:function(A){XA=new Uint8Array(k.exports.memory.buffer)}}},yA=class{init(){return IA||(typeof fetch<"u"?IA=fetch("data:application/wasm;base64,"+KI).then(I=>I.arrayBuffer()).then(I=>WebAssembly.instantiate(I,VA)).then(this._init):IA=WebAssembly.instantiate(Buffer.from(KI,"base64"),VA).then(this._init),IA)}_init(I){k=I.instance,VA.env.emscripten_notify_memory_growth(0)}decode(I,t=0){if(!k)throw new Error("ZSTDDecoder: Await .init() before decoding.");let e=I.byteLength,g=k.exports.malloc(e);XA.set(I,g),t=t||Number(k.exports.ZSTD_findDecompressedSize(g,e));let i=k.exports.malloc(t),r=k.exports.ZSTD_decompress(i,t,g,e),s=XA.slice(i,i+r);return k.exports.free(g),k.exports.free(i),s}},KI="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var OI=new yA,TI=!1;async function ce(A,I){let t=null;typeof A!="string"?t=A.href:A.startsWith("http")?t=A:t=`${I}/${A}`,t.endsWith(".js")&&(t=t.substring(0,t.length-3)),t.endsWith(".wasm")&&(t=t.substring(0,t.length-5));let e=`${t}.wasm`,g=await dA.get(`${e}.zst`,{responseType:"arraybuffer"});TI||(await OI.init(),TI=!0);let r=OI.decode(new Uint8Array(g.data)).buffer;return(await import(`${t}.js`)).default({wasmBinary:r})}var xI=ce;var wA=new Map;async function fe(A,I){let t=A,e=A,g=null;return typeof A!="string"&&(t=new URL(A.href),e=t.href),wA.has(e)||wA.set(e,await xI(t,I)),g=wA.get(e),g}var PI=fe;var le={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",Mesh:"Mesh",PolyData:"PolyData",JsonCompatible:"JsonCompatible"},D=le;var De={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},p=De;var ue={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},P=ue;function he(A,I){let t=null;switch(A){case p.UInt8:{t=new Uint8Array(I);break}case p.Int8:{t=new Int8Array(I);break}case p.UInt16:{t=new Uint16Array(I);break}case p.Int16:{t=new Int16Array(I);break}case p.UInt32:{t=new Uint32Array(I);break}case p.Int32:{t=new Int32Array(I);break}case p.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(I):t=new Uint8Array(I);break}case p.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(I):t=new Uint8Array(I);break}case P.Float32:{t=new Float32Array(I);break}case P.Float64:{t=new Float64Array(I);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var Y=he;var ZI=typeof globalThis.SharedArrayBuffer=="function",jI=new TextEncoder,WI=new TextDecoder("utf-8");function de(A,I){let t={flags:"r",encoding:"binary"},e=A.fs_open(I,t.flags),i=A.fs_stat(I).size,r=null;ZI?r=new SharedArrayBuffer(i):r=new ArrayBuffer(i);let s=new Uint8Array(r);return A.fs_read(e,s,0,i,0),A.fs_close(e),s}function VI(A,I,t){let e=null;ZI?e=new SharedArrayBuffer(t):e=new ArrayBuffer(t);let g=new Uint8Array(e),i=new Uint8Array(A.HEAPU8.buffer,I,t);return g.set(i),g}function y(A,I,t,e){let g=0;return I!==null&&(g=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,e,I.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(I.buffer),g)),g}function j(A,I,t){let e=JSON.stringify(I),g=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,e.length]);A.writeAsciiToMemory(e,g,!1)}function S(A,I,t,e){let g=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,I,t]),i=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,I,t]),r=VI(A,g,i);return Y(e,r.buffer)}function zA(A,I){let t=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,I]),e=A.AsciiToString(t);return JSON.parse(e)}function ye(A,I,t,e){e!=null&&e.length>0&&e.forEach(function(n,C){switch(n.type){case D.TextStream:{let o=jI.encode(n.data.data),f=y(A,o,C,0),Q={size:o.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};j(A,Q,C);break}case D.JsonCompatible:{let o=jI.encode(JSON.stringify(n.data)),f=y(A,o,C,0),Q={size:o.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};j(A,Q,C);break}case D.BinaryStream:{let o=n.data.data,f=y(A,o,C,0),Q={size:o.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};j(A,Q,C);break}case D.TextFile:{A.fs_writeFile(n.data.path,n.data.data);break}case D.BinaryFile:{A.fs_writeFile(n.data.path,n.data.data);break}case D.Image:{let o=n.data,f=y(A,o.data,C,0),Q=y(A,o.direction,C,1),E=typeof o.metadata?.entries<"u"?JSON.stringify(Array.from(o.metadata.entries())):"[]",c={imageType:o.imageType,name:o.name,origin:o.origin,spacing:o.spacing,direction:`data:application/vnd.itk.address,0:${Q}`,size:o.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:E};j(A,c,C);break}case D.Mesh:{let o=n.data,f=y(A,o.points,C,0),Q=y(A,o.cells,C,1),E=y(A,o.pointData,C,2),c=y(A,o.cellData,C,3),u={meshType:o.meshType,name:o.name,numberOfPoints:o.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:o.numberOfCells,cells:`data:application/vnd.itk.address,0:${Q}`,cellBufferSize:o.cellBufferSize,numberOfPointPixels:o.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${E}`,numberOfCellPixels:o.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${c}`};j(A,u,C);break}case D.PolyData:{let o=n.data,f=y(A,o.points,C,0),Q=y(A,o.vertices,C,1),E=y(A,o.lines,C,2),c=y(A,o.polygons,C,3),u=y(A,o.triangleStrips,C,4),d=y(A,o.pointData,C,5),R=y(A,o.pointData,C,6),N={polyDataType:o.polyDataType,name:o.name,numberOfPoints:o.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:o.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${Q}`,linesBufferSize:o.linesBufferSize,lines:`data:application/vnd.itk.address,0:${E}`,polygonsBufferSize:o.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${c}`,triangleStripsBufferSize:o.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${u}`,numberOfPointPixels:o.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${d}`,numberOfCellPixels:o.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${R}`};j(A,N,C);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let g=A.stackSave(),i=0;try{i=A.callMain(I.slice())}catch(n){throw typeof n=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(n)):console.error("Build module in Debug mode for exception message information.")),n}finally{A.stackRestore(g)}let r=A.getModuleStdout(),s=A.getModuleStderr(),a=[];return t!=null&&t.length>0&&i===0&&t.forEach(function(n,C){let o=null;switch(n.type){case D.TextStream:{let Q=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,C,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,C,0]),c=new Uint8Array(A.HEAPU8.buffer,Q,E);o={data:WI.decode(c)};break}case D.JsonCompatible:{let Q=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,C,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,C,0]),c=new Uint8Array(A.HEAPU8.buffer,Q,E);o=JSON.parse(WI.decode(c));break}case D.BinaryStream:{let Q=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,C,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,C,0]);o={data:VI(A,Q,E)};break}case D.TextFile:{o={path:n.data.path,data:A.fs_readFile(n.data.path,{encoding:"utf8"})};break}case D.BinaryFile:{o={path:n.data.path,data:de(A,n.data.path)};break}case D.Image:{let Q=zA(A,C);Q.data=S(A,C,0,Q.imageType.componentType),Q.direction=S(A,C,1,P.Float64),Q.metadata=new Map(Q.metadata),o=Q;break}case D.Mesh:{let Q=zA(A,C);Q.numberOfPoints>0?Q.points=S(A,C,0,Q.meshType.pointComponentType):Q.points=Y(Q.meshType.pointComponentType,new ArrayBuffer(0)),Q.numberOfCells>0?Q.cells=S(A,C,1,Q.meshType.cellComponentType):Q.cells=Y(Q.meshType.cellComponentType,new ArrayBuffer(0)),Q.numberOfPointPixels>0?Q.pointData=S(A,C,2,Q.meshType.pointPixelComponentType):Q.pointData=Y(Q.meshType.pointPixelComponentType,new ArrayBuffer(0)),Q.numberOfCellPixels>0?Q.cellData=S(A,C,3,Q.meshType.cellPixelComponentType):Q.cellData=Y(Q.meshType.cellPixelComponentType,new ArrayBuffer(0)),o=Q;break}case D.PolyData:{let Q=zA(A,C);Q.numberOfPoints>0?Q.points=S(A,C,0,P.Float32):Q.points=new Float32Array,Q.verticesBufferSize>0?Q.vertices=S(A,C,1,p.UInt32):Q.vertices=new Uint32Array,Q.linesBufferSize>0?Q.lines=S(A,C,2,p.UInt32):Q.lines=new Uint32Array,Q.polygonsBufferSize>0?Q.polygons=S(A,C,3,p.UInt32):Q.polygons=new Uint32Array,Q.triangleStripsBufferSize>0?Q.triangleStrips=S(A,C,4,p.UInt32):Q.triangleStrips=new Uint32Array,Q.numberOfPointPixels>0?Q.pointData=S(A,C,5,Q.polyDataType.pointPixelComponentType):Q.pointData=Y(Q.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),Q.numberOfCellPixels>0?Q.cellData=S(A,C,6,Q.polyDataType.cellPixelComponentType):Q.cellData=Y(Q.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),o=Q;break}default:throw Error("Unsupported output InterfaceType")}let f={type:n.type,data:o};a.push(f)}),{returnValue:i,stdout:r,stderr:s,outputs:a}}var XI=ye;var we=typeof globalThis.SharedArrayBuffer<"u";function me(A){if(A==null)return[];let I=[];for(let t=0;t<A.length;t++){let e=pe(A[t]);e!==null&&I.push(e)}return I}function pe(A){if(A==null)return null;let I=null;return A.buffer!==void 0?I=A.buffer:A.byteLength!==void 0&&(I=A),we&&I instanceof SharedArrayBuffer?null:I}var zI=me;function Se(A){return[A.data,A.direction]}var _I=Se;function Fe(A){return[A.points,A.pointData,A.cells,A.cellData]}var vI=Fe;function Re(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var $I=Re;async function Ne(A,I,t,e){let g=XI(A,I,t,e),i=[];return g.outputs.forEach(function(r){if(r.type===D.BinaryStream||r.type===D.BinaryFile){let s=r.data;i.push(s)}else if(r.type===D.Image){let s=r.data;i.push(..._I(s))}else if(r.type===D.Mesh){let s=r.data;i.push(...vI(s))}else if(r.type===D.PolyData){let s=r.data;i.push(...$I(s))}}),SA(g,zI(i))}var At=Ne;var Ue={runPipeline:async function(A,I,t,e,g){let i=await PI(A,I);return await At(i,t,e,g)}};oA(Ue);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';pr(mr);export{JA as bioRadReadImage,LA as bioRadWriteImage,kA as bmpReadImage,DA as bmpWriteImage,$A as fdfReadImage,nn as fdfWriteImage,VA as gdcmReadImage,_A as gdcmWriteImage,KA as ge4ReadImage,jA as ge4WriteImage,vA as ge5ReadImage,zA as ge5WriteImage,YA as geAdwReadImage,qA as geAdwWriteImage,E as getPipelineWorkerUrl,C as getPipelinesBaseUrl,MA as giplReadImage,HA as giplWriteImage,FA as hdf5ReadImage,UA as hdf5WriteImage,QA as jpegReadImage,yA as jpegWriteImage,OA as lsmReadImage,xA as lsmWriteImage,fA as metaReadImage,cA as metaWriteImage,GA as mghReadImage,TA as mghWriteImage,SA as mincReadImage,NA as mincWriteImage,WA as mrcReadImage,PA as mrcWriteImage,CA as niftiReadImage,EA as niftiWriteImage,hA as nrrdReadImage,wA as nrrdWriteImage,uA as pngReadImage,mA as pngWriteImage,it as readImage,An as readImageFileSeries,to as readImageHttp,ZA as scancoReadImage,XA as scancoWriteImage,pr as setPipelineWorkerUrl,Cg as setPipelinesBaseUrl,BA as tiffReadImage,dA as tiffWriteImage,RA as vtkReadImage,bA as vtkWriteImage,et as wasmReadImage,At as wasmWriteImage,tt as wasmZstdReadImage,rt as wasmZstdWriteImage,rn as writeImage};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
