# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import registry_pb2 as registry__pb2


class RegistryServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Register = channel.unary_unary(
        '/registry.RegistryService/Register',
        request_serializer=registry__pb2.RegisterReq.SerializeToString,
        response_deserializer=registry__pb2.RegisterRes.FromString,
        )
    self.Instances = channel.unary_unary(
        '/registry.RegistryService/Instances',
        request_serializer=registry__pb2.InstancesReq.SerializeToString,
        response_deserializer=registry__pb2.InstancesRes.FromString,
        )


class RegistryServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Register(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Instances(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RegistryServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Register': grpc.unary_unary_rpc_method_handler(
          servicer.Register,
          request_deserializer=registry__pb2.RegisterReq.FromString,
          response_serializer=registry__pb2.RegisterRes.SerializeToString,
      ),
      'Instances': grpc.unary_unary_rpc_method_handler(
          servicer.Instances,
          request_deserializer=registry__pb2.InstancesReq.FromString,
          response_serializer=registry__pb2.InstancesRes.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'registry.RegistryService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
