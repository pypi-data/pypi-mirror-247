AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Cognito User Pool Substack

Parameters:
  RootStackName:
    Description: root stack domain name
    Type: String
  DomainName:
    Description: domain name
    Type: String
  AuthSubdomain:
    Default: auth
    Description: user pool domain name
    Type: String

Outputs:
  CognitoClientId:
    Description: "ID of the Cognito User Pool Client"
    Value: !Ref UserPoolClient
  CognitoHostedUiUrl:
    Value: !Sub 'https://${AuthSubdomain}.${DomainName}/oauth2/authorize?client_id=${UserPoolClient}&response_type=code&scope=email+openid&redirect_uri=https://${DomainName}/redirect'
    Description: The hosted UI URL
  Certificate:
    Description: "domain certificate"
    Value: !Ref Certificate
    Export:
      Name: !Sub 'Certificate-UserPoolSubstack-${RootStackName}'
  UserPoolArn:
    Description: "Arn of the Cognito User Pool"
    Value: !GetAtt UserPool.Arn
    Export:
      Name: !Sub 'UserPoolArn-UserPoolSubstack-${RootStackName}'

Resources:
  Certificate: 
    Type: "AWS::CertificateManager::Certificate"
    Properties: 
      DomainName: !Sub '*.${DomainName}'
      ValidationMethod: DNS
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub 'UserPool-UserPoolSubstack-${RootStackName}'
      UsernameConfiguration: 
        CaseSensitive: false
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false
  UserPoolDomain:
    DependsOn:
      - Certificate
      - UserPool
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId: !Ref UserPool
      Domain: !Sub '${AuthSubdomain}.${DomainName}'
      CustomDomainConfig: 
        CertificateArn: !Ref Certificate
  UserPoolDNS:
    DependsOn: UserPoolDomain
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Sub "${DomainName}."
      Name: !Sub "${AuthSubdomain}.${DomainName}."
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName: !GetAtt UserPoolDomain.CloudFrontDistribution
        EvaluateTargetHealth: false
  UserPoolClient:
    DependsOn: UserPool
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      IdTokenValidity: 240 # hours
      AccessTokenValidity: 240 # hours
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      AllowedOAuthFlowsUserPoolClient: true
      CallbackURLs:
        - !Sub 'https://${DomainName}/user/signin-redirect.html'
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthScopes:
        - email
        - openid
      SupportedIdentityProviders:
        - COGNITO
