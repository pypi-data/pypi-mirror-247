# coding: utf-8

"""
    Carrier API

    **Seaplane Global Messaging Service**  For information about authentication see [authentication](/docs/authentication)   # noqa: E501

    The version of the OpenAPI document: 1.0.0-beta
    Contact: support@seaplane.io
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from seaplane_framework.api import schemas  # noqa: F401


class CarrierStreamDetails(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Stream details
    """


    class MetaOapg:
        
        class properties:
            creation_ts = schemas.IntSchema
            stored_messages = schemas.IntSchema
            stored_messages_size = schemas.IntSchema
            first_message_seq = schemas.IntSchema
            first_message_ts = schemas.IntSchema
            last_message_seq = schemas.IntSchema
            last_message_ts = schemas.IntSchema
            
            
            class subjects(
                schemas.DictSchema
            ):
            
            
                class MetaOapg:
                    additional_properties = schemas.IntSchema
                
                def __getitem__(self, name: typing.Union[str, ]) -> MetaOapg.additional_properties:
                    # dict_instance[name] accessor
                    return super().__getitem__(name)
                
                def get_item_oapg(self, name: typing.Union[str, ]) -> MetaOapg.additional_properties:
                    return super().get_item_oapg(name)
            
                def __new__(
                    cls,
                    *_args: typing.Union[dict, frozendict.frozendict, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                    **kwargs: typing.Union[MetaOapg.additional_properties, decimal.Decimal, int, ],
                ) -> 'subjects':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                        **kwargs,
                    )
            __annotations__ = {
                "creation_ts": creation_ts,
                "stored_messages": stored_messages,
                "stored_messages_size": stored_messages_size,
                "first_message_seq": first_message_seq,
                "first_message_ts": first_message_ts,
                "last_message_seq": last_message_seq,
                "last_message_ts": last_message_ts,
                "subjects": subjects,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creation_ts"]) -> MetaOapg.properties.creation_ts: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stored_messages"]) -> MetaOapg.properties.stored_messages: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stored_messages_size"]) -> MetaOapg.properties.stored_messages_size: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_message_seq"]) -> MetaOapg.properties.first_message_seq: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_message_ts"]) -> MetaOapg.properties.first_message_ts: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["last_message_seq"]) -> MetaOapg.properties.last_message_seq: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["last_message_ts"]) -> MetaOapg.properties.last_message_ts: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subjects"]) -> MetaOapg.properties.subjects: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["creation_ts"], typing_extensions.Literal["stored_messages"], typing_extensions.Literal["stored_messages_size"], typing_extensions.Literal["first_message_seq"], typing_extensions.Literal["first_message_ts"], typing_extensions.Literal["last_message_seq"], typing_extensions.Literal["last_message_ts"], typing_extensions.Literal["subjects"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creation_ts"]) -> typing.Union[MetaOapg.properties.creation_ts, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stored_messages"]) -> typing.Union[MetaOapg.properties.stored_messages, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stored_messages_size"]) -> typing.Union[MetaOapg.properties.stored_messages_size, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_message_seq"]) -> typing.Union[MetaOapg.properties.first_message_seq, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_message_ts"]) -> typing.Union[MetaOapg.properties.first_message_ts, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["last_message_seq"]) -> typing.Union[MetaOapg.properties.last_message_seq, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["last_message_ts"]) -> typing.Union[MetaOapg.properties.last_message_ts, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subjects"]) -> typing.Union[MetaOapg.properties.subjects, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["creation_ts"], typing_extensions.Literal["stored_messages"], typing_extensions.Literal["stored_messages_size"], typing_extensions.Literal["first_message_seq"], typing_extensions.Literal["first_message_ts"], typing_extensions.Literal["last_message_seq"], typing_extensions.Literal["last_message_ts"], typing_extensions.Literal["subjects"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        creation_ts: typing.Union[MetaOapg.properties.creation_ts, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        stored_messages: typing.Union[MetaOapg.properties.stored_messages, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        stored_messages_size: typing.Union[MetaOapg.properties.stored_messages_size, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        first_message_seq: typing.Union[MetaOapg.properties.first_message_seq, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        first_message_ts: typing.Union[MetaOapg.properties.first_message_ts, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        last_message_seq: typing.Union[MetaOapg.properties.last_message_seq, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        last_message_ts: typing.Union[MetaOapg.properties.last_message_ts, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        subjects: typing.Union[MetaOapg.properties.subjects, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'CarrierStreamDetails':
        return super().__new__(
            cls,
            *_args,
            creation_ts=creation_ts,
            stored_messages=stored_messages,
            stored_messages_size=stored_messages_size,
            first_message_seq=first_message_seq,
            first_message_ts=first_message_ts,
            last_message_seq=last_message_seq,
            last_message_ts=last_message_ts,
            subjects=subjects,
            _configuration=_configuration,
        )
