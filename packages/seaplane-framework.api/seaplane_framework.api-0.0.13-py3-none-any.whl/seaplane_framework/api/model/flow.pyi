# coding: utf-8

"""
    Carrier API

    **Seaplane Global Messaging Service**  For information about authentication see [authentication](/docs/authentication)   # noqa: E501

    The version of the OpenAPI document: 1.0.0-beta
    Contact: support@seaplane.io
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from seaplane_framework.api import schemas  # noqa: F401


class Flow(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    defines model for Flow
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def input() -> typing.Type['Input']:
                return Input
        
            @staticmethod
            def processor() -> typing.Type['Processor']:
                return Processor
        
            @staticmethod
            def output() -> typing.Type['Output']:
                return Output
            
            
            class replicas(
                schemas.IntSchema
            ):
                pass
            __annotations__ = {
                "input": input,
                "processor": processor,
                "output": output,
                "replicas": replicas,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["input"]) -> 'Input': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["processor"]) -> 'Processor': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["output"]) -> 'Output': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["replicas"]) -> MetaOapg.properties.replicas: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["input"], typing_extensions.Literal["processor"], typing_extensions.Literal["output"], typing_extensions.Literal["replicas"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["input"]) -> typing.Union['Input', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["processor"]) -> typing.Union['Processor', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["output"]) -> typing.Union['Output', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["replicas"]) -> typing.Union[MetaOapg.properties.replicas, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["input"], typing_extensions.Literal["processor"], typing_extensions.Literal["output"], typing_extensions.Literal["replicas"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        input: typing.Union['Input', schemas.Unset] = schemas.unset,
        processor: typing.Union['Processor', schemas.Unset] = schemas.unset,
        output: typing.Union['Output', schemas.Unset] = schemas.unset,
        replicas: typing.Union[MetaOapg.properties.replicas, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'Flow':
        return super().__new__(
            cls,
            *_args,
            input=input,
            processor=processor,
            output=output,
            replicas=replicas,
            _configuration=_configuration,
        )

from seaplane_framework.api.model.input import Input
from seaplane_framework.api.model.output import Output
from seaplane_framework.api.model.processor import Processor
