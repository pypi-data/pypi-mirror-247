# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetDataPersistenceResult',
    'AwaitableGetDataPersistenceResult',
    'get_data_persistence',
]

@pulumi.output_type
class GetDataPersistenceResult:
    """
    A collection of values returned by getDataPersistence.
    """
    def __init__(__self__, data_persistences=None, id=None):
        if data_persistences and not isinstance(data_persistences, list):
            raise TypeError("Expected argument 'data_persistences' to be a list")
        pulumi.set(__self__, "data_persistences", data_persistences)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="dataPersistences")
    def data_persistences(self) -> Sequence['outputs.GetDataPersistenceDataPersistenceResult']:
        """
        A list of data persistence option that can be applied to subscription databases
        """
        return pulumi.get(self, "data_persistences")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetDataPersistenceResult(GetDataPersistenceResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDataPersistenceResult(
            data_persistences=self.data_persistences,
            id=self.id)


def get_data_persistence(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDataPersistenceResult:
    """
    The data persistence data source allows access to a list of supported data persistence options.\\
    Each option represents the rate at which a database will persist its data to storage.

    ## Example Usage

    The following example returns all of the data persistence options available within your Redis Enterprise Cloud account.

    ```python
    import pulumi
    import pulumi_rediscloud as rediscloud

    example = rediscloud.get_data_persistence()
    pulumi.export("dataPersistenceOptions", example.data_persistences)
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('rediscloud:index/getDataPersistence:getDataPersistence', __args__, opts=opts, typ=GetDataPersistenceResult).value

    return AwaitableGetDataPersistenceResult(
        data_persistences=pulumi.get(__ret__, 'data_persistences'),
        id=pulumi.get(__ret__, 'id'))
