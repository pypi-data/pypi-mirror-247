# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetRegionsResult',
    'AwaitableGetRegionsResult',
    'get_regions',
    'get_regions_output',
]

@pulumi.output_type
class GetRegionsResult:
    """
    A collection of values returned by getRegions.
    """
    def __init__(__self__, id=None, provider_name=None, regions=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if provider_name and not isinstance(provider_name, str):
            raise TypeError("Expected argument 'provider_name' to be a str")
        pulumi.set(__self__, "provider_name", provider_name)
        if regions and not isinstance(regions, list):
            raise TypeError("Expected argument 'regions' to be a list")
        pulumi.set(__self__, "regions", regions)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="providerName")
    def provider_name(self) -> Optional[str]:
        """
        The identifier of the owning cloud provider, (either `AWS` or `GCP`)
        """
        return pulumi.get(self, "provider_name")

    @property
    @pulumi.getter
    def regions(self) -> Sequence['outputs.GetRegionsRegionResult']:
        """
        A list of regions from either a single or multiple cloud providers.
        """
        return pulumi.get(self, "regions")


class AwaitableGetRegionsResult(GetRegionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRegionsResult(
            id=self.id,
            provider_name=self.provider_name,
            regions=self.regions)


def get_regions(provider_name: Optional[str] = None,
                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRegionsResult:
    """
    The Regions data source allows access to a list of supported cloud provider regions. These regions can be used with the subscription resource.

    ## Example Usage

    The following example returns all of the supported regions available within your Redis Enterprise Cloud account.

    ```python
    import pulumi
    import pulumi_rediscloud as rediscloud

    example = rediscloud.get_regions()
    pulumi.export("allRegions", example.regions)
    ```

    The following example show how the list of regions can be filtered by cloud provider, (`AWS` or `GCP`).

    ```python
    import pulumi
    import pulumi_rediscloud as rediscloud

    example_aws = rediscloud.get_regions(provider_name="AWS")
    example_gcp = rediscloud.get_regions(provider_name="GCP")
    ```


    :param str provider_name: The name of the cloud provider to filter returned regions, (accepted values are `AWS` or `GCP`).
    """
    __args__ = dict()
    __args__['providerName'] = provider_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('rediscloud:index/getRegions:getRegions', __args__, opts=opts, typ=GetRegionsResult).value

    return AwaitableGetRegionsResult(
        id=pulumi.get(__ret__, 'id'),
        provider_name=pulumi.get(__ret__, 'provider_name'),
        regions=pulumi.get(__ret__, 'regions'))


@_utilities.lift_output_func(get_regions)
def get_regions_output(provider_name: Optional[pulumi.Input[Optional[str]]] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetRegionsResult]:
    """
    The Regions data source allows access to a list of supported cloud provider regions. These regions can be used with the subscription resource.

    ## Example Usage

    The following example returns all of the supported regions available within your Redis Enterprise Cloud account.

    ```python
    import pulumi
    import pulumi_rediscloud as rediscloud

    example = rediscloud.get_regions()
    pulumi.export("allRegions", example.regions)
    ```

    The following example show how the list of regions can be filtered by cloud provider, (`AWS` or `GCP`).

    ```python
    import pulumi
    import pulumi_rediscloud as rediscloud

    example_aws = rediscloud.get_regions(provider_name="AWS")
    example_gcp = rediscloud.get_regions(provider_name="GCP")
    ```


    :param str provider_name: The name of the cloud provider to filter returned regions, (accepted values are `AWS` or `GCP`).
    """
    ...
