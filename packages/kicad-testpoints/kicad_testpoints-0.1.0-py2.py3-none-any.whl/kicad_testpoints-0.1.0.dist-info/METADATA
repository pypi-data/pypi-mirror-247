Metadata-Version: 2.1
Name: kicad-testpoints
Version: 0.1.0
Summary: Extract pad positions from a kicad PCBNEW file with net data.
Home-page: https://github.com/snhobbs/kicad-testpoints
Author: Simon Hobbs
Author-email: simon.hobbs@electrooptical.net
License: GNU General Public License v3
Keywords: kicad_testpoints
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=3.6
License-File: LICENSE
Requires-Dist: Click (>=7.0)
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: spreadsheet-wrangler (>=0.1.3)

# kicad-testpoints

## Project Scope
+ Simplify the process of building a test & programming jig for a KiCAD design.
+ Export centroid like data for individual pads

## Basic Goals
+ Call out a list of pads and vias for use as test points
+ Output in a format that is consistant with [kicad-parts-placer](https://github.com/snhobbs/kicad-parts-placer).

## Related Projects
+ [ Altium Designer ](https://www.altium.com/documentation/altium-designer/adding-testpoints-pcb) 



+ Describe the via or pad to add a test point to
+ Offsets can be added to put the pin off center of the pad
+ Format:
    + ref des
    + pad
    + class
    + net
    + net class (signal, ground, power, ...)
    + ... additional data for other tools
+ Config script
    + Defines the classes of contacts.
    + Probe type
    + Offset
    + Vertical position relative to ground pins
+ Vias need to be a seperate flow
    + net
    + class
    + x, y roughly (auto chooses the closest point)



=======
History
=======

0.1.0 (2023-10-30)
------------------

* First release on PyPI.


