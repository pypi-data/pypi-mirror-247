"""_2613.py

PartAnalysis
"""


from mastapy._internal import constructor
from mastapy.system_model.analyses_and_results.system_deflections import (
    _2641, _2642, _2643, _2646,
    _2647, _2648, _2649, _2651,
    _2653, _2654, _2655, _2656,
    _2658, _2659, _2660, _2661,
    _2663, _2664, _2666, _2669,
    _2670, _2672, _2673, _2676,
    _2677, _2679, _2681, _2682,
    _2684, _2685, _2686, _2689,
    _2693, _2694, _2695, _2696,
    _2697, _2698, _2701, _2702,
    _2703, _2706, _2707, _2708,
    _2709, _2711, _2712, _2713,
    _2715, _2716, _2720, _2721,
    _2723, _2724, _2726, _2727,
    _2730, _2731, _2733, _2735,
    _2736, _2738, _2739, _2741,
    _2742, _2743, _2744, _2745,
    _2748, _2750, _2751, _2752,
    _2755, _2757, _2759, _2760,
    _2762, _2763, _2765, _2766,
    _2768, _2769, _2770, _2771,
    _2772, _2773, _2774, _2775,
    _2780, _2781, _2782, _2785,
    _2786, _2788, _2789, _2791,
    _2792
)
from mastapy._internal.cast_exception import CastException
from mastapy.system_model.analyses_and_results.steady_state_synchronous_responses import (
    _2934, _2935, _2936, _2939,
    _2940, _2941, _2942, _2944,
    _2946, _2947, _2948, _2949,
    _2951, _2952, _2953, _2954,
    _2956, _2957, _2959, _2961,
    _2962, _2964, _2965, _2967,
    _2968, _2970, _2972, _2973,
    _2975, _2976, _2977, _2980,
    _2982, _2983, _2984, _2985,
    _2987, _2989, _2990, _2991,
    _2992, _2994, _2995, _2996,
    _2998, _2999, _3002, _3003,
    _3005, _3006, _3008, _3009,
    _3010, _3011, _3012, _3013,
    _3014, _3016, _3017, _3019,
    _3020, _3021, _3022, _3023,
    _3024, _3026, _3028, _3029,
    _3030, _3031, _3033, _3035,
    _3036, _3038, _3039, _3044,
    _3045, _3047, _3048, _3049,
    _3050, _3051, _3052, _3053,
    _3054, _3056, _3057, _3058,
    _3059, _3060, _3062, _3063,
    _3065, _3066
)
from mastapy.system_model.analyses_and_results.steady_state_synchronous_responses_on_a_shaft import (
    _3196, _3197, _3198, _3201,
    _3202, _3203, _3204, _3206,
    _3208, _3209, _3210, _3211,
    _3213, _3214, _3215, _3216,
    _3218, _3219, _3221, _3223,
    _3224, _3226, _3227, _3229,
    _3230, _3232, _3234, _3235,
    _3237, _3238, _3239, _3242,
    _3244, _3245, _3246, _3247,
    _3248, _3250, _3251, _3252,
    _3253, _3255, _3256, _3257,
    _3259, _3260, _3263, _3264,
    _3266, _3267, _3269, _3270,
    _3271, _3272, _3273, _3274,
    _3275, _3277, _3278, _3280,
    _3281, _3282, _3283, _3284,
    _3285, _3287, _3289, _3290,
    _3291, _3292, _3294, _3296,
    _3297, _3299, _3300, _3303,
    _3304, _3306, _3307, _3308,
    _3309, _3310, _3311, _3312,
    _3313, _3315, _3316, _3317,
    _3318, _3319, _3321, _3322,
    _3324, _3325
)
from mastapy.system_model.analyses_and_results.steady_state_synchronous_responses_at_a_speed import (
    _3455, _3456, _3457, _3460,
    _3461, _3462, _3463, _3465,
    _3467, _3468, _3469, _3470,
    _3472, _3473, _3474, _3475,
    _3477, _3478, _3480, _3482,
    _3483, _3485, _3486, _3488,
    _3489, _3491, _3493, _3494,
    _3496, _3497, _3498, _3501,
    _3503, _3504, _3505, _3506,
    _3507, _3509, _3510, _3511,
    _3512, _3514, _3515, _3516,
    _3518, _3519, _3522, _3523,
    _3525, _3526, _3528, _3529,
    _3530, _3531, _3532, _3533,
    _3534, _3536, _3537, _3539,
    _3540, _3541, _3542, _3543,
    _3544, _3546, _3548, _3549,
    _3550, _3551, _3553, _3555,
    _3556, _3558, _3559, _3562,
    _3563, _3565, _3566, _3567,
    _3568, _3569, _3570, _3571,
    _3572, _3574, _3575, _3576,
    _3577, _3578, _3580, _3581,
    _3583, _3584
)
from mastapy.system_model.analyses_and_results.stability_analyses import (
    _3714, _3715, _3716, _3719,
    _3720, _3721, _3722, _3724,
    _3726, _3727, _3728, _3729,
    _3731, _3732, _3733, _3734,
    _3736, _3737, _3739, _3741,
    _3742, _3744, _3745, _3747,
    _3748, _3750, _3752, _3753,
    _3756, _3757, _3758, _3761,
    _3763, _3764, _3765, _3766,
    _3767, _3769, _3770, _3771,
    _3772, _3774, _3775, _3776,
    _3778, _3779, _3782, _3783,
    _3785, _3786, _3788, _3789,
    _3790, _3791, _3792, _3793,
    _3794, _3796, _3797, _3799,
    _3800, _3801, _3802, _3803,
    _3804, _3806, _3808, _3809,
    _3810, _3811, _3813, _3815,
    _3816, _3818, _3819, _3823,
    _3824, _3826, _3827, _3828,
    _3829, _3830, _3831, _3832,
    _3833, _3835, _3836, _3837,
    _3838, _3839, _3841, _3842,
    _3844, _3845
)
from mastapy.system_model.analyses_and_results.power_flows import (
    _3981, _3982, _3983, _3986,
    _3987, _3988, _3989, _3991,
    _3993, _3994, _3995, _3996,
    _3998, _3999, _4000, _4001,
    _4003, _4004, _4006, _4008,
    _4009, _4011, _4012, _4014,
    _4015, _4017, _4019, _4020,
    _4022, _4023, _4024, _4027,
    _4030, _4031, _4032, _4033,
    _4034, _4036, _4037, _4038,
    _4039, _4041, _4042, _4043,
    _4045, _4046, _4049, _4050,
    _4052, _4053, _4055, _4056,
    _4057, _4058, _4059, _4060,
    _4061, _4063, _4064, _4066,
    _4067, _4068, _4071, _4072,
    _4073, _4075, _4077, _4078,
    _4079, _4080, _4082, _4084,
    _4085, _4087, _4088, _4090,
    _4091, _4093, _4094, _4095,
    _4096, _4097, _4098, _4099,
    _4100, _4103, _4104, _4105,
    _4106, _4107, _4109, _4110,
    _4112, _4113
)
from mastapy.system_model.analyses_and_results.parametric_study_tools import (
    _4243, _4244, _4245, _4248,
    _4249, _4250, _4251, _4253,
    _4255, _4256, _4257, _4258,
    _4260, _4261, _4262, _4263,
    _4265, _4266, _4268, _4270,
    _4271, _4273, _4274, _4276,
    _4277, _4279, _4281, _4282,
    _4284, _4285, _4286, _4288,
    _4291, _4292, _4293, _4294,
    _4302, _4304, _4305, _4306,
    _4307, _4309, _4310, _4311,
    _4313, _4314, _4317, _4318,
    _4320, _4321, _4323, _4324,
    _4325, _4326, _4328, _4329,
    _4340, _4342, _4343, _4345,
    _4346, _4347, _4348, _4349,
    _4350, _4352, _4354, _4355,
    _4356, _4357, _4359, _4361,
    _4362, _4364, _4365, _4367,
    _4368, _4370, _4371, _4372,
    _4373, _4374, _4375, _4376,
    _4377, _4379, _4380, _4381,
    _4382, _4383, _4385, _4386,
    _4388, _4389
)
from mastapy.system_model.analyses_and_results.modal_analyses import (
    _4519, _4520, _4521, _4524,
    _4525, _4526, _4527, _4529,
    _4531, _4532, _4533, _4534,
    _4536, _4537, _4538, _4539,
    _4541, _4542, _4544, _4546,
    _4547, _4549, _4550, _4552,
    _4553, _4555, _4558, _4559,
    _4561, _4562, _4563, _4565,
    _4568, _4569, _4570, _4571,
    _4574, _4576, _4577, _4578,
    _4579, _4582, _4583, _4584,
    _4586, _4587, _4590, _4591,
    _4593, _4594, _4596, _4597,
    _4598, _4599, _4603, _4605,
    _4607, _4609, _4610, _4612,
    _4613, _4614, _4615, _4616,
    _4617, _4619, _4621, _4622,
    _4623, _4624, _4627, _4629,
    _4630, _4632, _4633, _4635,
    _4636, _4638, _4639, _4640,
    _4641, _4642, _4643, _4644,
    _4645, _4647, _4648, _4649,
    _4650, _4651, _4656, _4657,
    _4659, _4660
)
from mastapy.system_model.analyses_and_results.modal_analyses_at_a_stiffness import (
    _4802, _4803, _4804, _4807,
    _4808, _4809, _4810, _4812,
    _4814, _4815, _4816, _4817,
    _4819, _4820, _4821, _4822,
    _4824, _4825, _4827, _4829,
    _4830, _4832, _4833, _4835,
    _4836, _4838, _4840, _4841,
    _4843, _4844, _4845, _4847,
    _4850, _4851, _4852, _4853,
    _4855, _4857, _4858, _4859,
    _4860, _4862, _4863, _4864,
    _4866, _4867, _4870, _4871,
    _4873, _4874, _4876, _4877,
    _4878, _4879, _4880, _4881,
    _4882, _4884, _4885, _4887,
    _4888, _4889, _4890, _4891,
    _4892, _4894, _4896, _4897,
    _4898, _4899, _4901, _4903,
    _4904, _4906, _4907, _4909,
    _4910, _4912, _4913, _4914,
    _4915, _4916, _4917, _4918,
    _4919, _4921, _4922, _4923,
    _4924, _4925, _4927, _4928,
    _4930, _4931
)
from mastapy.system_model.analyses_and_results.modal_analyses_at_a_speed import (
    _5061, _5062, _5063, _5066,
    _5067, _5068, _5069, _5071,
    _5073, _5074, _5075, _5076,
    _5078, _5079, _5080, _5081,
    _5083, _5084, _5086, _5088,
    _5089, _5091, _5092, _5094,
    _5095, _5097, _5099, _5100,
    _5102, _5103, _5104, _5106,
    _5109, _5110, _5111, _5112,
    _5113, _5115, _5116, _5117,
    _5118, _5120, _5121, _5122,
    _5124, _5125, _5128, _5129,
    _5131, _5132, _5134, _5135,
    _5136, _5137, _5138, _5139,
    _5140, _5142, _5143, _5145,
    _5146, _5147, _5148, _5149,
    _5150, _5152, _5154, _5155,
    _5156, _5157, _5159, _5161,
    _5162, _5164, _5165, _5167,
    _5168, _5170, _5171, _5172,
    _5173, _5174, _5175, _5176,
    _5177, _5179, _5180, _5181,
    _5182, _5183, _5185, _5186,
    _5188, _5189
)
from mastapy.system_model.analyses_and_results.mbd_analyses import (
    _5319, _5320, _5321, _5324,
    _5325, _5327, _5328, _5331,
    _5333, _5334, _5335, _5336,
    _5338, _5339, _5340, _5341,
    _5343, _5344, _5347, _5349,
    _5350, _5352, _5353, _5355,
    _5356, _5358, _5360, _5361,
    _5363, _5364, _5365, _5367,
    _5370, _5371, _5372, _5373,
    _5374, _5376, _5377, _5378,
    _5379, _5382, _5383, _5384,
    _5386, _5387, _5394, _5395,
    _5397, _5398, _5400, _5401,
    _5402, _5406, _5407, _5408,
    _5409, _5411, _5412, _5414,
    _5415, _5416, _5417, _5418,
    _5419, _5421, _5423, _5424,
    _5427, _5428, _5431, _5433,
    _5434, _5436, _5437, _5439,
    _5440, _5442, _5443, _5444,
    _5445, _5446, _5447, _5448,
    _5449, _5452, _5453, _5455,
    _5456, _5457, _5460, _5461,
    _5463, _5464
)
from mastapy.system_model.analyses_and_results.harmonic_analyses import (
    _5620, _5622, _5623, _5625,
    _5627, _5628, _5629, _5631,
    _5632, _5634, _5635, _5636,
    _5637, _5639, _5640, _5641,
    _5643, _5644, _5647, _5649,
    _5650, _5651, _5653, _5654,
    _5656, _5658, _5660, _5661,
    _5663, _5664, _5665, _5667,
    _5669, _5671, _5672, _5673,
    _5686, _5687, _5689, _5690,
    _5691, _5693, _5698, _5700,
    _5707, _5709, _5711, _5713,
    _5714, _5716, _5717, _5719,
    _5720, _5721, _5722, _5723,
    _5724, _5726, _5727, _5730,
    _5731, _5732, _5733, _5734,
    _5736, _5738, _5740, _5741,
    _5742, _5743, _5746, _5748,
    _5750, _5752, _5753, _5754,
    _5756, _5757, _5759, _5760,
    _5761, _5762, _5763, _5764,
    _5765, _5767, _5768, _5769,
    _5771, _5772, _5773, _5775,
    _5776, _5778
)
from mastapy.system_model.analyses_and_results.harmonic_analyses_single_excitation import (
    _5943, _5944, _5945, _5947,
    _5949, _5950, _5951, _5953,
    _5954, _5956, _5957, _5958,
    _5959, _5961, _5962, _5963,
    _5965, _5966, _5968, _5970,
    _5971, _5972, _5974, _5975,
    _5977, _5979, _5981, _5982,
    _5984, _5985, _5986, _5988,
    _5990, _5992, _5993, _5994,
    _5995, _5996, _5998, _5999,
    _6000, _6001, _6003, _6004,
    _6006, _6008, _6010, _6012,
    _6013, _6015, _6016, _6018,
    _6019, _6020, _6021, _6022,
    _6023, _6025, _6026, _6028,
    _6029, _6030, _6031, _6032,
    _6033, _6035, _6037, _6038,
    _6039, _6040, _6042, _6043,
    _6045, _6047, _6048, _6049,
    _6051, _6052, _6054, _6055,
    _6056, _6057, _6058, _6059,
    _6060, _6062, _6063, _6064,
    _6065, _6066, _6067, _6069,
    _6070, _6072
)
from mastapy.system_model.analyses_and_results.dynamic_analyses import (
    _6211, _6212, _6213, _6215,
    _6217, _6218, _6219, _6221,
    _6222, _6224, _6225, _6226,
    _6227, _6229, _6230, _6231,
    _6233, _6234, _6236, _6238,
    _6239, _6240, _6242, _6243,
    _6245, _6247, _6249, _6250,
    _6252, _6253, _6254, _6256,
    _6258, _6260, _6261, _6262,
    _6264, _6265, _6267, _6268,
    _6269, _6270, _6272, _6273,
    _6274, _6276, _6278, _6280,
    _6281, _6283, _6284, _6286,
    _6287, _6288, _6289, _6290,
    _6291, _6293, _6294, _6296,
    _6297, _6298, _6299, _6300,
    _6301, _6303, _6305, _6306,
    _6307, _6308, _6310, _6311,
    _6313, _6315, _6316, _6317,
    _6319, _6320, _6322, _6323,
    _6324, _6325, _6326, _6327,
    _6328, _6330, _6331, _6332,
    _6333, _6334, _6335, _6337,
    _6338, _6340
)
from mastapy.system_model.analyses_and_results.critical_speed_analyses import (
    _6476, _6477, _6478, _6480,
    _6482, _6483, _6484, _6486,
    _6487, _6489, _6490, _6491,
    _6492, _6494, _6495, _6496,
    _6498, _6499, _6501, _6503,
    _6504, _6505, _6507, _6508,
    _6510, _6512, _6514, _6515,
    _6519, _6520, _6521, _6523,
    _6525, _6527, _6528, _6529,
    _6530, _6531, _6533, _6534,
    _6535, _6536, _6538, _6539,
    _6540, _6542, _6544, _6546,
    _6547, _6549, _6550, _6552,
    _6553, _6554, _6555, _6556,
    _6557, _6559, _6560, _6562,
    _6563, _6564, _6565, _6566,
    _6567, _6569, _6571, _6572,
    _6573, _6574, _6576, _6577,
    _6579, _6581, _6582, _6583,
    _6585, _6586, _6588, _6589,
    _6590, _6591, _6592, _6593,
    _6594, _6596, _6597, _6598,
    _6599, _6600, _6601, _6603,
    _6604, _6606
)
from mastapy.system_model.analyses_and_results.static_loads import (
    _6739, _6740, _6741, _6746,
    _6748, _6751, _6752, _6754,
    _6755, _6757, _6758, _6759,
    _6760, _6762, _6763, _6764,
    _6766, _6767, _6769, _6771,
    _6772, _6773, _6775, _6776,
    _6780, _6782, _6784, _6785,
    _6787, _6788, _6789, _6791,
    _6793, _6797, _6798, _6801,
    _6815, _6816, _6818, _6819,
    _6820, _6822, _6827, _6828,
    _6837, _6839, _6844, _6846,
    _6847, _6849, _6850, _6852,
    _6853, _6854, _6856, _6858,
    _6860, _6862, _6863, _6865,
    _6867, _6870, _6871, _6872,
    _6875, _6877, _6879, _6880,
    _6881, _6882, _6884, _6885,
    _6887, _6889, _6890, _6891,
    _6893, _6894, _6896, _6897,
    _6898, _6899, _6900, _6901,
    _6902, _6905, _6906, _6907,
    _6912, _6913, _6914, _6916,
    _6917, _6919
)
from mastapy.system_model.analyses_and_results.advanced_time_stepping_analyses_for_modulation import (
    _6937, _6938, _6939, _6944,
    _6946, _6947, _6949, _6951,
    _6952, _6954, _6955, _6956,
    _6957, _6959, _6960, _6961,
    _6962, _6964, _6966, _6967,
    _6969, _6970, _6972, _6973,
    _6975, _6977, _6978, _6980,
    _6981, _6983, _6984, _6985,
    _6988, _6990, _6991, _6992,
    _6993, _6994, _6996, _6997,
    _6998, _6999, _7001, _7002,
    _7004, _7006, _7008, _7010,
    _7011, _7013, _7014, _7016,
    _7017, _7018, _7019, _7020,
    _7021, _7022, _7024, _7026,
    _7027, _7028, _7029, _7030,
    _7031, _7033, _7034, _7036,
    _7037, _7038, _7040, _7041,
    _7043, _7044, _7046, _7047,
    _7049, _7050, _7052, _7053,
    _7054, _7055, _7056, _7057,
    _7058, _7059, _7061, _7062,
    _7063, _7064, _7065, _7067,
    _7068, _7070
)
from mastapy.system_model.analyses_and_results.advanced_system_deflections import (
    _7200, _7201, _7202, _7207,
    _7209, _7210, _7211, _7213,
    _7214, _7216, _7217, _7218,
    _7219, _7221, _7222, _7223,
    _7224, _7226, _7228, _7229,
    _7231, _7232, _7234, _7235,
    _7237, _7239, _7241, _7243,
    _7244, _7246, _7247, _7248,
    _7251, _7253, _7255, _7256,
    _7257, _7258, _7260, _7261,
    _7262, _7263, _7265, _7266,
    _7267, _7269, _7271, _7273,
    _7274, _7276, _7277, _7279,
    _7281, _7282, _7283, _7284,
    _7285, _7286, _7288, _7290,
    _7291, _7292, _7293, _7294,
    _7295, _7297, _7298, _7300,
    _7301, _7302, _7304, _7305,
    _7307, _7308, _7310, _7311,
    _7313, _7314, _7316, _7317,
    _7318, _7319, _7320, _7321,
    _7322, _7323, _7325, _7326,
    _7328, _7329, _7330, _7332,
    _7333, _7335
)
from mastapy.system_model.analyses_and_results.analysis_cases import (
    _7475, _7477, _7478, _7479
)
from mastapy.system_model.analyses_and_results import _2609
from mastapy._internal.python_net import python_net_import

_PART_ANALYSIS = python_net_import('SMT.MastaAPI.SystemModel.AnalysesAndResults', 'PartAnalysis')


__docformat__ = 'restructuredtext en'
__all__ = ('PartAnalysis',)


class PartAnalysis(_2609.DesignEntitySingleContextAnalysis):
    """PartAnalysis

    This is a mastapy class.
    """

    TYPE = _PART_ANALYSIS

    def __init__(self, instance_to_wrap: 'PartAnalysis.TYPE'):
        super().__init__(instance_to_wrap)
        self._freeze()

    @property
    def planetary_original(self) -> 'PartAnalysis':
        """PartAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if PartAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_system_deflection(self) -> '_2641.AbstractAssemblySystemDeflection':
        """AbstractAssemblySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2641.AbstractAssemblySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_system_deflection(self) -> '_2642.AbstractShaftOrHousingSystemDeflection':
        """AbstractShaftOrHousingSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2642.AbstractShaftOrHousingSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_system_deflection(self) -> '_2643.AbstractShaftSystemDeflection':
        """AbstractShaftSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2643.AbstractShaftSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_system_deflection(self) -> '_2646.AGMAGleasonConicalGearSetSystemDeflection':
        """AGMAGleasonConicalGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2646.AGMAGleasonConicalGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_system_deflection(self) -> '_2647.AGMAGleasonConicalGearSystemDeflection':
        """AGMAGleasonConicalGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2647.AGMAGleasonConicalGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_system_deflection(self) -> '_2648.AssemblySystemDeflection':
        """AssemblySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2648.AssemblySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_system_deflection(self) -> '_2649.BearingSystemDeflection':
        """BearingSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2649.BearingSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_system_deflection(self) -> '_2651.BeltDriveSystemDeflection':
        """BeltDriveSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2651.BeltDriveSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_system_deflection(self) -> '_2653.BevelDifferentialGearSetSystemDeflection':
        """BevelDifferentialGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2653.BevelDifferentialGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_system_deflection(self) -> '_2654.BevelDifferentialGearSystemDeflection':
        """BevelDifferentialGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2654.BevelDifferentialGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_system_deflection(self) -> '_2655.BevelDifferentialPlanetGearSystemDeflection':
        """BevelDifferentialPlanetGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2655.BevelDifferentialPlanetGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_system_deflection(self) -> '_2656.BevelDifferentialSunGearSystemDeflection':
        """BevelDifferentialSunGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2656.BevelDifferentialSunGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_system_deflection(self) -> '_2658.BevelGearSetSystemDeflection':
        """BevelGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2658.BevelGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_system_deflection(self) -> '_2659.BevelGearSystemDeflection':
        """BevelGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2659.BevelGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_system_deflection(self) -> '_2660.BoltedJointSystemDeflection':
        """BoltedJointSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2660.BoltedJointSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_system_deflection(self) -> '_2661.BoltSystemDeflection':
        """BoltSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2661.BoltSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_system_deflection(self) -> '_2663.ClutchHalfSystemDeflection':
        """ClutchHalfSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2663.ClutchHalfSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_system_deflection(self) -> '_2664.ClutchSystemDeflection':
        """ClutchSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2664.ClutchSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_system_deflection(self) -> '_2666.ComponentSystemDeflection':
        """ComponentSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2666.ComponentSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_system_deflection(self) -> '_2669.ConceptCouplingHalfSystemDeflection':
        """ConceptCouplingHalfSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2669.ConceptCouplingHalfSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_system_deflection(self) -> '_2670.ConceptCouplingSystemDeflection':
        """ConceptCouplingSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2670.ConceptCouplingSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_system_deflection(self) -> '_2672.ConceptGearSetSystemDeflection':
        """ConceptGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2672.ConceptGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_system_deflection(self) -> '_2673.ConceptGearSystemDeflection':
        """ConceptGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2673.ConceptGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_system_deflection(self) -> '_2676.ConicalGearSetSystemDeflection':
        """ConicalGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2676.ConicalGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_system_deflection(self) -> '_2677.ConicalGearSystemDeflection':
        """ConicalGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2677.ConicalGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_system_deflection(self) -> '_2679.ConnectorSystemDeflection':
        """ConnectorSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2679.ConnectorSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_system_deflection(self) -> '_2681.CouplingHalfSystemDeflection':
        """CouplingHalfSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2681.CouplingHalfSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_system_deflection(self) -> '_2682.CouplingSystemDeflection':
        """CouplingSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2682.CouplingSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_system_deflection(self) -> '_2684.CVTPulleySystemDeflection':
        """CVTPulleySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2684.CVTPulleySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_system_deflection(self) -> '_2685.CVTSystemDeflection':
        """CVTSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2685.CVTSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_system_deflection(self) -> '_2686.CycloidalAssemblySystemDeflection':
        """CycloidalAssemblySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2686.CycloidalAssemblySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_system_deflection(self) -> '_2689.CycloidalDiscSystemDeflection':
        """CycloidalDiscSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2689.CycloidalDiscSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_system_deflection(self) -> '_2693.CylindricalGearSetSystemDeflection':
        """CylindricalGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2693.CylindricalGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_system_deflection_timestep(self) -> '_2694.CylindricalGearSetSystemDeflectionTimestep':
        """CylindricalGearSetSystemDeflectionTimestep: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2694.CylindricalGearSetSystemDeflectionTimestep.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetSystemDeflectionTimestep. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_system_deflection_with_ltca_results(self) -> '_2695.CylindricalGearSetSystemDeflectionWithLTCAResults':
        """CylindricalGearSetSystemDeflectionWithLTCAResults: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2695.CylindricalGearSetSystemDeflectionWithLTCAResults.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetSystemDeflectionWithLTCAResults. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_system_deflection(self) -> '_2696.CylindricalGearSystemDeflection':
        """CylindricalGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2696.CylindricalGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_system_deflection_timestep(self) -> '_2697.CylindricalGearSystemDeflectionTimestep':
        """CylindricalGearSystemDeflectionTimestep: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2697.CylindricalGearSystemDeflectionTimestep.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSystemDeflectionTimestep. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_system_deflection_with_ltca_results(self) -> '_2698.CylindricalGearSystemDeflectionWithLTCAResults':
        """CylindricalGearSystemDeflectionWithLTCAResults: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2698.CylindricalGearSystemDeflectionWithLTCAResults.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSystemDeflectionWithLTCAResults. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_system_deflection(self) -> '_2701.CylindricalPlanetGearSystemDeflection':
        """CylindricalPlanetGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2701.CylindricalPlanetGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_system_deflection(self) -> '_2702.DatumSystemDeflection':
        """DatumSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2702.DatumSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_system_deflection(self) -> '_2703.ExternalCADModelSystemDeflection':
        """ExternalCADModelSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2703.ExternalCADModelSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_system_deflection(self) -> '_2706.FaceGearSetSystemDeflection':
        """FaceGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2706.FaceGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_system_deflection(self) -> '_2707.FaceGearSystemDeflection':
        """FaceGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2707.FaceGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_system_deflection(self) -> '_2708.FEPartSystemDeflection':
        """FEPartSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2708.FEPartSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_system_deflection(self) -> '_2709.FlexiblePinAssemblySystemDeflection':
        """FlexiblePinAssemblySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2709.FlexiblePinAssemblySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_system_deflection(self) -> '_2711.GearSetSystemDeflection':
        """GearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2711.GearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_system_deflection(self) -> '_2712.GearSystemDeflection':
        """GearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2712.GearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_system_deflection(self) -> '_2713.GuideDxfModelSystemDeflection':
        """GuideDxfModelSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2713.GuideDxfModelSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_system_deflection(self) -> '_2715.HypoidGearSetSystemDeflection':
        """HypoidGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2715.HypoidGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_system_deflection(self) -> '_2716.HypoidGearSystemDeflection':
        """HypoidGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2716.HypoidGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_system_deflection(self) -> '_2720.KlingelnbergCycloPalloidConicalGearSetSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2720.KlingelnbergCycloPalloidConicalGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_system_deflection(self) -> '_2721.KlingelnbergCycloPalloidConicalGearSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2721.KlingelnbergCycloPalloidConicalGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_system_deflection(self) -> '_2723.KlingelnbergCycloPalloidHypoidGearSetSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2723.KlingelnbergCycloPalloidHypoidGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_system_deflection(self) -> '_2724.KlingelnbergCycloPalloidHypoidGearSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2724.KlingelnbergCycloPalloidHypoidGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_system_deflection(self) -> '_2726.KlingelnbergCycloPalloidSpiralBevelGearSetSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2726.KlingelnbergCycloPalloidSpiralBevelGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_system_deflection(self) -> '_2727.KlingelnbergCycloPalloidSpiralBevelGearSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2727.KlingelnbergCycloPalloidSpiralBevelGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_system_deflection(self) -> '_2730.MassDiscSystemDeflection':
        """MassDiscSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2730.MassDiscSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_system_deflection(self) -> '_2731.MeasurementComponentSystemDeflection':
        """MeasurementComponentSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2731.MeasurementComponentSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_system_deflection(self) -> '_2733.MountableComponentSystemDeflection':
        """MountableComponentSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2733.MountableComponentSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_system_deflection(self) -> '_2735.OilSealSystemDeflection':
        """OilSealSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2735.OilSealSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_system_deflection(self) -> '_2736.PartSystemDeflection':
        """PartSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2736.PartSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_system_deflection(self) -> '_2738.PartToPartShearCouplingHalfSystemDeflection':
        """PartToPartShearCouplingHalfSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2738.PartToPartShearCouplingHalfSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_system_deflection(self) -> '_2739.PartToPartShearCouplingSystemDeflection':
        """PartToPartShearCouplingSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2739.PartToPartShearCouplingSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_system_deflection(self) -> '_2741.PlanetCarrierSystemDeflection':
        """PlanetCarrierSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2741.PlanetCarrierSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_system_deflection(self) -> '_2742.PointLoadSystemDeflection':
        """PointLoadSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2742.PointLoadSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_system_deflection(self) -> '_2743.PowerLoadSystemDeflection':
        """PowerLoadSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2743.PowerLoadSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_system_deflection(self) -> '_2744.PulleySystemDeflection':
        """PulleySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2744.PulleySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_system_deflection(self) -> '_2745.RingPinsSystemDeflection':
        """RingPinsSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2745.RingPinsSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_system_deflection(self) -> '_2748.RollingRingAssemblySystemDeflection':
        """RollingRingAssemblySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2748.RollingRingAssemblySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_system_deflection(self) -> '_2750.RollingRingSystemDeflection':
        """RollingRingSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2750.RollingRingSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_system_deflection(self) -> '_2751.RootAssemblySystemDeflection':
        """RootAssemblySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2751.RootAssemblySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_system_deflection(self) -> '_2752.ShaftHubConnectionSystemDeflection':
        """ShaftHubConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2752.ShaftHubConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_system_deflection(self) -> '_2755.ShaftSystemDeflection':
        """ShaftSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2755.ShaftSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_system_deflection(self) -> '_2757.SpecialisedAssemblySystemDeflection':
        """SpecialisedAssemblySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2757.SpecialisedAssemblySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_system_deflection(self) -> '_2759.SpiralBevelGearSetSystemDeflection':
        """SpiralBevelGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2759.SpiralBevelGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_system_deflection(self) -> '_2760.SpiralBevelGearSystemDeflection':
        """SpiralBevelGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2760.SpiralBevelGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_system_deflection(self) -> '_2762.SpringDamperHalfSystemDeflection':
        """SpringDamperHalfSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2762.SpringDamperHalfSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_system_deflection(self) -> '_2763.SpringDamperSystemDeflection':
        """SpringDamperSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2763.SpringDamperSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_system_deflection(self) -> '_2765.StraightBevelDiffGearSetSystemDeflection':
        """StraightBevelDiffGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2765.StraightBevelDiffGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_system_deflection(self) -> '_2766.StraightBevelDiffGearSystemDeflection':
        """StraightBevelDiffGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2766.StraightBevelDiffGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_system_deflection(self) -> '_2768.StraightBevelGearSetSystemDeflection':
        """StraightBevelGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2768.StraightBevelGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_system_deflection(self) -> '_2769.StraightBevelGearSystemDeflection':
        """StraightBevelGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2769.StraightBevelGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_system_deflection(self) -> '_2770.StraightBevelPlanetGearSystemDeflection':
        """StraightBevelPlanetGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2770.StraightBevelPlanetGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_system_deflection(self) -> '_2771.StraightBevelSunGearSystemDeflection':
        """StraightBevelSunGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2771.StraightBevelSunGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_system_deflection(self) -> '_2772.SynchroniserHalfSystemDeflection':
        """SynchroniserHalfSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2772.SynchroniserHalfSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_system_deflection(self) -> '_2773.SynchroniserPartSystemDeflection':
        """SynchroniserPartSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2773.SynchroniserPartSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_system_deflection(self) -> '_2774.SynchroniserSleeveSystemDeflection':
        """SynchroniserSleeveSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2774.SynchroniserSleeveSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_system_deflection(self) -> '_2775.SynchroniserSystemDeflection':
        """SynchroniserSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2775.SynchroniserSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_system_deflection(self) -> '_2780.TorqueConverterPumpSystemDeflection':
        """TorqueConverterPumpSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2780.TorqueConverterPumpSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_system_deflection(self) -> '_2781.TorqueConverterSystemDeflection':
        """TorqueConverterSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2781.TorqueConverterSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_system_deflection(self) -> '_2782.TorqueConverterTurbineSystemDeflection':
        """TorqueConverterTurbineSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2782.TorqueConverterTurbineSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_system_deflection(self) -> '_2785.UnbalancedMassSystemDeflection':
        """UnbalancedMassSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2785.UnbalancedMassSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_system_deflection(self) -> '_2786.VirtualComponentSystemDeflection':
        """VirtualComponentSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2786.VirtualComponentSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_system_deflection(self) -> '_2788.WormGearSetSystemDeflection':
        """WormGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2788.WormGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_system_deflection(self) -> '_2789.WormGearSystemDeflection':
        """WormGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2789.WormGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_system_deflection(self) -> '_2791.ZerolBevelGearSetSystemDeflection':
        """ZerolBevelGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2791.ZerolBevelGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_system_deflection(self) -> '_2792.ZerolBevelGearSystemDeflection':
        """ZerolBevelGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2792.ZerolBevelGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_steady_state_synchronous_response(self) -> '_2934.AbstractAssemblySteadyStateSynchronousResponse':
        """AbstractAssemblySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2934.AbstractAssemblySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_steady_state_synchronous_response(self) -> '_2935.AbstractShaftOrHousingSteadyStateSynchronousResponse':
        """AbstractShaftOrHousingSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2935.AbstractShaftOrHousingSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_steady_state_synchronous_response(self) -> '_2936.AbstractShaftSteadyStateSynchronousResponse':
        """AbstractShaftSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2936.AbstractShaftSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_steady_state_synchronous_response(self) -> '_2939.AGMAGleasonConicalGearSetSteadyStateSynchronousResponse':
        """AGMAGleasonConicalGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2939.AGMAGleasonConicalGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_steady_state_synchronous_response(self) -> '_2940.AGMAGleasonConicalGearSteadyStateSynchronousResponse':
        """AGMAGleasonConicalGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2940.AGMAGleasonConicalGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_steady_state_synchronous_response(self) -> '_2941.AssemblySteadyStateSynchronousResponse':
        """AssemblySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2941.AssemblySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_steady_state_synchronous_response(self) -> '_2942.BearingSteadyStateSynchronousResponse':
        """BearingSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2942.BearingSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_steady_state_synchronous_response(self) -> '_2944.BeltDriveSteadyStateSynchronousResponse':
        """BeltDriveSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2944.BeltDriveSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_steady_state_synchronous_response(self) -> '_2946.BevelDifferentialGearSetSteadyStateSynchronousResponse':
        """BevelDifferentialGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2946.BevelDifferentialGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_steady_state_synchronous_response(self) -> '_2947.BevelDifferentialGearSteadyStateSynchronousResponse':
        """BevelDifferentialGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2947.BevelDifferentialGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_steady_state_synchronous_response(self) -> '_2948.BevelDifferentialPlanetGearSteadyStateSynchronousResponse':
        """BevelDifferentialPlanetGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2948.BevelDifferentialPlanetGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_steady_state_synchronous_response(self) -> '_2949.BevelDifferentialSunGearSteadyStateSynchronousResponse':
        """BevelDifferentialSunGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2949.BevelDifferentialSunGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_steady_state_synchronous_response(self) -> '_2951.BevelGearSetSteadyStateSynchronousResponse':
        """BevelGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2951.BevelGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_steady_state_synchronous_response(self) -> '_2952.BevelGearSteadyStateSynchronousResponse':
        """BevelGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2952.BevelGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_steady_state_synchronous_response(self) -> '_2953.BoltedJointSteadyStateSynchronousResponse':
        """BoltedJointSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2953.BoltedJointSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_steady_state_synchronous_response(self) -> '_2954.BoltSteadyStateSynchronousResponse':
        """BoltSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2954.BoltSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_steady_state_synchronous_response(self) -> '_2956.ClutchHalfSteadyStateSynchronousResponse':
        """ClutchHalfSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2956.ClutchHalfSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_steady_state_synchronous_response(self) -> '_2957.ClutchSteadyStateSynchronousResponse':
        """ClutchSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2957.ClutchSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_steady_state_synchronous_response(self) -> '_2959.ComponentSteadyStateSynchronousResponse':
        """ComponentSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2959.ComponentSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_steady_state_synchronous_response(self) -> '_2961.ConceptCouplingHalfSteadyStateSynchronousResponse':
        """ConceptCouplingHalfSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2961.ConceptCouplingHalfSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_steady_state_synchronous_response(self) -> '_2962.ConceptCouplingSteadyStateSynchronousResponse':
        """ConceptCouplingSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2962.ConceptCouplingSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_steady_state_synchronous_response(self) -> '_2964.ConceptGearSetSteadyStateSynchronousResponse':
        """ConceptGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2964.ConceptGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_steady_state_synchronous_response(self) -> '_2965.ConceptGearSteadyStateSynchronousResponse':
        """ConceptGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2965.ConceptGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_steady_state_synchronous_response(self) -> '_2967.ConicalGearSetSteadyStateSynchronousResponse':
        """ConicalGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2967.ConicalGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_steady_state_synchronous_response(self) -> '_2968.ConicalGearSteadyStateSynchronousResponse':
        """ConicalGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2968.ConicalGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_steady_state_synchronous_response(self) -> '_2970.ConnectorSteadyStateSynchronousResponse':
        """ConnectorSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2970.ConnectorSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_steady_state_synchronous_response(self) -> '_2972.CouplingHalfSteadyStateSynchronousResponse':
        """CouplingHalfSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2972.CouplingHalfSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_steady_state_synchronous_response(self) -> '_2973.CouplingSteadyStateSynchronousResponse':
        """CouplingSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2973.CouplingSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_steady_state_synchronous_response(self) -> '_2975.CVTPulleySteadyStateSynchronousResponse':
        """CVTPulleySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2975.CVTPulleySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_steady_state_synchronous_response(self) -> '_2976.CVTSteadyStateSynchronousResponse':
        """CVTSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2976.CVTSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_steady_state_synchronous_response(self) -> '_2977.CycloidalAssemblySteadyStateSynchronousResponse':
        """CycloidalAssemblySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2977.CycloidalAssemblySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_steady_state_synchronous_response(self) -> '_2980.CycloidalDiscSteadyStateSynchronousResponse':
        """CycloidalDiscSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2980.CycloidalDiscSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_steady_state_synchronous_response(self) -> '_2982.CylindricalGearSetSteadyStateSynchronousResponse':
        """CylindricalGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2982.CylindricalGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_steady_state_synchronous_response(self) -> '_2983.CylindricalGearSteadyStateSynchronousResponse':
        """CylindricalGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2983.CylindricalGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_steady_state_synchronous_response(self) -> '_2984.CylindricalPlanetGearSteadyStateSynchronousResponse':
        """CylindricalPlanetGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2984.CylindricalPlanetGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_steady_state_synchronous_response(self) -> '_2985.DatumSteadyStateSynchronousResponse':
        """DatumSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2985.DatumSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_steady_state_synchronous_response(self) -> '_2987.ExternalCADModelSteadyStateSynchronousResponse':
        """ExternalCADModelSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2987.ExternalCADModelSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_steady_state_synchronous_response(self) -> '_2989.FaceGearSetSteadyStateSynchronousResponse':
        """FaceGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2989.FaceGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_steady_state_synchronous_response(self) -> '_2990.FaceGearSteadyStateSynchronousResponse':
        """FaceGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2990.FaceGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_steady_state_synchronous_response(self) -> '_2991.FEPartSteadyStateSynchronousResponse':
        """FEPartSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2991.FEPartSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_steady_state_synchronous_response(self) -> '_2992.FlexiblePinAssemblySteadyStateSynchronousResponse':
        """FlexiblePinAssemblySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2992.FlexiblePinAssemblySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_steady_state_synchronous_response(self) -> '_2994.GearSetSteadyStateSynchronousResponse':
        """GearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2994.GearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_steady_state_synchronous_response(self) -> '_2995.GearSteadyStateSynchronousResponse':
        """GearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2995.GearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_steady_state_synchronous_response(self) -> '_2996.GuideDxfModelSteadyStateSynchronousResponse':
        """GuideDxfModelSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2996.GuideDxfModelSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_steady_state_synchronous_response(self) -> '_2998.HypoidGearSetSteadyStateSynchronousResponse':
        """HypoidGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2998.HypoidGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_steady_state_synchronous_response(self) -> '_2999.HypoidGearSteadyStateSynchronousResponse':
        """HypoidGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2999.HypoidGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_steady_state_synchronous_response(self) -> '_3002.KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3002.KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_steady_state_synchronous_response(self) -> '_3003.KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3003.KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_steady_state_synchronous_response(self) -> '_3005.KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3005.KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_steady_state_synchronous_response(self) -> '_3006.KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3006.KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_steady_state_synchronous_response(self) -> '_3008.KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3008.KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_steady_state_synchronous_response(self) -> '_3009.KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3009.KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_steady_state_synchronous_response(self) -> '_3010.MassDiscSteadyStateSynchronousResponse':
        """MassDiscSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3010.MassDiscSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_steady_state_synchronous_response(self) -> '_3011.MeasurementComponentSteadyStateSynchronousResponse':
        """MeasurementComponentSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3011.MeasurementComponentSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_steady_state_synchronous_response(self) -> '_3012.MountableComponentSteadyStateSynchronousResponse':
        """MountableComponentSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3012.MountableComponentSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_steady_state_synchronous_response(self) -> '_3013.OilSealSteadyStateSynchronousResponse':
        """OilSealSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3013.OilSealSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_steady_state_synchronous_response(self) -> '_3014.PartSteadyStateSynchronousResponse':
        """PartSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3014.PartSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_steady_state_synchronous_response(self) -> '_3016.PartToPartShearCouplingHalfSteadyStateSynchronousResponse':
        """PartToPartShearCouplingHalfSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3016.PartToPartShearCouplingHalfSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_steady_state_synchronous_response(self) -> '_3017.PartToPartShearCouplingSteadyStateSynchronousResponse':
        """PartToPartShearCouplingSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3017.PartToPartShearCouplingSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_steady_state_synchronous_response(self) -> '_3019.PlanetaryGearSetSteadyStateSynchronousResponse':
        """PlanetaryGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3019.PlanetaryGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_steady_state_synchronous_response(self) -> '_3020.PlanetCarrierSteadyStateSynchronousResponse':
        """PlanetCarrierSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3020.PlanetCarrierSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_steady_state_synchronous_response(self) -> '_3021.PointLoadSteadyStateSynchronousResponse':
        """PointLoadSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3021.PointLoadSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_steady_state_synchronous_response(self) -> '_3022.PowerLoadSteadyStateSynchronousResponse':
        """PowerLoadSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3022.PowerLoadSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_steady_state_synchronous_response(self) -> '_3023.PulleySteadyStateSynchronousResponse':
        """PulleySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3023.PulleySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_steady_state_synchronous_response(self) -> '_3024.RingPinsSteadyStateSynchronousResponse':
        """RingPinsSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3024.RingPinsSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_steady_state_synchronous_response(self) -> '_3026.RollingRingAssemblySteadyStateSynchronousResponse':
        """RollingRingAssemblySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3026.RollingRingAssemblySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_steady_state_synchronous_response(self) -> '_3028.RollingRingSteadyStateSynchronousResponse':
        """RollingRingSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3028.RollingRingSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_steady_state_synchronous_response(self) -> '_3029.RootAssemblySteadyStateSynchronousResponse':
        """RootAssemblySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3029.RootAssemblySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_steady_state_synchronous_response(self) -> '_3030.ShaftHubConnectionSteadyStateSynchronousResponse':
        """ShaftHubConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3030.ShaftHubConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_steady_state_synchronous_response(self) -> '_3031.ShaftSteadyStateSynchronousResponse':
        """ShaftSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3031.ShaftSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_steady_state_synchronous_response(self) -> '_3033.SpecialisedAssemblySteadyStateSynchronousResponse':
        """SpecialisedAssemblySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3033.SpecialisedAssemblySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_steady_state_synchronous_response(self) -> '_3035.SpiralBevelGearSetSteadyStateSynchronousResponse':
        """SpiralBevelGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3035.SpiralBevelGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_steady_state_synchronous_response(self) -> '_3036.SpiralBevelGearSteadyStateSynchronousResponse':
        """SpiralBevelGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3036.SpiralBevelGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_steady_state_synchronous_response(self) -> '_3038.SpringDamperHalfSteadyStateSynchronousResponse':
        """SpringDamperHalfSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3038.SpringDamperHalfSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_steady_state_synchronous_response(self) -> '_3039.SpringDamperSteadyStateSynchronousResponse':
        """SpringDamperSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3039.SpringDamperSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_steady_state_synchronous_response(self) -> '_3044.StraightBevelDiffGearSetSteadyStateSynchronousResponse':
        """StraightBevelDiffGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3044.StraightBevelDiffGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_steady_state_synchronous_response(self) -> '_3045.StraightBevelDiffGearSteadyStateSynchronousResponse':
        """StraightBevelDiffGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3045.StraightBevelDiffGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_steady_state_synchronous_response(self) -> '_3047.StraightBevelGearSetSteadyStateSynchronousResponse':
        """StraightBevelGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3047.StraightBevelGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_steady_state_synchronous_response(self) -> '_3048.StraightBevelGearSteadyStateSynchronousResponse':
        """StraightBevelGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3048.StraightBevelGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_steady_state_synchronous_response(self) -> '_3049.StraightBevelPlanetGearSteadyStateSynchronousResponse':
        """StraightBevelPlanetGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3049.StraightBevelPlanetGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_steady_state_synchronous_response(self) -> '_3050.StraightBevelSunGearSteadyStateSynchronousResponse':
        """StraightBevelSunGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3050.StraightBevelSunGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_steady_state_synchronous_response(self) -> '_3051.SynchroniserHalfSteadyStateSynchronousResponse':
        """SynchroniserHalfSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3051.SynchroniserHalfSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_steady_state_synchronous_response(self) -> '_3052.SynchroniserPartSteadyStateSynchronousResponse':
        """SynchroniserPartSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3052.SynchroniserPartSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_steady_state_synchronous_response(self) -> '_3053.SynchroniserSleeveSteadyStateSynchronousResponse':
        """SynchroniserSleeveSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3053.SynchroniserSleeveSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_steady_state_synchronous_response(self) -> '_3054.SynchroniserSteadyStateSynchronousResponse':
        """SynchroniserSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3054.SynchroniserSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_steady_state_synchronous_response(self) -> '_3056.TorqueConverterPumpSteadyStateSynchronousResponse':
        """TorqueConverterPumpSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3056.TorqueConverterPumpSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_steady_state_synchronous_response(self) -> '_3057.TorqueConverterSteadyStateSynchronousResponse':
        """TorqueConverterSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3057.TorqueConverterSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_steady_state_synchronous_response(self) -> '_3058.TorqueConverterTurbineSteadyStateSynchronousResponse':
        """TorqueConverterTurbineSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3058.TorqueConverterTurbineSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_steady_state_synchronous_response(self) -> '_3059.UnbalancedMassSteadyStateSynchronousResponse':
        """UnbalancedMassSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3059.UnbalancedMassSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_steady_state_synchronous_response(self) -> '_3060.VirtualComponentSteadyStateSynchronousResponse':
        """VirtualComponentSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3060.VirtualComponentSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_steady_state_synchronous_response(self) -> '_3062.WormGearSetSteadyStateSynchronousResponse':
        """WormGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3062.WormGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_steady_state_synchronous_response(self) -> '_3063.WormGearSteadyStateSynchronousResponse':
        """WormGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3063.WormGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_steady_state_synchronous_response(self) -> '_3065.ZerolBevelGearSetSteadyStateSynchronousResponse':
        """ZerolBevelGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3065.ZerolBevelGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_steady_state_synchronous_response(self) -> '_3066.ZerolBevelGearSteadyStateSynchronousResponse':
        """ZerolBevelGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3066.ZerolBevelGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_steady_state_synchronous_response_on_a_shaft(self) -> '_3196.AbstractAssemblySteadyStateSynchronousResponseOnAShaft':
        """AbstractAssemblySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3196.AbstractAssemblySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_steady_state_synchronous_response_on_a_shaft(self) -> '_3197.AbstractShaftOrHousingSteadyStateSynchronousResponseOnAShaft':
        """AbstractShaftOrHousingSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3197.AbstractShaftOrHousingSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_steady_state_synchronous_response_on_a_shaft(self) -> '_3198.AbstractShaftSteadyStateSynchronousResponseOnAShaft':
        """AbstractShaftSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3198.AbstractShaftSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3201.AGMAGleasonConicalGearSetSteadyStateSynchronousResponseOnAShaft':
        """AGMAGleasonConicalGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3201.AGMAGleasonConicalGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3202.AGMAGleasonConicalGearSteadyStateSynchronousResponseOnAShaft':
        """AGMAGleasonConicalGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3202.AGMAGleasonConicalGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_steady_state_synchronous_response_on_a_shaft(self) -> '_3203.AssemblySteadyStateSynchronousResponseOnAShaft':
        """AssemblySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3203.AssemblySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_steady_state_synchronous_response_on_a_shaft(self) -> '_3204.BearingSteadyStateSynchronousResponseOnAShaft':
        """BearingSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3204.BearingSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_steady_state_synchronous_response_on_a_shaft(self) -> '_3206.BeltDriveSteadyStateSynchronousResponseOnAShaft':
        """BeltDriveSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3206.BeltDriveSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3208.BevelDifferentialGearSetSteadyStateSynchronousResponseOnAShaft':
        """BevelDifferentialGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3208.BevelDifferentialGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3209.BevelDifferentialGearSteadyStateSynchronousResponseOnAShaft':
        """BevelDifferentialGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3209.BevelDifferentialGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3210.BevelDifferentialPlanetGearSteadyStateSynchronousResponseOnAShaft':
        """BevelDifferentialPlanetGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3210.BevelDifferentialPlanetGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3211.BevelDifferentialSunGearSteadyStateSynchronousResponseOnAShaft':
        """BevelDifferentialSunGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3211.BevelDifferentialSunGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3213.BevelGearSetSteadyStateSynchronousResponseOnAShaft':
        """BevelGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3213.BevelGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3214.BevelGearSteadyStateSynchronousResponseOnAShaft':
        """BevelGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3214.BevelGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_steady_state_synchronous_response_on_a_shaft(self) -> '_3215.BoltedJointSteadyStateSynchronousResponseOnAShaft':
        """BoltedJointSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3215.BoltedJointSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_steady_state_synchronous_response_on_a_shaft(self) -> '_3216.BoltSteadyStateSynchronousResponseOnAShaft':
        """BoltSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3216.BoltSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_steady_state_synchronous_response_on_a_shaft(self) -> '_3218.ClutchHalfSteadyStateSynchronousResponseOnAShaft':
        """ClutchHalfSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3218.ClutchHalfSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_steady_state_synchronous_response_on_a_shaft(self) -> '_3219.ClutchSteadyStateSynchronousResponseOnAShaft':
        """ClutchSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3219.ClutchSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_steady_state_synchronous_response_on_a_shaft(self) -> '_3221.ComponentSteadyStateSynchronousResponseOnAShaft':
        """ComponentSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3221.ComponentSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_steady_state_synchronous_response_on_a_shaft(self) -> '_3223.ConceptCouplingHalfSteadyStateSynchronousResponseOnAShaft':
        """ConceptCouplingHalfSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3223.ConceptCouplingHalfSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_steady_state_synchronous_response_on_a_shaft(self) -> '_3224.ConceptCouplingSteadyStateSynchronousResponseOnAShaft':
        """ConceptCouplingSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3224.ConceptCouplingSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3226.ConceptGearSetSteadyStateSynchronousResponseOnAShaft':
        """ConceptGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3226.ConceptGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3227.ConceptGearSteadyStateSynchronousResponseOnAShaft':
        """ConceptGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3227.ConceptGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3229.ConicalGearSetSteadyStateSynchronousResponseOnAShaft':
        """ConicalGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3229.ConicalGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3230.ConicalGearSteadyStateSynchronousResponseOnAShaft':
        """ConicalGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3230.ConicalGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_steady_state_synchronous_response_on_a_shaft(self) -> '_3232.ConnectorSteadyStateSynchronousResponseOnAShaft':
        """ConnectorSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3232.ConnectorSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_steady_state_synchronous_response_on_a_shaft(self) -> '_3234.CouplingHalfSteadyStateSynchronousResponseOnAShaft':
        """CouplingHalfSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3234.CouplingHalfSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_steady_state_synchronous_response_on_a_shaft(self) -> '_3235.CouplingSteadyStateSynchronousResponseOnAShaft':
        """CouplingSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3235.CouplingSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_steady_state_synchronous_response_on_a_shaft(self) -> '_3237.CVTPulleySteadyStateSynchronousResponseOnAShaft':
        """CVTPulleySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3237.CVTPulleySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_steady_state_synchronous_response_on_a_shaft(self) -> '_3238.CVTSteadyStateSynchronousResponseOnAShaft':
        """CVTSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3238.CVTSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_steady_state_synchronous_response_on_a_shaft(self) -> '_3239.CycloidalAssemblySteadyStateSynchronousResponseOnAShaft':
        """CycloidalAssemblySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3239.CycloidalAssemblySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_steady_state_synchronous_response_on_a_shaft(self) -> '_3242.CycloidalDiscSteadyStateSynchronousResponseOnAShaft':
        """CycloidalDiscSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3242.CycloidalDiscSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3244.CylindricalGearSetSteadyStateSynchronousResponseOnAShaft':
        """CylindricalGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3244.CylindricalGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3245.CylindricalGearSteadyStateSynchronousResponseOnAShaft':
        """CylindricalGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3245.CylindricalGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3246.CylindricalPlanetGearSteadyStateSynchronousResponseOnAShaft':
        """CylindricalPlanetGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3246.CylindricalPlanetGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_steady_state_synchronous_response_on_a_shaft(self) -> '_3247.DatumSteadyStateSynchronousResponseOnAShaft':
        """DatumSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3247.DatumSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_steady_state_synchronous_response_on_a_shaft(self) -> '_3248.ExternalCADModelSteadyStateSynchronousResponseOnAShaft':
        """ExternalCADModelSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3248.ExternalCADModelSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3250.FaceGearSetSteadyStateSynchronousResponseOnAShaft':
        """FaceGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3250.FaceGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3251.FaceGearSteadyStateSynchronousResponseOnAShaft':
        """FaceGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3251.FaceGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_steady_state_synchronous_response_on_a_shaft(self) -> '_3252.FEPartSteadyStateSynchronousResponseOnAShaft':
        """FEPartSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3252.FEPartSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_steady_state_synchronous_response_on_a_shaft(self) -> '_3253.FlexiblePinAssemblySteadyStateSynchronousResponseOnAShaft':
        """FlexiblePinAssemblySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3253.FlexiblePinAssemblySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3255.GearSetSteadyStateSynchronousResponseOnAShaft':
        """GearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3255.GearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3256.GearSteadyStateSynchronousResponseOnAShaft':
        """GearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3256.GearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_steady_state_synchronous_response_on_a_shaft(self) -> '_3257.GuideDxfModelSteadyStateSynchronousResponseOnAShaft':
        """GuideDxfModelSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3257.GuideDxfModelSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3259.HypoidGearSetSteadyStateSynchronousResponseOnAShaft':
        """HypoidGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3259.HypoidGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3260.HypoidGearSteadyStateSynchronousResponseOnAShaft':
        """HypoidGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3260.HypoidGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3263.KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3263.KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3264.KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3264.KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3266.KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3266.KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3267.KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3267.KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3269.KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3269.KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3270.KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3270.KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_steady_state_synchronous_response_on_a_shaft(self) -> '_3271.MassDiscSteadyStateSynchronousResponseOnAShaft':
        """MassDiscSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3271.MassDiscSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_steady_state_synchronous_response_on_a_shaft(self) -> '_3272.MeasurementComponentSteadyStateSynchronousResponseOnAShaft':
        """MeasurementComponentSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3272.MeasurementComponentSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_steady_state_synchronous_response_on_a_shaft(self) -> '_3273.MountableComponentSteadyStateSynchronousResponseOnAShaft':
        """MountableComponentSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3273.MountableComponentSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_steady_state_synchronous_response_on_a_shaft(self) -> '_3274.OilSealSteadyStateSynchronousResponseOnAShaft':
        """OilSealSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3274.OilSealSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_steady_state_synchronous_response_on_a_shaft(self) -> '_3275.PartSteadyStateSynchronousResponseOnAShaft':
        """PartSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3275.PartSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_steady_state_synchronous_response_on_a_shaft(self) -> '_3277.PartToPartShearCouplingHalfSteadyStateSynchronousResponseOnAShaft':
        """PartToPartShearCouplingHalfSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3277.PartToPartShearCouplingHalfSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_steady_state_synchronous_response_on_a_shaft(self) -> '_3278.PartToPartShearCouplingSteadyStateSynchronousResponseOnAShaft':
        """PartToPartShearCouplingSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3278.PartToPartShearCouplingSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3280.PlanetaryGearSetSteadyStateSynchronousResponseOnAShaft':
        """PlanetaryGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3280.PlanetaryGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_steady_state_synchronous_response_on_a_shaft(self) -> '_3281.PlanetCarrierSteadyStateSynchronousResponseOnAShaft':
        """PlanetCarrierSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3281.PlanetCarrierSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_steady_state_synchronous_response_on_a_shaft(self) -> '_3282.PointLoadSteadyStateSynchronousResponseOnAShaft':
        """PointLoadSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3282.PointLoadSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_steady_state_synchronous_response_on_a_shaft(self) -> '_3283.PowerLoadSteadyStateSynchronousResponseOnAShaft':
        """PowerLoadSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3283.PowerLoadSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_steady_state_synchronous_response_on_a_shaft(self) -> '_3284.PulleySteadyStateSynchronousResponseOnAShaft':
        """PulleySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3284.PulleySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_steady_state_synchronous_response_on_a_shaft(self) -> '_3285.RingPinsSteadyStateSynchronousResponseOnAShaft':
        """RingPinsSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3285.RingPinsSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_steady_state_synchronous_response_on_a_shaft(self) -> '_3287.RollingRingAssemblySteadyStateSynchronousResponseOnAShaft':
        """RollingRingAssemblySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3287.RollingRingAssemblySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_steady_state_synchronous_response_on_a_shaft(self) -> '_3289.RollingRingSteadyStateSynchronousResponseOnAShaft':
        """RollingRingSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3289.RollingRingSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_steady_state_synchronous_response_on_a_shaft(self) -> '_3290.RootAssemblySteadyStateSynchronousResponseOnAShaft':
        """RootAssemblySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3290.RootAssemblySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3291.ShaftHubConnectionSteadyStateSynchronousResponseOnAShaft':
        """ShaftHubConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3291.ShaftHubConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_steady_state_synchronous_response_on_a_shaft(self) -> '_3292.ShaftSteadyStateSynchronousResponseOnAShaft':
        """ShaftSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3292.ShaftSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_steady_state_synchronous_response_on_a_shaft(self) -> '_3294.SpecialisedAssemblySteadyStateSynchronousResponseOnAShaft':
        """SpecialisedAssemblySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3294.SpecialisedAssemblySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3296.SpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft':
        """SpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3296.SpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3297.SpiralBevelGearSteadyStateSynchronousResponseOnAShaft':
        """SpiralBevelGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3297.SpiralBevelGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_steady_state_synchronous_response_on_a_shaft(self) -> '_3299.SpringDamperHalfSteadyStateSynchronousResponseOnAShaft':
        """SpringDamperHalfSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3299.SpringDamperHalfSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_steady_state_synchronous_response_on_a_shaft(self) -> '_3300.SpringDamperSteadyStateSynchronousResponseOnAShaft':
        """SpringDamperSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3300.SpringDamperSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3303.StraightBevelDiffGearSetSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelDiffGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3303.StraightBevelDiffGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3304.StraightBevelDiffGearSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelDiffGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3304.StraightBevelDiffGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3306.StraightBevelGearSetSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3306.StraightBevelGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3307.StraightBevelGearSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3307.StraightBevelGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3308.StraightBevelPlanetGearSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelPlanetGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3308.StraightBevelPlanetGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3309.StraightBevelSunGearSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelSunGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3309.StraightBevelSunGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_steady_state_synchronous_response_on_a_shaft(self) -> '_3310.SynchroniserHalfSteadyStateSynchronousResponseOnAShaft':
        """SynchroniserHalfSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3310.SynchroniserHalfSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_steady_state_synchronous_response_on_a_shaft(self) -> '_3311.SynchroniserPartSteadyStateSynchronousResponseOnAShaft':
        """SynchroniserPartSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3311.SynchroniserPartSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_steady_state_synchronous_response_on_a_shaft(self) -> '_3312.SynchroniserSleeveSteadyStateSynchronousResponseOnAShaft':
        """SynchroniserSleeveSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3312.SynchroniserSleeveSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_steady_state_synchronous_response_on_a_shaft(self) -> '_3313.SynchroniserSteadyStateSynchronousResponseOnAShaft':
        """SynchroniserSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3313.SynchroniserSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_steady_state_synchronous_response_on_a_shaft(self) -> '_3315.TorqueConverterPumpSteadyStateSynchronousResponseOnAShaft':
        """TorqueConverterPumpSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3315.TorqueConverterPumpSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_steady_state_synchronous_response_on_a_shaft(self) -> '_3316.TorqueConverterSteadyStateSynchronousResponseOnAShaft':
        """TorqueConverterSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3316.TorqueConverterSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_steady_state_synchronous_response_on_a_shaft(self) -> '_3317.TorqueConverterTurbineSteadyStateSynchronousResponseOnAShaft':
        """TorqueConverterTurbineSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3317.TorqueConverterTurbineSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_steady_state_synchronous_response_on_a_shaft(self) -> '_3318.UnbalancedMassSteadyStateSynchronousResponseOnAShaft':
        """UnbalancedMassSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3318.UnbalancedMassSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_steady_state_synchronous_response_on_a_shaft(self) -> '_3319.VirtualComponentSteadyStateSynchronousResponseOnAShaft':
        """VirtualComponentSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3319.VirtualComponentSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3321.WormGearSetSteadyStateSynchronousResponseOnAShaft':
        """WormGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3321.WormGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3322.WormGearSteadyStateSynchronousResponseOnAShaft':
        """WormGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3322.WormGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3324.ZerolBevelGearSetSteadyStateSynchronousResponseOnAShaft':
        """ZerolBevelGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3324.ZerolBevelGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3325.ZerolBevelGearSteadyStateSynchronousResponseOnAShaft':
        """ZerolBevelGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3325.ZerolBevelGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_steady_state_synchronous_response_at_a_speed(self) -> '_3455.AbstractAssemblySteadyStateSynchronousResponseAtASpeed':
        """AbstractAssemblySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3455.AbstractAssemblySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_steady_state_synchronous_response_at_a_speed(self) -> '_3456.AbstractShaftOrHousingSteadyStateSynchronousResponseAtASpeed':
        """AbstractShaftOrHousingSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3456.AbstractShaftOrHousingSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_steady_state_synchronous_response_at_a_speed(self) -> '_3457.AbstractShaftSteadyStateSynchronousResponseAtASpeed':
        """AbstractShaftSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3457.AbstractShaftSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3460.AGMAGleasonConicalGearSetSteadyStateSynchronousResponseAtASpeed':
        """AGMAGleasonConicalGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3460.AGMAGleasonConicalGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3461.AGMAGleasonConicalGearSteadyStateSynchronousResponseAtASpeed':
        """AGMAGleasonConicalGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3461.AGMAGleasonConicalGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_steady_state_synchronous_response_at_a_speed(self) -> '_3462.AssemblySteadyStateSynchronousResponseAtASpeed':
        """AssemblySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3462.AssemblySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_steady_state_synchronous_response_at_a_speed(self) -> '_3463.BearingSteadyStateSynchronousResponseAtASpeed':
        """BearingSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3463.BearingSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_steady_state_synchronous_response_at_a_speed(self) -> '_3465.BeltDriveSteadyStateSynchronousResponseAtASpeed':
        """BeltDriveSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3465.BeltDriveSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3467.BevelDifferentialGearSetSteadyStateSynchronousResponseAtASpeed':
        """BevelDifferentialGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3467.BevelDifferentialGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3468.BevelDifferentialGearSteadyStateSynchronousResponseAtASpeed':
        """BevelDifferentialGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3468.BevelDifferentialGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3469.BevelDifferentialPlanetGearSteadyStateSynchronousResponseAtASpeed':
        """BevelDifferentialPlanetGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3469.BevelDifferentialPlanetGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3470.BevelDifferentialSunGearSteadyStateSynchronousResponseAtASpeed':
        """BevelDifferentialSunGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3470.BevelDifferentialSunGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3472.BevelGearSetSteadyStateSynchronousResponseAtASpeed':
        """BevelGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3472.BevelGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3473.BevelGearSteadyStateSynchronousResponseAtASpeed':
        """BevelGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3473.BevelGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_steady_state_synchronous_response_at_a_speed(self) -> '_3474.BoltedJointSteadyStateSynchronousResponseAtASpeed':
        """BoltedJointSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3474.BoltedJointSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_steady_state_synchronous_response_at_a_speed(self) -> '_3475.BoltSteadyStateSynchronousResponseAtASpeed':
        """BoltSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3475.BoltSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_steady_state_synchronous_response_at_a_speed(self) -> '_3477.ClutchHalfSteadyStateSynchronousResponseAtASpeed':
        """ClutchHalfSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3477.ClutchHalfSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_steady_state_synchronous_response_at_a_speed(self) -> '_3478.ClutchSteadyStateSynchronousResponseAtASpeed':
        """ClutchSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3478.ClutchSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_steady_state_synchronous_response_at_a_speed(self) -> '_3480.ComponentSteadyStateSynchronousResponseAtASpeed':
        """ComponentSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3480.ComponentSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_steady_state_synchronous_response_at_a_speed(self) -> '_3482.ConceptCouplingHalfSteadyStateSynchronousResponseAtASpeed':
        """ConceptCouplingHalfSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3482.ConceptCouplingHalfSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_steady_state_synchronous_response_at_a_speed(self) -> '_3483.ConceptCouplingSteadyStateSynchronousResponseAtASpeed':
        """ConceptCouplingSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3483.ConceptCouplingSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3485.ConceptGearSetSteadyStateSynchronousResponseAtASpeed':
        """ConceptGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3485.ConceptGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3486.ConceptGearSteadyStateSynchronousResponseAtASpeed':
        """ConceptGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3486.ConceptGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3488.ConicalGearSetSteadyStateSynchronousResponseAtASpeed':
        """ConicalGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3488.ConicalGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3489.ConicalGearSteadyStateSynchronousResponseAtASpeed':
        """ConicalGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3489.ConicalGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_steady_state_synchronous_response_at_a_speed(self) -> '_3491.ConnectorSteadyStateSynchronousResponseAtASpeed':
        """ConnectorSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3491.ConnectorSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_steady_state_synchronous_response_at_a_speed(self) -> '_3493.CouplingHalfSteadyStateSynchronousResponseAtASpeed':
        """CouplingHalfSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3493.CouplingHalfSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_steady_state_synchronous_response_at_a_speed(self) -> '_3494.CouplingSteadyStateSynchronousResponseAtASpeed':
        """CouplingSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3494.CouplingSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_steady_state_synchronous_response_at_a_speed(self) -> '_3496.CVTPulleySteadyStateSynchronousResponseAtASpeed':
        """CVTPulleySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3496.CVTPulleySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_steady_state_synchronous_response_at_a_speed(self) -> '_3497.CVTSteadyStateSynchronousResponseAtASpeed':
        """CVTSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3497.CVTSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_steady_state_synchronous_response_at_a_speed(self) -> '_3498.CycloidalAssemblySteadyStateSynchronousResponseAtASpeed':
        """CycloidalAssemblySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3498.CycloidalAssemblySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_steady_state_synchronous_response_at_a_speed(self) -> '_3501.CycloidalDiscSteadyStateSynchronousResponseAtASpeed':
        """CycloidalDiscSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3501.CycloidalDiscSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3503.CylindricalGearSetSteadyStateSynchronousResponseAtASpeed':
        """CylindricalGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3503.CylindricalGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3504.CylindricalGearSteadyStateSynchronousResponseAtASpeed':
        """CylindricalGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3504.CylindricalGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3505.CylindricalPlanetGearSteadyStateSynchronousResponseAtASpeed':
        """CylindricalPlanetGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3505.CylindricalPlanetGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_steady_state_synchronous_response_at_a_speed(self) -> '_3506.DatumSteadyStateSynchronousResponseAtASpeed':
        """DatumSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3506.DatumSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_steady_state_synchronous_response_at_a_speed(self) -> '_3507.ExternalCADModelSteadyStateSynchronousResponseAtASpeed':
        """ExternalCADModelSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3507.ExternalCADModelSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3509.FaceGearSetSteadyStateSynchronousResponseAtASpeed':
        """FaceGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3509.FaceGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3510.FaceGearSteadyStateSynchronousResponseAtASpeed':
        """FaceGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3510.FaceGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_steady_state_synchronous_response_at_a_speed(self) -> '_3511.FEPartSteadyStateSynchronousResponseAtASpeed':
        """FEPartSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3511.FEPartSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_steady_state_synchronous_response_at_a_speed(self) -> '_3512.FlexiblePinAssemblySteadyStateSynchronousResponseAtASpeed':
        """FlexiblePinAssemblySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3512.FlexiblePinAssemblySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3514.GearSetSteadyStateSynchronousResponseAtASpeed':
        """GearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3514.GearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3515.GearSteadyStateSynchronousResponseAtASpeed':
        """GearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3515.GearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_steady_state_synchronous_response_at_a_speed(self) -> '_3516.GuideDxfModelSteadyStateSynchronousResponseAtASpeed':
        """GuideDxfModelSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3516.GuideDxfModelSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3518.HypoidGearSetSteadyStateSynchronousResponseAtASpeed':
        """HypoidGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3518.HypoidGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3519.HypoidGearSteadyStateSynchronousResponseAtASpeed':
        """HypoidGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3519.HypoidGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3522.KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3522.KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3523.KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3523.KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3525.KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3525.KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3526.KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3526.KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3528.KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3528.KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3529.KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3529.KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_steady_state_synchronous_response_at_a_speed(self) -> '_3530.MassDiscSteadyStateSynchronousResponseAtASpeed':
        """MassDiscSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3530.MassDiscSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_steady_state_synchronous_response_at_a_speed(self) -> '_3531.MeasurementComponentSteadyStateSynchronousResponseAtASpeed':
        """MeasurementComponentSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3531.MeasurementComponentSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_steady_state_synchronous_response_at_a_speed(self) -> '_3532.MountableComponentSteadyStateSynchronousResponseAtASpeed':
        """MountableComponentSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3532.MountableComponentSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_steady_state_synchronous_response_at_a_speed(self) -> '_3533.OilSealSteadyStateSynchronousResponseAtASpeed':
        """OilSealSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3533.OilSealSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_steady_state_synchronous_response_at_a_speed(self) -> '_3534.PartSteadyStateSynchronousResponseAtASpeed':
        """PartSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3534.PartSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_steady_state_synchronous_response_at_a_speed(self) -> '_3536.PartToPartShearCouplingHalfSteadyStateSynchronousResponseAtASpeed':
        """PartToPartShearCouplingHalfSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3536.PartToPartShearCouplingHalfSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_steady_state_synchronous_response_at_a_speed(self) -> '_3537.PartToPartShearCouplingSteadyStateSynchronousResponseAtASpeed':
        """PartToPartShearCouplingSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3537.PartToPartShearCouplingSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3539.PlanetaryGearSetSteadyStateSynchronousResponseAtASpeed':
        """PlanetaryGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3539.PlanetaryGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_steady_state_synchronous_response_at_a_speed(self) -> '_3540.PlanetCarrierSteadyStateSynchronousResponseAtASpeed':
        """PlanetCarrierSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3540.PlanetCarrierSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_steady_state_synchronous_response_at_a_speed(self) -> '_3541.PointLoadSteadyStateSynchronousResponseAtASpeed':
        """PointLoadSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3541.PointLoadSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_steady_state_synchronous_response_at_a_speed(self) -> '_3542.PowerLoadSteadyStateSynchronousResponseAtASpeed':
        """PowerLoadSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3542.PowerLoadSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_steady_state_synchronous_response_at_a_speed(self) -> '_3543.PulleySteadyStateSynchronousResponseAtASpeed':
        """PulleySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3543.PulleySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_steady_state_synchronous_response_at_a_speed(self) -> '_3544.RingPinsSteadyStateSynchronousResponseAtASpeed':
        """RingPinsSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3544.RingPinsSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_steady_state_synchronous_response_at_a_speed(self) -> '_3546.RollingRingAssemblySteadyStateSynchronousResponseAtASpeed':
        """RollingRingAssemblySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3546.RollingRingAssemblySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_steady_state_synchronous_response_at_a_speed(self) -> '_3548.RollingRingSteadyStateSynchronousResponseAtASpeed':
        """RollingRingSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3548.RollingRingSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_steady_state_synchronous_response_at_a_speed(self) -> '_3549.RootAssemblySteadyStateSynchronousResponseAtASpeed':
        """RootAssemblySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3549.RootAssemblySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3550.ShaftHubConnectionSteadyStateSynchronousResponseAtASpeed':
        """ShaftHubConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3550.ShaftHubConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_steady_state_synchronous_response_at_a_speed(self) -> '_3551.ShaftSteadyStateSynchronousResponseAtASpeed':
        """ShaftSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3551.ShaftSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_steady_state_synchronous_response_at_a_speed(self) -> '_3553.SpecialisedAssemblySteadyStateSynchronousResponseAtASpeed':
        """SpecialisedAssemblySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3553.SpecialisedAssemblySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3555.SpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed':
        """SpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3555.SpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3556.SpiralBevelGearSteadyStateSynchronousResponseAtASpeed':
        """SpiralBevelGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3556.SpiralBevelGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_steady_state_synchronous_response_at_a_speed(self) -> '_3558.SpringDamperHalfSteadyStateSynchronousResponseAtASpeed':
        """SpringDamperHalfSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3558.SpringDamperHalfSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_steady_state_synchronous_response_at_a_speed(self) -> '_3559.SpringDamperSteadyStateSynchronousResponseAtASpeed':
        """SpringDamperSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3559.SpringDamperSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3562.StraightBevelDiffGearSetSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelDiffGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3562.StraightBevelDiffGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3563.StraightBevelDiffGearSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelDiffGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3563.StraightBevelDiffGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3565.StraightBevelGearSetSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3565.StraightBevelGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3566.StraightBevelGearSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3566.StraightBevelGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3567.StraightBevelPlanetGearSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelPlanetGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3567.StraightBevelPlanetGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3568.StraightBevelSunGearSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelSunGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3568.StraightBevelSunGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_steady_state_synchronous_response_at_a_speed(self) -> '_3569.SynchroniserHalfSteadyStateSynchronousResponseAtASpeed':
        """SynchroniserHalfSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3569.SynchroniserHalfSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_steady_state_synchronous_response_at_a_speed(self) -> '_3570.SynchroniserPartSteadyStateSynchronousResponseAtASpeed':
        """SynchroniserPartSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3570.SynchroniserPartSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_steady_state_synchronous_response_at_a_speed(self) -> '_3571.SynchroniserSleeveSteadyStateSynchronousResponseAtASpeed':
        """SynchroniserSleeveSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3571.SynchroniserSleeveSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_steady_state_synchronous_response_at_a_speed(self) -> '_3572.SynchroniserSteadyStateSynchronousResponseAtASpeed':
        """SynchroniserSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3572.SynchroniserSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_steady_state_synchronous_response_at_a_speed(self) -> '_3574.TorqueConverterPumpSteadyStateSynchronousResponseAtASpeed':
        """TorqueConverterPumpSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3574.TorqueConverterPumpSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_steady_state_synchronous_response_at_a_speed(self) -> '_3575.TorqueConverterSteadyStateSynchronousResponseAtASpeed':
        """TorqueConverterSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3575.TorqueConverterSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_steady_state_synchronous_response_at_a_speed(self) -> '_3576.TorqueConverterTurbineSteadyStateSynchronousResponseAtASpeed':
        """TorqueConverterTurbineSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3576.TorqueConverterTurbineSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_steady_state_synchronous_response_at_a_speed(self) -> '_3577.UnbalancedMassSteadyStateSynchronousResponseAtASpeed':
        """UnbalancedMassSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3577.UnbalancedMassSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_steady_state_synchronous_response_at_a_speed(self) -> '_3578.VirtualComponentSteadyStateSynchronousResponseAtASpeed':
        """VirtualComponentSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3578.VirtualComponentSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3580.WormGearSetSteadyStateSynchronousResponseAtASpeed':
        """WormGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3580.WormGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3581.WormGearSteadyStateSynchronousResponseAtASpeed':
        """WormGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3581.WormGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3583.ZerolBevelGearSetSteadyStateSynchronousResponseAtASpeed':
        """ZerolBevelGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3583.ZerolBevelGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3584.ZerolBevelGearSteadyStateSynchronousResponseAtASpeed':
        """ZerolBevelGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3584.ZerolBevelGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_stability_analysis(self) -> '_3714.AbstractAssemblyStabilityAnalysis':
        """AbstractAssemblyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3714.AbstractAssemblyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_stability_analysis(self) -> '_3715.AbstractShaftOrHousingStabilityAnalysis':
        """AbstractShaftOrHousingStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3715.AbstractShaftOrHousingStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_stability_analysis(self) -> '_3716.AbstractShaftStabilityAnalysis':
        """AbstractShaftStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3716.AbstractShaftStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_stability_analysis(self) -> '_3719.AGMAGleasonConicalGearSetStabilityAnalysis':
        """AGMAGleasonConicalGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3719.AGMAGleasonConicalGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_stability_analysis(self) -> '_3720.AGMAGleasonConicalGearStabilityAnalysis':
        """AGMAGleasonConicalGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3720.AGMAGleasonConicalGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_stability_analysis(self) -> '_3721.AssemblyStabilityAnalysis':
        """AssemblyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3721.AssemblyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_stability_analysis(self) -> '_3722.BearingStabilityAnalysis':
        """BearingStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3722.BearingStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_stability_analysis(self) -> '_3724.BeltDriveStabilityAnalysis':
        """BeltDriveStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3724.BeltDriveStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_stability_analysis(self) -> '_3726.BevelDifferentialGearSetStabilityAnalysis':
        """BevelDifferentialGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3726.BevelDifferentialGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_stability_analysis(self) -> '_3727.BevelDifferentialGearStabilityAnalysis':
        """BevelDifferentialGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3727.BevelDifferentialGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_stability_analysis(self) -> '_3728.BevelDifferentialPlanetGearStabilityAnalysis':
        """BevelDifferentialPlanetGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3728.BevelDifferentialPlanetGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_stability_analysis(self) -> '_3729.BevelDifferentialSunGearStabilityAnalysis':
        """BevelDifferentialSunGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3729.BevelDifferentialSunGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_stability_analysis(self) -> '_3731.BevelGearSetStabilityAnalysis':
        """BevelGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3731.BevelGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_stability_analysis(self) -> '_3732.BevelGearStabilityAnalysis':
        """BevelGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3732.BevelGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_stability_analysis(self) -> '_3733.BoltedJointStabilityAnalysis':
        """BoltedJointStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3733.BoltedJointStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_stability_analysis(self) -> '_3734.BoltStabilityAnalysis':
        """BoltStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3734.BoltStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_stability_analysis(self) -> '_3736.ClutchHalfStabilityAnalysis':
        """ClutchHalfStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3736.ClutchHalfStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_stability_analysis(self) -> '_3737.ClutchStabilityAnalysis':
        """ClutchStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3737.ClutchStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_stability_analysis(self) -> '_3739.ComponentStabilityAnalysis':
        """ComponentStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3739.ComponentStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_stability_analysis(self) -> '_3741.ConceptCouplingHalfStabilityAnalysis':
        """ConceptCouplingHalfStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3741.ConceptCouplingHalfStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_stability_analysis(self) -> '_3742.ConceptCouplingStabilityAnalysis':
        """ConceptCouplingStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3742.ConceptCouplingStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_stability_analysis(self) -> '_3744.ConceptGearSetStabilityAnalysis':
        """ConceptGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3744.ConceptGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_stability_analysis(self) -> '_3745.ConceptGearStabilityAnalysis':
        """ConceptGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3745.ConceptGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_stability_analysis(self) -> '_3747.ConicalGearSetStabilityAnalysis':
        """ConicalGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3747.ConicalGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_stability_analysis(self) -> '_3748.ConicalGearStabilityAnalysis':
        """ConicalGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3748.ConicalGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_stability_analysis(self) -> '_3750.ConnectorStabilityAnalysis':
        """ConnectorStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3750.ConnectorStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_stability_analysis(self) -> '_3752.CouplingHalfStabilityAnalysis':
        """CouplingHalfStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3752.CouplingHalfStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_stability_analysis(self) -> '_3753.CouplingStabilityAnalysis':
        """CouplingStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3753.CouplingStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_stability_analysis(self) -> '_3756.CVTPulleyStabilityAnalysis':
        """CVTPulleyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3756.CVTPulleyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_stability_analysis(self) -> '_3757.CVTStabilityAnalysis':
        """CVTStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3757.CVTStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_stability_analysis(self) -> '_3758.CycloidalAssemblyStabilityAnalysis':
        """CycloidalAssemblyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3758.CycloidalAssemblyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_stability_analysis(self) -> '_3761.CycloidalDiscStabilityAnalysis':
        """CycloidalDiscStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3761.CycloidalDiscStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_stability_analysis(self) -> '_3763.CylindricalGearSetStabilityAnalysis':
        """CylindricalGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3763.CylindricalGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_stability_analysis(self) -> '_3764.CylindricalGearStabilityAnalysis':
        """CylindricalGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3764.CylindricalGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_stability_analysis(self) -> '_3765.CylindricalPlanetGearStabilityAnalysis':
        """CylindricalPlanetGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3765.CylindricalPlanetGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_stability_analysis(self) -> '_3766.DatumStabilityAnalysis':
        """DatumStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3766.DatumStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_stability_analysis(self) -> '_3767.ExternalCADModelStabilityAnalysis':
        """ExternalCADModelStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3767.ExternalCADModelStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_stability_analysis(self) -> '_3769.FaceGearSetStabilityAnalysis':
        """FaceGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3769.FaceGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_stability_analysis(self) -> '_3770.FaceGearStabilityAnalysis':
        """FaceGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3770.FaceGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_stability_analysis(self) -> '_3771.FEPartStabilityAnalysis':
        """FEPartStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3771.FEPartStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_stability_analysis(self) -> '_3772.FlexiblePinAssemblyStabilityAnalysis':
        """FlexiblePinAssemblyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3772.FlexiblePinAssemblyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_stability_analysis(self) -> '_3774.GearSetStabilityAnalysis':
        """GearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3774.GearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_stability_analysis(self) -> '_3775.GearStabilityAnalysis':
        """GearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3775.GearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_stability_analysis(self) -> '_3776.GuideDxfModelStabilityAnalysis':
        """GuideDxfModelStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3776.GuideDxfModelStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_stability_analysis(self) -> '_3778.HypoidGearSetStabilityAnalysis':
        """HypoidGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3778.HypoidGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_stability_analysis(self) -> '_3779.HypoidGearStabilityAnalysis':
        """HypoidGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3779.HypoidGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_stability_analysis(self) -> '_3782.KlingelnbergCycloPalloidConicalGearSetStabilityAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3782.KlingelnbergCycloPalloidConicalGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_stability_analysis(self) -> '_3783.KlingelnbergCycloPalloidConicalGearStabilityAnalysis':
        """KlingelnbergCycloPalloidConicalGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3783.KlingelnbergCycloPalloidConicalGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_stability_analysis(self) -> '_3785.KlingelnbergCycloPalloidHypoidGearSetStabilityAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3785.KlingelnbergCycloPalloidHypoidGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_stability_analysis(self) -> '_3786.KlingelnbergCycloPalloidHypoidGearStabilityAnalysis':
        """KlingelnbergCycloPalloidHypoidGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3786.KlingelnbergCycloPalloidHypoidGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_stability_analysis(self) -> '_3788.KlingelnbergCycloPalloidSpiralBevelGearSetStabilityAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3788.KlingelnbergCycloPalloidSpiralBevelGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_stability_analysis(self) -> '_3789.KlingelnbergCycloPalloidSpiralBevelGearStabilityAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3789.KlingelnbergCycloPalloidSpiralBevelGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_stability_analysis(self) -> '_3790.MassDiscStabilityAnalysis':
        """MassDiscStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3790.MassDiscStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_stability_analysis(self) -> '_3791.MeasurementComponentStabilityAnalysis':
        """MeasurementComponentStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3791.MeasurementComponentStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_stability_analysis(self) -> '_3792.MountableComponentStabilityAnalysis':
        """MountableComponentStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3792.MountableComponentStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_stability_analysis(self) -> '_3793.OilSealStabilityAnalysis':
        """OilSealStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3793.OilSealStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_stability_analysis(self) -> '_3794.PartStabilityAnalysis':
        """PartStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3794.PartStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_stability_analysis(self) -> '_3796.PartToPartShearCouplingHalfStabilityAnalysis':
        """PartToPartShearCouplingHalfStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3796.PartToPartShearCouplingHalfStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_stability_analysis(self) -> '_3797.PartToPartShearCouplingStabilityAnalysis':
        """PartToPartShearCouplingStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3797.PartToPartShearCouplingStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_stability_analysis(self) -> '_3799.PlanetaryGearSetStabilityAnalysis':
        """PlanetaryGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3799.PlanetaryGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_stability_analysis(self) -> '_3800.PlanetCarrierStabilityAnalysis':
        """PlanetCarrierStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3800.PlanetCarrierStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_stability_analysis(self) -> '_3801.PointLoadStabilityAnalysis':
        """PointLoadStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3801.PointLoadStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_stability_analysis(self) -> '_3802.PowerLoadStabilityAnalysis':
        """PowerLoadStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3802.PowerLoadStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_stability_analysis(self) -> '_3803.PulleyStabilityAnalysis':
        """PulleyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3803.PulleyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_stability_analysis(self) -> '_3804.RingPinsStabilityAnalysis':
        """RingPinsStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3804.RingPinsStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_stability_analysis(self) -> '_3806.RollingRingAssemblyStabilityAnalysis':
        """RollingRingAssemblyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3806.RollingRingAssemblyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_stability_analysis(self) -> '_3808.RollingRingStabilityAnalysis':
        """RollingRingStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3808.RollingRingStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_stability_analysis(self) -> '_3809.RootAssemblyStabilityAnalysis':
        """RootAssemblyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3809.RootAssemblyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_stability_analysis(self) -> '_3810.ShaftHubConnectionStabilityAnalysis':
        """ShaftHubConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3810.ShaftHubConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_stability_analysis(self) -> '_3811.ShaftStabilityAnalysis':
        """ShaftStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3811.ShaftStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_stability_analysis(self) -> '_3813.SpecialisedAssemblyStabilityAnalysis':
        """SpecialisedAssemblyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3813.SpecialisedAssemblyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_stability_analysis(self) -> '_3815.SpiralBevelGearSetStabilityAnalysis':
        """SpiralBevelGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3815.SpiralBevelGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_stability_analysis(self) -> '_3816.SpiralBevelGearStabilityAnalysis':
        """SpiralBevelGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3816.SpiralBevelGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_stability_analysis(self) -> '_3818.SpringDamperHalfStabilityAnalysis':
        """SpringDamperHalfStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3818.SpringDamperHalfStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_stability_analysis(self) -> '_3819.SpringDamperStabilityAnalysis':
        """SpringDamperStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3819.SpringDamperStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_stability_analysis(self) -> '_3823.StraightBevelDiffGearSetStabilityAnalysis':
        """StraightBevelDiffGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3823.StraightBevelDiffGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_stability_analysis(self) -> '_3824.StraightBevelDiffGearStabilityAnalysis':
        """StraightBevelDiffGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3824.StraightBevelDiffGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_stability_analysis(self) -> '_3826.StraightBevelGearSetStabilityAnalysis':
        """StraightBevelGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3826.StraightBevelGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_stability_analysis(self) -> '_3827.StraightBevelGearStabilityAnalysis':
        """StraightBevelGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3827.StraightBevelGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_stability_analysis(self) -> '_3828.StraightBevelPlanetGearStabilityAnalysis':
        """StraightBevelPlanetGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3828.StraightBevelPlanetGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_stability_analysis(self) -> '_3829.StraightBevelSunGearStabilityAnalysis':
        """StraightBevelSunGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3829.StraightBevelSunGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_stability_analysis(self) -> '_3830.SynchroniserHalfStabilityAnalysis':
        """SynchroniserHalfStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3830.SynchroniserHalfStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_stability_analysis(self) -> '_3831.SynchroniserPartStabilityAnalysis':
        """SynchroniserPartStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3831.SynchroniserPartStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_stability_analysis(self) -> '_3832.SynchroniserSleeveStabilityAnalysis':
        """SynchroniserSleeveStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3832.SynchroniserSleeveStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_stability_analysis(self) -> '_3833.SynchroniserStabilityAnalysis':
        """SynchroniserStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3833.SynchroniserStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_stability_analysis(self) -> '_3835.TorqueConverterPumpStabilityAnalysis':
        """TorqueConverterPumpStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3835.TorqueConverterPumpStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_stability_analysis(self) -> '_3836.TorqueConverterStabilityAnalysis':
        """TorqueConverterStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3836.TorqueConverterStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_stability_analysis(self) -> '_3837.TorqueConverterTurbineStabilityAnalysis':
        """TorqueConverterTurbineStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3837.TorqueConverterTurbineStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_stability_analysis(self) -> '_3838.UnbalancedMassStabilityAnalysis':
        """UnbalancedMassStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3838.UnbalancedMassStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_stability_analysis(self) -> '_3839.VirtualComponentStabilityAnalysis':
        """VirtualComponentStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3839.VirtualComponentStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_stability_analysis(self) -> '_3841.WormGearSetStabilityAnalysis':
        """WormGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3841.WormGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_stability_analysis(self) -> '_3842.WormGearStabilityAnalysis':
        """WormGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3842.WormGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_stability_analysis(self) -> '_3844.ZerolBevelGearSetStabilityAnalysis':
        """ZerolBevelGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3844.ZerolBevelGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_stability_analysis(self) -> '_3845.ZerolBevelGearStabilityAnalysis':
        """ZerolBevelGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3845.ZerolBevelGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_power_flow(self) -> '_3981.AbstractAssemblyPowerFlow':
        """AbstractAssemblyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3981.AbstractAssemblyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_power_flow(self) -> '_3982.AbstractShaftOrHousingPowerFlow':
        """AbstractShaftOrHousingPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3982.AbstractShaftOrHousingPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_power_flow(self) -> '_3983.AbstractShaftPowerFlow':
        """AbstractShaftPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3983.AbstractShaftPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_power_flow(self) -> '_3986.AGMAGleasonConicalGearPowerFlow':
        """AGMAGleasonConicalGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3986.AGMAGleasonConicalGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_power_flow(self) -> '_3987.AGMAGleasonConicalGearSetPowerFlow':
        """AGMAGleasonConicalGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3987.AGMAGleasonConicalGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_power_flow(self) -> '_3988.AssemblyPowerFlow':
        """AssemblyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3988.AssemblyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_power_flow(self) -> '_3989.BearingPowerFlow':
        """BearingPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3989.BearingPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_power_flow(self) -> '_3991.BeltDrivePowerFlow':
        """BeltDrivePowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3991.BeltDrivePowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDrivePowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_power_flow(self) -> '_3993.BevelDifferentialGearPowerFlow':
        """BevelDifferentialGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3993.BevelDifferentialGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_power_flow(self) -> '_3994.BevelDifferentialGearSetPowerFlow':
        """BevelDifferentialGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3994.BevelDifferentialGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_power_flow(self) -> '_3995.BevelDifferentialPlanetGearPowerFlow':
        """BevelDifferentialPlanetGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3995.BevelDifferentialPlanetGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_power_flow(self) -> '_3996.BevelDifferentialSunGearPowerFlow':
        """BevelDifferentialSunGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3996.BevelDifferentialSunGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_power_flow(self) -> '_3998.BevelGearPowerFlow':
        """BevelGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3998.BevelGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_power_flow(self) -> '_3999.BevelGearSetPowerFlow':
        """BevelGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3999.BevelGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_power_flow(self) -> '_4000.BoltedJointPowerFlow':
        """BoltedJointPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4000.BoltedJointPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_power_flow(self) -> '_4001.BoltPowerFlow':
        """BoltPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4001.BoltPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_power_flow(self) -> '_4003.ClutchHalfPowerFlow':
        """ClutchHalfPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4003.ClutchHalfPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_power_flow(self) -> '_4004.ClutchPowerFlow':
        """ClutchPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4004.ClutchPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_power_flow(self) -> '_4006.ComponentPowerFlow':
        """ComponentPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4006.ComponentPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_power_flow(self) -> '_4008.ConceptCouplingHalfPowerFlow':
        """ConceptCouplingHalfPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4008.ConceptCouplingHalfPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_power_flow(self) -> '_4009.ConceptCouplingPowerFlow':
        """ConceptCouplingPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4009.ConceptCouplingPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_power_flow(self) -> '_4011.ConceptGearPowerFlow':
        """ConceptGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4011.ConceptGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_power_flow(self) -> '_4012.ConceptGearSetPowerFlow':
        """ConceptGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4012.ConceptGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_power_flow(self) -> '_4014.ConicalGearPowerFlow':
        """ConicalGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4014.ConicalGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_power_flow(self) -> '_4015.ConicalGearSetPowerFlow':
        """ConicalGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4015.ConicalGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_power_flow(self) -> '_4017.ConnectorPowerFlow':
        """ConnectorPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4017.ConnectorPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_power_flow(self) -> '_4019.CouplingHalfPowerFlow':
        """CouplingHalfPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4019.CouplingHalfPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_power_flow(self) -> '_4020.CouplingPowerFlow':
        """CouplingPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4020.CouplingPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_power_flow(self) -> '_4022.CVTPowerFlow':
        """CVTPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4022.CVTPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_power_flow(self) -> '_4023.CVTPulleyPowerFlow':
        """CVTPulleyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4023.CVTPulleyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_power_flow(self) -> '_4024.CycloidalAssemblyPowerFlow':
        """CycloidalAssemblyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4024.CycloidalAssemblyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_power_flow(self) -> '_4027.CycloidalDiscPowerFlow':
        """CycloidalDiscPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4027.CycloidalDiscPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_power_flow(self) -> '_4030.CylindricalGearPowerFlow':
        """CylindricalGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4030.CylindricalGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_power_flow(self) -> '_4031.CylindricalGearSetPowerFlow':
        """CylindricalGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4031.CylindricalGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_power_flow(self) -> '_4032.CylindricalPlanetGearPowerFlow':
        """CylindricalPlanetGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4032.CylindricalPlanetGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_power_flow(self) -> '_4033.DatumPowerFlow':
        """DatumPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4033.DatumPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_power_flow(self) -> '_4034.ExternalCADModelPowerFlow':
        """ExternalCADModelPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4034.ExternalCADModelPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_power_flow(self) -> '_4036.FaceGearPowerFlow':
        """FaceGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4036.FaceGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_power_flow(self) -> '_4037.FaceGearSetPowerFlow':
        """FaceGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4037.FaceGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_power_flow(self) -> '_4038.FEPartPowerFlow':
        """FEPartPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4038.FEPartPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_power_flow(self) -> '_4039.FlexiblePinAssemblyPowerFlow':
        """FlexiblePinAssemblyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4039.FlexiblePinAssemblyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_power_flow(self) -> '_4041.GearPowerFlow':
        """GearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4041.GearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_power_flow(self) -> '_4042.GearSetPowerFlow':
        """GearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4042.GearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_power_flow(self) -> '_4043.GuideDxfModelPowerFlow':
        """GuideDxfModelPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4043.GuideDxfModelPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_power_flow(self) -> '_4045.HypoidGearPowerFlow':
        """HypoidGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4045.HypoidGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_power_flow(self) -> '_4046.HypoidGearSetPowerFlow':
        """HypoidGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4046.HypoidGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_power_flow(self) -> '_4049.KlingelnbergCycloPalloidConicalGearPowerFlow':
        """KlingelnbergCycloPalloidConicalGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4049.KlingelnbergCycloPalloidConicalGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_power_flow(self) -> '_4050.KlingelnbergCycloPalloidConicalGearSetPowerFlow':
        """KlingelnbergCycloPalloidConicalGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4050.KlingelnbergCycloPalloidConicalGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_power_flow(self) -> '_4052.KlingelnbergCycloPalloidHypoidGearPowerFlow':
        """KlingelnbergCycloPalloidHypoidGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4052.KlingelnbergCycloPalloidHypoidGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_power_flow(self) -> '_4053.KlingelnbergCycloPalloidHypoidGearSetPowerFlow':
        """KlingelnbergCycloPalloidHypoidGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4053.KlingelnbergCycloPalloidHypoidGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_power_flow(self) -> '_4055.KlingelnbergCycloPalloidSpiralBevelGearPowerFlow':
        """KlingelnbergCycloPalloidSpiralBevelGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4055.KlingelnbergCycloPalloidSpiralBevelGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_power_flow(self) -> '_4056.KlingelnbergCycloPalloidSpiralBevelGearSetPowerFlow':
        """KlingelnbergCycloPalloidSpiralBevelGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4056.KlingelnbergCycloPalloidSpiralBevelGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_power_flow(self) -> '_4057.MassDiscPowerFlow':
        """MassDiscPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4057.MassDiscPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_power_flow(self) -> '_4058.MeasurementComponentPowerFlow':
        """MeasurementComponentPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4058.MeasurementComponentPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_power_flow(self) -> '_4059.MountableComponentPowerFlow':
        """MountableComponentPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4059.MountableComponentPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_power_flow(self) -> '_4060.OilSealPowerFlow':
        """OilSealPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4060.OilSealPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_power_flow(self) -> '_4061.PartPowerFlow':
        """PartPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4061.PartPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_power_flow(self) -> '_4063.PartToPartShearCouplingHalfPowerFlow':
        """PartToPartShearCouplingHalfPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4063.PartToPartShearCouplingHalfPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_power_flow(self) -> '_4064.PartToPartShearCouplingPowerFlow':
        """PartToPartShearCouplingPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4064.PartToPartShearCouplingPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_power_flow(self) -> '_4066.PlanetaryGearSetPowerFlow':
        """PlanetaryGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4066.PlanetaryGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_power_flow(self) -> '_4067.PlanetCarrierPowerFlow':
        """PlanetCarrierPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4067.PlanetCarrierPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_power_flow(self) -> '_4068.PointLoadPowerFlow':
        """PointLoadPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4068.PointLoadPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_power_flow(self) -> '_4071.PowerLoadPowerFlow':
        """PowerLoadPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4071.PowerLoadPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_power_flow(self) -> '_4072.PulleyPowerFlow':
        """PulleyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4072.PulleyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_power_flow(self) -> '_4073.RingPinsPowerFlow':
        """RingPinsPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4073.RingPinsPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_power_flow(self) -> '_4075.RollingRingAssemblyPowerFlow':
        """RollingRingAssemblyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4075.RollingRingAssemblyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_power_flow(self) -> '_4077.RollingRingPowerFlow':
        """RollingRingPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4077.RollingRingPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_power_flow(self) -> '_4078.RootAssemblyPowerFlow':
        """RootAssemblyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4078.RootAssemblyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_power_flow(self) -> '_4079.ShaftHubConnectionPowerFlow':
        """ShaftHubConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4079.ShaftHubConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_power_flow(self) -> '_4080.ShaftPowerFlow':
        """ShaftPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4080.ShaftPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_power_flow(self) -> '_4082.SpecialisedAssemblyPowerFlow':
        """SpecialisedAssemblyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4082.SpecialisedAssemblyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_power_flow(self) -> '_4084.SpiralBevelGearPowerFlow':
        """SpiralBevelGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4084.SpiralBevelGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_power_flow(self) -> '_4085.SpiralBevelGearSetPowerFlow':
        """SpiralBevelGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4085.SpiralBevelGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_power_flow(self) -> '_4087.SpringDamperHalfPowerFlow':
        """SpringDamperHalfPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4087.SpringDamperHalfPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_power_flow(self) -> '_4088.SpringDamperPowerFlow':
        """SpringDamperPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4088.SpringDamperPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_power_flow(self) -> '_4090.StraightBevelDiffGearPowerFlow':
        """StraightBevelDiffGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4090.StraightBevelDiffGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_power_flow(self) -> '_4091.StraightBevelDiffGearSetPowerFlow':
        """StraightBevelDiffGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4091.StraightBevelDiffGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_power_flow(self) -> '_4093.StraightBevelGearPowerFlow':
        """StraightBevelGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4093.StraightBevelGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_power_flow(self) -> '_4094.StraightBevelGearSetPowerFlow':
        """StraightBevelGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4094.StraightBevelGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_power_flow(self) -> '_4095.StraightBevelPlanetGearPowerFlow':
        """StraightBevelPlanetGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4095.StraightBevelPlanetGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_power_flow(self) -> '_4096.StraightBevelSunGearPowerFlow':
        """StraightBevelSunGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4096.StraightBevelSunGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_power_flow(self) -> '_4097.SynchroniserHalfPowerFlow':
        """SynchroniserHalfPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4097.SynchroniserHalfPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_power_flow(self) -> '_4098.SynchroniserPartPowerFlow':
        """SynchroniserPartPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4098.SynchroniserPartPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_power_flow(self) -> '_4099.SynchroniserPowerFlow':
        """SynchroniserPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4099.SynchroniserPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_power_flow(self) -> '_4100.SynchroniserSleevePowerFlow':
        """SynchroniserSleevePowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4100.SynchroniserSleevePowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleevePowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_power_flow(self) -> '_4103.TorqueConverterPowerFlow':
        """TorqueConverterPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4103.TorqueConverterPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_power_flow(self) -> '_4104.TorqueConverterPumpPowerFlow':
        """TorqueConverterPumpPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4104.TorqueConverterPumpPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_power_flow(self) -> '_4105.TorqueConverterTurbinePowerFlow':
        """TorqueConverterTurbinePowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4105.TorqueConverterTurbinePowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbinePowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_power_flow(self) -> '_4106.UnbalancedMassPowerFlow':
        """UnbalancedMassPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4106.UnbalancedMassPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_power_flow(self) -> '_4107.VirtualComponentPowerFlow':
        """VirtualComponentPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4107.VirtualComponentPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_power_flow(self) -> '_4109.WormGearPowerFlow':
        """WormGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4109.WormGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_power_flow(self) -> '_4110.WormGearSetPowerFlow':
        """WormGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4110.WormGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_power_flow(self) -> '_4112.ZerolBevelGearPowerFlow':
        """ZerolBevelGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4112.ZerolBevelGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_power_flow(self) -> '_4113.ZerolBevelGearSetPowerFlow':
        """ZerolBevelGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4113.ZerolBevelGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_parametric_study_tool(self) -> '_4243.AbstractAssemblyParametricStudyTool':
        """AbstractAssemblyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4243.AbstractAssemblyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_parametric_study_tool(self) -> '_4244.AbstractShaftOrHousingParametricStudyTool':
        """AbstractShaftOrHousingParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4244.AbstractShaftOrHousingParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_parametric_study_tool(self) -> '_4245.AbstractShaftParametricStudyTool':
        """AbstractShaftParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4245.AbstractShaftParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_parametric_study_tool(self) -> '_4248.AGMAGleasonConicalGearParametricStudyTool':
        """AGMAGleasonConicalGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4248.AGMAGleasonConicalGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_parametric_study_tool(self) -> '_4249.AGMAGleasonConicalGearSetParametricStudyTool':
        """AGMAGleasonConicalGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4249.AGMAGleasonConicalGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_parametric_study_tool(self) -> '_4250.AssemblyParametricStudyTool':
        """AssemblyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4250.AssemblyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_parametric_study_tool(self) -> '_4251.BearingParametricStudyTool':
        """BearingParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4251.BearingParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_parametric_study_tool(self) -> '_4253.BeltDriveParametricStudyTool':
        """BeltDriveParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4253.BeltDriveParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_parametric_study_tool(self) -> '_4255.BevelDifferentialGearParametricStudyTool':
        """BevelDifferentialGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4255.BevelDifferentialGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_parametric_study_tool(self) -> '_4256.BevelDifferentialGearSetParametricStudyTool':
        """BevelDifferentialGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4256.BevelDifferentialGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_parametric_study_tool(self) -> '_4257.BevelDifferentialPlanetGearParametricStudyTool':
        """BevelDifferentialPlanetGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4257.BevelDifferentialPlanetGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_parametric_study_tool(self) -> '_4258.BevelDifferentialSunGearParametricStudyTool':
        """BevelDifferentialSunGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4258.BevelDifferentialSunGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_parametric_study_tool(self) -> '_4260.BevelGearParametricStudyTool':
        """BevelGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4260.BevelGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_parametric_study_tool(self) -> '_4261.BevelGearSetParametricStudyTool':
        """BevelGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4261.BevelGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_parametric_study_tool(self) -> '_4262.BoltedJointParametricStudyTool':
        """BoltedJointParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4262.BoltedJointParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_parametric_study_tool(self) -> '_4263.BoltParametricStudyTool':
        """BoltParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4263.BoltParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_parametric_study_tool(self) -> '_4265.ClutchHalfParametricStudyTool':
        """ClutchHalfParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4265.ClutchHalfParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_parametric_study_tool(self) -> '_4266.ClutchParametricStudyTool':
        """ClutchParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4266.ClutchParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_parametric_study_tool(self) -> '_4268.ComponentParametricStudyTool':
        """ComponentParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4268.ComponentParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_parametric_study_tool(self) -> '_4270.ConceptCouplingHalfParametricStudyTool':
        """ConceptCouplingHalfParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4270.ConceptCouplingHalfParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_parametric_study_tool(self) -> '_4271.ConceptCouplingParametricStudyTool':
        """ConceptCouplingParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4271.ConceptCouplingParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_parametric_study_tool(self) -> '_4273.ConceptGearParametricStudyTool':
        """ConceptGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4273.ConceptGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_parametric_study_tool(self) -> '_4274.ConceptGearSetParametricStudyTool':
        """ConceptGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4274.ConceptGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_parametric_study_tool(self) -> '_4276.ConicalGearParametricStudyTool':
        """ConicalGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4276.ConicalGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_parametric_study_tool(self) -> '_4277.ConicalGearSetParametricStudyTool':
        """ConicalGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4277.ConicalGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_parametric_study_tool(self) -> '_4279.ConnectorParametricStudyTool':
        """ConnectorParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4279.ConnectorParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_parametric_study_tool(self) -> '_4281.CouplingHalfParametricStudyTool':
        """CouplingHalfParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4281.CouplingHalfParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_parametric_study_tool(self) -> '_4282.CouplingParametricStudyTool':
        """CouplingParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4282.CouplingParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_parametric_study_tool(self) -> '_4284.CVTParametricStudyTool':
        """CVTParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4284.CVTParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_parametric_study_tool(self) -> '_4285.CVTPulleyParametricStudyTool':
        """CVTPulleyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4285.CVTPulleyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_parametric_study_tool(self) -> '_4286.CycloidalAssemblyParametricStudyTool':
        """CycloidalAssemblyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4286.CycloidalAssemblyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_parametric_study_tool(self) -> '_4288.CycloidalDiscParametricStudyTool':
        """CycloidalDiscParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4288.CycloidalDiscParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_parametric_study_tool(self) -> '_4291.CylindricalGearParametricStudyTool':
        """CylindricalGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4291.CylindricalGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_parametric_study_tool(self) -> '_4292.CylindricalGearSetParametricStudyTool':
        """CylindricalGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4292.CylindricalGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_parametric_study_tool(self) -> '_4293.CylindricalPlanetGearParametricStudyTool':
        """CylindricalPlanetGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4293.CylindricalPlanetGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_parametric_study_tool(self) -> '_4294.DatumParametricStudyTool':
        """DatumParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4294.DatumParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_parametric_study_tool(self) -> '_4302.ExternalCADModelParametricStudyTool':
        """ExternalCADModelParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4302.ExternalCADModelParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_parametric_study_tool(self) -> '_4304.FaceGearParametricStudyTool':
        """FaceGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4304.FaceGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_parametric_study_tool(self) -> '_4305.FaceGearSetParametricStudyTool':
        """FaceGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4305.FaceGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_parametric_study_tool(self) -> '_4306.FEPartParametricStudyTool':
        """FEPartParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4306.FEPartParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_parametric_study_tool(self) -> '_4307.FlexiblePinAssemblyParametricStudyTool':
        """FlexiblePinAssemblyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4307.FlexiblePinAssemblyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_parametric_study_tool(self) -> '_4309.GearParametricStudyTool':
        """GearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4309.GearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_parametric_study_tool(self) -> '_4310.GearSetParametricStudyTool':
        """GearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4310.GearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_parametric_study_tool(self) -> '_4311.GuideDxfModelParametricStudyTool':
        """GuideDxfModelParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4311.GuideDxfModelParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_parametric_study_tool(self) -> '_4313.HypoidGearParametricStudyTool':
        """HypoidGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4313.HypoidGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_parametric_study_tool(self) -> '_4314.HypoidGearSetParametricStudyTool':
        """HypoidGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4314.HypoidGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_parametric_study_tool(self) -> '_4317.KlingelnbergCycloPalloidConicalGearParametricStudyTool':
        """KlingelnbergCycloPalloidConicalGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4317.KlingelnbergCycloPalloidConicalGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_parametric_study_tool(self) -> '_4318.KlingelnbergCycloPalloidConicalGearSetParametricStudyTool':
        """KlingelnbergCycloPalloidConicalGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4318.KlingelnbergCycloPalloidConicalGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_parametric_study_tool(self) -> '_4320.KlingelnbergCycloPalloidHypoidGearParametricStudyTool':
        """KlingelnbergCycloPalloidHypoidGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4320.KlingelnbergCycloPalloidHypoidGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_parametric_study_tool(self) -> '_4321.KlingelnbergCycloPalloidHypoidGearSetParametricStudyTool':
        """KlingelnbergCycloPalloidHypoidGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4321.KlingelnbergCycloPalloidHypoidGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_parametric_study_tool(self) -> '_4323.KlingelnbergCycloPalloidSpiralBevelGearParametricStudyTool':
        """KlingelnbergCycloPalloidSpiralBevelGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4323.KlingelnbergCycloPalloidSpiralBevelGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_parametric_study_tool(self) -> '_4324.KlingelnbergCycloPalloidSpiralBevelGearSetParametricStudyTool':
        """KlingelnbergCycloPalloidSpiralBevelGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4324.KlingelnbergCycloPalloidSpiralBevelGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_parametric_study_tool(self) -> '_4325.MassDiscParametricStudyTool':
        """MassDiscParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4325.MassDiscParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_parametric_study_tool(self) -> '_4326.MeasurementComponentParametricStudyTool':
        """MeasurementComponentParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4326.MeasurementComponentParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_parametric_study_tool(self) -> '_4328.MountableComponentParametricStudyTool':
        """MountableComponentParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4328.MountableComponentParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_parametric_study_tool(self) -> '_4329.OilSealParametricStudyTool':
        """OilSealParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4329.OilSealParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_parametric_study_tool(self) -> '_4340.PartParametricStudyTool':
        """PartParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4340.PartParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_parametric_study_tool(self) -> '_4342.PartToPartShearCouplingHalfParametricStudyTool':
        """PartToPartShearCouplingHalfParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4342.PartToPartShearCouplingHalfParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_parametric_study_tool(self) -> '_4343.PartToPartShearCouplingParametricStudyTool':
        """PartToPartShearCouplingParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4343.PartToPartShearCouplingParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_parametric_study_tool(self) -> '_4345.PlanetaryGearSetParametricStudyTool':
        """PlanetaryGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4345.PlanetaryGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_parametric_study_tool(self) -> '_4346.PlanetCarrierParametricStudyTool':
        """PlanetCarrierParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4346.PlanetCarrierParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_parametric_study_tool(self) -> '_4347.PointLoadParametricStudyTool':
        """PointLoadParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4347.PointLoadParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_parametric_study_tool(self) -> '_4348.PowerLoadParametricStudyTool':
        """PowerLoadParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4348.PowerLoadParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_parametric_study_tool(self) -> '_4349.PulleyParametricStudyTool':
        """PulleyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4349.PulleyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_parametric_study_tool(self) -> '_4350.RingPinsParametricStudyTool':
        """RingPinsParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4350.RingPinsParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_parametric_study_tool(self) -> '_4352.RollingRingAssemblyParametricStudyTool':
        """RollingRingAssemblyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4352.RollingRingAssemblyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_parametric_study_tool(self) -> '_4354.RollingRingParametricStudyTool':
        """RollingRingParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4354.RollingRingParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_parametric_study_tool(self) -> '_4355.RootAssemblyParametricStudyTool':
        """RootAssemblyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4355.RootAssemblyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_parametric_study_tool(self) -> '_4356.ShaftHubConnectionParametricStudyTool':
        """ShaftHubConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4356.ShaftHubConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_parametric_study_tool(self) -> '_4357.ShaftParametricStudyTool':
        """ShaftParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4357.ShaftParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_parametric_study_tool(self) -> '_4359.SpecialisedAssemblyParametricStudyTool':
        """SpecialisedAssemblyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4359.SpecialisedAssemblyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_parametric_study_tool(self) -> '_4361.SpiralBevelGearParametricStudyTool':
        """SpiralBevelGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4361.SpiralBevelGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_parametric_study_tool(self) -> '_4362.SpiralBevelGearSetParametricStudyTool':
        """SpiralBevelGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4362.SpiralBevelGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_parametric_study_tool(self) -> '_4364.SpringDamperHalfParametricStudyTool':
        """SpringDamperHalfParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4364.SpringDamperHalfParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_parametric_study_tool(self) -> '_4365.SpringDamperParametricStudyTool':
        """SpringDamperParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4365.SpringDamperParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_parametric_study_tool(self) -> '_4367.StraightBevelDiffGearParametricStudyTool':
        """StraightBevelDiffGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4367.StraightBevelDiffGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_parametric_study_tool(self) -> '_4368.StraightBevelDiffGearSetParametricStudyTool':
        """StraightBevelDiffGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4368.StraightBevelDiffGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_parametric_study_tool(self) -> '_4370.StraightBevelGearParametricStudyTool':
        """StraightBevelGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4370.StraightBevelGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_parametric_study_tool(self) -> '_4371.StraightBevelGearSetParametricStudyTool':
        """StraightBevelGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4371.StraightBevelGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_parametric_study_tool(self) -> '_4372.StraightBevelPlanetGearParametricStudyTool':
        """StraightBevelPlanetGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4372.StraightBevelPlanetGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_parametric_study_tool(self) -> '_4373.StraightBevelSunGearParametricStudyTool':
        """StraightBevelSunGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4373.StraightBevelSunGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_parametric_study_tool(self) -> '_4374.SynchroniserHalfParametricStudyTool':
        """SynchroniserHalfParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4374.SynchroniserHalfParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_parametric_study_tool(self) -> '_4375.SynchroniserParametricStudyTool':
        """SynchroniserParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4375.SynchroniserParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_parametric_study_tool(self) -> '_4376.SynchroniserPartParametricStudyTool':
        """SynchroniserPartParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4376.SynchroniserPartParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_parametric_study_tool(self) -> '_4377.SynchroniserSleeveParametricStudyTool':
        """SynchroniserSleeveParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4377.SynchroniserSleeveParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_parametric_study_tool(self) -> '_4379.TorqueConverterParametricStudyTool':
        """TorqueConverterParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4379.TorqueConverterParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_parametric_study_tool(self) -> '_4380.TorqueConverterPumpParametricStudyTool':
        """TorqueConverterPumpParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4380.TorqueConverterPumpParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_parametric_study_tool(self) -> '_4381.TorqueConverterTurbineParametricStudyTool':
        """TorqueConverterTurbineParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4381.TorqueConverterTurbineParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_parametric_study_tool(self) -> '_4382.UnbalancedMassParametricStudyTool':
        """UnbalancedMassParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4382.UnbalancedMassParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_parametric_study_tool(self) -> '_4383.VirtualComponentParametricStudyTool':
        """VirtualComponentParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4383.VirtualComponentParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_parametric_study_tool(self) -> '_4385.WormGearParametricStudyTool':
        """WormGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4385.WormGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_parametric_study_tool(self) -> '_4386.WormGearSetParametricStudyTool':
        """WormGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4386.WormGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_parametric_study_tool(self) -> '_4388.ZerolBevelGearParametricStudyTool':
        """ZerolBevelGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4388.ZerolBevelGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_parametric_study_tool(self) -> '_4389.ZerolBevelGearSetParametricStudyTool':
        """ZerolBevelGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4389.ZerolBevelGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_modal_analysis(self) -> '_4519.AbstractAssemblyModalAnalysis':
        """AbstractAssemblyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4519.AbstractAssemblyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_modal_analysis(self) -> '_4520.AbstractShaftModalAnalysis':
        """AbstractShaftModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4520.AbstractShaftModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_modal_analysis(self) -> '_4521.AbstractShaftOrHousingModalAnalysis':
        """AbstractShaftOrHousingModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4521.AbstractShaftOrHousingModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_modal_analysis(self) -> '_4524.AGMAGleasonConicalGearModalAnalysis':
        """AGMAGleasonConicalGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4524.AGMAGleasonConicalGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_modal_analysis(self) -> '_4525.AGMAGleasonConicalGearSetModalAnalysis':
        """AGMAGleasonConicalGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4525.AGMAGleasonConicalGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_modal_analysis(self) -> '_4526.AssemblyModalAnalysis':
        """AssemblyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4526.AssemblyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_modal_analysis(self) -> '_4527.BearingModalAnalysis':
        """BearingModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4527.BearingModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_modal_analysis(self) -> '_4529.BeltDriveModalAnalysis':
        """BeltDriveModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4529.BeltDriveModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_modal_analysis(self) -> '_4531.BevelDifferentialGearModalAnalysis':
        """BevelDifferentialGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4531.BevelDifferentialGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_modal_analysis(self) -> '_4532.BevelDifferentialGearSetModalAnalysis':
        """BevelDifferentialGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4532.BevelDifferentialGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_modal_analysis(self) -> '_4533.BevelDifferentialPlanetGearModalAnalysis':
        """BevelDifferentialPlanetGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4533.BevelDifferentialPlanetGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_modal_analysis(self) -> '_4534.BevelDifferentialSunGearModalAnalysis':
        """BevelDifferentialSunGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4534.BevelDifferentialSunGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_modal_analysis(self) -> '_4536.BevelGearModalAnalysis':
        """BevelGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4536.BevelGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_modal_analysis(self) -> '_4537.BevelGearSetModalAnalysis':
        """BevelGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4537.BevelGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_modal_analysis(self) -> '_4538.BoltedJointModalAnalysis':
        """BoltedJointModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4538.BoltedJointModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_modal_analysis(self) -> '_4539.BoltModalAnalysis':
        """BoltModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4539.BoltModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_modal_analysis(self) -> '_4541.ClutchHalfModalAnalysis':
        """ClutchHalfModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4541.ClutchHalfModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_modal_analysis(self) -> '_4542.ClutchModalAnalysis':
        """ClutchModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4542.ClutchModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_modal_analysis(self) -> '_4544.ComponentModalAnalysis':
        """ComponentModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4544.ComponentModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_modal_analysis(self) -> '_4546.ConceptCouplingHalfModalAnalysis':
        """ConceptCouplingHalfModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4546.ConceptCouplingHalfModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_modal_analysis(self) -> '_4547.ConceptCouplingModalAnalysis':
        """ConceptCouplingModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4547.ConceptCouplingModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_modal_analysis(self) -> '_4549.ConceptGearModalAnalysis':
        """ConceptGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4549.ConceptGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_modal_analysis(self) -> '_4550.ConceptGearSetModalAnalysis':
        """ConceptGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4550.ConceptGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_modal_analysis(self) -> '_4552.ConicalGearModalAnalysis':
        """ConicalGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4552.ConicalGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_modal_analysis(self) -> '_4553.ConicalGearSetModalAnalysis':
        """ConicalGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4553.ConicalGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_modal_analysis(self) -> '_4555.ConnectorModalAnalysis':
        """ConnectorModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4555.ConnectorModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_modal_analysis(self) -> '_4558.CouplingHalfModalAnalysis':
        """CouplingHalfModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4558.CouplingHalfModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_modal_analysis(self) -> '_4559.CouplingModalAnalysis':
        """CouplingModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4559.CouplingModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_modal_analysis(self) -> '_4561.CVTModalAnalysis':
        """CVTModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4561.CVTModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_modal_analysis(self) -> '_4562.CVTPulleyModalAnalysis':
        """CVTPulleyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4562.CVTPulleyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_modal_analysis(self) -> '_4563.CycloidalAssemblyModalAnalysis':
        """CycloidalAssemblyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4563.CycloidalAssemblyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_modal_analysis(self) -> '_4565.CycloidalDiscModalAnalysis':
        """CycloidalDiscModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4565.CycloidalDiscModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_modal_analysis(self) -> '_4568.CylindricalGearModalAnalysis':
        """CylindricalGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4568.CylindricalGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_modal_analysis(self) -> '_4569.CylindricalGearSetModalAnalysis':
        """CylindricalGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4569.CylindricalGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_modal_analysis(self) -> '_4570.CylindricalPlanetGearModalAnalysis':
        """CylindricalPlanetGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4570.CylindricalPlanetGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_modal_analysis(self) -> '_4571.DatumModalAnalysis':
        """DatumModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4571.DatumModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_modal_analysis(self) -> '_4574.ExternalCADModelModalAnalysis':
        """ExternalCADModelModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4574.ExternalCADModelModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_modal_analysis(self) -> '_4576.FaceGearModalAnalysis':
        """FaceGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4576.FaceGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_modal_analysis(self) -> '_4577.FaceGearSetModalAnalysis':
        """FaceGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4577.FaceGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_modal_analysis(self) -> '_4578.FEPartModalAnalysis':
        """FEPartModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4578.FEPartModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_modal_analysis(self) -> '_4579.FlexiblePinAssemblyModalAnalysis':
        """FlexiblePinAssemblyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4579.FlexiblePinAssemblyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_modal_analysis(self) -> '_4582.GearModalAnalysis':
        """GearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4582.GearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_modal_analysis(self) -> '_4583.GearSetModalAnalysis':
        """GearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4583.GearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_modal_analysis(self) -> '_4584.GuideDxfModelModalAnalysis':
        """GuideDxfModelModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4584.GuideDxfModelModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_modal_analysis(self) -> '_4586.HypoidGearModalAnalysis':
        """HypoidGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4586.HypoidGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_modal_analysis(self) -> '_4587.HypoidGearSetModalAnalysis':
        """HypoidGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4587.HypoidGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_modal_analysis(self) -> '_4590.KlingelnbergCycloPalloidConicalGearModalAnalysis':
        """KlingelnbergCycloPalloidConicalGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4590.KlingelnbergCycloPalloidConicalGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_modal_analysis(self) -> '_4591.KlingelnbergCycloPalloidConicalGearSetModalAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4591.KlingelnbergCycloPalloidConicalGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_modal_analysis(self) -> '_4593.KlingelnbergCycloPalloidHypoidGearModalAnalysis':
        """KlingelnbergCycloPalloidHypoidGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4593.KlingelnbergCycloPalloidHypoidGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_modal_analysis(self) -> '_4594.KlingelnbergCycloPalloidHypoidGearSetModalAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4594.KlingelnbergCycloPalloidHypoidGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_modal_analysis(self) -> '_4596.KlingelnbergCycloPalloidSpiralBevelGearModalAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4596.KlingelnbergCycloPalloidSpiralBevelGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_modal_analysis(self) -> '_4597.KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4597.KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_modal_analysis(self) -> '_4598.MassDiscModalAnalysis':
        """MassDiscModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4598.MassDiscModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_modal_analysis(self) -> '_4599.MeasurementComponentModalAnalysis':
        """MeasurementComponentModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4599.MeasurementComponentModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_modal_analysis(self) -> '_4603.MountableComponentModalAnalysis':
        """MountableComponentModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4603.MountableComponentModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_modal_analysis(self) -> '_4605.OilSealModalAnalysis':
        """OilSealModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4605.OilSealModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_modal_analysis(self) -> '_4607.PartModalAnalysis':
        """PartModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4607.PartModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_modal_analysis(self) -> '_4609.PartToPartShearCouplingHalfModalAnalysis':
        """PartToPartShearCouplingHalfModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4609.PartToPartShearCouplingHalfModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_modal_analysis(self) -> '_4610.PartToPartShearCouplingModalAnalysis':
        """PartToPartShearCouplingModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4610.PartToPartShearCouplingModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_modal_analysis(self) -> '_4612.PlanetaryGearSetModalAnalysis':
        """PlanetaryGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4612.PlanetaryGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_modal_analysis(self) -> '_4613.PlanetCarrierModalAnalysis':
        """PlanetCarrierModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4613.PlanetCarrierModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_modal_analysis(self) -> '_4614.PointLoadModalAnalysis':
        """PointLoadModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4614.PointLoadModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_modal_analysis(self) -> '_4615.PowerLoadModalAnalysis':
        """PowerLoadModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4615.PowerLoadModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_modal_analysis(self) -> '_4616.PulleyModalAnalysis':
        """PulleyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4616.PulleyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_modal_analysis(self) -> '_4617.RingPinsModalAnalysis':
        """RingPinsModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4617.RingPinsModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_modal_analysis(self) -> '_4619.RollingRingAssemblyModalAnalysis':
        """RollingRingAssemblyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4619.RollingRingAssemblyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_modal_analysis(self) -> '_4621.RollingRingModalAnalysis':
        """RollingRingModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4621.RollingRingModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_modal_analysis(self) -> '_4622.RootAssemblyModalAnalysis':
        """RootAssemblyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4622.RootAssemblyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_modal_analysis(self) -> '_4623.ShaftHubConnectionModalAnalysis':
        """ShaftHubConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4623.ShaftHubConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_modal_analysis(self) -> '_4624.ShaftModalAnalysis':
        """ShaftModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4624.ShaftModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_modal_analysis(self) -> '_4627.SpecialisedAssemblyModalAnalysis':
        """SpecialisedAssemblyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4627.SpecialisedAssemblyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_modal_analysis(self) -> '_4629.SpiralBevelGearModalAnalysis':
        """SpiralBevelGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4629.SpiralBevelGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_modal_analysis(self) -> '_4630.SpiralBevelGearSetModalAnalysis':
        """SpiralBevelGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4630.SpiralBevelGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_modal_analysis(self) -> '_4632.SpringDamperHalfModalAnalysis':
        """SpringDamperHalfModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4632.SpringDamperHalfModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_modal_analysis(self) -> '_4633.SpringDamperModalAnalysis':
        """SpringDamperModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4633.SpringDamperModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_modal_analysis(self) -> '_4635.StraightBevelDiffGearModalAnalysis':
        """StraightBevelDiffGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4635.StraightBevelDiffGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_modal_analysis(self) -> '_4636.StraightBevelDiffGearSetModalAnalysis':
        """StraightBevelDiffGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4636.StraightBevelDiffGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_modal_analysis(self) -> '_4638.StraightBevelGearModalAnalysis':
        """StraightBevelGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4638.StraightBevelGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_modal_analysis(self) -> '_4639.StraightBevelGearSetModalAnalysis':
        """StraightBevelGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4639.StraightBevelGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_modal_analysis(self) -> '_4640.StraightBevelPlanetGearModalAnalysis':
        """StraightBevelPlanetGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4640.StraightBevelPlanetGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_modal_analysis(self) -> '_4641.StraightBevelSunGearModalAnalysis':
        """StraightBevelSunGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4641.StraightBevelSunGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_modal_analysis(self) -> '_4642.SynchroniserHalfModalAnalysis':
        """SynchroniserHalfModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4642.SynchroniserHalfModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_modal_analysis(self) -> '_4643.SynchroniserModalAnalysis':
        """SynchroniserModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4643.SynchroniserModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_modal_analysis(self) -> '_4644.SynchroniserPartModalAnalysis':
        """SynchroniserPartModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4644.SynchroniserPartModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_modal_analysis(self) -> '_4645.SynchroniserSleeveModalAnalysis':
        """SynchroniserSleeveModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4645.SynchroniserSleeveModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_modal_analysis(self) -> '_4647.TorqueConverterModalAnalysis':
        """TorqueConverterModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4647.TorqueConverterModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_modal_analysis(self) -> '_4648.TorqueConverterPumpModalAnalysis':
        """TorqueConverterPumpModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4648.TorqueConverterPumpModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_modal_analysis(self) -> '_4649.TorqueConverterTurbineModalAnalysis':
        """TorqueConverterTurbineModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4649.TorqueConverterTurbineModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_modal_analysis(self) -> '_4650.UnbalancedMassModalAnalysis':
        """UnbalancedMassModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4650.UnbalancedMassModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_modal_analysis(self) -> '_4651.VirtualComponentModalAnalysis':
        """VirtualComponentModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4651.VirtualComponentModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_modal_analysis(self) -> '_4656.WormGearModalAnalysis':
        """WormGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4656.WormGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_modal_analysis(self) -> '_4657.WormGearSetModalAnalysis':
        """WormGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4657.WormGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_modal_analysis(self) -> '_4659.ZerolBevelGearModalAnalysis':
        """ZerolBevelGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4659.ZerolBevelGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_modal_analysis(self) -> '_4660.ZerolBevelGearSetModalAnalysis':
        """ZerolBevelGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4660.ZerolBevelGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_modal_analysis_at_a_stiffness(self) -> '_4802.AbstractAssemblyModalAnalysisAtAStiffness':
        """AbstractAssemblyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4802.AbstractAssemblyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_modal_analysis_at_a_stiffness(self) -> '_4803.AbstractShaftModalAnalysisAtAStiffness':
        """AbstractShaftModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4803.AbstractShaftModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_modal_analysis_at_a_stiffness(self) -> '_4804.AbstractShaftOrHousingModalAnalysisAtAStiffness':
        """AbstractShaftOrHousingModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4804.AbstractShaftOrHousingModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_modal_analysis_at_a_stiffness(self) -> '_4807.AGMAGleasonConicalGearModalAnalysisAtAStiffness':
        """AGMAGleasonConicalGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4807.AGMAGleasonConicalGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_modal_analysis_at_a_stiffness(self) -> '_4808.AGMAGleasonConicalGearSetModalAnalysisAtAStiffness':
        """AGMAGleasonConicalGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4808.AGMAGleasonConicalGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_modal_analysis_at_a_stiffness(self) -> '_4809.AssemblyModalAnalysisAtAStiffness':
        """AssemblyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4809.AssemblyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_modal_analysis_at_a_stiffness(self) -> '_4810.BearingModalAnalysisAtAStiffness':
        """BearingModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4810.BearingModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_modal_analysis_at_a_stiffness(self) -> '_4812.BeltDriveModalAnalysisAtAStiffness':
        """BeltDriveModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4812.BeltDriveModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_modal_analysis_at_a_stiffness(self) -> '_4814.BevelDifferentialGearModalAnalysisAtAStiffness':
        """BevelDifferentialGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4814.BevelDifferentialGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_modal_analysis_at_a_stiffness(self) -> '_4815.BevelDifferentialGearSetModalAnalysisAtAStiffness':
        """BevelDifferentialGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4815.BevelDifferentialGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_modal_analysis_at_a_stiffness(self) -> '_4816.BevelDifferentialPlanetGearModalAnalysisAtAStiffness':
        """BevelDifferentialPlanetGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4816.BevelDifferentialPlanetGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_modal_analysis_at_a_stiffness(self) -> '_4817.BevelDifferentialSunGearModalAnalysisAtAStiffness':
        """BevelDifferentialSunGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4817.BevelDifferentialSunGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_modal_analysis_at_a_stiffness(self) -> '_4819.BevelGearModalAnalysisAtAStiffness':
        """BevelGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4819.BevelGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_modal_analysis_at_a_stiffness(self) -> '_4820.BevelGearSetModalAnalysisAtAStiffness':
        """BevelGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4820.BevelGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_modal_analysis_at_a_stiffness(self) -> '_4821.BoltedJointModalAnalysisAtAStiffness':
        """BoltedJointModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4821.BoltedJointModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_modal_analysis_at_a_stiffness(self) -> '_4822.BoltModalAnalysisAtAStiffness':
        """BoltModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4822.BoltModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_modal_analysis_at_a_stiffness(self) -> '_4824.ClutchHalfModalAnalysisAtAStiffness':
        """ClutchHalfModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4824.ClutchHalfModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_modal_analysis_at_a_stiffness(self) -> '_4825.ClutchModalAnalysisAtAStiffness':
        """ClutchModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4825.ClutchModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_modal_analysis_at_a_stiffness(self) -> '_4827.ComponentModalAnalysisAtAStiffness':
        """ComponentModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4827.ComponentModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_modal_analysis_at_a_stiffness(self) -> '_4829.ConceptCouplingHalfModalAnalysisAtAStiffness':
        """ConceptCouplingHalfModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4829.ConceptCouplingHalfModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_modal_analysis_at_a_stiffness(self) -> '_4830.ConceptCouplingModalAnalysisAtAStiffness':
        """ConceptCouplingModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4830.ConceptCouplingModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_modal_analysis_at_a_stiffness(self) -> '_4832.ConceptGearModalAnalysisAtAStiffness':
        """ConceptGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4832.ConceptGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_modal_analysis_at_a_stiffness(self) -> '_4833.ConceptGearSetModalAnalysisAtAStiffness':
        """ConceptGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4833.ConceptGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_modal_analysis_at_a_stiffness(self) -> '_4835.ConicalGearModalAnalysisAtAStiffness':
        """ConicalGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4835.ConicalGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_modal_analysis_at_a_stiffness(self) -> '_4836.ConicalGearSetModalAnalysisAtAStiffness':
        """ConicalGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4836.ConicalGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_modal_analysis_at_a_stiffness(self) -> '_4838.ConnectorModalAnalysisAtAStiffness':
        """ConnectorModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4838.ConnectorModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_modal_analysis_at_a_stiffness(self) -> '_4840.CouplingHalfModalAnalysisAtAStiffness':
        """CouplingHalfModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4840.CouplingHalfModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_modal_analysis_at_a_stiffness(self) -> '_4841.CouplingModalAnalysisAtAStiffness':
        """CouplingModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4841.CouplingModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_modal_analysis_at_a_stiffness(self) -> '_4843.CVTModalAnalysisAtAStiffness':
        """CVTModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4843.CVTModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_modal_analysis_at_a_stiffness(self) -> '_4844.CVTPulleyModalAnalysisAtAStiffness':
        """CVTPulleyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4844.CVTPulleyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_modal_analysis_at_a_stiffness(self) -> '_4845.CycloidalAssemblyModalAnalysisAtAStiffness':
        """CycloidalAssemblyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4845.CycloidalAssemblyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_modal_analysis_at_a_stiffness(self) -> '_4847.CycloidalDiscModalAnalysisAtAStiffness':
        """CycloidalDiscModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4847.CycloidalDiscModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_modal_analysis_at_a_stiffness(self) -> '_4850.CylindricalGearModalAnalysisAtAStiffness':
        """CylindricalGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4850.CylindricalGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_modal_analysis_at_a_stiffness(self) -> '_4851.CylindricalGearSetModalAnalysisAtAStiffness':
        """CylindricalGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4851.CylindricalGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_modal_analysis_at_a_stiffness(self) -> '_4852.CylindricalPlanetGearModalAnalysisAtAStiffness':
        """CylindricalPlanetGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4852.CylindricalPlanetGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_modal_analysis_at_a_stiffness(self) -> '_4853.DatumModalAnalysisAtAStiffness':
        """DatumModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4853.DatumModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_modal_analysis_at_a_stiffness(self) -> '_4855.ExternalCADModelModalAnalysisAtAStiffness':
        """ExternalCADModelModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4855.ExternalCADModelModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_modal_analysis_at_a_stiffness(self) -> '_4857.FaceGearModalAnalysisAtAStiffness':
        """FaceGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4857.FaceGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_modal_analysis_at_a_stiffness(self) -> '_4858.FaceGearSetModalAnalysisAtAStiffness':
        """FaceGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4858.FaceGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_modal_analysis_at_a_stiffness(self) -> '_4859.FEPartModalAnalysisAtAStiffness':
        """FEPartModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4859.FEPartModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_modal_analysis_at_a_stiffness(self) -> '_4860.FlexiblePinAssemblyModalAnalysisAtAStiffness':
        """FlexiblePinAssemblyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4860.FlexiblePinAssemblyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_modal_analysis_at_a_stiffness(self) -> '_4862.GearModalAnalysisAtAStiffness':
        """GearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4862.GearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_modal_analysis_at_a_stiffness(self) -> '_4863.GearSetModalAnalysisAtAStiffness':
        """GearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4863.GearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_modal_analysis_at_a_stiffness(self) -> '_4864.GuideDxfModelModalAnalysisAtAStiffness':
        """GuideDxfModelModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4864.GuideDxfModelModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_modal_analysis_at_a_stiffness(self) -> '_4866.HypoidGearModalAnalysisAtAStiffness':
        """HypoidGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4866.HypoidGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_modal_analysis_at_a_stiffness(self) -> '_4867.HypoidGearSetModalAnalysisAtAStiffness':
        """HypoidGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4867.HypoidGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_modal_analysis_at_a_stiffness(self) -> '_4870.KlingelnbergCycloPalloidConicalGearModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidConicalGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4870.KlingelnbergCycloPalloidConicalGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_modal_analysis_at_a_stiffness(self) -> '_4871.KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4871.KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_modal_analysis_at_a_stiffness(self) -> '_4873.KlingelnbergCycloPalloidHypoidGearModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidHypoidGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4873.KlingelnbergCycloPalloidHypoidGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_modal_analysis_at_a_stiffness(self) -> '_4874.KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4874.KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_modal_analysis_at_a_stiffness(self) -> '_4876.KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4876.KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_modal_analysis_at_a_stiffness(self) -> '_4877.KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4877.KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_modal_analysis_at_a_stiffness(self) -> '_4878.MassDiscModalAnalysisAtAStiffness':
        """MassDiscModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4878.MassDiscModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_modal_analysis_at_a_stiffness(self) -> '_4879.MeasurementComponentModalAnalysisAtAStiffness':
        """MeasurementComponentModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4879.MeasurementComponentModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_modal_analysis_at_a_stiffness(self) -> '_4880.MountableComponentModalAnalysisAtAStiffness':
        """MountableComponentModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4880.MountableComponentModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_modal_analysis_at_a_stiffness(self) -> '_4881.OilSealModalAnalysisAtAStiffness':
        """OilSealModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4881.OilSealModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_modal_analysis_at_a_stiffness(self) -> '_4882.PartModalAnalysisAtAStiffness':
        """PartModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4882.PartModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_modal_analysis_at_a_stiffness(self) -> '_4884.PartToPartShearCouplingHalfModalAnalysisAtAStiffness':
        """PartToPartShearCouplingHalfModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4884.PartToPartShearCouplingHalfModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_modal_analysis_at_a_stiffness(self) -> '_4885.PartToPartShearCouplingModalAnalysisAtAStiffness':
        """PartToPartShearCouplingModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4885.PartToPartShearCouplingModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_modal_analysis_at_a_stiffness(self) -> '_4887.PlanetaryGearSetModalAnalysisAtAStiffness':
        """PlanetaryGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4887.PlanetaryGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_modal_analysis_at_a_stiffness(self) -> '_4888.PlanetCarrierModalAnalysisAtAStiffness':
        """PlanetCarrierModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4888.PlanetCarrierModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_modal_analysis_at_a_stiffness(self) -> '_4889.PointLoadModalAnalysisAtAStiffness':
        """PointLoadModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4889.PointLoadModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_modal_analysis_at_a_stiffness(self) -> '_4890.PowerLoadModalAnalysisAtAStiffness':
        """PowerLoadModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4890.PowerLoadModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_modal_analysis_at_a_stiffness(self) -> '_4891.PulleyModalAnalysisAtAStiffness':
        """PulleyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4891.PulleyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_modal_analysis_at_a_stiffness(self) -> '_4892.RingPinsModalAnalysisAtAStiffness':
        """RingPinsModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4892.RingPinsModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_modal_analysis_at_a_stiffness(self) -> '_4894.RollingRingAssemblyModalAnalysisAtAStiffness':
        """RollingRingAssemblyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4894.RollingRingAssemblyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_modal_analysis_at_a_stiffness(self) -> '_4896.RollingRingModalAnalysisAtAStiffness':
        """RollingRingModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4896.RollingRingModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_modal_analysis_at_a_stiffness(self) -> '_4897.RootAssemblyModalAnalysisAtAStiffness':
        """RootAssemblyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4897.RootAssemblyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_modal_analysis_at_a_stiffness(self) -> '_4898.ShaftHubConnectionModalAnalysisAtAStiffness':
        """ShaftHubConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4898.ShaftHubConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_modal_analysis_at_a_stiffness(self) -> '_4899.ShaftModalAnalysisAtAStiffness':
        """ShaftModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4899.ShaftModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_modal_analysis_at_a_stiffness(self) -> '_4901.SpecialisedAssemblyModalAnalysisAtAStiffness':
        """SpecialisedAssemblyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4901.SpecialisedAssemblyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_modal_analysis_at_a_stiffness(self) -> '_4903.SpiralBevelGearModalAnalysisAtAStiffness':
        """SpiralBevelGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4903.SpiralBevelGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_modal_analysis_at_a_stiffness(self) -> '_4904.SpiralBevelGearSetModalAnalysisAtAStiffness':
        """SpiralBevelGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4904.SpiralBevelGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_modal_analysis_at_a_stiffness(self) -> '_4906.SpringDamperHalfModalAnalysisAtAStiffness':
        """SpringDamperHalfModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4906.SpringDamperHalfModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_modal_analysis_at_a_stiffness(self) -> '_4907.SpringDamperModalAnalysisAtAStiffness':
        """SpringDamperModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4907.SpringDamperModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_modal_analysis_at_a_stiffness(self) -> '_4909.StraightBevelDiffGearModalAnalysisAtAStiffness':
        """StraightBevelDiffGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4909.StraightBevelDiffGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_modal_analysis_at_a_stiffness(self) -> '_4910.StraightBevelDiffGearSetModalAnalysisAtAStiffness':
        """StraightBevelDiffGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4910.StraightBevelDiffGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_modal_analysis_at_a_stiffness(self) -> '_4912.StraightBevelGearModalAnalysisAtAStiffness':
        """StraightBevelGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4912.StraightBevelGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_modal_analysis_at_a_stiffness(self) -> '_4913.StraightBevelGearSetModalAnalysisAtAStiffness':
        """StraightBevelGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4913.StraightBevelGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_modal_analysis_at_a_stiffness(self) -> '_4914.StraightBevelPlanetGearModalAnalysisAtAStiffness':
        """StraightBevelPlanetGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4914.StraightBevelPlanetGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_modal_analysis_at_a_stiffness(self) -> '_4915.StraightBevelSunGearModalAnalysisAtAStiffness':
        """StraightBevelSunGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4915.StraightBevelSunGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_modal_analysis_at_a_stiffness(self) -> '_4916.SynchroniserHalfModalAnalysisAtAStiffness':
        """SynchroniserHalfModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4916.SynchroniserHalfModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_modal_analysis_at_a_stiffness(self) -> '_4917.SynchroniserModalAnalysisAtAStiffness':
        """SynchroniserModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4917.SynchroniserModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_modal_analysis_at_a_stiffness(self) -> '_4918.SynchroniserPartModalAnalysisAtAStiffness':
        """SynchroniserPartModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4918.SynchroniserPartModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_modal_analysis_at_a_stiffness(self) -> '_4919.SynchroniserSleeveModalAnalysisAtAStiffness':
        """SynchroniserSleeveModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4919.SynchroniserSleeveModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_modal_analysis_at_a_stiffness(self) -> '_4921.TorqueConverterModalAnalysisAtAStiffness':
        """TorqueConverterModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4921.TorqueConverterModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_modal_analysis_at_a_stiffness(self) -> '_4922.TorqueConverterPumpModalAnalysisAtAStiffness':
        """TorqueConverterPumpModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4922.TorqueConverterPumpModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_modal_analysis_at_a_stiffness(self) -> '_4923.TorqueConverterTurbineModalAnalysisAtAStiffness':
        """TorqueConverterTurbineModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4923.TorqueConverterTurbineModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_modal_analysis_at_a_stiffness(self) -> '_4924.UnbalancedMassModalAnalysisAtAStiffness':
        """UnbalancedMassModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4924.UnbalancedMassModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_modal_analysis_at_a_stiffness(self) -> '_4925.VirtualComponentModalAnalysisAtAStiffness':
        """VirtualComponentModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4925.VirtualComponentModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_modal_analysis_at_a_stiffness(self) -> '_4927.WormGearModalAnalysisAtAStiffness':
        """WormGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4927.WormGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_modal_analysis_at_a_stiffness(self) -> '_4928.WormGearSetModalAnalysisAtAStiffness':
        """WormGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4928.WormGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_modal_analysis_at_a_stiffness(self) -> '_4930.ZerolBevelGearModalAnalysisAtAStiffness':
        """ZerolBevelGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4930.ZerolBevelGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_modal_analysis_at_a_stiffness(self) -> '_4931.ZerolBevelGearSetModalAnalysisAtAStiffness':
        """ZerolBevelGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4931.ZerolBevelGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_modal_analysis_at_a_speed(self) -> '_5061.AbstractAssemblyModalAnalysisAtASpeed':
        """AbstractAssemblyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5061.AbstractAssemblyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_modal_analysis_at_a_speed(self) -> '_5062.AbstractShaftModalAnalysisAtASpeed':
        """AbstractShaftModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5062.AbstractShaftModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_modal_analysis_at_a_speed(self) -> '_5063.AbstractShaftOrHousingModalAnalysisAtASpeed':
        """AbstractShaftOrHousingModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5063.AbstractShaftOrHousingModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_modal_analysis_at_a_speed(self) -> '_5066.AGMAGleasonConicalGearModalAnalysisAtASpeed':
        """AGMAGleasonConicalGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5066.AGMAGleasonConicalGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_modal_analysis_at_a_speed(self) -> '_5067.AGMAGleasonConicalGearSetModalAnalysisAtASpeed':
        """AGMAGleasonConicalGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5067.AGMAGleasonConicalGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_modal_analysis_at_a_speed(self) -> '_5068.AssemblyModalAnalysisAtASpeed':
        """AssemblyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5068.AssemblyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_modal_analysis_at_a_speed(self) -> '_5069.BearingModalAnalysisAtASpeed':
        """BearingModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5069.BearingModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_modal_analysis_at_a_speed(self) -> '_5071.BeltDriveModalAnalysisAtASpeed':
        """BeltDriveModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5071.BeltDriveModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_modal_analysis_at_a_speed(self) -> '_5073.BevelDifferentialGearModalAnalysisAtASpeed':
        """BevelDifferentialGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5073.BevelDifferentialGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_modal_analysis_at_a_speed(self) -> '_5074.BevelDifferentialGearSetModalAnalysisAtASpeed':
        """BevelDifferentialGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5074.BevelDifferentialGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_modal_analysis_at_a_speed(self) -> '_5075.BevelDifferentialPlanetGearModalAnalysisAtASpeed':
        """BevelDifferentialPlanetGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5075.BevelDifferentialPlanetGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_modal_analysis_at_a_speed(self) -> '_5076.BevelDifferentialSunGearModalAnalysisAtASpeed':
        """BevelDifferentialSunGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5076.BevelDifferentialSunGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_modal_analysis_at_a_speed(self) -> '_5078.BevelGearModalAnalysisAtASpeed':
        """BevelGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5078.BevelGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_modal_analysis_at_a_speed(self) -> '_5079.BevelGearSetModalAnalysisAtASpeed':
        """BevelGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5079.BevelGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_modal_analysis_at_a_speed(self) -> '_5080.BoltedJointModalAnalysisAtASpeed':
        """BoltedJointModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5080.BoltedJointModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_modal_analysis_at_a_speed(self) -> '_5081.BoltModalAnalysisAtASpeed':
        """BoltModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5081.BoltModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_modal_analysis_at_a_speed(self) -> '_5083.ClutchHalfModalAnalysisAtASpeed':
        """ClutchHalfModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5083.ClutchHalfModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_modal_analysis_at_a_speed(self) -> '_5084.ClutchModalAnalysisAtASpeed':
        """ClutchModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5084.ClutchModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_modal_analysis_at_a_speed(self) -> '_5086.ComponentModalAnalysisAtASpeed':
        """ComponentModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5086.ComponentModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_modal_analysis_at_a_speed(self) -> '_5088.ConceptCouplingHalfModalAnalysisAtASpeed':
        """ConceptCouplingHalfModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5088.ConceptCouplingHalfModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_modal_analysis_at_a_speed(self) -> '_5089.ConceptCouplingModalAnalysisAtASpeed':
        """ConceptCouplingModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5089.ConceptCouplingModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_modal_analysis_at_a_speed(self) -> '_5091.ConceptGearModalAnalysisAtASpeed':
        """ConceptGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5091.ConceptGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_modal_analysis_at_a_speed(self) -> '_5092.ConceptGearSetModalAnalysisAtASpeed':
        """ConceptGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5092.ConceptGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_modal_analysis_at_a_speed(self) -> '_5094.ConicalGearModalAnalysisAtASpeed':
        """ConicalGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5094.ConicalGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_modal_analysis_at_a_speed(self) -> '_5095.ConicalGearSetModalAnalysisAtASpeed':
        """ConicalGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5095.ConicalGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_modal_analysis_at_a_speed(self) -> '_5097.ConnectorModalAnalysisAtASpeed':
        """ConnectorModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5097.ConnectorModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_modal_analysis_at_a_speed(self) -> '_5099.CouplingHalfModalAnalysisAtASpeed':
        """CouplingHalfModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5099.CouplingHalfModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_modal_analysis_at_a_speed(self) -> '_5100.CouplingModalAnalysisAtASpeed':
        """CouplingModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5100.CouplingModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_modal_analysis_at_a_speed(self) -> '_5102.CVTModalAnalysisAtASpeed':
        """CVTModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5102.CVTModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_modal_analysis_at_a_speed(self) -> '_5103.CVTPulleyModalAnalysisAtASpeed':
        """CVTPulleyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5103.CVTPulleyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_modal_analysis_at_a_speed(self) -> '_5104.CycloidalAssemblyModalAnalysisAtASpeed':
        """CycloidalAssemblyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5104.CycloidalAssemblyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_modal_analysis_at_a_speed(self) -> '_5106.CycloidalDiscModalAnalysisAtASpeed':
        """CycloidalDiscModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5106.CycloidalDiscModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_modal_analysis_at_a_speed(self) -> '_5109.CylindricalGearModalAnalysisAtASpeed':
        """CylindricalGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5109.CylindricalGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_modal_analysis_at_a_speed(self) -> '_5110.CylindricalGearSetModalAnalysisAtASpeed':
        """CylindricalGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5110.CylindricalGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_modal_analysis_at_a_speed(self) -> '_5111.CylindricalPlanetGearModalAnalysisAtASpeed':
        """CylindricalPlanetGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5111.CylindricalPlanetGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_modal_analysis_at_a_speed(self) -> '_5112.DatumModalAnalysisAtASpeed':
        """DatumModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5112.DatumModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_modal_analysis_at_a_speed(self) -> '_5113.ExternalCADModelModalAnalysisAtASpeed':
        """ExternalCADModelModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5113.ExternalCADModelModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_modal_analysis_at_a_speed(self) -> '_5115.FaceGearModalAnalysisAtASpeed':
        """FaceGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5115.FaceGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_modal_analysis_at_a_speed(self) -> '_5116.FaceGearSetModalAnalysisAtASpeed':
        """FaceGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5116.FaceGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_modal_analysis_at_a_speed(self) -> '_5117.FEPartModalAnalysisAtASpeed':
        """FEPartModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5117.FEPartModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_modal_analysis_at_a_speed(self) -> '_5118.FlexiblePinAssemblyModalAnalysisAtASpeed':
        """FlexiblePinAssemblyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5118.FlexiblePinAssemblyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_modal_analysis_at_a_speed(self) -> '_5120.GearModalAnalysisAtASpeed':
        """GearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5120.GearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_modal_analysis_at_a_speed(self) -> '_5121.GearSetModalAnalysisAtASpeed':
        """GearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5121.GearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_modal_analysis_at_a_speed(self) -> '_5122.GuideDxfModelModalAnalysisAtASpeed':
        """GuideDxfModelModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5122.GuideDxfModelModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_modal_analysis_at_a_speed(self) -> '_5124.HypoidGearModalAnalysisAtASpeed':
        """HypoidGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5124.HypoidGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_modal_analysis_at_a_speed(self) -> '_5125.HypoidGearSetModalAnalysisAtASpeed':
        """HypoidGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5125.HypoidGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_modal_analysis_at_a_speed(self) -> '_5128.KlingelnbergCycloPalloidConicalGearModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidConicalGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5128.KlingelnbergCycloPalloidConicalGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_modal_analysis_at_a_speed(self) -> '_5129.KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5129.KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_modal_analysis_at_a_speed(self) -> '_5131.KlingelnbergCycloPalloidHypoidGearModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5131.KlingelnbergCycloPalloidHypoidGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_modal_analysis_at_a_speed(self) -> '_5132.KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5132.KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_modal_analysis_at_a_speed(self) -> '_5134.KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5134.KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_modal_analysis_at_a_speed(self) -> '_5135.KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5135.KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_modal_analysis_at_a_speed(self) -> '_5136.MassDiscModalAnalysisAtASpeed':
        """MassDiscModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5136.MassDiscModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_modal_analysis_at_a_speed(self) -> '_5137.MeasurementComponentModalAnalysisAtASpeed':
        """MeasurementComponentModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5137.MeasurementComponentModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_modal_analysis_at_a_speed(self) -> '_5138.MountableComponentModalAnalysisAtASpeed':
        """MountableComponentModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5138.MountableComponentModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_modal_analysis_at_a_speed(self) -> '_5139.OilSealModalAnalysisAtASpeed':
        """OilSealModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5139.OilSealModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_modal_analysis_at_a_speed(self) -> '_5140.PartModalAnalysisAtASpeed':
        """PartModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5140.PartModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_modal_analysis_at_a_speed(self) -> '_5142.PartToPartShearCouplingHalfModalAnalysisAtASpeed':
        """PartToPartShearCouplingHalfModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5142.PartToPartShearCouplingHalfModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_modal_analysis_at_a_speed(self) -> '_5143.PartToPartShearCouplingModalAnalysisAtASpeed':
        """PartToPartShearCouplingModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5143.PartToPartShearCouplingModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_modal_analysis_at_a_speed(self) -> '_5145.PlanetaryGearSetModalAnalysisAtASpeed':
        """PlanetaryGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5145.PlanetaryGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_modal_analysis_at_a_speed(self) -> '_5146.PlanetCarrierModalAnalysisAtASpeed':
        """PlanetCarrierModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5146.PlanetCarrierModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_modal_analysis_at_a_speed(self) -> '_5147.PointLoadModalAnalysisAtASpeed':
        """PointLoadModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5147.PointLoadModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_modal_analysis_at_a_speed(self) -> '_5148.PowerLoadModalAnalysisAtASpeed':
        """PowerLoadModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5148.PowerLoadModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_modal_analysis_at_a_speed(self) -> '_5149.PulleyModalAnalysisAtASpeed':
        """PulleyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5149.PulleyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_modal_analysis_at_a_speed(self) -> '_5150.RingPinsModalAnalysisAtASpeed':
        """RingPinsModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5150.RingPinsModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_modal_analysis_at_a_speed(self) -> '_5152.RollingRingAssemblyModalAnalysisAtASpeed':
        """RollingRingAssemblyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5152.RollingRingAssemblyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_modal_analysis_at_a_speed(self) -> '_5154.RollingRingModalAnalysisAtASpeed':
        """RollingRingModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5154.RollingRingModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_modal_analysis_at_a_speed(self) -> '_5155.RootAssemblyModalAnalysisAtASpeed':
        """RootAssemblyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5155.RootAssemblyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_modal_analysis_at_a_speed(self) -> '_5156.ShaftHubConnectionModalAnalysisAtASpeed':
        """ShaftHubConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5156.ShaftHubConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_modal_analysis_at_a_speed(self) -> '_5157.ShaftModalAnalysisAtASpeed':
        """ShaftModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5157.ShaftModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_modal_analysis_at_a_speed(self) -> '_5159.SpecialisedAssemblyModalAnalysisAtASpeed':
        """SpecialisedAssemblyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5159.SpecialisedAssemblyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_modal_analysis_at_a_speed(self) -> '_5161.SpiralBevelGearModalAnalysisAtASpeed':
        """SpiralBevelGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5161.SpiralBevelGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_modal_analysis_at_a_speed(self) -> '_5162.SpiralBevelGearSetModalAnalysisAtASpeed':
        """SpiralBevelGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5162.SpiralBevelGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_modal_analysis_at_a_speed(self) -> '_5164.SpringDamperHalfModalAnalysisAtASpeed':
        """SpringDamperHalfModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5164.SpringDamperHalfModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_modal_analysis_at_a_speed(self) -> '_5165.SpringDamperModalAnalysisAtASpeed':
        """SpringDamperModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5165.SpringDamperModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_modal_analysis_at_a_speed(self) -> '_5167.StraightBevelDiffGearModalAnalysisAtASpeed':
        """StraightBevelDiffGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5167.StraightBevelDiffGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_modal_analysis_at_a_speed(self) -> '_5168.StraightBevelDiffGearSetModalAnalysisAtASpeed':
        """StraightBevelDiffGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5168.StraightBevelDiffGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_modal_analysis_at_a_speed(self) -> '_5170.StraightBevelGearModalAnalysisAtASpeed':
        """StraightBevelGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5170.StraightBevelGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_modal_analysis_at_a_speed(self) -> '_5171.StraightBevelGearSetModalAnalysisAtASpeed':
        """StraightBevelGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5171.StraightBevelGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_modal_analysis_at_a_speed(self) -> '_5172.StraightBevelPlanetGearModalAnalysisAtASpeed':
        """StraightBevelPlanetGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5172.StraightBevelPlanetGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_modal_analysis_at_a_speed(self) -> '_5173.StraightBevelSunGearModalAnalysisAtASpeed':
        """StraightBevelSunGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5173.StraightBevelSunGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_modal_analysis_at_a_speed(self) -> '_5174.SynchroniserHalfModalAnalysisAtASpeed':
        """SynchroniserHalfModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5174.SynchroniserHalfModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_modal_analysis_at_a_speed(self) -> '_5175.SynchroniserModalAnalysisAtASpeed':
        """SynchroniserModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5175.SynchroniserModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_modal_analysis_at_a_speed(self) -> '_5176.SynchroniserPartModalAnalysisAtASpeed':
        """SynchroniserPartModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5176.SynchroniserPartModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_modal_analysis_at_a_speed(self) -> '_5177.SynchroniserSleeveModalAnalysisAtASpeed':
        """SynchroniserSleeveModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5177.SynchroniserSleeveModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_modal_analysis_at_a_speed(self) -> '_5179.TorqueConverterModalAnalysisAtASpeed':
        """TorqueConverterModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5179.TorqueConverterModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_modal_analysis_at_a_speed(self) -> '_5180.TorqueConverterPumpModalAnalysisAtASpeed':
        """TorqueConverterPumpModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5180.TorqueConverterPumpModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_modal_analysis_at_a_speed(self) -> '_5181.TorqueConverterTurbineModalAnalysisAtASpeed':
        """TorqueConverterTurbineModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5181.TorqueConverterTurbineModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_modal_analysis_at_a_speed(self) -> '_5182.UnbalancedMassModalAnalysisAtASpeed':
        """UnbalancedMassModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5182.UnbalancedMassModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_modal_analysis_at_a_speed(self) -> '_5183.VirtualComponentModalAnalysisAtASpeed':
        """VirtualComponentModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5183.VirtualComponentModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_modal_analysis_at_a_speed(self) -> '_5185.WormGearModalAnalysisAtASpeed':
        """WormGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5185.WormGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_modal_analysis_at_a_speed(self) -> '_5186.WormGearSetModalAnalysisAtASpeed':
        """WormGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5186.WormGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_modal_analysis_at_a_speed(self) -> '_5188.ZerolBevelGearModalAnalysisAtASpeed':
        """ZerolBevelGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5188.ZerolBevelGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_modal_analysis_at_a_speed(self) -> '_5189.ZerolBevelGearSetModalAnalysisAtASpeed':
        """ZerolBevelGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5189.ZerolBevelGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_multibody_dynamics_analysis(self) -> '_5319.AbstractAssemblyMultibodyDynamicsAnalysis':
        """AbstractAssemblyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5319.AbstractAssemblyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_multibody_dynamics_analysis(self) -> '_5320.AbstractShaftMultibodyDynamicsAnalysis':
        """AbstractShaftMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5320.AbstractShaftMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_multibody_dynamics_analysis(self) -> '_5321.AbstractShaftOrHousingMultibodyDynamicsAnalysis':
        """AbstractShaftOrHousingMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5321.AbstractShaftOrHousingMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_multibody_dynamics_analysis(self) -> '_5324.AGMAGleasonConicalGearMultibodyDynamicsAnalysis':
        """AGMAGleasonConicalGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5324.AGMAGleasonConicalGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_multibody_dynamics_analysis(self) -> '_5325.AGMAGleasonConicalGearSetMultibodyDynamicsAnalysis':
        """AGMAGleasonConicalGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5325.AGMAGleasonConicalGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_multibody_dynamics_analysis(self) -> '_5327.AssemblyMultibodyDynamicsAnalysis':
        """AssemblyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5327.AssemblyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_multibody_dynamics_analysis(self) -> '_5328.BearingMultibodyDynamicsAnalysis':
        """BearingMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5328.BearingMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_multibody_dynamics_analysis(self) -> '_5331.BeltDriveMultibodyDynamicsAnalysis':
        """BeltDriveMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5331.BeltDriveMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_multibody_dynamics_analysis(self) -> '_5333.BevelDifferentialGearMultibodyDynamicsAnalysis':
        """BevelDifferentialGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5333.BevelDifferentialGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_multibody_dynamics_analysis(self) -> '_5334.BevelDifferentialGearSetMultibodyDynamicsAnalysis':
        """BevelDifferentialGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5334.BevelDifferentialGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_multibody_dynamics_analysis(self) -> '_5335.BevelDifferentialPlanetGearMultibodyDynamicsAnalysis':
        """BevelDifferentialPlanetGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5335.BevelDifferentialPlanetGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_multibody_dynamics_analysis(self) -> '_5336.BevelDifferentialSunGearMultibodyDynamicsAnalysis':
        """BevelDifferentialSunGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5336.BevelDifferentialSunGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_multibody_dynamics_analysis(self) -> '_5338.BevelGearMultibodyDynamicsAnalysis':
        """BevelGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5338.BevelGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_multibody_dynamics_analysis(self) -> '_5339.BevelGearSetMultibodyDynamicsAnalysis':
        """BevelGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5339.BevelGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_multibody_dynamics_analysis(self) -> '_5340.BoltedJointMultibodyDynamicsAnalysis':
        """BoltedJointMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5340.BoltedJointMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_multibody_dynamics_analysis(self) -> '_5341.BoltMultibodyDynamicsAnalysis':
        """BoltMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5341.BoltMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_multibody_dynamics_analysis(self) -> '_5343.ClutchHalfMultibodyDynamicsAnalysis':
        """ClutchHalfMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5343.ClutchHalfMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_multibody_dynamics_analysis(self) -> '_5344.ClutchMultibodyDynamicsAnalysis':
        """ClutchMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5344.ClutchMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_multibody_dynamics_analysis(self) -> '_5347.ComponentMultibodyDynamicsAnalysis':
        """ComponentMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5347.ComponentMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_multibody_dynamics_analysis(self) -> '_5349.ConceptCouplingHalfMultibodyDynamicsAnalysis':
        """ConceptCouplingHalfMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5349.ConceptCouplingHalfMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_multibody_dynamics_analysis(self) -> '_5350.ConceptCouplingMultibodyDynamicsAnalysis':
        """ConceptCouplingMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5350.ConceptCouplingMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_multibody_dynamics_analysis(self) -> '_5352.ConceptGearMultibodyDynamicsAnalysis':
        """ConceptGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5352.ConceptGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_multibody_dynamics_analysis(self) -> '_5353.ConceptGearSetMultibodyDynamicsAnalysis':
        """ConceptGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5353.ConceptGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_multibody_dynamics_analysis(self) -> '_5355.ConicalGearMultibodyDynamicsAnalysis':
        """ConicalGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5355.ConicalGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_multibody_dynamics_analysis(self) -> '_5356.ConicalGearSetMultibodyDynamicsAnalysis':
        """ConicalGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5356.ConicalGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_multibody_dynamics_analysis(self) -> '_5358.ConnectorMultibodyDynamicsAnalysis':
        """ConnectorMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5358.ConnectorMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_multibody_dynamics_analysis(self) -> '_5360.CouplingHalfMultibodyDynamicsAnalysis':
        """CouplingHalfMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5360.CouplingHalfMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_multibody_dynamics_analysis(self) -> '_5361.CouplingMultibodyDynamicsAnalysis':
        """CouplingMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5361.CouplingMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_multibody_dynamics_analysis(self) -> '_5363.CVTMultibodyDynamicsAnalysis':
        """CVTMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5363.CVTMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_multibody_dynamics_analysis(self) -> '_5364.CVTPulleyMultibodyDynamicsAnalysis':
        """CVTPulleyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5364.CVTPulleyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_multibody_dynamics_analysis(self) -> '_5365.CycloidalAssemblyMultibodyDynamicsAnalysis':
        """CycloidalAssemblyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5365.CycloidalAssemblyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_multibody_dynamics_analysis(self) -> '_5367.CycloidalDiscMultibodyDynamicsAnalysis':
        """CycloidalDiscMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5367.CycloidalDiscMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_multibody_dynamics_analysis(self) -> '_5370.CylindricalGearMultibodyDynamicsAnalysis':
        """CylindricalGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5370.CylindricalGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_multibody_dynamics_analysis(self) -> '_5371.CylindricalGearSetMultibodyDynamicsAnalysis':
        """CylindricalGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5371.CylindricalGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_multibody_dynamics_analysis(self) -> '_5372.CylindricalPlanetGearMultibodyDynamicsAnalysis':
        """CylindricalPlanetGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5372.CylindricalPlanetGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_multibody_dynamics_analysis(self) -> '_5373.DatumMultibodyDynamicsAnalysis':
        """DatumMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5373.DatumMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_multibody_dynamics_analysis(self) -> '_5374.ExternalCADModelMultibodyDynamicsAnalysis':
        """ExternalCADModelMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5374.ExternalCADModelMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_multibody_dynamics_analysis(self) -> '_5376.FaceGearMultibodyDynamicsAnalysis':
        """FaceGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5376.FaceGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_multibody_dynamics_analysis(self) -> '_5377.FaceGearSetMultibodyDynamicsAnalysis':
        """FaceGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5377.FaceGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_multibody_dynamics_analysis(self) -> '_5378.FEPartMultibodyDynamicsAnalysis':
        """FEPartMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5378.FEPartMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_multibody_dynamics_analysis(self) -> '_5379.FlexiblePinAssemblyMultibodyDynamicsAnalysis':
        """FlexiblePinAssemblyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5379.FlexiblePinAssemblyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_multibody_dynamics_analysis(self) -> '_5382.GearMultibodyDynamicsAnalysis':
        """GearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5382.GearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_multibody_dynamics_analysis(self) -> '_5383.GearSetMultibodyDynamicsAnalysis':
        """GearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5383.GearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_multibody_dynamics_analysis(self) -> '_5384.GuideDxfModelMultibodyDynamicsAnalysis':
        """GuideDxfModelMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5384.GuideDxfModelMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_multibody_dynamics_analysis(self) -> '_5386.HypoidGearMultibodyDynamicsAnalysis':
        """HypoidGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5386.HypoidGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_multibody_dynamics_analysis(self) -> '_5387.HypoidGearSetMultibodyDynamicsAnalysis':
        """HypoidGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5387.HypoidGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_multibody_dynamics_analysis(self) -> '_5394.KlingelnbergCycloPalloidConicalGearMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidConicalGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5394.KlingelnbergCycloPalloidConicalGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_multibody_dynamics_analysis(self) -> '_5395.KlingelnbergCycloPalloidConicalGearSetMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5395.KlingelnbergCycloPalloidConicalGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_multibody_dynamics_analysis(self) -> '_5397.KlingelnbergCycloPalloidHypoidGearMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidHypoidGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5397.KlingelnbergCycloPalloidHypoidGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_multibody_dynamics_analysis(self) -> '_5398.KlingelnbergCycloPalloidHypoidGearSetMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5398.KlingelnbergCycloPalloidHypoidGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_multibody_dynamics_analysis(self) -> '_5400.KlingelnbergCycloPalloidSpiralBevelGearMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5400.KlingelnbergCycloPalloidSpiralBevelGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_multibody_dynamics_analysis(self) -> '_5401.KlingelnbergCycloPalloidSpiralBevelGearSetMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5401.KlingelnbergCycloPalloidSpiralBevelGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_multibody_dynamics_analysis(self) -> '_5402.MassDiscMultibodyDynamicsAnalysis':
        """MassDiscMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5402.MassDiscMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_multibody_dynamics_analysis(self) -> '_5406.MeasurementComponentMultibodyDynamicsAnalysis':
        """MeasurementComponentMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5406.MeasurementComponentMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_multibody_dynamics_analysis(self) -> '_5407.MountableComponentMultibodyDynamicsAnalysis':
        """MountableComponentMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5407.MountableComponentMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_multibody_dynamics_analysis(self) -> '_5408.OilSealMultibodyDynamicsAnalysis':
        """OilSealMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5408.OilSealMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_multibody_dynamics_analysis(self) -> '_5409.PartMultibodyDynamicsAnalysis':
        """PartMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5409.PartMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_multibody_dynamics_analysis(self) -> '_5411.PartToPartShearCouplingHalfMultibodyDynamicsAnalysis':
        """PartToPartShearCouplingHalfMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5411.PartToPartShearCouplingHalfMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_multibody_dynamics_analysis(self) -> '_5412.PartToPartShearCouplingMultibodyDynamicsAnalysis':
        """PartToPartShearCouplingMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5412.PartToPartShearCouplingMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_multibody_dynamics_analysis(self) -> '_5414.PlanetaryGearSetMultibodyDynamicsAnalysis':
        """PlanetaryGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5414.PlanetaryGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_multibody_dynamics_analysis(self) -> '_5415.PlanetCarrierMultibodyDynamicsAnalysis':
        """PlanetCarrierMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5415.PlanetCarrierMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_multibody_dynamics_analysis(self) -> '_5416.PointLoadMultibodyDynamicsAnalysis':
        """PointLoadMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5416.PointLoadMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_multibody_dynamics_analysis(self) -> '_5417.PowerLoadMultibodyDynamicsAnalysis':
        """PowerLoadMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5417.PowerLoadMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_multibody_dynamics_analysis(self) -> '_5418.PulleyMultibodyDynamicsAnalysis':
        """PulleyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5418.PulleyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_multibody_dynamics_analysis(self) -> '_5419.RingPinsMultibodyDynamicsAnalysis':
        """RingPinsMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5419.RingPinsMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_multibody_dynamics_analysis(self) -> '_5421.RollingRingAssemblyMultibodyDynamicsAnalysis':
        """RollingRingAssemblyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5421.RollingRingAssemblyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_multibody_dynamics_analysis(self) -> '_5423.RollingRingMultibodyDynamicsAnalysis':
        """RollingRingMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5423.RollingRingMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_multibody_dynamics_analysis(self) -> '_5424.RootAssemblyMultibodyDynamicsAnalysis':
        """RootAssemblyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5424.RootAssemblyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_multibody_dynamics_analysis(self) -> '_5427.ShaftHubConnectionMultibodyDynamicsAnalysis':
        """ShaftHubConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5427.ShaftHubConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_multibody_dynamics_analysis(self) -> '_5428.ShaftMultibodyDynamicsAnalysis':
        """ShaftMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5428.ShaftMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_multibody_dynamics_analysis(self) -> '_5431.SpecialisedAssemblyMultibodyDynamicsAnalysis':
        """SpecialisedAssemblyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5431.SpecialisedAssemblyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_multibody_dynamics_analysis(self) -> '_5433.SpiralBevelGearMultibodyDynamicsAnalysis':
        """SpiralBevelGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5433.SpiralBevelGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_multibody_dynamics_analysis(self) -> '_5434.SpiralBevelGearSetMultibodyDynamicsAnalysis':
        """SpiralBevelGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5434.SpiralBevelGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_multibody_dynamics_analysis(self) -> '_5436.SpringDamperHalfMultibodyDynamicsAnalysis':
        """SpringDamperHalfMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5436.SpringDamperHalfMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_multibody_dynamics_analysis(self) -> '_5437.SpringDamperMultibodyDynamicsAnalysis':
        """SpringDamperMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5437.SpringDamperMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_multibody_dynamics_analysis(self) -> '_5439.StraightBevelDiffGearMultibodyDynamicsAnalysis':
        """StraightBevelDiffGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5439.StraightBevelDiffGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_multibody_dynamics_analysis(self) -> '_5440.StraightBevelDiffGearSetMultibodyDynamicsAnalysis':
        """StraightBevelDiffGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5440.StraightBevelDiffGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_multibody_dynamics_analysis(self) -> '_5442.StraightBevelGearMultibodyDynamicsAnalysis':
        """StraightBevelGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5442.StraightBevelGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_multibody_dynamics_analysis(self) -> '_5443.StraightBevelGearSetMultibodyDynamicsAnalysis':
        """StraightBevelGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5443.StraightBevelGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_multibody_dynamics_analysis(self) -> '_5444.StraightBevelPlanetGearMultibodyDynamicsAnalysis':
        """StraightBevelPlanetGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5444.StraightBevelPlanetGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_multibody_dynamics_analysis(self) -> '_5445.StraightBevelSunGearMultibodyDynamicsAnalysis':
        """StraightBevelSunGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5445.StraightBevelSunGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_multibody_dynamics_analysis(self) -> '_5446.SynchroniserHalfMultibodyDynamicsAnalysis':
        """SynchroniserHalfMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5446.SynchroniserHalfMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_multibody_dynamics_analysis(self) -> '_5447.SynchroniserMultibodyDynamicsAnalysis':
        """SynchroniserMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5447.SynchroniserMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_multibody_dynamics_analysis(self) -> '_5448.SynchroniserPartMultibodyDynamicsAnalysis':
        """SynchroniserPartMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5448.SynchroniserPartMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_multibody_dynamics_analysis(self) -> '_5449.SynchroniserSleeveMultibodyDynamicsAnalysis':
        """SynchroniserSleeveMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5449.SynchroniserSleeveMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_multibody_dynamics_analysis(self) -> '_5452.TorqueConverterMultibodyDynamicsAnalysis':
        """TorqueConverterMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5452.TorqueConverterMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_multibody_dynamics_analysis(self) -> '_5453.TorqueConverterPumpMultibodyDynamicsAnalysis':
        """TorqueConverterPumpMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5453.TorqueConverterPumpMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_multibody_dynamics_analysis(self) -> '_5455.TorqueConverterTurbineMultibodyDynamicsAnalysis':
        """TorqueConverterTurbineMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5455.TorqueConverterTurbineMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_multibody_dynamics_analysis(self) -> '_5456.UnbalancedMassMultibodyDynamicsAnalysis':
        """UnbalancedMassMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5456.UnbalancedMassMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_multibody_dynamics_analysis(self) -> '_5457.VirtualComponentMultibodyDynamicsAnalysis':
        """VirtualComponentMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5457.VirtualComponentMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_multibody_dynamics_analysis(self) -> '_5460.WormGearMultibodyDynamicsAnalysis':
        """WormGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5460.WormGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_multibody_dynamics_analysis(self) -> '_5461.WormGearSetMultibodyDynamicsAnalysis':
        """WormGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5461.WormGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_multibody_dynamics_analysis(self) -> '_5463.ZerolBevelGearMultibodyDynamicsAnalysis':
        """ZerolBevelGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5463.ZerolBevelGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_multibody_dynamics_analysis(self) -> '_5464.ZerolBevelGearSetMultibodyDynamicsAnalysis':
        """ZerolBevelGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5464.ZerolBevelGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_harmonic_analysis(self) -> '_5620.AbstractAssemblyHarmonicAnalysis':
        """AbstractAssemblyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5620.AbstractAssemblyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_harmonic_analysis(self) -> '_5622.AbstractShaftHarmonicAnalysis':
        """AbstractShaftHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5622.AbstractShaftHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_harmonic_analysis(self) -> '_5623.AbstractShaftOrHousingHarmonicAnalysis':
        """AbstractShaftOrHousingHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5623.AbstractShaftOrHousingHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_harmonic_analysis(self) -> '_5625.AGMAGleasonConicalGearHarmonicAnalysis':
        """AGMAGleasonConicalGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5625.AGMAGleasonConicalGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_harmonic_analysis(self) -> '_5627.AGMAGleasonConicalGearSetHarmonicAnalysis':
        """AGMAGleasonConicalGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5627.AGMAGleasonConicalGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_harmonic_analysis(self) -> '_5628.AssemblyHarmonicAnalysis':
        """AssemblyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5628.AssemblyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_harmonic_analysis(self) -> '_5629.BearingHarmonicAnalysis':
        """BearingHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5629.BearingHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_harmonic_analysis(self) -> '_5631.BeltDriveHarmonicAnalysis':
        """BeltDriveHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5631.BeltDriveHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_harmonic_analysis(self) -> '_5632.BevelDifferentialGearHarmonicAnalysis':
        """BevelDifferentialGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5632.BevelDifferentialGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_harmonic_analysis(self) -> '_5634.BevelDifferentialGearSetHarmonicAnalysis':
        """BevelDifferentialGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5634.BevelDifferentialGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_harmonic_analysis(self) -> '_5635.BevelDifferentialPlanetGearHarmonicAnalysis':
        """BevelDifferentialPlanetGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5635.BevelDifferentialPlanetGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_harmonic_analysis(self) -> '_5636.BevelDifferentialSunGearHarmonicAnalysis':
        """BevelDifferentialSunGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5636.BevelDifferentialSunGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_harmonic_analysis(self) -> '_5637.BevelGearHarmonicAnalysis':
        """BevelGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5637.BevelGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_harmonic_analysis(self) -> '_5639.BevelGearSetHarmonicAnalysis':
        """BevelGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5639.BevelGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_harmonic_analysis(self) -> '_5640.BoltedJointHarmonicAnalysis':
        """BoltedJointHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5640.BoltedJointHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_harmonic_analysis(self) -> '_5641.BoltHarmonicAnalysis':
        """BoltHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5641.BoltHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_harmonic_analysis(self) -> '_5643.ClutchHalfHarmonicAnalysis':
        """ClutchHalfHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5643.ClutchHalfHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_harmonic_analysis(self) -> '_5644.ClutchHarmonicAnalysis':
        """ClutchHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5644.ClutchHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_harmonic_analysis(self) -> '_5647.ComponentHarmonicAnalysis':
        """ComponentHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5647.ComponentHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_harmonic_analysis(self) -> '_5649.ConceptCouplingHalfHarmonicAnalysis':
        """ConceptCouplingHalfHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5649.ConceptCouplingHalfHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_harmonic_analysis(self) -> '_5650.ConceptCouplingHarmonicAnalysis':
        """ConceptCouplingHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5650.ConceptCouplingHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_harmonic_analysis(self) -> '_5651.ConceptGearHarmonicAnalysis':
        """ConceptGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5651.ConceptGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_harmonic_analysis(self) -> '_5653.ConceptGearSetHarmonicAnalysis':
        """ConceptGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5653.ConceptGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_harmonic_analysis(self) -> '_5654.ConicalGearHarmonicAnalysis':
        """ConicalGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5654.ConicalGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_harmonic_analysis(self) -> '_5656.ConicalGearSetHarmonicAnalysis':
        """ConicalGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5656.ConicalGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_harmonic_analysis(self) -> '_5658.ConnectorHarmonicAnalysis':
        """ConnectorHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5658.ConnectorHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_harmonic_analysis(self) -> '_5660.CouplingHalfHarmonicAnalysis':
        """CouplingHalfHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5660.CouplingHalfHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_harmonic_analysis(self) -> '_5661.CouplingHarmonicAnalysis':
        """CouplingHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5661.CouplingHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_harmonic_analysis(self) -> '_5663.CVTHarmonicAnalysis':
        """CVTHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5663.CVTHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_harmonic_analysis(self) -> '_5664.CVTPulleyHarmonicAnalysis':
        """CVTPulleyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5664.CVTPulleyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_harmonic_analysis(self) -> '_5665.CycloidalAssemblyHarmonicAnalysis':
        """CycloidalAssemblyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5665.CycloidalAssemblyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_harmonic_analysis(self) -> '_5667.CycloidalDiscHarmonicAnalysis':
        """CycloidalDiscHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5667.CycloidalDiscHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_harmonic_analysis(self) -> '_5669.CylindricalGearHarmonicAnalysis':
        """CylindricalGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5669.CylindricalGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_harmonic_analysis(self) -> '_5671.CylindricalGearSetHarmonicAnalysis':
        """CylindricalGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5671.CylindricalGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_harmonic_analysis(self) -> '_5672.CylindricalPlanetGearHarmonicAnalysis':
        """CylindricalPlanetGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5672.CylindricalPlanetGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_harmonic_analysis(self) -> '_5673.DatumHarmonicAnalysis':
        """DatumHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5673.DatumHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_harmonic_analysis(self) -> '_5686.ExternalCADModelHarmonicAnalysis':
        """ExternalCADModelHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5686.ExternalCADModelHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_harmonic_analysis(self) -> '_5687.FaceGearHarmonicAnalysis':
        """FaceGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5687.FaceGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_harmonic_analysis(self) -> '_5689.FaceGearSetHarmonicAnalysis':
        """FaceGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5689.FaceGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_harmonic_analysis(self) -> '_5690.FEPartHarmonicAnalysis':
        """FEPartHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5690.FEPartHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_harmonic_analysis(self) -> '_5691.FlexiblePinAssemblyHarmonicAnalysis':
        """FlexiblePinAssemblyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5691.FlexiblePinAssemblyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_harmonic_analysis(self) -> '_5693.GearHarmonicAnalysis':
        """GearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5693.GearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_harmonic_analysis(self) -> '_5698.GearSetHarmonicAnalysis':
        """GearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5698.GearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_harmonic_analysis(self) -> '_5700.GuideDxfModelHarmonicAnalysis':
        """GuideDxfModelHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5700.GuideDxfModelHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_harmonic_analysis(self) -> '_5707.HypoidGearHarmonicAnalysis':
        """HypoidGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5707.HypoidGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_harmonic_analysis(self) -> '_5709.HypoidGearSetHarmonicAnalysis':
        """HypoidGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5709.HypoidGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_harmonic_analysis(self) -> '_5711.KlingelnbergCycloPalloidConicalGearHarmonicAnalysis':
        """KlingelnbergCycloPalloidConicalGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5711.KlingelnbergCycloPalloidConicalGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_harmonic_analysis(self) -> '_5713.KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5713.KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_harmonic_analysis(self) -> '_5714.KlingelnbergCycloPalloidHypoidGearHarmonicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5714.KlingelnbergCycloPalloidHypoidGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_harmonic_analysis(self) -> '_5716.KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5716.KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_harmonic_analysis(self) -> '_5717.KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5717.KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_harmonic_analysis(self) -> '_5719.KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5719.KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_harmonic_analysis(self) -> '_5720.MassDiscHarmonicAnalysis':
        """MassDiscHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5720.MassDiscHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_harmonic_analysis(self) -> '_5721.MeasurementComponentHarmonicAnalysis':
        """MeasurementComponentHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5721.MeasurementComponentHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_harmonic_analysis(self) -> '_5722.MountableComponentHarmonicAnalysis':
        """MountableComponentHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5722.MountableComponentHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_harmonic_analysis(self) -> '_5723.OilSealHarmonicAnalysis':
        """OilSealHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5723.OilSealHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_harmonic_analysis(self) -> '_5724.PartHarmonicAnalysis':
        """PartHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5724.PartHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_harmonic_analysis(self) -> '_5726.PartToPartShearCouplingHalfHarmonicAnalysis':
        """PartToPartShearCouplingHalfHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5726.PartToPartShearCouplingHalfHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_harmonic_analysis(self) -> '_5727.PartToPartShearCouplingHarmonicAnalysis':
        """PartToPartShearCouplingHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5727.PartToPartShearCouplingHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_harmonic_analysis(self) -> '_5730.PlanetaryGearSetHarmonicAnalysis':
        """PlanetaryGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5730.PlanetaryGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_harmonic_analysis(self) -> '_5731.PlanetCarrierHarmonicAnalysis':
        """PlanetCarrierHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5731.PlanetCarrierHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_harmonic_analysis(self) -> '_5732.PointLoadHarmonicAnalysis':
        """PointLoadHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5732.PointLoadHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_harmonic_analysis(self) -> '_5733.PowerLoadHarmonicAnalysis':
        """PowerLoadHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5733.PowerLoadHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_harmonic_analysis(self) -> '_5734.PulleyHarmonicAnalysis':
        """PulleyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5734.PulleyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_harmonic_analysis(self) -> '_5736.RingPinsHarmonicAnalysis':
        """RingPinsHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5736.RingPinsHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_harmonic_analysis(self) -> '_5738.RollingRingAssemblyHarmonicAnalysis':
        """RollingRingAssemblyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5738.RollingRingAssemblyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_harmonic_analysis(self) -> '_5740.RollingRingHarmonicAnalysis':
        """RollingRingHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5740.RollingRingHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_harmonic_analysis(self) -> '_5741.RootAssemblyHarmonicAnalysis':
        """RootAssemblyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5741.RootAssemblyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_harmonic_analysis(self) -> '_5742.ShaftHarmonicAnalysis':
        """ShaftHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5742.ShaftHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_harmonic_analysis(self) -> '_5743.ShaftHubConnectionHarmonicAnalysis':
        """ShaftHubConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5743.ShaftHubConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_harmonic_analysis(self) -> '_5746.SpecialisedAssemblyHarmonicAnalysis':
        """SpecialisedAssemblyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5746.SpecialisedAssemblyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_harmonic_analysis(self) -> '_5748.SpiralBevelGearHarmonicAnalysis':
        """SpiralBevelGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5748.SpiralBevelGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_harmonic_analysis(self) -> '_5750.SpiralBevelGearSetHarmonicAnalysis':
        """SpiralBevelGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5750.SpiralBevelGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_harmonic_analysis(self) -> '_5752.SpringDamperHalfHarmonicAnalysis':
        """SpringDamperHalfHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5752.SpringDamperHalfHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_harmonic_analysis(self) -> '_5753.SpringDamperHarmonicAnalysis':
        """SpringDamperHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5753.SpringDamperHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_harmonic_analysis(self) -> '_5754.StraightBevelDiffGearHarmonicAnalysis':
        """StraightBevelDiffGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5754.StraightBevelDiffGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_harmonic_analysis(self) -> '_5756.StraightBevelDiffGearSetHarmonicAnalysis':
        """StraightBevelDiffGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5756.StraightBevelDiffGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_harmonic_analysis(self) -> '_5757.StraightBevelGearHarmonicAnalysis':
        """StraightBevelGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5757.StraightBevelGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_harmonic_analysis(self) -> '_5759.StraightBevelGearSetHarmonicAnalysis':
        """StraightBevelGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5759.StraightBevelGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_harmonic_analysis(self) -> '_5760.StraightBevelPlanetGearHarmonicAnalysis':
        """StraightBevelPlanetGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5760.StraightBevelPlanetGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_harmonic_analysis(self) -> '_5761.StraightBevelSunGearHarmonicAnalysis':
        """StraightBevelSunGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5761.StraightBevelSunGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_harmonic_analysis(self) -> '_5762.SynchroniserHalfHarmonicAnalysis':
        """SynchroniserHalfHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5762.SynchroniserHalfHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_harmonic_analysis(self) -> '_5763.SynchroniserHarmonicAnalysis':
        """SynchroniserHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5763.SynchroniserHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_harmonic_analysis(self) -> '_5764.SynchroniserPartHarmonicAnalysis':
        """SynchroniserPartHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5764.SynchroniserPartHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_harmonic_analysis(self) -> '_5765.SynchroniserSleeveHarmonicAnalysis':
        """SynchroniserSleeveHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5765.SynchroniserSleeveHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_harmonic_analysis(self) -> '_5767.TorqueConverterHarmonicAnalysis':
        """TorqueConverterHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5767.TorqueConverterHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_harmonic_analysis(self) -> '_5768.TorqueConverterPumpHarmonicAnalysis':
        """TorqueConverterPumpHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5768.TorqueConverterPumpHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_harmonic_analysis(self) -> '_5769.TorqueConverterTurbineHarmonicAnalysis':
        """TorqueConverterTurbineHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5769.TorqueConverterTurbineHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_harmonic_analysis(self) -> '_5771.UnbalancedMassHarmonicAnalysis':
        """UnbalancedMassHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5771.UnbalancedMassHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_harmonic_analysis(self) -> '_5772.VirtualComponentHarmonicAnalysis':
        """VirtualComponentHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5772.VirtualComponentHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_harmonic_analysis(self) -> '_5773.WormGearHarmonicAnalysis':
        """WormGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5773.WormGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_harmonic_analysis(self) -> '_5775.WormGearSetHarmonicAnalysis':
        """WormGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5775.WormGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_harmonic_analysis(self) -> '_5776.ZerolBevelGearHarmonicAnalysis':
        """ZerolBevelGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5776.ZerolBevelGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_harmonic_analysis(self) -> '_5778.ZerolBevelGearSetHarmonicAnalysis':
        """ZerolBevelGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5778.ZerolBevelGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_harmonic_analysis_of_single_excitation(self) -> '_5943.AbstractAssemblyHarmonicAnalysisOfSingleExcitation':
        """AbstractAssemblyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5943.AbstractAssemblyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_harmonic_analysis_of_single_excitation(self) -> '_5944.AbstractShaftHarmonicAnalysisOfSingleExcitation':
        """AbstractShaftHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5944.AbstractShaftHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_harmonic_analysis_of_single_excitation(self) -> '_5945.AbstractShaftOrHousingHarmonicAnalysisOfSingleExcitation':
        """AbstractShaftOrHousingHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5945.AbstractShaftOrHousingHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_harmonic_analysis_of_single_excitation(self) -> '_5947.AGMAGleasonConicalGearHarmonicAnalysisOfSingleExcitation':
        """AGMAGleasonConicalGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5947.AGMAGleasonConicalGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_harmonic_analysis_of_single_excitation(self) -> '_5949.AGMAGleasonConicalGearSetHarmonicAnalysisOfSingleExcitation':
        """AGMAGleasonConicalGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5949.AGMAGleasonConicalGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_harmonic_analysis_of_single_excitation(self) -> '_5950.AssemblyHarmonicAnalysisOfSingleExcitation':
        """AssemblyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5950.AssemblyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_harmonic_analysis_of_single_excitation(self) -> '_5951.BearingHarmonicAnalysisOfSingleExcitation':
        """BearingHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5951.BearingHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_harmonic_analysis_of_single_excitation(self) -> '_5953.BeltDriveHarmonicAnalysisOfSingleExcitation':
        """BeltDriveHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5953.BeltDriveHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_harmonic_analysis_of_single_excitation(self) -> '_5954.BevelDifferentialGearHarmonicAnalysisOfSingleExcitation':
        """BevelDifferentialGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5954.BevelDifferentialGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_harmonic_analysis_of_single_excitation(self) -> '_5956.BevelDifferentialGearSetHarmonicAnalysisOfSingleExcitation':
        """BevelDifferentialGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5956.BevelDifferentialGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_harmonic_analysis_of_single_excitation(self) -> '_5957.BevelDifferentialPlanetGearHarmonicAnalysisOfSingleExcitation':
        """BevelDifferentialPlanetGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5957.BevelDifferentialPlanetGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_harmonic_analysis_of_single_excitation(self) -> '_5958.BevelDifferentialSunGearHarmonicAnalysisOfSingleExcitation':
        """BevelDifferentialSunGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5958.BevelDifferentialSunGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_harmonic_analysis_of_single_excitation(self) -> '_5959.BevelGearHarmonicAnalysisOfSingleExcitation':
        """BevelGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5959.BevelGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_harmonic_analysis_of_single_excitation(self) -> '_5961.BevelGearSetHarmonicAnalysisOfSingleExcitation':
        """BevelGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5961.BevelGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_harmonic_analysis_of_single_excitation(self) -> '_5962.BoltedJointHarmonicAnalysisOfSingleExcitation':
        """BoltedJointHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5962.BoltedJointHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_harmonic_analysis_of_single_excitation(self) -> '_5963.BoltHarmonicAnalysisOfSingleExcitation':
        """BoltHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5963.BoltHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_harmonic_analysis_of_single_excitation(self) -> '_5965.ClutchHalfHarmonicAnalysisOfSingleExcitation':
        """ClutchHalfHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5965.ClutchHalfHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_harmonic_analysis_of_single_excitation(self) -> '_5966.ClutchHarmonicAnalysisOfSingleExcitation':
        """ClutchHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5966.ClutchHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_harmonic_analysis_of_single_excitation(self) -> '_5968.ComponentHarmonicAnalysisOfSingleExcitation':
        """ComponentHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5968.ComponentHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_harmonic_analysis_of_single_excitation(self) -> '_5970.ConceptCouplingHalfHarmonicAnalysisOfSingleExcitation':
        """ConceptCouplingHalfHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5970.ConceptCouplingHalfHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_harmonic_analysis_of_single_excitation(self) -> '_5971.ConceptCouplingHarmonicAnalysisOfSingleExcitation':
        """ConceptCouplingHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5971.ConceptCouplingHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_harmonic_analysis_of_single_excitation(self) -> '_5972.ConceptGearHarmonicAnalysisOfSingleExcitation':
        """ConceptGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5972.ConceptGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_harmonic_analysis_of_single_excitation(self) -> '_5974.ConceptGearSetHarmonicAnalysisOfSingleExcitation':
        """ConceptGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5974.ConceptGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_harmonic_analysis_of_single_excitation(self) -> '_5975.ConicalGearHarmonicAnalysisOfSingleExcitation':
        """ConicalGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5975.ConicalGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_harmonic_analysis_of_single_excitation(self) -> '_5977.ConicalGearSetHarmonicAnalysisOfSingleExcitation':
        """ConicalGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5977.ConicalGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_harmonic_analysis_of_single_excitation(self) -> '_5979.ConnectorHarmonicAnalysisOfSingleExcitation':
        """ConnectorHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5979.ConnectorHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_harmonic_analysis_of_single_excitation(self) -> '_5981.CouplingHalfHarmonicAnalysisOfSingleExcitation':
        """CouplingHalfHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5981.CouplingHalfHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_harmonic_analysis_of_single_excitation(self) -> '_5982.CouplingHarmonicAnalysisOfSingleExcitation':
        """CouplingHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5982.CouplingHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_harmonic_analysis_of_single_excitation(self) -> '_5984.CVTHarmonicAnalysisOfSingleExcitation':
        """CVTHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5984.CVTHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_harmonic_analysis_of_single_excitation(self) -> '_5985.CVTPulleyHarmonicAnalysisOfSingleExcitation':
        """CVTPulleyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5985.CVTPulleyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_harmonic_analysis_of_single_excitation(self) -> '_5986.CycloidalAssemblyHarmonicAnalysisOfSingleExcitation':
        """CycloidalAssemblyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5986.CycloidalAssemblyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_harmonic_analysis_of_single_excitation(self) -> '_5988.CycloidalDiscHarmonicAnalysisOfSingleExcitation':
        """CycloidalDiscHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5988.CycloidalDiscHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_harmonic_analysis_of_single_excitation(self) -> '_5990.CylindricalGearHarmonicAnalysisOfSingleExcitation':
        """CylindricalGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5990.CylindricalGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_harmonic_analysis_of_single_excitation(self) -> '_5992.CylindricalGearSetHarmonicAnalysisOfSingleExcitation':
        """CylindricalGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5992.CylindricalGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_harmonic_analysis_of_single_excitation(self) -> '_5993.CylindricalPlanetGearHarmonicAnalysisOfSingleExcitation':
        """CylindricalPlanetGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5993.CylindricalPlanetGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_harmonic_analysis_of_single_excitation(self) -> '_5994.DatumHarmonicAnalysisOfSingleExcitation':
        """DatumHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5994.DatumHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_harmonic_analysis_of_single_excitation(self) -> '_5995.ExternalCADModelHarmonicAnalysisOfSingleExcitation':
        """ExternalCADModelHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5995.ExternalCADModelHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_harmonic_analysis_of_single_excitation(self) -> '_5996.FaceGearHarmonicAnalysisOfSingleExcitation':
        """FaceGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5996.FaceGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_harmonic_analysis_of_single_excitation(self) -> '_5998.FaceGearSetHarmonicAnalysisOfSingleExcitation':
        """FaceGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5998.FaceGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_harmonic_analysis_of_single_excitation(self) -> '_5999.FEPartHarmonicAnalysisOfSingleExcitation':
        """FEPartHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5999.FEPartHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_harmonic_analysis_of_single_excitation(self) -> '_6000.FlexiblePinAssemblyHarmonicAnalysisOfSingleExcitation':
        """FlexiblePinAssemblyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6000.FlexiblePinAssemblyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_harmonic_analysis_of_single_excitation(self) -> '_6001.GearHarmonicAnalysisOfSingleExcitation':
        """GearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6001.GearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6003.GearSetHarmonicAnalysisOfSingleExcitation':
        """GearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6003.GearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_harmonic_analysis_of_single_excitation(self) -> '_6004.GuideDxfModelHarmonicAnalysisOfSingleExcitation':
        """GuideDxfModelHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6004.GuideDxfModelHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_harmonic_analysis_of_single_excitation(self) -> '_6006.HypoidGearHarmonicAnalysisOfSingleExcitation':
        """HypoidGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6006.HypoidGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6008.HypoidGearSetHarmonicAnalysisOfSingleExcitation':
        """HypoidGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6008.HypoidGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_harmonic_analysis_of_single_excitation(self) -> '_6010.KlingelnbergCycloPalloidConicalGearHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidConicalGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6010.KlingelnbergCycloPalloidConicalGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6012.KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6012.KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_harmonic_analysis_of_single_excitation(self) -> '_6013.KlingelnbergCycloPalloidHypoidGearHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidHypoidGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6013.KlingelnbergCycloPalloidHypoidGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6015.KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6015.KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_harmonic_analysis_of_single_excitation(self) -> '_6016.KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6016.KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6018.KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6018.KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_harmonic_analysis_of_single_excitation(self) -> '_6019.MassDiscHarmonicAnalysisOfSingleExcitation':
        """MassDiscHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6019.MassDiscHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_harmonic_analysis_of_single_excitation(self) -> '_6020.MeasurementComponentHarmonicAnalysisOfSingleExcitation':
        """MeasurementComponentHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6020.MeasurementComponentHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_harmonic_analysis_of_single_excitation(self) -> '_6021.MountableComponentHarmonicAnalysisOfSingleExcitation':
        """MountableComponentHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6021.MountableComponentHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_harmonic_analysis_of_single_excitation(self) -> '_6022.OilSealHarmonicAnalysisOfSingleExcitation':
        """OilSealHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6022.OilSealHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_harmonic_analysis_of_single_excitation(self) -> '_6023.PartHarmonicAnalysisOfSingleExcitation':
        """PartHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6023.PartHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_harmonic_analysis_of_single_excitation(self) -> '_6025.PartToPartShearCouplingHalfHarmonicAnalysisOfSingleExcitation':
        """PartToPartShearCouplingHalfHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6025.PartToPartShearCouplingHalfHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_harmonic_analysis_of_single_excitation(self) -> '_6026.PartToPartShearCouplingHarmonicAnalysisOfSingleExcitation':
        """PartToPartShearCouplingHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6026.PartToPartShearCouplingHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6028.PlanetaryGearSetHarmonicAnalysisOfSingleExcitation':
        """PlanetaryGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6028.PlanetaryGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_harmonic_analysis_of_single_excitation(self) -> '_6029.PlanetCarrierHarmonicAnalysisOfSingleExcitation':
        """PlanetCarrierHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6029.PlanetCarrierHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_harmonic_analysis_of_single_excitation(self) -> '_6030.PointLoadHarmonicAnalysisOfSingleExcitation':
        """PointLoadHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6030.PointLoadHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_harmonic_analysis_of_single_excitation(self) -> '_6031.PowerLoadHarmonicAnalysisOfSingleExcitation':
        """PowerLoadHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6031.PowerLoadHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_harmonic_analysis_of_single_excitation(self) -> '_6032.PulleyHarmonicAnalysisOfSingleExcitation':
        """PulleyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6032.PulleyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_harmonic_analysis_of_single_excitation(self) -> '_6033.RingPinsHarmonicAnalysisOfSingleExcitation':
        """RingPinsHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6033.RingPinsHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_harmonic_analysis_of_single_excitation(self) -> '_6035.RollingRingAssemblyHarmonicAnalysisOfSingleExcitation':
        """RollingRingAssemblyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6035.RollingRingAssemblyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_harmonic_analysis_of_single_excitation(self) -> '_6037.RollingRingHarmonicAnalysisOfSingleExcitation':
        """RollingRingHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6037.RollingRingHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_harmonic_analysis_of_single_excitation(self) -> '_6038.RootAssemblyHarmonicAnalysisOfSingleExcitation':
        """RootAssemblyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6038.RootAssemblyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_harmonic_analysis_of_single_excitation(self) -> '_6039.ShaftHarmonicAnalysisOfSingleExcitation':
        """ShaftHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6039.ShaftHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_harmonic_analysis_of_single_excitation(self) -> '_6040.ShaftHubConnectionHarmonicAnalysisOfSingleExcitation':
        """ShaftHubConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6040.ShaftHubConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_harmonic_analysis_of_single_excitation(self) -> '_6042.SpecialisedAssemblyHarmonicAnalysisOfSingleExcitation':
        """SpecialisedAssemblyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6042.SpecialisedAssemblyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_harmonic_analysis_of_single_excitation(self) -> '_6043.SpiralBevelGearHarmonicAnalysisOfSingleExcitation':
        """SpiralBevelGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6043.SpiralBevelGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6045.SpiralBevelGearSetHarmonicAnalysisOfSingleExcitation':
        """SpiralBevelGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6045.SpiralBevelGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_harmonic_analysis_of_single_excitation(self) -> '_6047.SpringDamperHalfHarmonicAnalysisOfSingleExcitation':
        """SpringDamperHalfHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6047.SpringDamperHalfHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_harmonic_analysis_of_single_excitation(self) -> '_6048.SpringDamperHarmonicAnalysisOfSingleExcitation':
        """SpringDamperHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6048.SpringDamperHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_harmonic_analysis_of_single_excitation(self) -> '_6049.StraightBevelDiffGearHarmonicAnalysisOfSingleExcitation':
        """StraightBevelDiffGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6049.StraightBevelDiffGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6051.StraightBevelDiffGearSetHarmonicAnalysisOfSingleExcitation':
        """StraightBevelDiffGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6051.StraightBevelDiffGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_harmonic_analysis_of_single_excitation(self) -> '_6052.StraightBevelGearHarmonicAnalysisOfSingleExcitation':
        """StraightBevelGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6052.StraightBevelGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6054.StraightBevelGearSetHarmonicAnalysisOfSingleExcitation':
        """StraightBevelGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6054.StraightBevelGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_harmonic_analysis_of_single_excitation(self) -> '_6055.StraightBevelPlanetGearHarmonicAnalysisOfSingleExcitation':
        """StraightBevelPlanetGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6055.StraightBevelPlanetGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_harmonic_analysis_of_single_excitation(self) -> '_6056.StraightBevelSunGearHarmonicAnalysisOfSingleExcitation':
        """StraightBevelSunGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6056.StraightBevelSunGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_harmonic_analysis_of_single_excitation(self) -> '_6057.SynchroniserHalfHarmonicAnalysisOfSingleExcitation':
        """SynchroniserHalfHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6057.SynchroniserHalfHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_harmonic_analysis_of_single_excitation(self) -> '_6058.SynchroniserHarmonicAnalysisOfSingleExcitation':
        """SynchroniserHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6058.SynchroniserHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_harmonic_analysis_of_single_excitation(self) -> '_6059.SynchroniserPartHarmonicAnalysisOfSingleExcitation':
        """SynchroniserPartHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6059.SynchroniserPartHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_harmonic_analysis_of_single_excitation(self) -> '_6060.SynchroniserSleeveHarmonicAnalysisOfSingleExcitation':
        """SynchroniserSleeveHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6060.SynchroniserSleeveHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_harmonic_analysis_of_single_excitation(self) -> '_6062.TorqueConverterHarmonicAnalysisOfSingleExcitation':
        """TorqueConverterHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6062.TorqueConverterHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_harmonic_analysis_of_single_excitation(self) -> '_6063.TorqueConverterPumpHarmonicAnalysisOfSingleExcitation':
        """TorqueConverterPumpHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6063.TorqueConverterPumpHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_harmonic_analysis_of_single_excitation(self) -> '_6064.TorqueConverterTurbineHarmonicAnalysisOfSingleExcitation':
        """TorqueConverterTurbineHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6064.TorqueConverterTurbineHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_harmonic_analysis_of_single_excitation(self) -> '_6065.UnbalancedMassHarmonicAnalysisOfSingleExcitation':
        """UnbalancedMassHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6065.UnbalancedMassHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_harmonic_analysis_of_single_excitation(self) -> '_6066.VirtualComponentHarmonicAnalysisOfSingleExcitation':
        """VirtualComponentHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6066.VirtualComponentHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_harmonic_analysis_of_single_excitation(self) -> '_6067.WormGearHarmonicAnalysisOfSingleExcitation':
        """WormGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6067.WormGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6069.WormGearSetHarmonicAnalysisOfSingleExcitation':
        """WormGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6069.WormGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_harmonic_analysis_of_single_excitation(self) -> '_6070.ZerolBevelGearHarmonicAnalysisOfSingleExcitation':
        """ZerolBevelGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6070.ZerolBevelGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6072.ZerolBevelGearSetHarmonicAnalysisOfSingleExcitation':
        """ZerolBevelGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6072.ZerolBevelGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_dynamic_analysis(self) -> '_6211.AbstractAssemblyDynamicAnalysis':
        """AbstractAssemblyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6211.AbstractAssemblyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_dynamic_analysis(self) -> '_6212.AbstractShaftDynamicAnalysis':
        """AbstractShaftDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6212.AbstractShaftDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_dynamic_analysis(self) -> '_6213.AbstractShaftOrHousingDynamicAnalysis':
        """AbstractShaftOrHousingDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6213.AbstractShaftOrHousingDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_dynamic_analysis(self) -> '_6215.AGMAGleasonConicalGearDynamicAnalysis':
        """AGMAGleasonConicalGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6215.AGMAGleasonConicalGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_dynamic_analysis(self) -> '_6217.AGMAGleasonConicalGearSetDynamicAnalysis':
        """AGMAGleasonConicalGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6217.AGMAGleasonConicalGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_dynamic_analysis(self) -> '_6218.AssemblyDynamicAnalysis':
        """AssemblyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6218.AssemblyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_dynamic_analysis(self) -> '_6219.BearingDynamicAnalysis':
        """BearingDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6219.BearingDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_dynamic_analysis(self) -> '_6221.BeltDriveDynamicAnalysis':
        """BeltDriveDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6221.BeltDriveDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_dynamic_analysis(self) -> '_6222.BevelDifferentialGearDynamicAnalysis':
        """BevelDifferentialGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6222.BevelDifferentialGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_dynamic_analysis(self) -> '_6224.BevelDifferentialGearSetDynamicAnalysis':
        """BevelDifferentialGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6224.BevelDifferentialGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_dynamic_analysis(self) -> '_6225.BevelDifferentialPlanetGearDynamicAnalysis':
        """BevelDifferentialPlanetGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6225.BevelDifferentialPlanetGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_dynamic_analysis(self) -> '_6226.BevelDifferentialSunGearDynamicAnalysis':
        """BevelDifferentialSunGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6226.BevelDifferentialSunGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_dynamic_analysis(self) -> '_6227.BevelGearDynamicAnalysis':
        """BevelGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6227.BevelGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_dynamic_analysis(self) -> '_6229.BevelGearSetDynamicAnalysis':
        """BevelGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6229.BevelGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_dynamic_analysis(self) -> '_6230.BoltDynamicAnalysis':
        """BoltDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6230.BoltDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_dynamic_analysis(self) -> '_6231.BoltedJointDynamicAnalysis':
        """BoltedJointDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6231.BoltedJointDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_dynamic_analysis(self) -> '_6233.ClutchDynamicAnalysis':
        """ClutchDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6233.ClutchDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_dynamic_analysis(self) -> '_6234.ClutchHalfDynamicAnalysis':
        """ClutchHalfDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6234.ClutchHalfDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_dynamic_analysis(self) -> '_6236.ComponentDynamicAnalysis':
        """ComponentDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6236.ComponentDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_dynamic_analysis(self) -> '_6238.ConceptCouplingDynamicAnalysis':
        """ConceptCouplingDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6238.ConceptCouplingDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_dynamic_analysis(self) -> '_6239.ConceptCouplingHalfDynamicAnalysis':
        """ConceptCouplingHalfDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6239.ConceptCouplingHalfDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_dynamic_analysis(self) -> '_6240.ConceptGearDynamicAnalysis':
        """ConceptGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6240.ConceptGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_dynamic_analysis(self) -> '_6242.ConceptGearSetDynamicAnalysis':
        """ConceptGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6242.ConceptGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_dynamic_analysis(self) -> '_6243.ConicalGearDynamicAnalysis':
        """ConicalGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6243.ConicalGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_dynamic_analysis(self) -> '_6245.ConicalGearSetDynamicAnalysis':
        """ConicalGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6245.ConicalGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_dynamic_analysis(self) -> '_6247.ConnectorDynamicAnalysis':
        """ConnectorDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6247.ConnectorDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_dynamic_analysis(self) -> '_6249.CouplingDynamicAnalysis':
        """CouplingDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6249.CouplingDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_dynamic_analysis(self) -> '_6250.CouplingHalfDynamicAnalysis':
        """CouplingHalfDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6250.CouplingHalfDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_dynamic_analysis(self) -> '_6252.CVTDynamicAnalysis':
        """CVTDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6252.CVTDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_dynamic_analysis(self) -> '_6253.CVTPulleyDynamicAnalysis':
        """CVTPulleyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6253.CVTPulleyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_dynamic_analysis(self) -> '_6254.CycloidalAssemblyDynamicAnalysis':
        """CycloidalAssemblyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6254.CycloidalAssemblyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_dynamic_analysis(self) -> '_6256.CycloidalDiscDynamicAnalysis':
        """CycloidalDiscDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6256.CycloidalDiscDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_dynamic_analysis(self) -> '_6258.CylindricalGearDynamicAnalysis':
        """CylindricalGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6258.CylindricalGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_dynamic_analysis(self) -> '_6260.CylindricalGearSetDynamicAnalysis':
        """CylindricalGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6260.CylindricalGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_dynamic_analysis(self) -> '_6261.CylindricalPlanetGearDynamicAnalysis':
        """CylindricalPlanetGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6261.CylindricalPlanetGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_dynamic_analysis(self) -> '_6262.DatumDynamicAnalysis':
        """DatumDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6262.DatumDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_dynamic_analysis(self) -> '_6264.ExternalCADModelDynamicAnalysis':
        """ExternalCADModelDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6264.ExternalCADModelDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_dynamic_analysis(self) -> '_6265.FaceGearDynamicAnalysis':
        """FaceGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6265.FaceGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_dynamic_analysis(self) -> '_6267.FaceGearSetDynamicAnalysis':
        """FaceGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6267.FaceGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_dynamic_analysis(self) -> '_6268.FEPartDynamicAnalysis':
        """FEPartDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6268.FEPartDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_dynamic_analysis(self) -> '_6269.FlexiblePinAssemblyDynamicAnalysis':
        """FlexiblePinAssemblyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6269.FlexiblePinAssemblyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_dynamic_analysis(self) -> '_6270.GearDynamicAnalysis':
        """GearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6270.GearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_dynamic_analysis(self) -> '_6272.GearSetDynamicAnalysis':
        """GearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6272.GearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_dynamic_analysis(self) -> '_6273.GuideDxfModelDynamicAnalysis':
        """GuideDxfModelDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6273.GuideDxfModelDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_dynamic_analysis(self) -> '_6274.HypoidGearDynamicAnalysis':
        """HypoidGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6274.HypoidGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_dynamic_analysis(self) -> '_6276.HypoidGearSetDynamicAnalysis':
        """HypoidGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6276.HypoidGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_dynamic_analysis(self) -> '_6278.KlingelnbergCycloPalloidConicalGearDynamicAnalysis':
        """KlingelnbergCycloPalloidConicalGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6278.KlingelnbergCycloPalloidConicalGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_dynamic_analysis(self) -> '_6280.KlingelnbergCycloPalloidConicalGearSetDynamicAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6280.KlingelnbergCycloPalloidConicalGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_dynamic_analysis(self) -> '_6281.KlingelnbergCycloPalloidHypoidGearDynamicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6281.KlingelnbergCycloPalloidHypoidGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_dynamic_analysis(self) -> '_6283.KlingelnbergCycloPalloidHypoidGearSetDynamicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6283.KlingelnbergCycloPalloidHypoidGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_dynamic_analysis(self) -> '_6284.KlingelnbergCycloPalloidSpiralBevelGearDynamicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6284.KlingelnbergCycloPalloidSpiralBevelGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_dynamic_analysis(self) -> '_6286.KlingelnbergCycloPalloidSpiralBevelGearSetDynamicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6286.KlingelnbergCycloPalloidSpiralBevelGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_dynamic_analysis(self) -> '_6287.MassDiscDynamicAnalysis':
        """MassDiscDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6287.MassDiscDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_dynamic_analysis(self) -> '_6288.MeasurementComponentDynamicAnalysis':
        """MeasurementComponentDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6288.MeasurementComponentDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_dynamic_analysis(self) -> '_6289.MountableComponentDynamicAnalysis':
        """MountableComponentDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6289.MountableComponentDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_dynamic_analysis(self) -> '_6290.OilSealDynamicAnalysis':
        """OilSealDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6290.OilSealDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_dynamic_analysis(self) -> '_6291.PartDynamicAnalysis':
        """PartDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6291.PartDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_dynamic_analysis(self) -> '_6293.PartToPartShearCouplingDynamicAnalysis':
        """PartToPartShearCouplingDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6293.PartToPartShearCouplingDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_dynamic_analysis(self) -> '_6294.PartToPartShearCouplingHalfDynamicAnalysis':
        """PartToPartShearCouplingHalfDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6294.PartToPartShearCouplingHalfDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_dynamic_analysis(self) -> '_6296.PlanetaryGearSetDynamicAnalysis':
        """PlanetaryGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6296.PlanetaryGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_dynamic_analysis(self) -> '_6297.PlanetCarrierDynamicAnalysis':
        """PlanetCarrierDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6297.PlanetCarrierDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_dynamic_analysis(self) -> '_6298.PointLoadDynamicAnalysis':
        """PointLoadDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6298.PointLoadDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_dynamic_analysis(self) -> '_6299.PowerLoadDynamicAnalysis':
        """PowerLoadDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6299.PowerLoadDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_dynamic_analysis(self) -> '_6300.PulleyDynamicAnalysis':
        """PulleyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6300.PulleyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_dynamic_analysis(self) -> '_6301.RingPinsDynamicAnalysis':
        """RingPinsDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6301.RingPinsDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_dynamic_analysis(self) -> '_6303.RollingRingAssemblyDynamicAnalysis':
        """RollingRingAssemblyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6303.RollingRingAssemblyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_dynamic_analysis(self) -> '_6305.RollingRingDynamicAnalysis':
        """RollingRingDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6305.RollingRingDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_dynamic_analysis(self) -> '_6306.RootAssemblyDynamicAnalysis':
        """RootAssemblyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6306.RootAssemblyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_dynamic_analysis(self) -> '_6307.ShaftDynamicAnalysis':
        """ShaftDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6307.ShaftDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_dynamic_analysis(self) -> '_6308.ShaftHubConnectionDynamicAnalysis':
        """ShaftHubConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6308.ShaftHubConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_dynamic_analysis(self) -> '_6310.SpecialisedAssemblyDynamicAnalysis':
        """SpecialisedAssemblyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6310.SpecialisedAssemblyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_dynamic_analysis(self) -> '_6311.SpiralBevelGearDynamicAnalysis':
        """SpiralBevelGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6311.SpiralBevelGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_dynamic_analysis(self) -> '_6313.SpiralBevelGearSetDynamicAnalysis':
        """SpiralBevelGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6313.SpiralBevelGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_dynamic_analysis(self) -> '_6315.SpringDamperDynamicAnalysis':
        """SpringDamperDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6315.SpringDamperDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_dynamic_analysis(self) -> '_6316.SpringDamperHalfDynamicAnalysis':
        """SpringDamperHalfDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6316.SpringDamperHalfDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_dynamic_analysis(self) -> '_6317.StraightBevelDiffGearDynamicAnalysis':
        """StraightBevelDiffGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6317.StraightBevelDiffGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_dynamic_analysis(self) -> '_6319.StraightBevelDiffGearSetDynamicAnalysis':
        """StraightBevelDiffGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6319.StraightBevelDiffGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_dynamic_analysis(self) -> '_6320.StraightBevelGearDynamicAnalysis':
        """StraightBevelGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6320.StraightBevelGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_dynamic_analysis(self) -> '_6322.StraightBevelGearSetDynamicAnalysis':
        """StraightBevelGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6322.StraightBevelGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_dynamic_analysis(self) -> '_6323.StraightBevelPlanetGearDynamicAnalysis':
        """StraightBevelPlanetGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6323.StraightBevelPlanetGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_dynamic_analysis(self) -> '_6324.StraightBevelSunGearDynamicAnalysis':
        """StraightBevelSunGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6324.StraightBevelSunGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_dynamic_analysis(self) -> '_6325.SynchroniserDynamicAnalysis':
        """SynchroniserDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6325.SynchroniserDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_dynamic_analysis(self) -> '_6326.SynchroniserHalfDynamicAnalysis':
        """SynchroniserHalfDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6326.SynchroniserHalfDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_dynamic_analysis(self) -> '_6327.SynchroniserPartDynamicAnalysis':
        """SynchroniserPartDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6327.SynchroniserPartDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_dynamic_analysis(self) -> '_6328.SynchroniserSleeveDynamicAnalysis':
        """SynchroniserSleeveDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6328.SynchroniserSleeveDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_dynamic_analysis(self) -> '_6330.TorqueConverterDynamicAnalysis':
        """TorqueConverterDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6330.TorqueConverterDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_dynamic_analysis(self) -> '_6331.TorqueConverterPumpDynamicAnalysis':
        """TorqueConverterPumpDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6331.TorqueConverterPumpDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_dynamic_analysis(self) -> '_6332.TorqueConverterTurbineDynamicAnalysis':
        """TorqueConverterTurbineDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6332.TorqueConverterTurbineDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_dynamic_analysis(self) -> '_6333.UnbalancedMassDynamicAnalysis':
        """UnbalancedMassDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6333.UnbalancedMassDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_dynamic_analysis(self) -> '_6334.VirtualComponentDynamicAnalysis':
        """VirtualComponentDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6334.VirtualComponentDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_dynamic_analysis(self) -> '_6335.WormGearDynamicAnalysis':
        """WormGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6335.WormGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_dynamic_analysis(self) -> '_6337.WormGearSetDynamicAnalysis':
        """WormGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6337.WormGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_dynamic_analysis(self) -> '_6338.ZerolBevelGearDynamicAnalysis':
        """ZerolBevelGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6338.ZerolBevelGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_dynamic_analysis(self) -> '_6340.ZerolBevelGearSetDynamicAnalysis':
        """ZerolBevelGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6340.ZerolBevelGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_critical_speed_analysis(self) -> '_6476.AbstractAssemblyCriticalSpeedAnalysis':
        """AbstractAssemblyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6476.AbstractAssemblyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_critical_speed_analysis(self) -> '_6477.AbstractShaftCriticalSpeedAnalysis':
        """AbstractShaftCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6477.AbstractShaftCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_critical_speed_analysis(self) -> '_6478.AbstractShaftOrHousingCriticalSpeedAnalysis':
        """AbstractShaftOrHousingCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6478.AbstractShaftOrHousingCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_critical_speed_analysis(self) -> '_6480.AGMAGleasonConicalGearCriticalSpeedAnalysis':
        """AGMAGleasonConicalGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6480.AGMAGleasonConicalGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_critical_speed_analysis(self) -> '_6482.AGMAGleasonConicalGearSetCriticalSpeedAnalysis':
        """AGMAGleasonConicalGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6482.AGMAGleasonConicalGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_critical_speed_analysis(self) -> '_6483.AssemblyCriticalSpeedAnalysis':
        """AssemblyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6483.AssemblyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_critical_speed_analysis(self) -> '_6484.BearingCriticalSpeedAnalysis':
        """BearingCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6484.BearingCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_critical_speed_analysis(self) -> '_6486.BeltDriveCriticalSpeedAnalysis':
        """BeltDriveCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6486.BeltDriveCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_critical_speed_analysis(self) -> '_6487.BevelDifferentialGearCriticalSpeedAnalysis':
        """BevelDifferentialGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6487.BevelDifferentialGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_critical_speed_analysis(self) -> '_6489.BevelDifferentialGearSetCriticalSpeedAnalysis':
        """BevelDifferentialGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6489.BevelDifferentialGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_critical_speed_analysis(self) -> '_6490.BevelDifferentialPlanetGearCriticalSpeedAnalysis':
        """BevelDifferentialPlanetGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6490.BevelDifferentialPlanetGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_critical_speed_analysis(self) -> '_6491.BevelDifferentialSunGearCriticalSpeedAnalysis':
        """BevelDifferentialSunGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6491.BevelDifferentialSunGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_critical_speed_analysis(self) -> '_6492.BevelGearCriticalSpeedAnalysis':
        """BevelGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6492.BevelGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_critical_speed_analysis(self) -> '_6494.BevelGearSetCriticalSpeedAnalysis':
        """BevelGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6494.BevelGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_critical_speed_analysis(self) -> '_6495.BoltCriticalSpeedAnalysis':
        """BoltCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6495.BoltCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_critical_speed_analysis(self) -> '_6496.BoltedJointCriticalSpeedAnalysis':
        """BoltedJointCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6496.BoltedJointCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_critical_speed_analysis(self) -> '_6498.ClutchCriticalSpeedAnalysis':
        """ClutchCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6498.ClutchCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_critical_speed_analysis(self) -> '_6499.ClutchHalfCriticalSpeedAnalysis':
        """ClutchHalfCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6499.ClutchHalfCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_critical_speed_analysis(self) -> '_6501.ComponentCriticalSpeedAnalysis':
        """ComponentCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6501.ComponentCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_critical_speed_analysis(self) -> '_6503.ConceptCouplingCriticalSpeedAnalysis':
        """ConceptCouplingCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6503.ConceptCouplingCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_critical_speed_analysis(self) -> '_6504.ConceptCouplingHalfCriticalSpeedAnalysis':
        """ConceptCouplingHalfCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6504.ConceptCouplingHalfCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_critical_speed_analysis(self) -> '_6505.ConceptGearCriticalSpeedAnalysis':
        """ConceptGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6505.ConceptGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_critical_speed_analysis(self) -> '_6507.ConceptGearSetCriticalSpeedAnalysis':
        """ConceptGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6507.ConceptGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_critical_speed_analysis(self) -> '_6508.ConicalGearCriticalSpeedAnalysis':
        """ConicalGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6508.ConicalGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_critical_speed_analysis(self) -> '_6510.ConicalGearSetCriticalSpeedAnalysis':
        """ConicalGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6510.ConicalGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_critical_speed_analysis(self) -> '_6512.ConnectorCriticalSpeedAnalysis':
        """ConnectorCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6512.ConnectorCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_critical_speed_analysis(self) -> '_6514.CouplingCriticalSpeedAnalysis':
        """CouplingCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6514.CouplingCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_critical_speed_analysis(self) -> '_6515.CouplingHalfCriticalSpeedAnalysis':
        """CouplingHalfCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6515.CouplingHalfCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_critical_speed_analysis(self) -> '_6519.CVTCriticalSpeedAnalysis':
        """CVTCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6519.CVTCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_critical_speed_analysis(self) -> '_6520.CVTPulleyCriticalSpeedAnalysis':
        """CVTPulleyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6520.CVTPulleyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_critical_speed_analysis(self) -> '_6521.CycloidalAssemblyCriticalSpeedAnalysis':
        """CycloidalAssemblyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6521.CycloidalAssemblyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_critical_speed_analysis(self) -> '_6523.CycloidalDiscCriticalSpeedAnalysis':
        """CycloidalDiscCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6523.CycloidalDiscCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_critical_speed_analysis(self) -> '_6525.CylindricalGearCriticalSpeedAnalysis':
        """CylindricalGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6525.CylindricalGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_critical_speed_analysis(self) -> '_6527.CylindricalGearSetCriticalSpeedAnalysis':
        """CylindricalGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6527.CylindricalGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_critical_speed_analysis(self) -> '_6528.CylindricalPlanetGearCriticalSpeedAnalysis':
        """CylindricalPlanetGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6528.CylindricalPlanetGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_critical_speed_analysis(self) -> '_6529.DatumCriticalSpeedAnalysis':
        """DatumCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6529.DatumCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_critical_speed_analysis(self) -> '_6530.ExternalCADModelCriticalSpeedAnalysis':
        """ExternalCADModelCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6530.ExternalCADModelCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_critical_speed_analysis(self) -> '_6531.FaceGearCriticalSpeedAnalysis':
        """FaceGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6531.FaceGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_critical_speed_analysis(self) -> '_6533.FaceGearSetCriticalSpeedAnalysis':
        """FaceGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6533.FaceGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_critical_speed_analysis(self) -> '_6534.FEPartCriticalSpeedAnalysis':
        """FEPartCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6534.FEPartCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_critical_speed_analysis(self) -> '_6535.FlexiblePinAssemblyCriticalSpeedAnalysis':
        """FlexiblePinAssemblyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6535.FlexiblePinAssemblyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_critical_speed_analysis(self) -> '_6536.GearCriticalSpeedAnalysis':
        """GearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6536.GearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_critical_speed_analysis(self) -> '_6538.GearSetCriticalSpeedAnalysis':
        """GearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6538.GearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_critical_speed_analysis(self) -> '_6539.GuideDxfModelCriticalSpeedAnalysis':
        """GuideDxfModelCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6539.GuideDxfModelCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_critical_speed_analysis(self) -> '_6540.HypoidGearCriticalSpeedAnalysis':
        """HypoidGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6540.HypoidGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_critical_speed_analysis(self) -> '_6542.HypoidGearSetCriticalSpeedAnalysis':
        """HypoidGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6542.HypoidGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_critical_speed_analysis(self) -> '_6544.KlingelnbergCycloPalloidConicalGearCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidConicalGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6544.KlingelnbergCycloPalloidConicalGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_critical_speed_analysis(self) -> '_6546.KlingelnbergCycloPalloidConicalGearSetCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6546.KlingelnbergCycloPalloidConicalGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_critical_speed_analysis(self) -> '_6547.KlingelnbergCycloPalloidHypoidGearCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidHypoidGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6547.KlingelnbergCycloPalloidHypoidGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_critical_speed_analysis(self) -> '_6549.KlingelnbergCycloPalloidHypoidGearSetCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6549.KlingelnbergCycloPalloidHypoidGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_critical_speed_analysis(self) -> '_6550.KlingelnbergCycloPalloidSpiralBevelGearCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6550.KlingelnbergCycloPalloidSpiralBevelGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_critical_speed_analysis(self) -> '_6552.KlingelnbergCycloPalloidSpiralBevelGearSetCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6552.KlingelnbergCycloPalloidSpiralBevelGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_critical_speed_analysis(self) -> '_6553.MassDiscCriticalSpeedAnalysis':
        """MassDiscCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6553.MassDiscCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_critical_speed_analysis(self) -> '_6554.MeasurementComponentCriticalSpeedAnalysis':
        """MeasurementComponentCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6554.MeasurementComponentCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_critical_speed_analysis(self) -> '_6555.MountableComponentCriticalSpeedAnalysis':
        """MountableComponentCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6555.MountableComponentCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_critical_speed_analysis(self) -> '_6556.OilSealCriticalSpeedAnalysis':
        """OilSealCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6556.OilSealCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_critical_speed_analysis(self) -> '_6557.PartCriticalSpeedAnalysis':
        """PartCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6557.PartCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_critical_speed_analysis(self) -> '_6559.PartToPartShearCouplingCriticalSpeedAnalysis':
        """PartToPartShearCouplingCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6559.PartToPartShearCouplingCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_critical_speed_analysis(self) -> '_6560.PartToPartShearCouplingHalfCriticalSpeedAnalysis':
        """PartToPartShearCouplingHalfCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6560.PartToPartShearCouplingHalfCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_critical_speed_analysis(self) -> '_6562.PlanetaryGearSetCriticalSpeedAnalysis':
        """PlanetaryGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6562.PlanetaryGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_critical_speed_analysis(self) -> '_6563.PlanetCarrierCriticalSpeedAnalysis':
        """PlanetCarrierCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6563.PlanetCarrierCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_critical_speed_analysis(self) -> '_6564.PointLoadCriticalSpeedAnalysis':
        """PointLoadCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6564.PointLoadCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_critical_speed_analysis(self) -> '_6565.PowerLoadCriticalSpeedAnalysis':
        """PowerLoadCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6565.PowerLoadCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_critical_speed_analysis(self) -> '_6566.PulleyCriticalSpeedAnalysis':
        """PulleyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6566.PulleyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_critical_speed_analysis(self) -> '_6567.RingPinsCriticalSpeedAnalysis':
        """RingPinsCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6567.RingPinsCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_critical_speed_analysis(self) -> '_6569.RollingRingAssemblyCriticalSpeedAnalysis':
        """RollingRingAssemblyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6569.RollingRingAssemblyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_critical_speed_analysis(self) -> '_6571.RollingRingCriticalSpeedAnalysis':
        """RollingRingCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6571.RollingRingCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_critical_speed_analysis(self) -> '_6572.RootAssemblyCriticalSpeedAnalysis':
        """RootAssemblyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6572.RootAssemblyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_critical_speed_analysis(self) -> '_6573.ShaftCriticalSpeedAnalysis':
        """ShaftCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6573.ShaftCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_critical_speed_analysis(self) -> '_6574.ShaftHubConnectionCriticalSpeedAnalysis':
        """ShaftHubConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6574.ShaftHubConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_critical_speed_analysis(self) -> '_6576.SpecialisedAssemblyCriticalSpeedAnalysis':
        """SpecialisedAssemblyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6576.SpecialisedAssemblyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_critical_speed_analysis(self) -> '_6577.SpiralBevelGearCriticalSpeedAnalysis':
        """SpiralBevelGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6577.SpiralBevelGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_critical_speed_analysis(self) -> '_6579.SpiralBevelGearSetCriticalSpeedAnalysis':
        """SpiralBevelGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6579.SpiralBevelGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_critical_speed_analysis(self) -> '_6581.SpringDamperCriticalSpeedAnalysis':
        """SpringDamperCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6581.SpringDamperCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_critical_speed_analysis(self) -> '_6582.SpringDamperHalfCriticalSpeedAnalysis':
        """SpringDamperHalfCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6582.SpringDamperHalfCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_critical_speed_analysis(self) -> '_6583.StraightBevelDiffGearCriticalSpeedAnalysis':
        """StraightBevelDiffGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6583.StraightBevelDiffGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_critical_speed_analysis(self) -> '_6585.StraightBevelDiffGearSetCriticalSpeedAnalysis':
        """StraightBevelDiffGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6585.StraightBevelDiffGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_critical_speed_analysis(self) -> '_6586.StraightBevelGearCriticalSpeedAnalysis':
        """StraightBevelGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6586.StraightBevelGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_critical_speed_analysis(self) -> '_6588.StraightBevelGearSetCriticalSpeedAnalysis':
        """StraightBevelGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6588.StraightBevelGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_critical_speed_analysis(self) -> '_6589.StraightBevelPlanetGearCriticalSpeedAnalysis':
        """StraightBevelPlanetGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6589.StraightBevelPlanetGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_critical_speed_analysis(self) -> '_6590.StraightBevelSunGearCriticalSpeedAnalysis':
        """StraightBevelSunGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6590.StraightBevelSunGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_critical_speed_analysis(self) -> '_6591.SynchroniserCriticalSpeedAnalysis':
        """SynchroniserCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6591.SynchroniserCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_critical_speed_analysis(self) -> '_6592.SynchroniserHalfCriticalSpeedAnalysis':
        """SynchroniserHalfCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6592.SynchroniserHalfCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_critical_speed_analysis(self) -> '_6593.SynchroniserPartCriticalSpeedAnalysis':
        """SynchroniserPartCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6593.SynchroniserPartCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_critical_speed_analysis(self) -> '_6594.SynchroniserSleeveCriticalSpeedAnalysis':
        """SynchroniserSleeveCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6594.SynchroniserSleeveCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_critical_speed_analysis(self) -> '_6596.TorqueConverterCriticalSpeedAnalysis':
        """TorqueConverterCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6596.TorqueConverterCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_critical_speed_analysis(self) -> '_6597.TorqueConverterPumpCriticalSpeedAnalysis':
        """TorqueConverterPumpCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6597.TorqueConverterPumpCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_critical_speed_analysis(self) -> '_6598.TorqueConverterTurbineCriticalSpeedAnalysis':
        """TorqueConverterTurbineCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6598.TorqueConverterTurbineCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_critical_speed_analysis(self) -> '_6599.UnbalancedMassCriticalSpeedAnalysis':
        """UnbalancedMassCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6599.UnbalancedMassCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_critical_speed_analysis(self) -> '_6600.VirtualComponentCriticalSpeedAnalysis':
        """VirtualComponentCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6600.VirtualComponentCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_critical_speed_analysis(self) -> '_6601.WormGearCriticalSpeedAnalysis':
        """WormGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6601.WormGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_critical_speed_analysis(self) -> '_6603.WormGearSetCriticalSpeedAnalysis':
        """WormGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6603.WormGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_critical_speed_analysis(self) -> '_6604.ZerolBevelGearCriticalSpeedAnalysis':
        """ZerolBevelGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6604.ZerolBevelGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_critical_speed_analysis(self) -> '_6606.ZerolBevelGearSetCriticalSpeedAnalysis':
        """ZerolBevelGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6606.ZerolBevelGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_load_case(self) -> '_6739.AbstractAssemblyLoadCase':
        """AbstractAssemblyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6739.AbstractAssemblyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_load_case(self) -> '_6740.AbstractShaftLoadCase':
        """AbstractShaftLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6740.AbstractShaftLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_load_case(self) -> '_6741.AbstractShaftOrHousingLoadCase':
        """AbstractShaftOrHousingLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6741.AbstractShaftOrHousingLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_load_case(self) -> '_6746.AGMAGleasonConicalGearLoadCase':
        """AGMAGleasonConicalGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6746.AGMAGleasonConicalGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_load_case(self) -> '_6748.AGMAGleasonConicalGearSetLoadCase':
        """AGMAGleasonConicalGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6748.AGMAGleasonConicalGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_load_case(self) -> '_6751.AssemblyLoadCase':
        """AssemblyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6751.AssemblyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_load_case(self) -> '_6752.BearingLoadCase':
        """BearingLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6752.BearingLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_load_case(self) -> '_6754.BeltDriveLoadCase':
        """BeltDriveLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6754.BeltDriveLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_load_case(self) -> '_6755.BevelDifferentialGearLoadCase':
        """BevelDifferentialGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6755.BevelDifferentialGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_load_case(self) -> '_6757.BevelDifferentialGearSetLoadCase':
        """BevelDifferentialGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6757.BevelDifferentialGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_load_case(self) -> '_6758.BevelDifferentialPlanetGearLoadCase':
        """BevelDifferentialPlanetGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6758.BevelDifferentialPlanetGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_load_case(self) -> '_6759.BevelDifferentialSunGearLoadCase':
        """BevelDifferentialSunGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6759.BevelDifferentialSunGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_load_case(self) -> '_6760.BevelGearLoadCase':
        """BevelGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6760.BevelGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_load_case(self) -> '_6762.BevelGearSetLoadCase':
        """BevelGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6762.BevelGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_load_case(self) -> '_6763.BoltedJointLoadCase':
        """BoltedJointLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6763.BoltedJointLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_load_case(self) -> '_6764.BoltLoadCase':
        """BoltLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6764.BoltLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_load_case(self) -> '_6766.ClutchHalfLoadCase':
        """ClutchHalfLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6766.ClutchHalfLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_load_case(self) -> '_6767.ClutchLoadCase':
        """ClutchLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6767.ClutchLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_load_case(self) -> '_6769.ComponentLoadCase':
        """ComponentLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6769.ComponentLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_load_case(self) -> '_6771.ConceptCouplingHalfLoadCase':
        """ConceptCouplingHalfLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6771.ConceptCouplingHalfLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_load_case(self) -> '_6772.ConceptCouplingLoadCase':
        """ConceptCouplingLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6772.ConceptCouplingLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_load_case(self) -> '_6773.ConceptGearLoadCase':
        """ConceptGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6773.ConceptGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_load_case(self) -> '_6775.ConceptGearSetLoadCase':
        """ConceptGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6775.ConceptGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_load_case(self) -> '_6776.ConicalGearLoadCase':
        """ConicalGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6776.ConicalGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_load_case(self) -> '_6780.ConicalGearSetLoadCase':
        """ConicalGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6780.ConicalGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_load_case(self) -> '_6782.ConnectorLoadCase':
        """ConnectorLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6782.ConnectorLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_load_case(self) -> '_6784.CouplingHalfLoadCase':
        """CouplingHalfLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6784.CouplingHalfLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_load_case(self) -> '_6785.CouplingLoadCase':
        """CouplingLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6785.CouplingLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_load_case(self) -> '_6787.CVTLoadCase':
        """CVTLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6787.CVTLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_load_case(self) -> '_6788.CVTPulleyLoadCase':
        """CVTPulleyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6788.CVTPulleyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_load_case(self) -> '_6789.CycloidalAssemblyLoadCase':
        """CycloidalAssemblyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6789.CycloidalAssemblyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_load_case(self) -> '_6791.CycloidalDiscLoadCase':
        """CycloidalDiscLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6791.CycloidalDiscLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_load_case(self) -> '_6793.CylindricalGearLoadCase':
        """CylindricalGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6793.CylindricalGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_load_case(self) -> '_6797.CylindricalGearSetLoadCase':
        """CylindricalGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6797.CylindricalGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_load_case(self) -> '_6798.CylindricalPlanetGearLoadCase':
        """CylindricalPlanetGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6798.CylindricalPlanetGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_load_case(self) -> '_6801.DatumLoadCase':
        """DatumLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6801.DatumLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_load_case(self) -> '_6815.ExternalCADModelLoadCase':
        """ExternalCADModelLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6815.ExternalCADModelLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_load_case(self) -> '_6816.FaceGearLoadCase':
        """FaceGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6816.FaceGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_load_case(self) -> '_6818.FaceGearSetLoadCase':
        """FaceGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6818.FaceGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_load_case(self) -> '_6819.FEPartLoadCase':
        """FEPartLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6819.FEPartLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_load_case(self) -> '_6820.FlexiblePinAssemblyLoadCase':
        """FlexiblePinAssemblyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6820.FlexiblePinAssemblyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_load_case(self) -> '_6822.GearLoadCase':
        """GearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6822.GearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_load_case(self) -> '_6827.GearSetLoadCase':
        """GearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6827.GearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_load_case(self) -> '_6828.GuideDxfModelLoadCase':
        """GuideDxfModelLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6828.GuideDxfModelLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_load_case(self) -> '_6837.HypoidGearLoadCase':
        """HypoidGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6837.HypoidGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_load_case(self) -> '_6839.HypoidGearSetLoadCase':
        """HypoidGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6839.HypoidGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_load_case(self) -> '_6844.KlingelnbergCycloPalloidConicalGearLoadCase':
        """KlingelnbergCycloPalloidConicalGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6844.KlingelnbergCycloPalloidConicalGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_load_case(self) -> '_6846.KlingelnbergCycloPalloidConicalGearSetLoadCase':
        """KlingelnbergCycloPalloidConicalGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6846.KlingelnbergCycloPalloidConicalGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_load_case(self) -> '_6847.KlingelnbergCycloPalloidHypoidGearLoadCase':
        """KlingelnbergCycloPalloidHypoidGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6847.KlingelnbergCycloPalloidHypoidGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_load_case(self) -> '_6849.KlingelnbergCycloPalloidHypoidGearSetLoadCase':
        """KlingelnbergCycloPalloidHypoidGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6849.KlingelnbergCycloPalloidHypoidGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_load_case(self) -> '_6850.KlingelnbergCycloPalloidSpiralBevelGearLoadCase':
        """KlingelnbergCycloPalloidSpiralBevelGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6850.KlingelnbergCycloPalloidSpiralBevelGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_load_case(self) -> '_6852.KlingelnbergCycloPalloidSpiralBevelGearSetLoadCase':
        """KlingelnbergCycloPalloidSpiralBevelGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6852.KlingelnbergCycloPalloidSpiralBevelGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_load_case(self) -> '_6853.MassDiscLoadCase':
        """MassDiscLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6853.MassDiscLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_load_case(self) -> '_6854.MeasurementComponentLoadCase':
        """MeasurementComponentLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6854.MeasurementComponentLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_load_case(self) -> '_6856.MountableComponentLoadCase':
        """MountableComponentLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6856.MountableComponentLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_load_case(self) -> '_6858.OilSealLoadCase':
        """OilSealLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6858.OilSealLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_load_case(self) -> '_6860.PartLoadCase':
        """PartLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6860.PartLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_load_case(self) -> '_6862.PartToPartShearCouplingHalfLoadCase':
        """PartToPartShearCouplingHalfLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6862.PartToPartShearCouplingHalfLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_load_case(self) -> '_6863.PartToPartShearCouplingLoadCase':
        """PartToPartShearCouplingLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6863.PartToPartShearCouplingLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_load_case(self) -> '_6865.PlanetaryGearSetLoadCase':
        """PlanetaryGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6865.PlanetaryGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_load_case(self) -> '_6867.PlanetCarrierLoadCase':
        """PlanetCarrierLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6867.PlanetCarrierLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_load_case(self) -> '_6870.PointLoadLoadCase':
        """PointLoadLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6870.PointLoadLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_load_case(self) -> '_6871.PowerLoadLoadCase':
        """PowerLoadLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6871.PowerLoadLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_load_case(self) -> '_6872.PulleyLoadCase':
        """PulleyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6872.PulleyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_load_case(self) -> '_6875.RingPinsLoadCase':
        """RingPinsLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6875.RingPinsLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_load_case(self) -> '_6877.RollingRingAssemblyLoadCase':
        """RollingRingAssemblyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6877.RollingRingAssemblyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_load_case(self) -> '_6879.RollingRingLoadCase':
        """RollingRingLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6879.RollingRingLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_load_case(self) -> '_6880.RootAssemblyLoadCase':
        """RootAssemblyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6880.RootAssemblyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_load_case(self) -> '_6881.ShaftHubConnectionLoadCase':
        """ShaftHubConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6881.ShaftHubConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_load_case(self) -> '_6882.ShaftLoadCase':
        """ShaftLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6882.ShaftLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_load_case(self) -> '_6884.SpecialisedAssemblyLoadCase':
        """SpecialisedAssemblyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6884.SpecialisedAssemblyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_load_case(self) -> '_6885.SpiralBevelGearLoadCase':
        """SpiralBevelGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6885.SpiralBevelGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_load_case(self) -> '_6887.SpiralBevelGearSetLoadCase':
        """SpiralBevelGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6887.SpiralBevelGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_load_case(self) -> '_6889.SpringDamperHalfLoadCase':
        """SpringDamperHalfLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6889.SpringDamperHalfLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_load_case(self) -> '_6890.SpringDamperLoadCase':
        """SpringDamperLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6890.SpringDamperLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_load_case(self) -> '_6891.StraightBevelDiffGearLoadCase':
        """StraightBevelDiffGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6891.StraightBevelDiffGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_load_case(self) -> '_6893.StraightBevelDiffGearSetLoadCase':
        """StraightBevelDiffGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6893.StraightBevelDiffGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_load_case(self) -> '_6894.StraightBevelGearLoadCase':
        """StraightBevelGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6894.StraightBevelGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_load_case(self) -> '_6896.StraightBevelGearSetLoadCase':
        """StraightBevelGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6896.StraightBevelGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_load_case(self) -> '_6897.StraightBevelPlanetGearLoadCase':
        """StraightBevelPlanetGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6897.StraightBevelPlanetGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_load_case(self) -> '_6898.StraightBevelSunGearLoadCase':
        """StraightBevelSunGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6898.StraightBevelSunGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_load_case(self) -> '_6899.SynchroniserHalfLoadCase':
        """SynchroniserHalfLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6899.SynchroniserHalfLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_load_case(self) -> '_6900.SynchroniserLoadCase':
        """SynchroniserLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6900.SynchroniserLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_load_case(self) -> '_6901.SynchroniserPartLoadCase':
        """SynchroniserPartLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6901.SynchroniserPartLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_load_case(self) -> '_6902.SynchroniserSleeveLoadCase':
        """SynchroniserSleeveLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6902.SynchroniserSleeveLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_load_case(self) -> '_6905.TorqueConverterLoadCase':
        """TorqueConverterLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6905.TorqueConverterLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_load_case(self) -> '_6906.TorqueConverterPumpLoadCase':
        """TorqueConverterPumpLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6906.TorqueConverterPumpLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_load_case(self) -> '_6907.TorqueConverterTurbineLoadCase':
        """TorqueConverterTurbineLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6907.TorqueConverterTurbineLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_load_case(self) -> '_6912.UnbalancedMassLoadCase':
        """UnbalancedMassLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6912.UnbalancedMassLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_load_case(self) -> '_6913.VirtualComponentLoadCase':
        """VirtualComponentLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6913.VirtualComponentLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_load_case(self) -> '_6914.WormGearLoadCase':
        """WormGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6914.WormGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_load_case(self) -> '_6916.WormGearSetLoadCase':
        """WormGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6916.WormGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_load_case(self) -> '_6917.ZerolBevelGearLoadCase':
        """ZerolBevelGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6917.ZerolBevelGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_load_case(self) -> '_6919.ZerolBevelGearSetLoadCase':
        """ZerolBevelGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6919.ZerolBevelGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_advanced_time_stepping_analysis_for_modulation(self) -> '_6937.AbstractAssemblyAdvancedTimeSteppingAnalysisForModulation':
        """AbstractAssemblyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6937.AbstractAssemblyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_advanced_time_stepping_analysis_for_modulation(self) -> '_6938.AbstractShaftAdvancedTimeSteppingAnalysisForModulation':
        """AbstractShaftAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6938.AbstractShaftAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_advanced_time_stepping_analysis_for_modulation(self) -> '_6939.AbstractShaftOrHousingAdvancedTimeSteppingAnalysisForModulation':
        """AbstractShaftOrHousingAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6939.AbstractShaftOrHousingAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6944.AGMAGleasonConicalGearAdvancedTimeSteppingAnalysisForModulation':
        """AGMAGleasonConicalGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6944.AGMAGleasonConicalGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_6946.AGMAGleasonConicalGearSetAdvancedTimeSteppingAnalysisForModulation':
        """AGMAGleasonConicalGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6946.AGMAGleasonConicalGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_advanced_time_stepping_analysis_for_modulation(self) -> '_6947.AssemblyAdvancedTimeSteppingAnalysisForModulation':
        """AssemblyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6947.AssemblyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_advanced_time_stepping_analysis_for_modulation(self) -> '_6949.BearingAdvancedTimeSteppingAnalysisForModulation':
        """BearingAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6949.BearingAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_advanced_time_stepping_analysis_for_modulation(self) -> '_6951.BeltDriveAdvancedTimeSteppingAnalysisForModulation':
        """BeltDriveAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6951.BeltDriveAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6952.BevelDifferentialGearAdvancedTimeSteppingAnalysisForModulation':
        """BevelDifferentialGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6952.BevelDifferentialGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_6954.BevelDifferentialGearSetAdvancedTimeSteppingAnalysisForModulation':
        """BevelDifferentialGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6954.BevelDifferentialGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6955.BevelDifferentialPlanetGearAdvancedTimeSteppingAnalysisForModulation':
        """BevelDifferentialPlanetGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6955.BevelDifferentialPlanetGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6956.BevelDifferentialSunGearAdvancedTimeSteppingAnalysisForModulation':
        """BevelDifferentialSunGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6956.BevelDifferentialSunGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6957.BevelGearAdvancedTimeSteppingAnalysisForModulation':
        """BevelGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6957.BevelGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_6959.BevelGearSetAdvancedTimeSteppingAnalysisForModulation':
        """BevelGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6959.BevelGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_advanced_time_stepping_analysis_for_modulation(self) -> '_6960.BoltAdvancedTimeSteppingAnalysisForModulation':
        """BoltAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6960.BoltAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_advanced_time_stepping_analysis_for_modulation(self) -> '_6961.BoltedJointAdvancedTimeSteppingAnalysisForModulation':
        """BoltedJointAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6961.BoltedJointAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_advanced_time_stepping_analysis_for_modulation(self) -> '_6962.ClutchAdvancedTimeSteppingAnalysisForModulation':
        """ClutchAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6962.ClutchAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_advanced_time_stepping_analysis_for_modulation(self) -> '_6964.ClutchHalfAdvancedTimeSteppingAnalysisForModulation':
        """ClutchHalfAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6964.ClutchHalfAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_advanced_time_stepping_analysis_for_modulation(self) -> '_6966.ComponentAdvancedTimeSteppingAnalysisForModulation':
        """ComponentAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6966.ComponentAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_advanced_time_stepping_analysis_for_modulation(self) -> '_6967.ConceptCouplingAdvancedTimeSteppingAnalysisForModulation':
        """ConceptCouplingAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6967.ConceptCouplingAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_advanced_time_stepping_analysis_for_modulation(self) -> '_6969.ConceptCouplingHalfAdvancedTimeSteppingAnalysisForModulation':
        """ConceptCouplingHalfAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6969.ConceptCouplingHalfAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6970.ConceptGearAdvancedTimeSteppingAnalysisForModulation':
        """ConceptGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6970.ConceptGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_6972.ConceptGearSetAdvancedTimeSteppingAnalysisForModulation':
        """ConceptGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6972.ConceptGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6973.ConicalGearAdvancedTimeSteppingAnalysisForModulation':
        """ConicalGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6973.ConicalGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_6975.ConicalGearSetAdvancedTimeSteppingAnalysisForModulation':
        """ConicalGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6975.ConicalGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_advanced_time_stepping_analysis_for_modulation(self) -> '_6977.ConnectorAdvancedTimeSteppingAnalysisForModulation':
        """ConnectorAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6977.ConnectorAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_advanced_time_stepping_analysis_for_modulation(self) -> '_6978.CouplingAdvancedTimeSteppingAnalysisForModulation':
        """CouplingAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6978.CouplingAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_advanced_time_stepping_analysis_for_modulation(self) -> '_6980.CouplingHalfAdvancedTimeSteppingAnalysisForModulation':
        """CouplingHalfAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6980.CouplingHalfAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_advanced_time_stepping_analysis_for_modulation(self) -> '_6981.CVTAdvancedTimeSteppingAnalysisForModulation':
        """CVTAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6981.CVTAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_advanced_time_stepping_analysis_for_modulation(self) -> '_6983.CVTPulleyAdvancedTimeSteppingAnalysisForModulation':
        """CVTPulleyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6983.CVTPulleyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_advanced_time_stepping_analysis_for_modulation(self) -> '_6984.CycloidalAssemblyAdvancedTimeSteppingAnalysisForModulation':
        """CycloidalAssemblyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6984.CycloidalAssemblyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_advanced_time_stepping_analysis_for_modulation(self) -> '_6985.CycloidalDiscAdvancedTimeSteppingAnalysisForModulation':
        """CycloidalDiscAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6985.CycloidalDiscAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6988.CylindricalGearAdvancedTimeSteppingAnalysisForModulation':
        """CylindricalGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6988.CylindricalGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_6990.CylindricalGearSetAdvancedTimeSteppingAnalysisForModulation':
        """CylindricalGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6990.CylindricalGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6991.CylindricalPlanetGearAdvancedTimeSteppingAnalysisForModulation':
        """CylindricalPlanetGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6991.CylindricalPlanetGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_advanced_time_stepping_analysis_for_modulation(self) -> '_6992.DatumAdvancedTimeSteppingAnalysisForModulation':
        """DatumAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6992.DatumAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_advanced_time_stepping_analysis_for_modulation(self) -> '_6993.ExternalCADModelAdvancedTimeSteppingAnalysisForModulation':
        """ExternalCADModelAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6993.ExternalCADModelAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6994.FaceGearAdvancedTimeSteppingAnalysisForModulation':
        """FaceGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6994.FaceGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_6996.FaceGearSetAdvancedTimeSteppingAnalysisForModulation':
        """FaceGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6996.FaceGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_advanced_time_stepping_analysis_for_modulation(self) -> '_6997.FEPartAdvancedTimeSteppingAnalysisForModulation':
        """FEPartAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6997.FEPartAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_advanced_time_stepping_analysis_for_modulation(self) -> '_6998.FlexiblePinAssemblyAdvancedTimeSteppingAnalysisForModulation':
        """FlexiblePinAssemblyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6998.FlexiblePinAssemblyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6999.GearAdvancedTimeSteppingAnalysisForModulation':
        """GearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6999.GearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7001.GearSetAdvancedTimeSteppingAnalysisForModulation':
        """GearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7001.GearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_advanced_time_stepping_analysis_for_modulation(self) -> '_7002.GuideDxfModelAdvancedTimeSteppingAnalysisForModulation':
        """GuideDxfModelAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7002.GuideDxfModelAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7004.HypoidGearAdvancedTimeSteppingAnalysisForModulation':
        """HypoidGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7004.HypoidGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7006.HypoidGearSetAdvancedTimeSteppingAnalysisForModulation':
        """HypoidGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7006.HypoidGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7008.KlingelnbergCycloPalloidConicalGearAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidConicalGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7008.KlingelnbergCycloPalloidConicalGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7010.KlingelnbergCycloPalloidConicalGearSetAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidConicalGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7010.KlingelnbergCycloPalloidConicalGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7011.KlingelnbergCycloPalloidHypoidGearAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidHypoidGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7011.KlingelnbergCycloPalloidHypoidGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7013.KlingelnbergCycloPalloidHypoidGearSetAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidHypoidGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7013.KlingelnbergCycloPalloidHypoidGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7014.KlingelnbergCycloPalloidSpiralBevelGearAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidSpiralBevelGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7014.KlingelnbergCycloPalloidSpiralBevelGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7016.KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7016.KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_advanced_time_stepping_analysis_for_modulation(self) -> '_7017.MassDiscAdvancedTimeSteppingAnalysisForModulation':
        """MassDiscAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7017.MassDiscAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_advanced_time_stepping_analysis_for_modulation(self) -> '_7018.MeasurementComponentAdvancedTimeSteppingAnalysisForModulation':
        """MeasurementComponentAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7018.MeasurementComponentAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_advanced_time_stepping_analysis_for_modulation(self) -> '_7019.MountableComponentAdvancedTimeSteppingAnalysisForModulation':
        """MountableComponentAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7019.MountableComponentAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_advanced_time_stepping_analysis_for_modulation(self) -> '_7020.OilSealAdvancedTimeSteppingAnalysisForModulation':
        """OilSealAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7020.OilSealAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_advanced_time_stepping_analysis_for_modulation(self) -> '_7021.PartAdvancedTimeSteppingAnalysisForModulation':
        """PartAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7021.PartAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_advanced_time_stepping_analysis_for_modulation(self) -> '_7022.PartToPartShearCouplingAdvancedTimeSteppingAnalysisForModulation':
        """PartToPartShearCouplingAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7022.PartToPartShearCouplingAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_advanced_time_stepping_analysis_for_modulation(self) -> '_7024.PartToPartShearCouplingHalfAdvancedTimeSteppingAnalysisForModulation':
        """PartToPartShearCouplingHalfAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7024.PartToPartShearCouplingHalfAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7026.PlanetaryGearSetAdvancedTimeSteppingAnalysisForModulation':
        """PlanetaryGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7026.PlanetaryGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_advanced_time_stepping_analysis_for_modulation(self) -> '_7027.PlanetCarrierAdvancedTimeSteppingAnalysisForModulation':
        """PlanetCarrierAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7027.PlanetCarrierAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_advanced_time_stepping_analysis_for_modulation(self) -> '_7028.PointLoadAdvancedTimeSteppingAnalysisForModulation':
        """PointLoadAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7028.PointLoadAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_advanced_time_stepping_analysis_for_modulation(self) -> '_7029.PowerLoadAdvancedTimeSteppingAnalysisForModulation':
        """PowerLoadAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7029.PowerLoadAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_advanced_time_stepping_analysis_for_modulation(self) -> '_7030.PulleyAdvancedTimeSteppingAnalysisForModulation':
        """PulleyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7030.PulleyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_advanced_time_stepping_analysis_for_modulation(self) -> '_7031.RingPinsAdvancedTimeSteppingAnalysisForModulation':
        """RingPinsAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7031.RingPinsAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_advanced_time_stepping_analysis_for_modulation(self) -> '_7033.RollingRingAdvancedTimeSteppingAnalysisForModulation':
        """RollingRingAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7033.RollingRingAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_advanced_time_stepping_analysis_for_modulation(self) -> '_7034.RollingRingAssemblyAdvancedTimeSteppingAnalysisForModulation':
        """RollingRingAssemblyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7034.RollingRingAssemblyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_advanced_time_stepping_analysis_for_modulation(self) -> '_7036.RootAssemblyAdvancedTimeSteppingAnalysisForModulation':
        """RootAssemblyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7036.RootAssemblyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_advanced_time_stepping_analysis_for_modulation(self) -> '_7037.ShaftAdvancedTimeSteppingAnalysisForModulation':
        """ShaftAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7037.ShaftAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_7038.ShaftHubConnectionAdvancedTimeSteppingAnalysisForModulation':
        """ShaftHubConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7038.ShaftHubConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_advanced_time_stepping_analysis_for_modulation(self) -> '_7040.SpecialisedAssemblyAdvancedTimeSteppingAnalysisForModulation':
        """SpecialisedAssemblyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7040.SpecialisedAssemblyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7041.SpiralBevelGearAdvancedTimeSteppingAnalysisForModulation':
        """SpiralBevelGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7041.SpiralBevelGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7043.SpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation':
        """SpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7043.SpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_advanced_time_stepping_analysis_for_modulation(self) -> '_7044.SpringDamperAdvancedTimeSteppingAnalysisForModulation':
        """SpringDamperAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7044.SpringDamperAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_advanced_time_stepping_analysis_for_modulation(self) -> '_7046.SpringDamperHalfAdvancedTimeSteppingAnalysisForModulation':
        """SpringDamperHalfAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7046.SpringDamperHalfAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7047.StraightBevelDiffGearAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelDiffGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7047.StraightBevelDiffGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7049.StraightBevelDiffGearSetAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelDiffGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7049.StraightBevelDiffGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7050.StraightBevelGearAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7050.StraightBevelGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7052.StraightBevelGearSetAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7052.StraightBevelGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7053.StraightBevelPlanetGearAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelPlanetGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7053.StraightBevelPlanetGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7054.StraightBevelSunGearAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelSunGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7054.StraightBevelSunGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_advanced_time_stepping_analysis_for_modulation(self) -> '_7055.SynchroniserAdvancedTimeSteppingAnalysisForModulation':
        """SynchroniserAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7055.SynchroniserAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_advanced_time_stepping_analysis_for_modulation(self) -> '_7056.SynchroniserHalfAdvancedTimeSteppingAnalysisForModulation':
        """SynchroniserHalfAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7056.SynchroniserHalfAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_advanced_time_stepping_analysis_for_modulation(self) -> '_7057.SynchroniserPartAdvancedTimeSteppingAnalysisForModulation':
        """SynchroniserPartAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7057.SynchroniserPartAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_advanced_time_stepping_analysis_for_modulation(self) -> '_7058.SynchroniserSleeveAdvancedTimeSteppingAnalysisForModulation':
        """SynchroniserSleeveAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7058.SynchroniserSleeveAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_advanced_time_stepping_analysis_for_modulation(self) -> '_7059.TorqueConverterAdvancedTimeSteppingAnalysisForModulation':
        """TorqueConverterAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7059.TorqueConverterAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_advanced_time_stepping_analysis_for_modulation(self) -> '_7061.TorqueConverterPumpAdvancedTimeSteppingAnalysisForModulation':
        """TorqueConverterPumpAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7061.TorqueConverterPumpAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_advanced_time_stepping_analysis_for_modulation(self) -> '_7062.TorqueConverterTurbineAdvancedTimeSteppingAnalysisForModulation':
        """TorqueConverterTurbineAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7062.TorqueConverterTurbineAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_advanced_time_stepping_analysis_for_modulation(self) -> '_7063.UnbalancedMassAdvancedTimeSteppingAnalysisForModulation':
        """UnbalancedMassAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7063.UnbalancedMassAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_advanced_time_stepping_analysis_for_modulation(self) -> '_7064.VirtualComponentAdvancedTimeSteppingAnalysisForModulation':
        """VirtualComponentAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7064.VirtualComponentAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7065.WormGearAdvancedTimeSteppingAnalysisForModulation':
        """WormGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7065.WormGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7067.WormGearSetAdvancedTimeSteppingAnalysisForModulation':
        """WormGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7067.WormGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7068.ZerolBevelGearAdvancedTimeSteppingAnalysisForModulation':
        """ZerolBevelGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7068.ZerolBevelGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7070.ZerolBevelGearSetAdvancedTimeSteppingAnalysisForModulation':
        """ZerolBevelGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7070.ZerolBevelGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_advanced_system_deflection(self) -> '_7200.AbstractAssemblyAdvancedSystemDeflection':
        """AbstractAssemblyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7200.AbstractAssemblyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_advanced_system_deflection(self) -> '_7201.AbstractShaftAdvancedSystemDeflection':
        """AbstractShaftAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7201.AbstractShaftAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_advanced_system_deflection(self) -> '_7202.AbstractShaftOrHousingAdvancedSystemDeflection':
        """AbstractShaftOrHousingAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7202.AbstractShaftOrHousingAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_advanced_system_deflection(self) -> '_7207.AGMAGleasonConicalGearAdvancedSystemDeflection':
        """AGMAGleasonConicalGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7207.AGMAGleasonConicalGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_advanced_system_deflection(self) -> '_7209.AGMAGleasonConicalGearSetAdvancedSystemDeflection':
        """AGMAGleasonConicalGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7209.AGMAGleasonConicalGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_advanced_system_deflection(self) -> '_7210.AssemblyAdvancedSystemDeflection':
        """AssemblyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7210.AssemblyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_advanced_system_deflection(self) -> '_7211.BearingAdvancedSystemDeflection':
        """BearingAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7211.BearingAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_advanced_system_deflection(self) -> '_7213.BeltDriveAdvancedSystemDeflection':
        """BeltDriveAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7213.BeltDriveAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_advanced_system_deflection(self) -> '_7214.BevelDifferentialGearAdvancedSystemDeflection':
        """BevelDifferentialGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7214.BevelDifferentialGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_advanced_system_deflection(self) -> '_7216.BevelDifferentialGearSetAdvancedSystemDeflection':
        """BevelDifferentialGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7216.BevelDifferentialGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_advanced_system_deflection(self) -> '_7217.BevelDifferentialPlanetGearAdvancedSystemDeflection':
        """BevelDifferentialPlanetGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7217.BevelDifferentialPlanetGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_advanced_system_deflection(self) -> '_7218.BevelDifferentialSunGearAdvancedSystemDeflection':
        """BevelDifferentialSunGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7218.BevelDifferentialSunGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_advanced_system_deflection(self) -> '_7219.BevelGearAdvancedSystemDeflection':
        """BevelGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7219.BevelGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_advanced_system_deflection(self) -> '_7221.BevelGearSetAdvancedSystemDeflection':
        """BevelGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7221.BevelGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_advanced_system_deflection(self) -> '_7222.BoltAdvancedSystemDeflection':
        """BoltAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7222.BoltAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_advanced_system_deflection(self) -> '_7223.BoltedJointAdvancedSystemDeflection':
        """BoltedJointAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7223.BoltedJointAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_advanced_system_deflection(self) -> '_7224.ClutchAdvancedSystemDeflection':
        """ClutchAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7224.ClutchAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_advanced_system_deflection(self) -> '_7226.ClutchHalfAdvancedSystemDeflection':
        """ClutchHalfAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7226.ClutchHalfAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_advanced_system_deflection(self) -> '_7228.ComponentAdvancedSystemDeflection':
        """ComponentAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7228.ComponentAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_advanced_system_deflection(self) -> '_7229.ConceptCouplingAdvancedSystemDeflection':
        """ConceptCouplingAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7229.ConceptCouplingAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_advanced_system_deflection(self) -> '_7231.ConceptCouplingHalfAdvancedSystemDeflection':
        """ConceptCouplingHalfAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7231.ConceptCouplingHalfAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_advanced_system_deflection(self) -> '_7232.ConceptGearAdvancedSystemDeflection':
        """ConceptGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7232.ConceptGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_advanced_system_deflection(self) -> '_7234.ConceptGearSetAdvancedSystemDeflection':
        """ConceptGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7234.ConceptGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_advanced_system_deflection(self) -> '_7235.ConicalGearAdvancedSystemDeflection':
        """ConicalGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7235.ConicalGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_advanced_system_deflection(self) -> '_7237.ConicalGearSetAdvancedSystemDeflection':
        """ConicalGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7237.ConicalGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_advanced_system_deflection(self) -> '_7239.ConnectorAdvancedSystemDeflection':
        """ConnectorAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7239.ConnectorAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_advanced_system_deflection(self) -> '_7241.CouplingAdvancedSystemDeflection':
        """CouplingAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7241.CouplingAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_advanced_system_deflection(self) -> '_7243.CouplingHalfAdvancedSystemDeflection':
        """CouplingHalfAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7243.CouplingHalfAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_advanced_system_deflection(self) -> '_7244.CVTAdvancedSystemDeflection':
        """CVTAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7244.CVTAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_advanced_system_deflection(self) -> '_7246.CVTPulleyAdvancedSystemDeflection':
        """CVTPulleyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7246.CVTPulleyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_advanced_system_deflection(self) -> '_7247.CycloidalAssemblyAdvancedSystemDeflection':
        """CycloidalAssemblyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7247.CycloidalAssemblyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_advanced_system_deflection(self) -> '_7248.CycloidalDiscAdvancedSystemDeflection':
        """CycloidalDiscAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7248.CycloidalDiscAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_advanced_system_deflection(self) -> '_7251.CylindricalGearAdvancedSystemDeflection':
        """CylindricalGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7251.CylindricalGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_advanced_system_deflection(self) -> '_7253.CylindricalGearSetAdvancedSystemDeflection':
        """CylindricalGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7253.CylindricalGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_advanced_system_deflection(self) -> '_7255.CylindricalPlanetGearAdvancedSystemDeflection':
        """CylindricalPlanetGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7255.CylindricalPlanetGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_advanced_system_deflection(self) -> '_7256.DatumAdvancedSystemDeflection':
        """DatumAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7256.DatumAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_advanced_system_deflection(self) -> '_7257.ExternalCADModelAdvancedSystemDeflection':
        """ExternalCADModelAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7257.ExternalCADModelAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_advanced_system_deflection(self) -> '_7258.FaceGearAdvancedSystemDeflection':
        """FaceGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7258.FaceGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_advanced_system_deflection(self) -> '_7260.FaceGearSetAdvancedSystemDeflection':
        """FaceGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7260.FaceGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_advanced_system_deflection(self) -> '_7261.FEPartAdvancedSystemDeflection':
        """FEPartAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7261.FEPartAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_advanced_system_deflection(self) -> '_7262.FlexiblePinAssemblyAdvancedSystemDeflection':
        """FlexiblePinAssemblyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7262.FlexiblePinAssemblyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_advanced_system_deflection(self) -> '_7263.GearAdvancedSystemDeflection':
        """GearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7263.GearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_advanced_system_deflection(self) -> '_7265.GearSetAdvancedSystemDeflection':
        """GearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7265.GearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_advanced_system_deflection(self) -> '_7266.GuideDxfModelAdvancedSystemDeflection':
        """GuideDxfModelAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7266.GuideDxfModelAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_advanced_system_deflection(self) -> '_7267.HypoidGearAdvancedSystemDeflection':
        """HypoidGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7267.HypoidGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_advanced_system_deflection(self) -> '_7269.HypoidGearSetAdvancedSystemDeflection':
        """HypoidGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7269.HypoidGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_advanced_system_deflection(self) -> '_7271.KlingelnbergCycloPalloidConicalGearAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7271.KlingelnbergCycloPalloidConicalGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_advanced_system_deflection(self) -> '_7273.KlingelnbergCycloPalloidConicalGearSetAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7273.KlingelnbergCycloPalloidConicalGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_advanced_system_deflection(self) -> '_7274.KlingelnbergCycloPalloidHypoidGearAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7274.KlingelnbergCycloPalloidHypoidGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_advanced_system_deflection(self) -> '_7276.KlingelnbergCycloPalloidHypoidGearSetAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7276.KlingelnbergCycloPalloidHypoidGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_advanced_system_deflection(self) -> '_7277.KlingelnbergCycloPalloidSpiralBevelGearAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7277.KlingelnbergCycloPalloidSpiralBevelGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_advanced_system_deflection(self) -> '_7279.KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7279.KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_advanced_system_deflection(self) -> '_7281.MassDiscAdvancedSystemDeflection':
        """MassDiscAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7281.MassDiscAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_advanced_system_deflection(self) -> '_7282.MeasurementComponentAdvancedSystemDeflection':
        """MeasurementComponentAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7282.MeasurementComponentAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_advanced_system_deflection(self) -> '_7283.MountableComponentAdvancedSystemDeflection':
        """MountableComponentAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7283.MountableComponentAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_advanced_system_deflection(self) -> '_7284.OilSealAdvancedSystemDeflection':
        """OilSealAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7284.OilSealAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_advanced_system_deflection(self) -> '_7285.PartAdvancedSystemDeflection':
        """PartAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7285.PartAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_advanced_system_deflection(self) -> '_7286.PartToPartShearCouplingAdvancedSystemDeflection':
        """PartToPartShearCouplingAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7286.PartToPartShearCouplingAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_advanced_system_deflection(self) -> '_7288.PartToPartShearCouplingHalfAdvancedSystemDeflection':
        """PartToPartShearCouplingHalfAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7288.PartToPartShearCouplingHalfAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_advanced_system_deflection(self) -> '_7290.PlanetaryGearSetAdvancedSystemDeflection':
        """PlanetaryGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7290.PlanetaryGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_advanced_system_deflection(self) -> '_7291.PlanetCarrierAdvancedSystemDeflection':
        """PlanetCarrierAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7291.PlanetCarrierAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_advanced_system_deflection(self) -> '_7292.PointLoadAdvancedSystemDeflection':
        """PointLoadAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7292.PointLoadAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_advanced_system_deflection(self) -> '_7293.PowerLoadAdvancedSystemDeflection':
        """PowerLoadAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7293.PowerLoadAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_advanced_system_deflection(self) -> '_7294.PulleyAdvancedSystemDeflection':
        """PulleyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7294.PulleyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_advanced_system_deflection(self) -> '_7295.RingPinsAdvancedSystemDeflection':
        """RingPinsAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7295.RingPinsAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_advanced_system_deflection(self) -> '_7297.RollingRingAdvancedSystemDeflection':
        """RollingRingAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7297.RollingRingAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_advanced_system_deflection(self) -> '_7298.RollingRingAssemblyAdvancedSystemDeflection':
        """RollingRingAssemblyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7298.RollingRingAssemblyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_advanced_system_deflection(self) -> '_7300.RootAssemblyAdvancedSystemDeflection':
        """RootAssemblyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7300.RootAssemblyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_advanced_system_deflection(self) -> '_7301.ShaftAdvancedSystemDeflection':
        """ShaftAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7301.ShaftAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_advanced_system_deflection(self) -> '_7302.ShaftHubConnectionAdvancedSystemDeflection':
        """ShaftHubConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7302.ShaftHubConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_advanced_system_deflection(self) -> '_7304.SpecialisedAssemblyAdvancedSystemDeflection':
        """SpecialisedAssemblyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7304.SpecialisedAssemblyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_advanced_system_deflection(self) -> '_7305.SpiralBevelGearAdvancedSystemDeflection':
        """SpiralBevelGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7305.SpiralBevelGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_advanced_system_deflection(self) -> '_7307.SpiralBevelGearSetAdvancedSystemDeflection':
        """SpiralBevelGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7307.SpiralBevelGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_advanced_system_deflection(self) -> '_7308.SpringDamperAdvancedSystemDeflection':
        """SpringDamperAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7308.SpringDamperAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_advanced_system_deflection(self) -> '_7310.SpringDamperHalfAdvancedSystemDeflection':
        """SpringDamperHalfAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7310.SpringDamperHalfAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_advanced_system_deflection(self) -> '_7311.StraightBevelDiffGearAdvancedSystemDeflection':
        """StraightBevelDiffGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7311.StraightBevelDiffGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_advanced_system_deflection(self) -> '_7313.StraightBevelDiffGearSetAdvancedSystemDeflection':
        """StraightBevelDiffGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7313.StraightBevelDiffGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_advanced_system_deflection(self) -> '_7314.StraightBevelGearAdvancedSystemDeflection':
        """StraightBevelGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7314.StraightBevelGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_advanced_system_deflection(self) -> '_7316.StraightBevelGearSetAdvancedSystemDeflection':
        """StraightBevelGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7316.StraightBevelGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_advanced_system_deflection(self) -> '_7317.StraightBevelPlanetGearAdvancedSystemDeflection':
        """StraightBevelPlanetGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7317.StraightBevelPlanetGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_advanced_system_deflection(self) -> '_7318.StraightBevelSunGearAdvancedSystemDeflection':
        """StraightBevelSunGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7318.StraightBevelSunGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_advanced_system_deflection(self) -> '_7319.SynchroniserAdvancedSystemDeflection':
        """SynchroniserAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7319.SynchroniserAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_advanced_system_deflection(self) -> '_7320.SynchroniserHalfAdvancedSystemDeflection':
        """SynchroniserHalfAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7320.SynchroniserHalfAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_advanced_system_deflection(self) -> '_7321.SynchroniserPartAdvancedSystemDeflection':
        """SynchroniserPartAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7321.SynchroniserPartAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_advanced_system_deflection(self) -> '_7322.SynchroniserSleeveAdvancedSystemDeflection':
        """SynchroniserSleeveAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7322.SynchroniserSleeveAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_advanced_system_deflection(self) -> '_7323.TorqueConverterAdvancedSystemDeflection':
        """TorqueConverterAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7323.TorqueConverterAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_advanced_system_deflection(self) -> '_7325.TorqueConverterPumpAdvancedSystemDeflection':
        """TorqueConverterPumpAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7325.TorqueConverterPumpAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_advanced_system_deflection(self) -> '_7326.TorqueConverterTurbineAdvancedSystemDeflection':
        """TorqueConverterTurbineAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7326.TorqueConverterTurbineAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_advanced_system_deflection(self) -> '_7328.UnbalancedMassAdvancedSystemDeflection':
        """UnbalancedMassAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7328.UnbalancedMassAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_advanced_system_deflection(self) -> '_7329.VirtualComponentAdvancedSystemDeflection':
        """VirtualComponentAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7329.VirtualComponentAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_advanced_system_deflection(self) -> '_7330.WormGearAdvancedSystemDeflection':
        """WormGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7330.WormGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_advanced_system_deflection(self) -> '_7332.WormGearSetAdvancedSystemDeflection':
        """WormGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7332.WormGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_advanced_system_deflection(self) -> '_7333.ZerolBevelGearAdvancedSystemDeflection':
        """ZerolBevelGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7333.ZerolBevelGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_advanced_system_deflection(self) -> '_7335.ZerolBevelGearSetAdvancedSystemDeflection':
        """ZerolBevelGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7335.ZerolBevelGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_analysis_case(self) -> '_7475.PartAnalysisCase':
        """PartAnalysisCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7475.PartAnalysisCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartAnalysisCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_fe_analysis(self) -> '_7477.PartFEAnalysis':
        """PartFEAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7477.PartFEAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartFEAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_static_load_analysis_case(self) -> '_7478.PartStaticLoadAnalysisCase':
        """PartStaticLoadAnalysisCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7478.PartStaticLoadAnalysisCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartStaticLoadAnalysisCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_time_series_load_analysis_case(self) -> '_7479.PartTimeSeriesLoadAnalysisCase':
        """PartTimeSeriesLoadAnalysisCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7479.PartTimeSeriesLoadAnalysisCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartTimeSeriesLoadAnalysisCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None
