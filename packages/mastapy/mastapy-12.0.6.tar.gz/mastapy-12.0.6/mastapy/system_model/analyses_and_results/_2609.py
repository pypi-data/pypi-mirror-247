"""_2609.py

DesignEntitySingleContextAnalysis
"""


from mastapy._internal import constructor
from mastapy.system_model.analyses_and_results import _2607, _2605, _2613
from mastapy._internal.cast_exception import CastException
from mastapy.system_model.analyses_and_results.system_deflections import (
    _2641, _2642, _2643, _2644,
    _2645, _2646, _2647, _2648,
    _2649, _2650, _2651, _2652,
    _2653, _2654, _2655, _2656,
    _2657, _2658, _2659, _2660,
    _2661, _2662, _2663, _2664,
    _2665, _2666, _2668, _2669,
    _2670, _2671, _2672, _2673,
    _2675, _2676, _2677, _2678,
    _2679, _2680, _2681, _2682,
    _2683, _2684, _2685, _2686,
    _2687, _2688, _2689, _2690,
    _2691, _2692, _2693, _2694,
    _2695, _2696, _2697, _2698,
    _2701, _2702, _2703, _2705,
    _2706, _2707, _2708, _2709,
    _2710, _2711, _2712, _2713,
    _2714, _2715, _2716, _2718,
    _2719, _2720, _2721, _2722,
    _2723, _2724, _2725, _2726,
    _2727, _2730, _2731, _2733,
    _2735, _2736, _2737, _2738,
    _2739, _2740, _2741, _2742,
    _2743, _2744, _2745, _2746,
    _2748, _2749, _2750, _2751,
    _2752, _2755, _2756, _2757,
    _2758, _2759, _2760, _2761,
    _2762, _2763, _2764, _2765,
    _2766, _2767, _2768, _2769,
    _2770, _2771, _2772, _2773,
    _2774, _2775, _2779, _2780,
    _2781, _2782, _2785, _2786,
    _2787, _2788, _2789, _2790,
    _2791, _2792
)
from mastapy.system_model.analyses_and_results.system_deflections.compound import (
    _2802, _2803, _2804, _2805,
    _2806, _2807, _2808, _2809,
    _2810, _2811, _2812, _2813,
    _2814, _2815, _2816, _2817,
    _2818, _2819, _2820, _2821,
    _2822, _2823, _2824, _2825,
    _2826, _2827, _2828, _2829,
    _2830, _2831, _2832, _2833,
    _2834, _2835, _2836, _2837,
    _2838, _2839, _2840, _2841,
    _2842, _2843, _2844, _2845,
    _2846, _2847, _2848, _2849,
    _2850, _2851, _2852, _2853,
    _2855, _2856, _2857, _2858,
    _2859, _2860, _2861, _2862,
    _2863, _2864, _2865, _2866,
    _2867, _2868, _2869, _2870,
    _2871, _2872, _2873, _2874,
    _2875, _2876, _2877, _2878,
    _2879, _2880, _2881, _2882,
    _2883, _2884, _2885, _2886,
    _2887, _2888, _2889, _2890,
    _2891, _2892, _2893, _2894,
    _2895, _2896, _2897, _2898,
    _2900, _2901, _2902, _2903,
    _2904, _2905, _2906, _2907,
    _2908, _2909, _2910, _2911,
    _2912, _2913, _2914, _2915,
    _2916, _2917, _2918, _2919,
    _2920, _2921, _2922, _2923,
    _2924, _2925, _2926, _2927,
    _2928, _2929, _2930, _2931,
    _2932
)
from mastapy.system_model.analyses_and_results.steady_state_synchronous_responses import (
    _2934, _2935, _2936, _2937,
    _2938, _2939, _2940, _2941,
    _2942, _2943, _2944, _2945,
    _2946, _2947, _2948, _2949,
    _2950, _2951, _2952, _2953,
    _2954, _2955, _2956, _2957,
    _2958, _2959, _2960, _2961,
    _2962, _2963, _2964, _2965,
    _2966, _2967, _2968, _2969,
    _2970, _2971, _2972, _2973,
    _2974, _2975, _2976, _2977,
    _2978, _2979, _2980, _2981,
    _2982, _2983, _2984, _2985,
    _2987, _2988, _2989, _2990,
    _2991, _2992, _2993, _2994,
    _2995, _2996, _2997, _2998,
    _2999, _3000, _3001, _3002,
    _3003, _3004, _3005, _3006,
    _3007, _3008, _3009, _3010,
    _3011, _3012, _3013, _3014,
    _3015, _3016, _3017, _3018,
    _3019, _3020, _3021, _3022,
    _3023, _3024, _3025, _3026,
    _3027, _3028, _3029, _3030,
    _3031, _3032, _3033, _3034,
    _3035, _3036, _3037, _3038,
    _3039, _3043, _3044, _3045,
    _3046, _3047, _3048, _3049,
    _3050, _3051, _3052, _3053,
    _3054, _3055, _3056, _3057,
    _3058, _3059, _3060, _3061,
    _3062, _3063, _3064, _3065,
    _3066
)
from mastapy.system_model.analyses_and_results.steady_state_synchronous_responses.compound import (
    _3067, _3068, _3069, _3070,
    _3071, _3072, _3073, _3074,
    _3075, _3076, _3077, _3078,
    _3079, _3080, _3081, _3082,
    _3083, _3084, _3085, _3086,
    _3087, _3088, _3089, _3090,
    _3091, _3092, _3093, _3094,
    _3095, _3096, _3097, _3098,
    _3099, _3100, _3101, _3102,
    _3103, _3104, _3105, _3106,
    _3107, _3108, _3109, _3110,
    _3111, _3112, _3113, _3114,
    _3115, _3116, _3117, _3118,
    _3119, _3120, _3121, _3122,
    _3123, _3124, _3125, _3126,
    _3127, _3128, _3129, _3130,
    _3131, _3132, _3133, _3134,
    _3135, _3136, _3137, _3138,
    _3139, _3140, _3141, _3142,
    _3143, _3144, _3145, _3146,
    _3147, _3148, _3149, _3150,
    _3151, _3152, _3153, _3154,
    _3155, _3156, _3157, _3158,
    _3159, _3160, _3161, _3162,
    _3163, _3164, _3165, _3166,
    _3167, _3168, _3169, _3170,
    _3171, _3172, _3173, _3174,
    _3175, _3176, _3177, _3178,
    _3179, _3180, _3181, _3182,
    _3183, _3184, _3185, _3186,
    _3187, _3188, _3189, _3190,
    _3191, _3192, _3193, _3194,
    _3195
)
from mastapy.system_model.analyses_and_results.steady_state_synchronous_responses_on_a_shaft import (
    _3196, _3197, _3198, _3199,
    _3200, _3201, _3202, _3203,
    _3204, _3205, _3206, _3207,
    _3208, _3209, _3210, _3211,
    _3212, _3213, _3214, _3215,
    _3216, _3217, _3218, _3219,
    _3220, _3221, _3222, _3223,
    _3224, _3225, _3226, _3227,
    _3228, _3229, _3230, _3231,
    _3232, _3233, _3234, _3235,
    _3236, _3237, _3238, _3239,
    _3240, _3241, _3242, _3243,
    _3244, _3245, _3246, _3247,
    _3248, _3249, _3250, _3251,
    _3252, _3253, _3254, _3255,
    _3256, _3257, _3258, _3259,
    _3260, _3261, _3262, _3263,
    _3264, _3265, _3266, _3267,
    _3268, _3269, _3270, _3271,
    _3272, _3273, _3274, _3275,
    _3276, _3277, _3278, _3279,
    _3280, _3281, _3282, _3283,
    _3284, _3285, _3286, _3287,
    _3288, _3289, _3290, _3291,
    _3292, _3293, _3294, _3295,
    _3296, _3297, _3298, _3299,
    _3300, _3302, _3303, _3304,
    _3305, _3306, _3307, _3308,
    _3309, _3310, _3311, _3312,
    _3313, _3314, _3315, _3316,
    _3317, _3318, _3319, _3320,
    _3321, _3322, _3323, _3324,
    _3325
)
from mastapy.system_model.analyses_and_results.steady_state_synchronous_responses_on_a_shaft.compound import (
    _3326, _3327, _3328, _3329,
    _3330, _3331, _3332, _3333,
    _3334, _3335, _3336, _3337,
    _3338, _3339, _3340, _3341,
    _3342, _3343, _3344, _3345,
    _3346, _3347, _3348, _3349,
    _3350, _3351, _3352, _3353,
    _3354, _3355, _3356, _3357,
    _3358, _3359, _3360, _3361,
    _3362, _3363, _3364, _3365,
    _3366, _3367, _3368, _3369,
    _3370, _3371, _3372, _3373,
    _3374, _3375, _3376, _3377,
    _3378, _3379, _3380, _3381,
    _3382, _3383, _3384, _3385,
    _3386, _3387, _3388, _3389,
    _3390, _3391, _3392, _3393,
    _3394, _3395, _3396, _3397,
    _3398, _3399, _3400, _3401,
    _3402, _3403, _3404, _3405,
    _3406, _3407, _3408, _3409,
    _3410, _3411, _3412, _3413,
    _3414, _3415, _3416, _3417,
    _3418, _3419, _3420, _3421,
    _3422, _3423, _3424, _3425,
    _3426, _3427, _3428, _3429,
    _3430, _3431, _3432, _3433,
    _3434, _3435, _3436, _3437,
    _3438, _3439, _3440, _3441,
    _3442, _3443, _3444, _3445,
    _3446, _3447, _3448, _3449,
    _3450, _3451, _3452, _3453,
    _3454
)
from mastapy.system_model.analyses_and_results.steady_state_synchronous_responses_at_a_speed import (
    _3455, _3456, _3457, _3458,
    _3459, _3460, _3461, _3462,
    _3463, _3464, _3465, _3466,
    _3467, _3468, _3469, _3470,
    _3471, _3472, _3473, _3474,
    _3475, _3476, _3477, _3478,
    _3479, _3480, _3481, _3482,
    _3483, _3484, _3485, _3486,
    _3487, _3488, _3489, _3490,
    _3491, _3492, _3493, _3494,
    _3495, _3496, _3497, _3498,
    _3499, _3500, _3501, _3502,
    _3503, _3504, _3505, _3506,
    _3507, _3508, _3509, _3510,
    _3511, _3512, _3513, _3514,
    _3515, _3516, _3517, _3518,
    _3519, _3520, _3521, _3522,
    _3523, _3524, _3525, _3526,
    _3527, _3528, _3529, _3530,
    _3531, _3532, _3533, _3534,
    _3535, _3536, _3537, _3538,
    _3539, _3540, _3541, _3542,
    _3543, _3544, _3545, _3546,
    _3547, _3548, _3549, _3550,
    _3551, _3552, _3553, _3554,
    _3555, _3556, _3557, _3558,
    _3559, _3561, _3562, _3563,
    _3564, _3565, _3566, _3567,
    _3568, _3569, _3570, _3571,
    _3572, _3573, _3574, _3575,
    _3576, _3577, _3578, _3579,
    _3580, _3581, _3582, _3583,
    _3584
)
from mastapy.system_model.analyses_and_results.steady_state_synchronous_responses_at_a_speed.compound import (
    _3585, _3586, _3587, _3588,
    _3589, _3590, _3591, _3592,
    _3593, _3594, _3595, _3596,
    _3597, _3598, _3599, _3600,
    _3601, _3602, _3603, _3604,
    _3605, _3606, _3607, _3608,
    _3609, _3610, _3611, _3612,
    _3613, _3614, _3615, _3616,
    _3617, _3618, _3619, _3620,
    _3621, _3622, _3623, _3624,
    _3625, _3626, _3627, _3628,
    _3629, _3630, _3631, _3632,
    _3633, _3634, _3635, _3636,
    _3637, _3638, _3639, _3640,
    _3641, _3642, _3643, _3644,
    _3645, _3646, _3647, _3648,
    _3649, _3650, _3651, _3652,
    _3653, _3654, _3655, _3656,
    _3657, _3658, _3659, _3660,
    _3661, _3662, _3663, _3664,
    _3665, _3666, _3667, _3668,
    _3669, _3670, _3671, _3672,
    _3673, _3674, _3675, _3676,
    _3677, _3678, _3679, _3680,
    _3681, _3682, _3683, _3684,
    _3685, _3686, _3687, _3688,
    _3689, _3690, _3691, _3692,
    _3693, _3694, _3695, _3696,
    _3697, _3698, _3699, _3700,
    _3701, _3702, _3703, _3704,
    _3705, _3706, _3707, _3708,
    _3709, _3710, _3711, _3712,
    _3713
)
from mastapy.system_model.analyses_and_results.stability_analyses import (
    _3714, _3715, _3716, _3717,
    _3718, _3719, _3720, _3721,
    _3722, _3723, _3724, _3725,
    _3726, _3727, _3728, _3729,
    _3730, _3731, _3732, _3733,
    _3734, _3735, _3736, _3737,
    _3738, _3739, _3740, _3741,
    _3742, _3743, _3744, _3745,
    _3746, _3747, _3748, _3749,
    _3750, _3751, _3752, _3753,
    _3755, _3756, _3757, _3758,
    _3759, _3760, _3761, _3762,
    _3763, _3764, _3765, _3766,
    _3767, _3768, _3769, _3770,
    _3771, _3772, _3773, _3774,
    _3775, _3776, _3777, _3778,
    _3779, _3780, _3781, _3782,
    _3783, _3784, _3785, _3786,
    _3787, _3788, _3789, _3790,
    _3791, _3792, _3793, _3794,
    _3795, _3796, _3797, _3798,
    _3799, _3800, _3801, _3802,
    _3803, _3804, _3805, _3806,
    _3807, _3808, _3809, _3810,
    _3811, _3812, _3813, _3814,
    _3815, _3816, _3817, _3818,
    _3819, _3822, _3823, _3824,
    _3825, _3826, _3827, _3828,
    _3829, _3830, _3831, _3832,
    _3833, _3834, _3835, _3836,
    _3837, _3838, _3839, _3840,
    _3841, _3842, _3843, _3844,
    _3845
)
from mastapy.system_model.analyses_and_results.stability_analyses.compound import (
    _3846, _3847, _3848, _3849,
    _3850, _3851, _3852, _3853,
    _3854, _3855, _3856, _3857,
    _3858, _3859, _3860, _3861,
    _3862, _3863, _3864, _3865,
    _3866, _3867, _3868, _3869,
    _3870, _3871, _3872, _3873,
    _3874, _3875, _3876, _3877,
    _3878, _3879, _3880, _3881,
    _3882, _3883, _3884, _3885,
    _3886, _3887, _3888, _3889,
    _3890, _3891, _3892, _3893,
    _3894, _3895, _3896, _3897,
    _3898, _3899, _3900, _3901,
    _3902, _3903, _3904, _3905,
    _3906, _3907, _3908, _3909,
    _3910, _3911, _3912, _3913,
    _3914, _3915, _3916, _3917,
    _3918, _3919, _3920, _3921,
    _3922, _3923, _3924, _3925,
    _3926, _3927, _3928, _3929,
    _3930, _3931, _3932, _3933,
    _3934, _3935, _3936, _3937,
    _3938, _3939, _3940, _3941,
    _3942, _3943, _3944, _3945,
    _3946, _3947, _3948, _3949,
    _3950, _3951, _3952, _3953,
    _3954, _3955, _3956, _3957,
    _3958, _3959, _3960, _3961,
    _3962, _3963, _3964, _3965,
    _3966, _3967, _3968, _3969,
    _3970, _3971, _3972, _3973,
    _3974
)
from mastapy.system_model.analyses_and_results.power_flows import (
    _3981, _3982, _3983, _3984,
    _3985, _3986, _3987, _3988,
    _3989, _3990, _3991, _3992,
    _3993, _3994, _3995, _3996,
    _3997, _3998, _3999, _4000,
    _4001, _4002, _4003, _4004,
    _4005, _4006, _4007, _4008,
    _4009, _4010, _4011, _4012,
    _4013, _4014, _4015, _4016,
    _4017, _4018, _4019, _4020,
    _4021, _4022, _4023, _4024,
    _4025, _4026, _4027, _4029,
    _4030, _4031, _4032, _4033,
    _4034, _4035, _4036, _4037,
    _4038, _4039, _4040, _4041,
    _4042, _4043, _4044, _4045,
    _4046, _4047, _4048, _4049,
    _4050, _4051, _4052, _4053,
    _4054, _4055, _4056, _4057,
    _4058, _4059, _4060, _4061,
    _4062, _4063, _4064, _4065,
    _4066, _4067, _4068, _4071,
    _4072, _4073, _4074, _4075,
    _4076, _4077, _4078, _4079,
    _4080, _4081, _4082, _4083,
    _4084, _4085, _4086, _4087,
    _4088, _4089, _4090, _4091,
    _4092, _4093, _4094, _4095,
    _4096, _4097, _4098, _4099,
    _4100, _4102, _4103, _4104,
    _4105, _4106, _4107, _4108,
    _4109, _4110, _4111, _4112,
    _4113
)
from mastapy.system_model.analyses_and_results.power_flows.compound import (
    _4114, _4115, _4116, _4117,
    _4118, _4119, _4120, _4121,
    _4122, _4123, _4124, _4125,
    _4126, _4127, _4128, _4129,
    _4130, _4131, _4132, _4133,
    _4134, _4135, _4136, _4137,
    _4138, _4139, _4140, _4141,
    _4142, _4143, _4144, _4145,
    _4146, _4147, _4148, _4149,
    _4150, _4151, _4152, _4153,
    _4154, _4155, _4156, _4157,
    _4158, _4159, _4160, _4161,
    _4162, _4163, _4164, _4165,
    _4166, _4167, _4168, _4169,
    _4170, _4171, _4172, _4173,
    _4174, _4175, _4176, _4177,
    _4178, _4179, _4180, _4181,
    _4182, _4183, _4184, _4185,
    _4186, _4187, _4188, _4189,
    _4190, _4191, _4192, _4193,
    _4194, _4195, _4196, _4197,
    _4198, _4199, _4200, _4201,
    _4202, _4203, _4204, _4205,
    _4206, _4207, _4208, _4209,
    _4210, _4211, _4212, _4213,
    _4214, _4215, _4216, _4217,
    _4218, _4219, _4220, _4221,
    _4222, _4223, _4224, _4225,
    _4226, _4227, _4228, _4229,
    _4230, _4231, _4232, _4233,
    _4234, _4235, _4236, _4237,
    _4238, _4239, _4240, _4241,
    _4242
)
from mastapy.system_model.analyses_and_results.parametric_study_tools import (
    _4243, _4244, _4245, _4246,
    _4247, _4248, _4249, _4250,
    _4251, _4252, _4253, _4254,
    _4255, _4256, _4257, _4258,
    _4259, _4260, _4261, _4262,
    _4263, _4264, _4265, _4266,
    _4267, _4268, _4269, _4270,
    _4271, _4272, _4273, _4274,
    _4275, _4276, _4277, _4278,
    _4279, _4280, _4281, _4282,
    _4283, _4284, _4285, _4286,
    _4287, _4288, _4289, _4290,
    _4291, _4292, _4293, _4294,
    _4302, _4303, _4304, _4305,
    _4306, _4307, _4308, _4309,
    _4310, _4311, _4312, _4313,
    _4314, _4315, _4316, _4317,
    _4318, _4319, _4320, _4321,
    _4322, _4323, _4324, _4325,
    _4326, _4328, _4329, _4340,
    _4341, _4342, _4343, _4344,
    _4345, _4346, _4347, _4348,
    _4349, _4350, _4351, _4352,
    _4353, _4354, _4355, _4356,
    _4357, _4358, _4359, _4360,
    _4361, _4362, _4363, _4364,
    _4365, _4366, _4367, _4368,
    _4369, _4370, _4371, _4372,
    _4373, _4374, _4375, _4376,
    _4377, _4378, _4379, _4380,
    _4381, _4382, _4383, _4384,
    _4385, _4386, _4387, _4388,
    _4389
)
from mastapy.system_model.analyses_and_results.parametric_study_tools.compound import (
    _4390, _4391, _4392, _4393,
    _4394, _4395, _4396, _4397,
    _4398, _4399, _4400, _4401,
    _4402, _4403, _4404, _4405,
    _4406, _4407, _4408, _4409,
    _4410, _4411, _4412, _4413,
    _4414, _4415, _4416, _4417,
    _4418, _4419, _4420, _4421,
    _4422, _4423, _4424, _4425,
    _4426, _4427, _4428, _4429,
    _4430, _4431, _4432, _4433,
    _4434, _4435, _4436, _4437,
    _4438, _4439, _4440, _4441,
    _4442, _4443, _4444, _4445,
    _4446, _4447, _4448, _4449,
    _4450, _4451, _4452, _4453,
    _4454, _4455, _4456, _4457,
    _4458, _4459, _4460, _4461,
    _4462, _4463, _4464, _4465,
    _4466, _4467, _4468, _4469,
    _4470, _4471, _4472, _4473,
    _4474, _4475, _4476, _4477,
    _4478, _4479, _4480, _4481,
    _4482, _4483, _4484, _4485,
    _4486, _4487, _4488, _4489,
    _4490, _4491, _4492, _4493,
    _4494, _4495, _4496, _4497,
    _4498, _4499, _4500, _4501,
    _4502, _4503, _4504, _4505,
    _4506, _4507, _4508, _4509,
    _4510, _4511, _4512, _4513,
    _4514, _4515, _4516, _4517,
    _4518
)
from mastapy.system_model.analyses_and_results.modal_analyses import (
    _4519, _4520, _4521, _4522,
    _4523, _4524, _4525, _4526,
    _4527, _4528, _4529, _4530,
    _4531, _4532, _4533, _4534,
    _4535, _4536, _4537, _4538,
    _4539, _4540, _4541, _4542,
    _4543, _4544, _4545, _4546,
    _4547, _4548, _4549, _4550,
    _4551, _4552, _4553, _4554,
    _4555, _4557, _4558, _4559,
    _4560, _4561, _4562, _4563,
    _4564, _4565, _4566, _4567,
    _4568, _4569, _4570, _4571,
    _4574, _4575, _4576, _4577,
    _4578, _4579, _4581, _4582,
    _4583, _4584, _4585, _4586,
    _4587, _4588, _4589, _4590,
    _4591, _4592, _4593, _4594,
    _4595, _4596, _4597, _4598,
    _4599, _4603, _4605, _4607,
    _4608, _4609, _4610, _4611,
    _4612, _4613, _4614, _4615,
    _4616, _4617, _4618, _4619,
    _4620, _4621, _4622, _4623,
    _4624, _4626, _4627, _4628,
    _4629, _4630, _4631, _4632,
    _4633, _4634, _4635, _4636,
    _4637, _4638, _4639, _4640,
    _4641, _4642, _4643, _4644,
    _4645, _4646, _4647, _4648,
    _4649, _4650, _4651, _4655,
    _4656, _4657, _4658, _4659,
    _4660
)
from mastapy.system_model.analyses_and_results.modal_analyses.compound import (
    _4673, _4674, _4675, _4676,
    _4677, _4678, _4679, _4680,
    _4681, _4682, _4683, _4684,
    _4685, _4686, _4687, _4688,
    _4689, _4690, _4691, _4692,
    _4693, _4694, _4695, _4696,
    _4697, _4698, _4699, _4700,
    _4701, _4702, _4703, _4704,
    _4705, _4706, _4707, _4708,
    _4709, _4710, _4711, _4712,
    _4713, _4714, _4715, _4716,
    _4717, _4718, _4719, _4720,
    _4721, _4722, _4723, _4724,
    _4725, _4726, _4727, _4728,
    _4729, _4730, _4731, _4732,
    _4733, _4734, _4735, _4736,
    _4737, _4738, _4739, _4740,
    _4741, _4742, _4743, _4744,
    _4745, _4746, _4747, _4748,
    _4749, _4750, _4751, _4752,
    _4753, _4754, _4755, _4756,
    _4757, _4758, _4759, _4760,
    _4761, _4762, _4763, _4764,
    _4765, _4766, _4767, _4768,
    _4769, _4770, _4771, _4772,
    _4773, _4774, _4775, _4776,
    _4777, _4778, _4779, _4780,
    _4781, _4782, _4783, _4784,
    _4785, _4786, _4787, _4788,
    _4789, _4790, _4791, _4792,
    _4793, _4794, _4795, _4796,
    _4797, _4798, _4799, _4800,
    _4801
)
from mastapy.system_model.analyses_and_results.modal_analyses_at_a_stiffness import (
    _4802, _4803, _4804, _4805,
    _4806, _4807, _4808, _4809,
    _4810, _4811, _4812, _4813,
    _4814, _4815, _4816, _4817,
    _4818, _4819, _4820, _4821,
    _4822, _4823, _4824, _4825,
    _4826, _4827, _4828, _4829,
    _4830, _4831, _4832, _4833,
    _4834, _4835, _4836, _4837,
    _4838, _4839, _4840, _4841,
    _4842, _4843, _4844, _4845,
    _4846, _4847, _4848, _4849,
    _4850, _4851, _4852, _4853,
    _4855, _4856, _4857, _4858,
    _4859, _4860, _4861, _4862,
    _4863, _4864, _4865, _4866,
    _4867, _4868, _4869, _4870,
    _4871, _4872, _4873, _4874,
    _4875, _4876, _4877, _4878,
    _4879, _4880, _4881, _4882,
    _4883, _4884, _4885, _4886,
    _4887, _4888, _4889, _4890,
    _4891, _4892, _4893, _4894,
    _4895, _4896, _4897, _4898,
    _4899, _4900, _4901, _4902,
    _4903, _4904, _4905, _4906,
    _4907, _4908, _4909, _4910,
    _4911, _4912, _4913, _4914,
    _4915, _4916, _4917, _4918,
    _4919, _4920, _4921, _4922,
    _4923, _4924, _4925, _4926,
    _4927, _4928, _4929, _4930,
    _4931
)
from mastapy.system_model.analyses_and_results.modal_analyses_at_a_stiffness.compound import (
    _4932, _4933, _4934, _4935,
    _4936, _4937, _4938, _4939,
    _4940, _4941, _4942, _4943,
    _4944, _4945, _4946, _4947,
    _4948, _4949, _4950, _4951,
    _4952, _4953, _4954, _4955,
    _4956, _4957, _4958, _4959,
    _4960, _4961, _4962, _4963,
    _4964, _4965, _4966, _4967,
    _4968, _4969, _4970, _4971,
    _4972, _4973, _4974, _4975,
    _4976, _4977, _4978, _4979,
    _4980, _4981, _4982, _4983,
    _4984, _4985, _4986, _4987,
    _4988, _4989, _4990, _4991,
    _4992, _4993, _4994, _4995,
    _4996, _4997, _4998, _4999,
    _5000, _5001, _5002, _5003,
    _5004, _5005, _5006, _5007,
    _5008, _5009, _5010, _5011,
    _5012, _5013, _5014, _5015,
    _5016, _5017, _5018, _5019,
    _5020, _5021, _5022, _5023,
    _5024, _5025, _5026, _5027,
    _5028, _5029, _5030, _5031,
    _5032, _5033, _5034, _5035,
    _5036, _5037, _5038, _5039,
    _5040, _5041, _5042, _5043,
    _5044, _5045, _5046, _5047,
    _5048, _5049, _5050, _5051,
    _5052, _5053, _5054, _5055,
    _5056, _5057, _5058, _5059,
    _5060
)
from mastapy.system_model.analyses_and_results.modal_analyses_at_a_speed import (
    _5061, _5062, _5063, _5064,
    _5065, _5066, _5067, _5068,
    _5069, _5070, _5071, _5072,
    _5073, _5074, _5075, _5076,
    _5077, _5078, _5079, _5080,
    _5081, _5082, _5083, _5084,
    _5085, _5086, _5087, _5088,
    _5089, _5090, _5091, _5092,
    _5093, _5094, _5095, _5096,
    _5097, _5098, _5099, _5100,
    _5101, _5102, _5103, _5104,
    _5105, _5106, _5107, _5108,
    _5109, _5110, _5111, _5112,
    _5113, _5114, _5115, _5116,
    _5117, _5118, _5119, _5120,
    _5121, _5122, _5123, _5124,
    _5125, _5126, _5127, _5128,
    _5129, _5130, _5131, _5132,
    _5133, _5134, _5135, _5136,
    _5137, _5138, _5139, _5140,
    _5141, _5142, _5143, _5144,
    _5145, _5146, _5147, _5148,
    _5149, _5150, _5151, _5152,
    _5153, _5154, _5155, _5156,
    _5157, _5158, _5159, _5160,
    _5161, _5162, _5163, _5164,
    _5165, _5166, _5167, _5168,
    _5169, _5170, _5171, _5172,
    _5173, _5174, _5175, _5176,
    _5177, _5178, _5179, _5180,
    _5181, _5182, _5183, _5184,
    _5185, _5186, _5187, _5188,
    _5189
)
from mastapy.system_model.analyses_and_results.modal_analyses_at_a_speed.compound import (
    _5190, _5191, _5192, _5193,
    _5194, _5195, _5196, _5197,
    _5198, _5199, _5200, _5201,
    _5202, _5203, _5204, _5205,
    _5206, _5207, _5208, _5209,
    _5210, _5211, _5212, _5213,
    _5214, _5215, _5216, _5217,
    _5218, _5219, _5220, _5221,
    _5222, _5223, _5224, _5225,
    _5226, _5227, _5228, _5229,
    _5230, _5231, _5232, _5233,
    _5234, _5235, _5236, _5237,
    _5238, _5239, _5240, _5241,
    _5242, _5243, _5244, _5245,
    _5246, _5247, _5248, _5249,
    _5250, _5251, _5252, _5253,
    _5254, _5255, _5256, _5257,
    _5258, _5259, _5260, _5261,
    _5262, _5263, _5264, _5265,
    _5266, _5267, _5268, _5269,
    _5270, _5271, _5272, _5273,
    _5274, _5275, _5276, _5277,
    _5278, _5279, _5280, _5281,
    _5282, _5283, _5284, _5285,
    _5286, _5287, _5288, _5289,
    _5290, _5291, _5292, _5293,
    _5294, _5295, _5296, _5297,
    _5298, _5299, _5300, _5301,
    _5302, _5303, _5304, _5305,
    _5306, _5307, _5308, _5309,
    _5310, _5311, _5312, _5313,
    _5314, _5315, _5316, _5317,
    _5318
)
from mastapy.system_model.analyses_and_results.mbd_analyses import (
    _5319, _5320, _5321, _5322,
    _5323, _5324, _5325, _5327,
    _5328, _5330, _5331, _5332,
    _5333, _5334, _5335, _5336,
    _5337, _5338, _5339, _5340,
    _5341, _5342, _5343, _5344,
    _5346, _5347, _5348, _5349,
    _5350, _5351, _5352, _5353,
    _5354, _5355, _5356, _5357,
    _5358, _5359, _5360, _5361,
    _5362, _5363, _5364, _5365,
    _5366, _5367, _5368, _5369,
    _5370, _5371, _5372, _5373,
    _5374, _5375, _5376, _5377,
    _5378, _5379, _5380, _5382,
    _5383, _5384, _5385, _5386,
    _5387, _5392, _5393, _5394,
    _5395, _5396, _5397, _5398,
    _5399, _5400, _5401, _5402,
    _5406, _5407, _5408, _5409,
    _5410, _5411, _5412, _5413,
    _5414, _5415, _5416, _5417,
    _5418, _5419, _5420, _5421,
    _5422, _5423, _5424, _5427,
    _5428, _5429, _5431, _5432,
    _5433, _5434, _5435, _5436,
    _5437, _5438, _5439, _5440,
    _5441, _5442, _5443, _5444,
    _5445, _5446, _5447, _5448,
    _5449, _5450, _5452, _5453,
    _5455, _5456, _5457, _5459,
    _5460, _5461, _5462, _5463,
    _5464
)
from mastapy.system_model.analyses_and_results.mbd_analyses.compound import (
    _5471, _5472, _5473, _5474,
    _5475, _5476, _5477, _5478,
    _5479, _5480, _5481, _5482,
    _5483, _5484, _5485, _5486,
    _5487, _5488, _5489, _5490,
    _5491, _5492, _5493, _5494,
    _5495, _5496, _5497, _5498,
    _5499, _5500, _5501, _5502,
    _5503, _5504, _5505, _5506,
    _5507, _5508, _5509, _5510,
    _5511, _5512, _5513, _5514,
    _5515, _5516, _5517, _5518,
    _5519, _5520, _5521, _5522,
    _5523, _5524, _5525, _5526,
    _5527, _5528, _5529, _5530,
    _5531, _5532, _5533, _5534,
    _5535, _5536, _5537, _5538,
    _5539, _5540, _5541, _5542,
    _5543, _5544, _5545, _5546,
    _5547, _5548, _5549, _5550,
    _5551, _5552, _5553, _5554,
    _5555, _5556, _5557, _5558,
    _5559, _5560, _5561, _5562,
    _5563, _5564, _5565, _5566,
    _5567, _5568, _5569, _5570,
    _5571, _5572, _5573, _5574,
    _5575, _5576, _5577, _5578,
    _5579, _5580, _5581, _5582,
    _5583, _5584, _5585, _5586,
    _5587, _5588, _5589, _5590,
    _5591, _5592, _5593, _5594,
    _5595, _5596, _5597, _5598,
    _5599
)
from mastapy.system_model.analyses_and_results.harmonic_analyses import (
    _5620, _5622, _5623, _5624,
    _5625, _5626, _5627, _5628,
    _5629, _5630, _5631, _5632,
    _5633, _5634, _5635, _5636,
    _5637, _5638, _5639, _5640,
    _5641, _5642, _5643, _5644,
    _5645, _5647, _5648, _5649,
    _5650, _5651, _5652, _5653,
    _5654, _5655, _5656, _5657,
    _5658, _5659, _5660, _5661,
    _5662, _5663, _5664, _5665,
    _5666, _5667, _5668, _5669,
    _5670, _5671, _5672, _5673,
    _5686, _5687, _5688, _5689,
    _5690, _5691, _5693, _5695,
    _5698, _5700, _5707, _5708,
    _5709, _5710, _5711, _5712,
    _5713, _5714, _5715, _5716,
    _5717, _5718, _5719, _5720,
    _5721, _5722, _5723, _5724,
    _5725, _5726, _5727, _5729,
    _5730, _5731, _5732, _5733,
    _5734, _5736, _5737, _5738,
    _5739, _5740, _5741, _5742,
    _5743, _5744, _5746, _5748,
    _5749, _5750, _5751, _5752,
    _5753, _5754, _5755, _5756,
    _5757, _5758, _5759, _5760,
    _5761, _5762, _5763, _5764,
    _5765, _5766, _5767, _5768,
    _5769, _5771, _5772, _5773,
    _5774, _5775, _5776, _5777,
    _5778
)
from mastapy.system_model.analyses_and_results.harmonic_analyses.compound import (
    _5814, _5815, _5816, _5817,
    _5818, _5819, _5820, _5821,
    _5822, _5823, _5824, _5825,
    _5826, _5827, _5828, _5829,
    _5830, _5831, _5832, _5833,
    _5834, _5835, _5836, _5837,
    _5838, _5839, _5840, _5841,
    _5842, _5843, _5844, _5845,
    _5846, _5847, _5848, _5849,
    _5850, _5851, _5852, _5853,
    _5854, _5855, _5856, _5857,
    _5858, _5859, _5860, _5861,
    _5862, _5863, _5864, _5865,
    _5866, _5867, _5868, _5869,
    _5870, _5871, _5872, _5873,
    _5874, _5875, _5876, _5877,
    _5878, _5879, _5880, _5881,
    _5882, _5883, _5884, _5885,
    _5886, _5887, _5888, _5889,
    _5890, _5891, _5892, _5893,
    _5894, _5895, _5896, _5897,
    _5898, _5899, _5900, _5901,
    _5902, _5903, _5904, _5905,
    _5906, _5907, _5908, _5909,
    _5910, _5911, _5912, _5913,
    _5914, _5915, _5916, _5917,
    _5918, _5919, _5920, _5921,
    _5922, _5923, _5924, _5925,
    _5926, _5927, _5928, _5929,
    _5930, _5931, _5932, _5933,
    _5934, _5935, _5936, _5937,
    _5938, _5939, _5940, _5941,
    _5942
)
from mastapy.system_model.analyses_and_results.harmonic_analyses_single_excitation import (
    _5943, _5944, _5945, _5946,
    _5947, _5948, _5949, _5950,
    _5951, _5952, _5953, _5954,
    _5955, _5956, _5957, _5958,
    _5959, _5960, _5961, _5962,
    _5963, _5964, _5965, _5966,
    _5967, _5968, _5969, _5970,
    _5971, _5972, _5973, _5974,
    _5975, _5976, _5977, _5978,
    _5979, _5980, _5981, _5982,
    _5983, _5984, _5985, _5986,
    _5987, _5988, _5989, _5990,
    _5991, _5992, _5993, _5994,
    _5995, _5996, _5997, _5998,
    _5999, _6000, _6001, _6002,
    _6003, _6004, _6006, _6007,
    _6008, _6009, _6010, _6011,
    _6012, _6013, _6014, _6015,
    _6016, _6017, _6018, _6019,
    _6020, _6021, _6022, _6023,
    _6024, _6025, _6026, _6027,
    _6028, _6029, _6030, _6031,
    _6032, _6033, _6034, _6035,
    _6036, _6037, _6038, _6039,
    _6040, _6041, _6042, _6043,
    _6044, _6045, _6046, _6047,
    _6048, _6049, _6050, _6051,
    _6052, _6053, _6054, _6055,
    _6056, _6057, _6058, _6059,
    _6060, _6061, _6062, _6063,
    _6064, _6065, _6066, _6067,
    _6068, _6069, _6070, _6071,
    _6072
)
from mastapy.system_model.analyses_and_results.harmonic_analyses_single_excitation.compound import (
    _6073, _6074, _6075, _6076,
    _6077, _6078, _6079, _6080,
    _6081, _6082, _6083, _6084,
    _6085, _6086, _6087, _6088,
    _6089, _6090, _6091, _6092,
    _6093, _6094, _6095, _6096,
    _6097, _6098, _6099, _6100,
    _6101, _6102, _6103, _6104,
    _6105, _6106, _6107, _6108,
    _6109, _6110, _6111, _6112,
    _6113, _6114, _6115, _6116,
    _6117, _6118, _6119, _6120,
    _6121, _6122, _6123, _6124,
    _6125, _6126, _6127, _6128,
    _6129, _6130, _6131, _6132,
    _6133, _6134, _6135, _6136,
    _6137, _6138, _6139, _6140,
    _6141, _6142, _6143, _6144,
    _6145, _6146, _6147, _6148,
    _6149, _6150, _6151, _6152,
    _6153, _6154, _6155, _6156,
    _6157, _6158, _6159, _6160,
    _6161, _6162, _6163, _6164,
    _6165, _6166, _6167, _6168,
    _6169, _6170, _6171, _6172,
    _6173, _6174, _6175, _6176,
    _6177, _6178, _6179, _6180,
    _6181, _6182, _6183, _6184,
    _6185, _6186, _6187, _6188,
    _6189, _6190, _6191, _6192,
    _6193, _6194, _6195, _6196,
    _6197, _6198, _6199, _6200,
    _6201
)
from mastapy.system_model.analyses_and_results.dynamic_analyses import (
    _6211, _6212, _6213, _6214,
    _6215, _6216, _6217, _6218,
    _6219, _6220, _6221, _6222,
    _6223, _6224, _6225, _6226,
    _6227, _6228, _6229, _6230,
    _6231, _6232, _6233, _6234,
    _6235, _6236, _6237, _6238,
    _6239, _6240, _6241, _6242,
    _6243, _6244, _6245, _6246,
    _6247, _6248, _6249, _6250,
    _6251, _6252, _6253, _6254,
    _6255, _6256, _6257, _6258,
    _6259, _6260, _6261, _6262,
    _6264, _6265, _6266, _6267,
    _6268, _6269, _6270, _6271,
    _6272, _6273, _6274, _6275,
    _6276, _6277, _6278, _6279,
    _6280, _6281, _6282, _6283,
    _6284, _6285, _6286, _6287,
    _6288, _6289, _6290, _6291,
    _6292, _6293, _6294, _6295,
    _6296, _6297, _6298, _6299,
    _6300, _6301, _6302, _6303,
    _6304, _6305, _6306, _6307,
    _6308, _6309, _6310, _6311,
    _6312, _6313, _6314, _6315,
    _6316, _6317, _6318, _6319,
    _6320, _6321, _6322, _6323,
    _6324, _6325, _6326, _6327,
    _6328, _6329, _6330, _6331,
    _6332, _6333, _6334, _6335,
    _6336, _6337, _6338, _6339,
    _6340
)
from mastapy.system_model.analyses_and_results.dynamic_analyses.compound import (
    _6341, _6342, _6343, _6344,
    _6345, _6346, _6347, _6348,
    _6349, _6350, _6351, _6352,
    _6353, _6354, _6355, _6356,
    _6357, _6358, _6359, _6360,
    _6361, _6362, _6363, _6364,
    _6365, _6366, _6367, _6368,
    _6369, _6370, _6371, _6372,
    _6373, _6374, _6375, _6376,
    _6377, _6378, _6379, _6380,
    _6381, _6382, _6383, _6384,
    _6385, _6386, _6387, _6388,
    _6389, _6390, _6391, _6392,
    _6393, _6394, _6395, _6396,
    _6397, _6398, _6399, _6400,
    _6401, _6402, _6403, _6404,
    _6405, _6406, _6407, _6408,
    _6409, _6410, _6411, _6412,
    _6413, _6414, _6415, _6416,
    _6417, _6418, _6419, _6420,
    _6421, _6422, _6423, _6424,
    _6425, _6426, _6427, _6428,
    _6429, _6430, _6431, _6432,
    _6433, _6434, _6435, _6436,
    _6437, _6438, _6439, _6440,
    _6441, _6442, _6443, _6444,
    _6445, _6446, _6447, _6448,
    _6449, _6450, _6451, _6452,
    _6453, _6454, _6455, _6456,
    _6457, _6458, _6459, _6460,
    _6461, _6462, _6463, _6464,
    _6465, _6466, _6467, _6468,
    _6469
)
from mastapy.system_model.analyses_and_results.critical_speed_analyses import (
    _6476, _6477, _6478, _6479,
    _6480, _6481, _6482, _6483,
    _6484, _6485, _6486, _6487,
    _6488, _6489, _6490, _6491,
    _6492, _6493, _6494, _6495,
    _6496, _6497, _6498, _6499,
    _6500, _6501, _6502, _6503,
    _6504, _6505, _6506, _6507,
    _6508, _6509, _6510, _6511,
    _6512, _6513, _6514, _6515,
    _6518, _6519, _6520, _6521,
    _6522, _6523, _6524, _6525,
    _6526, _6527, _6528, _6529,
    _6530, _6531, _6532, _6533,
    _6534, _6535, _6536, _6537,
    _6538, _6539, _6540, _6541,
    _6542, _6543, _6544, _6545,
    _6546, _6547, _6548, _6549,
    _6550, _6551, _6552, _6553,
    _6554, _6555, _6556, _6557,
    _6558, _6559, _6560, _6561,
    _6562, _6563, _6564, _6565,
    _6566, _6567, _6568, _6569,
    _6570, _6571, _6572, _6573,
    _6574, _6575, _6576, _6577,
    _6578, _6579, _6580, _6581,
    _6582, _6583, _6584, _6585,
    _6586, _6587, _6588, _6589,
    _6590, _6591, _6592, _6593,
    _6594, _6595, _6596, _6597,
    _6598, _6599, _6600, _6601,
    _6602, _6603, _6604, _6605,
    _6606
)
from mastapy.system_model.analyses_and_results.critical_speed_analyses.compound import (
    _6607, _6608, _6609, _6610,
    _6611, _6612, _6613, _6614,
    _6615, _6616, _6617, _6618,
    _6619, _6620, _6621, _6622,
    _6623, _6624, _6625, _6626,
    _6627, _6628, _6629, _6630,
    _6631, _6632, _6633, _6634,
    _6635, _6636, _6637, _6638,
    _6639, _6640, _6641, _6642,
    _6643, _6644, _6645, _6646,
    _6647, _6648, _6649, _6650,
    _6651, _6652, _6653, _6654,
    _6655, _6656, _6657, _6658,
    _6659, _6660, _6661, _6662,
    _6663, _6664, _6665, _6666,
    _6667, _6668, _6669, _6670,
    _6671, _6672, _6673, _6674,
    _6675, _6676, _6677, _6678,
    _6679, _6680, _6681, _6682,
    _6683, _6684, _6685, _6686,
    _6687, _6688, _6689, _6690,
    _6691, _6692, _6693, _6694,
    _6695, _6696, _6697, _6698,
    _6699, _6700, _6701, _6702,
    _6703, _6704, _6705, _6706,
    _6707, _6708, _6709, _6710,
    _6711, _6712, _6713, _6714,
    _6715, _6716, _6717, _6718,
    _6719, _6720, _6721, _6722,
    _6723, _6724, _6725, _6726,
    _6727, _6728, _6729, _6730,
    _6731, _6732, _6733, _6734,
    _6735
)
from mastapy.system_model.analyses_and_results.static_loads import (
    _6739, _6740, _6741, _6742,
    _6746, _6747, _6748, _6751,
    _6752, _6753, _6754, _6755,
    _6756, _6757, _6758, _6759,
    _6760, _6761, _6762, _6763,
    _6764, _6765, _6766, _6767,
    _6768, _6769, _6770, _6771,
    _6772, _6773, _6774, _6775,
    _6776, _6778, _6780, _6781,
    _6782, _6783, _6784, _6785,
    _6786, _6787, _6788, _6789,
    _6790, _6791, _6792, _6793,
    _6795, _6797, _6798, _6801,
    _6815, _6816, _6817, _6818,
    _6819, _6820, _6822, _6824,
    _6827, _6828, _6837, _6838,
    _6839, _6843, _6844, _6845,
    _6846, _6847, _6848, _6849,
    _6850, _6851, _6852, _6853,
    _6854, _6856, _6858, _6860,
    _6861, _6862, _6863, _6864,
    _6865, _6867, _6870, _6871,
    _6872, _6875, _6876, _6877,
    _6878, _6879, _6880, _6881,
    _6882, _6883, _6884, _6885,
    _6886, _6887, _6888, _6889,
    _6890, _6891, _6892, _6893,
    _6894, _6895, _6896, _6897,
    _6898, _6899, _6900, _6901,
    _6902, _6904, _6905, _6906,
    _6907, _6912, _6913, _6914,
    _6915, _6916, _6917, _6918,
    _6919
)
from mastapy.system_model.analyses_and_results.advanced_time_stepping_analyses_for_modulation import (
    _6937, _6938, _6939, _6940,
    _6944, _6945, _6946, _6947,
    _6949, _6950, _6951, _6952,
    _6953, _6954, _6955, _6956,
    _6957, _6958, _6959, _6960,
    _6961, _6962, _6963, _6964,
    _6965, _6966, _6967, _6968,
    _6969, _6970, _6971, _6972,
    _6973, _6974, _6975, _6976,
    _6977, _6978, _6979, _6980,
    _6981, _6982, _6983, _6984,
    _6985, _6986, _6987, _6988,
    _6989, _6990, _6991, _6992,
    _6993, _6994, _6995, _6996,
    _6997, _6998, _6999, _7000,
    _7001, _7002, _7004, _7005,
    _7006, _7007, _7008, _7009,
    _7010, _7011, _7012, _7013,
    _7014, _7015, _7016, _7017,
    _7018, _7019, _7020, _7021,
    _7022, _7023, _7024, _7025,
    _7026, _7027, _7028, _7029,
    _7030, _7031, _7032, _7033,
    _7034, _7035, _7036, _7037,
    _7038, _7039, _7040, _7041,
    _7042, _7043, _7044, _7045,
    _7046, _7047, _7048, _7049,
    _7050, _7051, _7052, _7053,
    _7054, _7055, _7056, _7057,
    _7058, _7059, _7060, _7061,
    _7062, _7063, _7064, _7065,
    _7066, _7067, _7068, _7069,
    _7070
)
from mastapy.system_model.analyses_and_results.advanced_time_stepping_analyses_for_modulation.compound import (
    _7071, _7072, _7073, _7074,
    _7075, _7076, _7077, _7078,
    _7079, _7080, _7081, _7082,
    _7083, _7084, _7085, _7086,
    _7087, _7088, _7089, _7090,
    _7091, _7092, _7093, _7094,
    _7095, _7096, _7097, _7098,
    _7099, _7100, _7101, _7102,
    _7103, _7104, _7105, _7106,
    _7107, _7108, _7109, _7110,
    _7111, _7112, _7113, _7114,
    _7115, _7116, _7117, _7118,
    _7119, _7120, _7121, _7122,
    _7123, _7124, _7125, _7126,
    _7127, _7128, _7129, _7130,
    _7131, _7132, _7133, _7134,
    _7135, _7136, _7137, _7138,
    _7139, _7140, _7141, _7142,
    _7143, _7144, _7145, _7146,
    _7147, _7148, _7149, _7150,
    _7151, _7152, _7153, _7154,
    _7155, _7156, _7157, _7158,
    _7159, _7160, _7161, _7162,
    _7163, _7164, _7165, _7166,
    _7167, _7168, _7169, _7170,
    _7171, _7172, _7173, _7174,
    _7175, _7176, _7177, _7178,
    _7179, _7180, _7181, _7182,
    _7183, _7184, _7185, _7186,
    _7187, _7188, _7189, _7190,
    _7191, _7192, _7193, _7194,
    _7195, _7196, _7197, _7198,
    _7199
)
from mastapy.system_model.analyses_and_results.advanced_system_deflections import (
    _7200, _7201, _7202, _7203,
    _7207, _7208, _7209, _7210,
    _7211, _7212, _7213, _7214,
    _7215, _7216, _7217, _7218,
    _7219, _7220, _7221, _7222,
    _7223, _7224, _7225, _7226,
    _7227, _7228, _7229, _7230,
    _7231, _7232, _7233, _7234,
    _7235, _7236, _7237, _7238,
    _7239, _7241, _7242, _7243,
    _7244, _7245, _7246, _7247,
    _7248, _7249, _7250, _7251,
    _7252, _7253, _7255, _7256,
    _7257, _7258, _7259, _7260,
    _7261, _7262, _7263, _7264,
    _7265, _7266, _7267, _7268,
    _7269, _7270, _7271, _7272,
    _7273, _7274, _7275, _7276,
    _7277, _7278, _7279, _7281,
    _7282, _7283, _7284, _7285,
    _7286, _7287, _7288, _7289,
    _7290, _7291, _7292, _7293,
    _7294, _7295, _7296, _7297,
    _7298, _7299, _7300, _7301,
    _7302, _7303, _7304, _7305,
    _7306, _7307, _7308, _7309,
    _7310, _7311, _7312, _7313,
    _7314, _7315, _7316, _7317,
    _7318, _7319, _7320, _7321,
    _7322, _7323, _7324, _7325,
    _7326, _7328, _7329, _7330,
    _7331, _7332, _7333, _7334,
    _7335
)
from mastapy.system_model.analyses_and_results.advanced_system_deflections.compound import (
    _7336, _7337, _7338, _7339,
    _7340, _7341, _7342, _7343,
    _7344, _7345, _7346, _7347,
    _7348, _7349, _7350, _7351,
    _7352, _7353, _7354, _7355,
    _7356, _7357, _7358, _7359,
    _7360, _7361, _7362, _7363,
    _7364, _7365, _7366, _7367,
    _7368, _7369, _7370, _7371,
    _7372, _7373, _7374, _7375,
    _7376, _7377, _7378, _7379,
    _7380, _7381, _7382, _7383,
    _7384, _7385, _7386, _7387,
    _7388, _7389, _7390, _7391,
    _7392, _7393, _7394, _7395,
    _7396, _7397, _7398, _7399,
    _7400, _7401, _7402, _7403,
    _7404, _7405, _7406, _7407,
    _7408, _7409, _7410, _7411,
    _7412, _7413, _7414, _7415,
    _7416, _7417, _7418, _7419,
    _7420, _7421, _7422, _7423,
    _7424, _7425, _7426, _7427,
    _7428, _7429, _7430, _7431,
    _7432, _7433, _7434, _7435,
    _7436, _7437, _7438, _7439,
    _7440, _7441, _7442, _7443,
    _7444, _7445, _7446, _7447,
    _7448, _7449, _7450, _7451,
    _7452, _7453, _7454, _7455,
    _7456, _7457, _7458, _7459,
    _7460, _7461, _7462, _7463,
    _7464
)
from mastapy.system_model.analyses_and_results.analysis_cases import (
    _7468, _7469, _7470, _7471,
    _7472, _7473, _7475, _7476,
    _7477, _7478, _7479
)
from mastapy._internal.python_net import python_net_import

_DESIGN_ENTITY_SINGLE_CONTEXT_ANALYSIS = python_net_import('SMT.MastaAPI.SystemModel.AnalysesAndResults', 'DesignEntitySingleContextAnalysis')


__docformat__ = 'restructuredtext en'
__all__ = ('DesignEntitySingleContextAnalysis',)


class DesignEntitySingleContextAnalysis(_2607.DesignEntityAnalysis):
    """DesignEntitySingleContextAnalysis

    This is a mastapy class.
    """

    TYPE = _DESIGN_ENTITY_SINGLE_CONTEXT_ANALYSIS

    def __init__(self, instance_to_wrap: 'DesignEntitySingleContextAnalysis.TYPE'):
        super().__init__(instance_to_wrap)
        self._freeze()

    @property
    def parametric_study_index_1(self) -> 'int':
        """int: 'ParametricStudyIndex1' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.ParametricStudyIndex1

        if temp is None:
            return 0

        return temp

    @property
    def parametric_study_index_2(self) -> 'int':
        """int: 'ParametricStudyIndex2' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.ParametricStudyIndex2

        if temp is None:
            return 0

        return temp

    @property
    def planetary_original(self) -> '_2607.DesignEntityAnalysis':
        """DesignEntityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2607.DesignEntityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DesignEntityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_analysis(self) -> '_2605.ConnectionAnalysis':
        """ConnectionAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2605.ConnectionAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_design_entity_single_context_analysis(self) -> 'DesignEntitySingleContextAnalysis':
        """DesignEntitySingleContextAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if DesignEntitySingleContextAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DesignEntitySingleContextAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_analysis(self) -> '_2613.PartAnalysis':
        """PartAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2613.PartAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_system_deflection(self) -> '_2641.AbstractAssemblySystemDeflection':
        """AbstractAssemblySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2641.AbstractAssemblySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_system_deflection(self) -> '_2642.AbstractShaftOrHousingSystemDeflection':
        """AbstractShaftOrHousingSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2642.AbstractShaftOrHousingSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_system_deflection(self) -> '_2643.AbstractShaftSystemDeflection':
        """AbstractShaftSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2643.AbstractShaftSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_system_deflection(self) -> '_2644.AbstractShaftToMountableComponentConnectionSystemDeflection':
        """AbstractShaftToMountableComponentConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2644.AbstractShaftToMountableComponentConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_system_deflection(self) -> '_2645.AGMAGleasonConicalGearMeshSystemDeflection':
        """AGMAGleasonConicalGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2645.AGMAGleasonConicalGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_system_deflection(self) -> '_2646.AGMAGleasonConicalGearSetSystemDeflection':
        """AGMAGleasonConicalGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2646.AGMAGleasonConicalGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_system_deflection(self) -> '_2647.AGMAGleasonConicalGearSystemDeflection':
        """AGMAGleasonConicalGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2647.AGMAGleasonConicalGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_system_deflection(self) -> '_2648.AssemblySystemDeflection':
        """AssemblySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2648.AssemblySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_system_deflection(self) -> '_2649.BearingSystemDeflection':
        """BearingSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2649.BearingSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_system_deflection(self) -> '_2650.BeltConnectionSystemDeflection':
        """BeltConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2650.BeltConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_system_deflection(self) -> '_2651.BeltDriveSystemDeflection':
        """BeltDriveSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2651.BeltDriveSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_system_deflection(self) -> '_2652.BevelDifferentialGearMeshSystemDeflection':
        """BevelDifferentialGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2652.BevelDifferentialGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_system_deflection(self) -> '_2653.BevelDifferentialGearSetSystemDeflection':
        """BevelDifferentialGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2653.BevelDifferentialGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_system_deflection(self) -> '_2654.BevelDifferentialGearSystemDeflection':
        """BevelDifferentialGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2654.BevelDifferentialGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_system_deflection(self) -> '_2655.BevelDifferentialPlanetGearSystemDeflection':
        """BevelDifferentialPlanetGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2655.BevelDifferentialPlanetGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_system_deflection(self) -> '_2656.BevelDifferentialSunGearSystemDeflection':
        """BevelDifferentialSunGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2656.BevelDifferentialSunGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_system_deflection(self) -> '_2657.BevelGearMeshSystemDeflection':
        """BevelGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2657.BevelGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_system_deflection(self) -> '_2658.BevelGearSetSystemDeflection':
        """BevelGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2658.BevelGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_system_deflection(self) -> '_2659.BevelGearSystemDeflection':
        """BevelGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2659.BevelGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_system_deflection(self) -> '_2660.BoltedJointSystemDeflection':
        """BoltedJointSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2660.BoltedJointSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_system_deflection(self) -> '_2661.BoltSystemDeflection':
        """BoltSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2661.BoltSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_system_deflection(self) -> '_2662.ClutchConnectionSystemDeflection':
        """ClutchConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2662.ClutchConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_system_deflection(self) -> '_2663.ClutchHalfSystemDeflection':
        """ClutchHalfSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2663.ClutchHalfSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_system_deflection(self) -> '_2664.ClutchSystemDeflection':
        """ClutchSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2664.ClutchSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_system_deflection(self) -> '_2665.CoaxialConnectionSystemDeflection':
        """CoaxialConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2665.CoaxialConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_system_deflection(self) -> '_2666.ComponentSystemDeflection':
        """ComponentSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2666.ComponentSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_system_deflection(self) -> '_2668.ConceptCouplingConnectionSystemDeflection':
        """ConceptCouplingConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2668.ConceptCouplingConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_system_deflection(self) -> '_2669.ConceptCouplingHalfSystemDeflection':
        """ConceptCouplingHalfSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2669.ConceptCouplingHalfSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_system_deflection(self) -> '_2670.ConceptCouplingSystemDeflection':
        """ConceptCouplingSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2670.ConceptCouplingSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_system_deflection(self) -> '_2671.ConceptGearMeshSystemDeflection':
        """ConceptGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2671.ConceptGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_system_deflection(self) -> '_2672.ConceptGearSetSystemDeflection':
        """ConceptGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2672.ConceptGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_system_deflection(self) -> '_2673.ConceptGearSystemDeflection':
        """ConceptGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2673.ConceptGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_system_deflection(self) -> '_2675.ConicalGearMeshSystemDeflection':
        """ConicalGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2675.ConicalGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_system_deflection(self) -> '_2676.ConicalGearSetSystemDeflection':
        """ConicalGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2676.ConicalGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_system_deflection(self) -> '_2677.ConicalGearSystemDeflection':
        """ConicalGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2677.ConicalGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_system_deflection(self) -> '_2678.ConnectionSystemDeflection':
        """ConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2678.ConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_system_deflection(self) -> '_2679.ConnectorSystemDeflection':
        """ConnectorSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2679.ConnectorSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_system_deflection(self) -> '_2680.CouplingConnectionSystemDeflection':
        """CouplingConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2680.CouplingConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_system_deflection(self) -> '_2681.CouplingHalfSystemDeflection':
        """CouplingHalfSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2681.CouplingHalfSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_system_deflection(self) -> '_2682.CouplingSystemDeflection':
        """CouplingSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2682.CouplingSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_system_deflection(self) -> '_2683.CVTBeltConnectionSystemDeflection':
        """CVTBeltConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2683.CVTBeltConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_system_deflection(self) -> '_2684.CVTPulleySystemDeflection':
        """CVTPulleySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2684.CVTPulleySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_system_deflection(self) -> '_2685.CVTSystemDeflection':
        """CVTSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2685.CVTSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_system_deflection(self) -> '_2686.CycloidalAssemblySystemDeflection':
        """CycloidalAssemblySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2686.CycloidalAssemblySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_system_deflection(self) -> '_2687.CycloidalDiscCentralBearingConnectionSystemDeflection':
        """CycloidalDiscCentralBearingConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2687.CycloidalDiscCentralBearingConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_system_deflection(self) -> '_2688.CycloidalDiscPlanetaryBearingConnectionSystemDeflection':
        """CycloidalDiscPlanetaryBearingConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2688.CycloidalDiscPlanetaryBearingConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_system_deflection(self) -> '_2689.CycloidalDiscSystemDeflection':
        """CycloidalDiscSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2689.CycloidalDiscSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_system_deflection(self) -> '_2690.CylindricalGearMeshSystemDeflection':
        """CylindricalGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2690.CylindricalGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_system_deflection_timestep(self) -> '_2691.CylindricalGearMeshSystemDeflectionTimestep':
        """CylindricalGearMeshSystemDeflectionTimestep: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2691.CylindricalGearMeshSystemDeflectionTimestep.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshSystemDeflectionTimestep. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_system_deflection_with_ltca_results(self) -> '_2692.CylindricalGearMeshSystemDeflectionWithLTCAResults':
        """CylindricalGearMeshSystemDeflectionWithLTCAResults: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2692.CylindricalGearMeshSystemDeflectionWithLTCAResults.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshSystemDeflectionWithLTCAResults. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_system_deflection(self) -> '_2693.CylindricalGearSetSystemDeflection':
        """CylindricalGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2693.CylindricalGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_system_deflection_timestep(self) -> '_2694.CylindricalGearSetSystemDeflectionTimestep':
        """CylindricalGearSetSystemDeflectionTimestep: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2694.CylindricalGearSetSystemDeflectionTimestep.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetSystemDeflectionTimestep. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_system_deflection_with_ltca_results(self) -> '_2695.CylindricalGearSetSystemDeflectionWithLTCAResults':
        """CylindricalGearSetSystemDeflectionWithLTCAResults: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2695.CylindricalGearSetSystemDeflectionWithLTCAResults.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetSystemDeflectionWithLTCAResults. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_system_deflection(self) -> '_2696.CylindricalGearSystemDeflection':
        """CylindricalGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2696.CylindricalGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_system_deflection_timestep(self) -> '_2697.CylindricalGearSystemDeflectionTimestep':
        """CylindricalGearSystemDeflectionTimestep: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2697.CylindricalGearSystemDeflectionTimestep.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSystemDeflectionTimestep. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_system_deflection_with_ltca_results(self) -> '_2698.CylindricalGearSystemDeflectionWithLTCAResults':
        """CylindricalGearSystemDeflectionWithLTCAResults: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2698.CylindricalGearSystemDeflectionWithLTCAResults.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSystemDeflectionWithLTCAResults. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_system_deflection(self) -> '_2701.CylindricalPlanetGearSystemDeflection':
        """CylindricalPlanetGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2701.CylindricalPlanetGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_system_deflection(self) -> '_2702.DatumSystemDeflection':
        """DatumSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2702.DatumSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_system_deflection(self) -> '_2703.ExternalCADModelSystemDeflection':
        """ExternalCADModelSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2703.ExternalCADModelSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_system_deflection(self) -> '_2705.FaceGearMeshSystemDeflection':
        """FaceGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2705.FaceGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_system_deflection(self) -> '_2706.FaceGearSetSystemDeflection':
        """FaceGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2706.FaceGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_system_deflection(self) -> '_2707.FaceGearSystemDeflection':
        """FaceGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2707.FaceGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_system_deflection(self) -> '_2708.FEPartSystemDeflection':
        """FEPartSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2708.FEPartSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_system_deflection(self) -> '_2709.FlexiblePinAssemblySystemDeflection':
        """FlexiblePinAssemblySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2709.FlexiblePinAssemblySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_system_deflection(self) -> '_2710.GearMeshSystemDeflection':
        """GearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2710.GearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_system_deflection(self) -> '_2711.GearSetSystemDeflection':
        """GearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2711.GearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_system_deflection(self) -> '_2712.GearSystemDeflection':
        """GearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2712.GearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_system_deflection(self) -> '_2713.GuideDxfModelSystemDeflection':
        """GuideDxfModelSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2713.GuideDxfModelSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_system_deflection(self) -> '_2714.HypoidGearMeshSystemDeflection':
        """HypoidGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2714.HypoidGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_system_deflection(self) -> '_2715.HypoidGearSetSystemDeflection':
        """HypoidGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2715.HypoidGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_system_deflection(self) -> '_2716.HypoidGearSystemDeflection':
        """HypoidGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2716.HypoidGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_system_deflection(self) -> '_2718.InterMountableComponentConnectionSystemDeflection':
        """InterMountableComponentConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2718.InterMountableComponentConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_system_deflection(self) -> '_2719.KlingelnbergCycloPalloidConicalGearMeshSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2719.KlingelnbergCycloPalloidConicalGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_system_deflection(self) -> '_2720.KlingelnbergCycloPalloidConicalGearSetSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2720.KlingelnbergCycloPalloidConicalGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_system_deflection(self) -> '_2721.KlingelnbergCycloPalloidConicalGearSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2721.KlingelnbergCycloPalloidConicalGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_system_deflection(self) -> '_2722.KlingelnbergCycloPalloidHypoidGearMeshSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2722.KlingelnbergCycloPalloidHypoidGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_system_deflection(self) -> '_2723.KlingelnbergCycloPalloidHypoidGearSetSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2723.KlingelnbergCycloPalloidHypoidGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_system_deflection(self) -> '_2724.KlingelnbergCycloPalloidHypoidGearSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2724.KlingelnbergCycloPalloidHypoidGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_system_deflection(self) -> '_2725.KlingelnbergCycloPalloidSpiralBevelGearMeshSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2725.KlingelnbergCycloPalloidSpiralBevelGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_system_deflection(self) -> '_2726.KlingelnbergCycloPalloidSpiralBevelGearSetSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2726.KlingelnbergCycloPalloidSpiralBevelGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_system_deflection(self) -> '_2727.KlingelnbergCycloPalloidSpiralBevelGearSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2727.KlingelnbergCycloPalloidSpiralBevelGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_system_deflection(self) -> '_2730.MassDiscSystemDeflection':
        """MassDiscSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2730.MassDiscSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_system_deflection(self) -> '_2731.MeasurementComponentSystemDeflection':
        """MeasurementComponentSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2731.MeasurementComponentSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_system_deflection(self) -> '_2733.MountableComponentSystemDeflection':
        """MountableComponentSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2733.MountableComponentSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_system_deflection(self) -> '_2735.OilSealSystemDeflection':
        """OilSealSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2735.OilSealSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_system_deflection(self) -> '_2736.PartSystemDeflection':
        """PartSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2736.PartSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_system_deflection(self) -> '_2737.PartToPartShearCouplingConnectionSystemDeflection':
        """PartToPartShearCouplingConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2737.PartToPartShearCouplingConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_system_deflection(self) -> '_2738.PartToPartShearCouplingHalfSystemDeflection':
        """PartToPartShearCouplingHalfSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2738.PartToPartShearCouplingHalfSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_system_deflection(self) -> '_2739.PartToPartShearCouplingSystemDeflection':
        """PartToPartShearCouplingSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2739.PartToPartShearCouplingSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_system_deflection(self) -> '_2740.PlanetaryConnectionSystemDeflection':
        """PlanetaryConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2740.PlanetaryConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_system_deflection(self) -> '_2741.PlanetCarrierSystemDeflection':
        """PlanetCarrierSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2741.PlanetCarrierSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_system_deflection(self) -> '_2742.PointLoadSystemDeflection':
        """PointLoadSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2742.PointLoadSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_system_deflection(self) -> '_2743.PowerLoadSystemDeflection':
        """PowerLoadSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2743.PowerLoadSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_system_deflection(self) -> '_2744.PulleySystemDeflection':
        """PulleySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2744.PulleySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_system_deflection(self) -> '_2745.RingPinsSystemDeflection':
        """RingPinsSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2745.RingPinsSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_system_deflection(self) -> '_2746.RingPinsToDiscConnectionSystemDeflection':
        """RingPinsToDiscConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2746.RingPinsToDiscConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_system_deflection(self) -> '_2748.RollingRingAssemblySystemDeflection':
        """RollingRingAssemblySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2748.RollingRingAssemblySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_system_deflection(self) -> '_2749.RollingRingConnectionSystemDeflection':
        """RollingRingConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2749.RollingRingConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_system_deflection(self) -> '_2750.RollingRingSystemDeflection':
        """RollingRingSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2750.RollingRingSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_system_deflection(self) -> '_2751.RootAssemblySystemDeflection':
        """RootAssemblySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2751.RootAssemblySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_system_deflection(self) -> '_2752.ShaftHubConnectionSystemDeflection':
        """ShaftHubConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2752.ShaftHubConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_system_deflection(self) -> '_2755.ShaftSystemDeflection':
        """ShaftSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2755.ShaftSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_system_deflection(self) -> '_2756.ShaftToMountableComponentConnectionSystemDeflection':
        """ShaftToMountableComponentConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2756.ShaftToMountableComponentConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_system_deflection(self) -> '_2757.SpecialisedAssemblySystemDeflection':
        """SpecialisedAssemblySystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2757.SpecialisedAssemblySystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblySystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_system_deflection(self) -> '_2758.SpiralBevelGearMeshSystemDeflection':
        """SpiralBevelGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2758.SpiralBevelGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_system_deflection(self) -> '_2759.SpiralBevelGearSetSystemDeflection':
        """SpiralBevelGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2759.SpiralBevelGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_system_deflection(self) -> '_2760.SpiralBevelGearSystemDeflection':
        """SpiralBevelGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2760.SpiralBevelGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_system_deflection(self) -> '_2761.SpringDamperConnectionSystemDeflection':
        """SpringDamperConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2761.SpringDamperConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_system_deflection(self) -> '_2762.SpringDamperHalfSystemDeflection':
        """SpringDamperHalfSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2762.SpringDamperHalfSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_system_deflection(self) -> '_2763.SpringDamperSystemDeflection':
        """SpringDamperSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2763.SpringDamperSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_system_deflection(self) -> '_2764.StraightBevelDiffGearMeshSystemDeflection':
        """StraightBevelDiffGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2764.StraightBevelDiffGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_system_deflection(self) -> '_2765.StraightBevelDiffGearSetSystemDeflection':
        """StraightBevelDiffGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2765.StraightBevelDiffGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_system_deflection(self) -> '_2766.StraightBevelDiffGearSystemDeflection':
        """StraightBevelDiffGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2766.StraightBevelDiffGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_system_deflection(self) -> '_2767.StraightBevelGearMeshSystemDeflection':
        """StraightBevelGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2767.StraightBevelGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_system_deflection(self) -> '_2768.StraightBevelGearSetSystemDeflection':
        """StraightBevelGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2768.StraightBevelGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_system_deflection(self) -> '_2769.StraightBevelGearSystemDeflection':
        """StraightBevelGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2769.StraightBevelGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_system_deflection(self) -> '_2770.StraightBevelPlanetGearSystemDeflection':
        """StraightBevelPlanetGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2770.StraightBevelPlanetGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_system_deflection(self) -> '_2771.StraightBevelSunGearSystemDeflection':
        """StraightBevelSunGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2771.StraightBevelSunGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_system_deflection(self) -> '_2772.SynchroniserHalfSystemDeflection':
        """SynchroniserHalfSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2772.SynchroniserHalfSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_system_deflection(self) -> '_2773.SynchroniserPartSystemDeflection':
        """SynchroniserPartSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2773.SynchroniserPartSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_system_deflection(self) -> '_2774.SynchroniserSleeveSystemDeflection':
        """SynchroniserSleeveSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2774.SynchroniserSleeveSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_system_deflection(self) -> '_2775.SynchroniserSystemDeflection':
        """SynchroniserSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2775.SynchroniserSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_system_deflection(self) -> '_2779.TorqueConverterConnectionSystemDeflection':
        """TorqueConverterConnectionSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2779.TorqueConverterConnectionSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_system_deflection(self) -> '_2780.TorqueConverterPumpSystemDeflection':
        """TorqueConverterPumpSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2780.TorqueConverterPumpSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_system_deflection(self) -> '_2781.TorqueConverterSystemDeflection':
        """TorqueConverterSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2781.TorqueConverterSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_system_deflection(self) -> '_2782.TorqueConverterTurbineSystemDeflection':
        """TorqueConverterTurbineSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2782.TorqueConverterTurbineSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_system_deflection(self) -> '_2785.UnbalancedMassSystemDeflection':
        """UnbalancedMassSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2785.UnbalancedMassSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_system_deflection(self) -> '_2786.VirtualComponentSystemDeflection':
        """VirtualComponentSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2786.VirtualComponentSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_system_deflection(self) -> '_2787.WormGearMeshSystemDeflection':
        """WormGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2787.WormGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_system_deflection(self) -> '_2788.WormGearSetSystemDeflection':
        """WormGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2788.WormGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_system_deflection(self) -> '_2789.WormGearSystemDeflection':
        """WormGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2789.WormGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_system_deflection(self) -> '_2790.ZerolBevelGearMeshSystemDeflection':
        """ZerolBevelGearMeshSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2790.ZerolBevelGearMeshSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_system_deflection(self) -> '_2791.ZerolBevelGearSetSystemDeflection':
        """ZerolBevelGearSetSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2791.ZerolBevelGearSetSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_system_deflection(self) -> '_2792.ZerolBevelGearSystemDeflection':
        """ZerolBevelGearSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2792.ZerolBevelGearSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_system_deflection(self) -> '_2802.AbstractAssemblyCompoundSystemDeflection':
        """AbstractAssemblyCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2802.AbstractAssemblyCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_system_deflection(self) -> '_2803.AbstractShaftCompoundSystemDeflection':
        """AbstractShaftCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2803.AbstractShaftCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_system_deflection(self) -> '_2804.AbstractShaftOrHousingCompoundSystemDeflection':
        """AbstractShaftOrHousingCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2804.AbstractShaftOrHousingCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_system_deflection(self) -> '_2805.AbstractShaftToMountableComponentConnectionCompoundSystemDeflection':
        """AbstractShaftToMountableComponentConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2805.AbstractShaftToMountableComponentConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_system_deflection(self) -> '_2806.AGMAGleasonConicalGearCompoundSystemDeflection':
        """AGMAGleasonConicalGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2806.AGMAGleasonConicalGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_system_deflection(self) -> '_2807.AGMAGleasonConicalGearMeshCompoundSystemDeflection':
        """AGMAGleasonConicalGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2807.AGMAGleasonConicalGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_system_deflection(self) -> '_2808.AGMAGleasonConicalGearSetCompoundSystemDeflection':
        """AGMAGleasonConicalGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2808.AGMAGleasonConicalGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_system_deflection(self) -> '_2809.AssemblyCompoundSystemDeflection':
        """AssemblyCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2809.AssemblyCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_system_deflection(self) -> '_2810.BearingCompoundSystemDeflection':
        """BearingCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2810.BearingCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_system_deflection(self) -> '_2811.BeltConnectionCompoundSystemDeflection':
        """BeltConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2811.BeltConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_system_deflection(self) -> '_2812.BeltDriveCompoundSystemDeflection':
        """BeltDriveCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2812.BeltDriveCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_system_deflection(self) -> '_2813.BevelDifferentialGearCompoundSystemDeflection':
        """BevelDifferentialGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2813.BevelDifferentialGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_system_deflection(self) -> '_2814.BevelDifferentialGearMeshCompoundSystemDeflection':
        """BevelDifferentialGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2814.BevelDifferentialGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_system_deflection(self) -> '_2815.BevelDifferentialGearSetCompoundSystemDeflection':
        """BevelDifferentialGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2815.BevelDifferentialGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_system_deflection(self) -> '_2816.BevelDifferentialPlanetGearCompoundSystemDeflection':
        """BevelDifferentialPlanetGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2816.BevelDifferentialPlanetGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_system_deflection(self) -> '_2817.BevelDifferentialSunGearCompoundSystemDeflection':
        """BevelDifferentialSunGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2817.BevelDifferentialSunGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_system_deflection(self) -> '_2818.BevelGearCompoundSystemDeflection':
        """BevelGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2818.BevelGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_system_deflection(self) -> '_2819.BevelGearMeshCompoundSystemDeflection':
        """BevelGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2819.BevelGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_system_deflection(self) -> '_2820.BevelGearSetCompoundSystemDeflection':
        """BevelGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2820.BevelGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_system_deflection(self) -> '_2821.BoltCompoundSystemDeflection':
        """BoltCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2821.BoltCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_system_deflection(self) -> '_2822.BoltedJointCompoundSystemDeflection':
        """BoltedJointCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2822.BoltedJointCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_system_deflection(self) -> '_2823.ClutchCompoundSystemDeflection':
        """ClutchCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2823.ClutchCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_system_deflection(self) -> '_2824.ClutchConnectionCompoundSystemDeflection':
        """ClutchConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2824.ClutchConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_system_deflection(self) -> '_2825.ClutchHalfCompoundSystemDeflection':
        """ClutchHalfCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2825.ClutchHalfCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_system_deflection(self) -> '_2826.CoaxialConnectionCompoundSystemDeflection':
        """CoaxialConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2826.CoaxialConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_system_deflection(self) -> '_2827.ComponentCompoundSystemDeflection':
        """ComponentCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2827.ComponentCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_system_deflection(self) -> '_2828.ConceptCouplingCompoundSystemDeflection':
        """ConceptCouplingCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2828.ConceptCouplingCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_system_deflection(self) -> '_2829.ConceptCouplingConnectionCompoundSystemDeflection':
        """ConceptCouplingConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2829.ConceptCouplingConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_system_deflection(self) -> '_2830.ConceptCouplingHalfCompoundSystemDeflection':
        """ConceptCouplingHalfCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2830.ConceptCouplingHalfCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_system_deflection(self) -> '_2831.ConceptGearCompoundSystemDeflection':
        """ConceptGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2831.ConceptGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_system_deflection(self) -> '_2832.ConceptGearMeshCompoundSystemDeflection':
        """ConceptGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2832.ConceptGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_system_deflection(self) -> '_2833.ConceptGearSetCompoundSystemDeflection':
        """ConceptGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2833.ConceptGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_system_deflection(self) -> '_2834.ConicalGearCompoundSystemDeflection':
        """ConicalGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2834.ConicalGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_system_deflection(self) -> '_2835.ConicalGearMeshCompoundSystemDeflection':
        """ConicalGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2835.ConicalGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_system_deflection(self) -> '_2836.ConicalGearSetCompoundSystemDeflection':
        """ConicalGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2836.ConicalGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_system_deflection(self) -> '_2837.ConnectionCompoundSystemDeflection':
        """ConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2837.ConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_system_deflection(self) -> '_2838.ConnectorCompoundSystemDeflection':
        """ConnectorCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2838.ConnectorCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_system_deflection(self) -> '_2839.CouplingCompoundSystemDeflection':
        """CouplingCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2839.CouplingCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_system_deflection(self) -> '_2840.CouplingConnectionCompoundSystemDeflection':
        """CouplingConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2840.CouplingConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_system_deflection(self) -> '_2841.CouplingHalfCompoundSystemDeflection':
        """CouplingHalfCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2841.CouplingHalfCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_system_deflection(self) -> '_2842.CVTBeltConnectionCompoundSystemDeflection':
        """CVTBeltConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2842.CVTBeltConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_system_deflection(self) -> '_2843.CVTCompoundSystemDeflection':
        """CVTCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2843.CVTCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_system_deflection(self) -> '_2844.CVTPulleyCompoundSystemDeflection':
        """CVTPulleyCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2844.CVTPulleyCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_system_deflection(self) -> '_2845.CycloidalAssemblyCompoundSystemDeflection':
        """CycloidalAssemblyCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2845.CycloidalAssemblyCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_system_deflection(self) -> '_2846.CycloidalDiscCentralBearingConnectionCompoundSystemDeflection':
        """CycloidalDiscCentralBearingConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2846.CycloidalDiscCentralBearingConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_system_deflection(self) -> '_2847.CycloidalDiscCompoundSystemDeflection':
        """CycloidalDiscCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2847.CycloidalDiscCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_system_deflection(self) -> '_2848.CycloidalDiscPlanetaryBearingConnectionCompoundSystemDeflection':
        """CycloidalDiscPlanetaryBearingConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2848.CycloidalDiscPlanetaryBearingConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_system_deflection(self) -> '_2849.CylindricalGearCompoundSystemDeflection':
        """CylindricalGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2849.CylindricalGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_system_deflection(self) -> '_2850.CylindricalGearMeshCompoundSystemDeflection':
        """CylindricalGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2850.CylindricalGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_system_deflection(self) -> '_2851.CylindricalGearSetCompoundSystemDeflection':
        """CylindricalGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2851.CylindricalGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_system_deflection(self) -> '_2852.CylindricalPlanetGearCompoundSystemDeflection':
        """CylindricalPlanetGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2852.CylindricalPlanetGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_system_deflection(self) -> '_2853.DatumCompoundSystemDeflection':
        """DatumCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2853.DatumCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_system_deflection(self) -> '_2855.ExternalCADModelCompoundSystemDeflection':
        """ExternalCADModelCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2855.ExternalCADModelCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_system_deflection(self) -> '_2856.FaceGearCompoundSystemDeflection':
        """FaceGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2856.FaceGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_system_deflection(self) -> '_2857.FaceGearMeshCompoundSystemDeflection':
        """FaceGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2857.FaceGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_system_deflection(self) -> '_2858.FaceGearSetCompoundSystemDeflection':
        """FaceGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2858.FaceGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_system_deflection(self) -> '_2859.FEPartCompoundSystemDeflection':
        """FEPartCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2859.FEPartCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_system_deflection(self) -> '_2860.FlexiblePinAssemblyCompoundSystemDeflection':
        """FlexiblePinAssemblyCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2860.FlexiblePinAssemblyCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_system_deflection(self) -> '_2861.GearCompoundSystemDeflection':
        """GearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2861.GearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_system_deflection(self) -> '_2862.GearMeshCompoundSystemDeflection':
        """GearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2862.GearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_system_deflection(self) -> '_2863.GearSetCompoundSystemDeflection':
        """GearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2863.GearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_system_deflection(self) -> '_2864.GuideDxfModelCompoundSystemDeflection':
        """GuideDxfModelCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2864.GuideDxfModelCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_system_deflection(self) -> '_2865.HypoidGearCompoundSystemDeflection':
        """HypoidGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2865.HypoidGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_system_deflection(self) -> '_2866.HypoidGearMeshCompoundSystemDeflection':
        """HypoidGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2866.HypoidGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_system_deflection(self) -> '_2867.HypoidGearSetCompoundSystemDeflection':
        """HypoidGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2867.HypoidGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_system_deflection(self) -> '_2868.InterMountableComponentConnectionCompoundSystemDeflection':
        """InterMountableComponentConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2868.InterMountableComponentConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_system_deflection(self) -> '_2869.KlingelnbergCycloPalloidConicalGearCompoundSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2869.KlingelnbergCycloPalloidConicalGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_system_deflection(self) -> '_2870.KlingelnbergCycloPalloidConicalGearMeshCompoundSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2870.KlingelnbergCycloPalloidConicalGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_system_deflection(self) -> '_2871.KlingelnbergCycloPalloidConicalGearSetCompoundSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2871.KlingelnbergCycloPalloidConicalGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_system_deflection(self) -> '_2872.KlingelnbergCycloPalloidHypoidGearCompoundSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2872.KlingelnbergCycloPalloidHypoidGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_system_deflection(self) -> '_2873.KlingelnbergCycloPalloidHypoidGearMeshCompoundSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2873.KlingelnbergCycloPalloidHypoidGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_system_deflection(self) -> '_2874.KlingelnbergCycloPalloidHypoidGearSetCompoundSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2874.KlingelnbergCycloPalloidHypoidGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_system_deflection(self) -> '_2875.KlingelnbergCycloPalloidSpiralBevelGearCompoundSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2875.KlingelnbergCycloPalloidSpiralBevelGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_system_deflection(self) -> '_2876.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2876.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_system_deflection(self) -> '_2877.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2877.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_system_deflection(self) -> '_2878.MassDiscCompoundSystemDeflection':
        """MassDiscCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2878.MassDiscCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_system_deflection(self) -> '_2879.MeasurementComponentCompoundSystemDeflection':
        """MeasurementComponentCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2879.MeasurementComponentCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_system_deflection(self) -> '_2880.MountableComponentCompoundSystemDeflection':
        """MountableComponentCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2880.MountableComponentCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_system_deflection(self) -> '_2881.OilSealCompoundSystemDeflection':
        """OilSealCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2881.OilSealCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_system_deflection(self) -> '_2882.PartCompoundSystemDeflection':
        """PartCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2882.PartCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_system_deflection(self) -> '_2883.PartToPartShearCouplingCompoundSystemDeflection':
        """PartToPartShearCouplingCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2883.PartToPartShearCouplingCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_system_deflection(self) -> '_2884.PartToPartShearCouplingConnectionCompoundSystemDeflection':
        """PartToPartShearCouplingConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2884.PartToPartShearCouplingConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_system_deflection(self) -> '_2885.PartToPartShearCouplingHalfCompoundSystemDeflection':
        """PartToPartShearCouplingHalfCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2885.PartToPartShearCouplingHalfCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_system_deflection(self) -> '_2886.PlanetaryConnectionCompoundSystemDeflection':
        """PlanetaryConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2886.PlanetaryConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_system_deflection(self) -> '_2887.PlanetaryGearSetCompoundSystemDeflection':
        """PlanetaryGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2887.PlanetaryGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_system_deflection(self) -> '_2888.PlanetCarrierCompoundSystemDeflection':
        """PlanetCarrierCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2888.PlanetCarrierCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_system_deflection(self) -> '_2889.PointLoadCompoundSystemDeflection':
        """PointLoadCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2889.PointLoadCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_system_deflection(self) -> '_2890.PowerLoadCompoundSystemDeflection':
        """PowerLoadCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2890.PowerLoadCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_system_deflection(self) -> '_2891.PulleyCompoundSystemDeflection':
        """PulleyCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2891.PulleyCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_system_deflection(self) -> '_2892.RingPinsCompoundSystemDeflection':
        """RingPinsCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2892.RingPinsCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_system_deflection(self) -> '_2893.RingPinsToDiscConnectionCompoundSystemDeflection':
        """RingPinsToDiscConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2893.RingPinsToDiscConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_system_deflection(self) -> '_2894.RollingRingAssemblyCompoundSystemDeflection':
        """RollingRingAssemblyCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2894.RollingRingAssemblyCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_system_deflection(self) -> '_2895.RollingRingCompoundSystemDeflection':
        """RollingRingCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2895.RollingRingCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_system_deflection(self) -> '_2896.RollingRingConnectionCompoundSystemDeflection':
        """RollingRingConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2896.RollingRingConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_system_deflection(self) -> '_2897.RootAssemblyCompoundSystemDeflection':
        """RootAssemblyCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2897.RootAssemblyCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_system_deflection(self) -> '_2898.ShaftCompoundSystemDeflection':
        """ShaftCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2898.ShaftCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_system_deflection(self) -> '_2900.ShaftHubConnectionCompoundSystemDeflection':
        """ShaftHubConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2900.ShaftHubConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_system_deflection(self) -> '_2901.ShaftToMountableComponentConnectionCompoundSystemDeflection':
        """ShaftToMountableComponentConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2901.ShaftToMountableComponentConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_system_deflection(self) -> '_2902.SpecialisedAssemblyCompoundSystemDeflection':
        """SpecialisedAssemblyCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2902.SpecialisedAssemblyCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_system_deflection(self) -> '_2903.SpiralBevelGearCompoundSystemDeflection':
        """SpiralBevelGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2903.SpiralBevelGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_system_deflection(self) -> '_2904.SpiralBevelGearMeshCompoundSystemDeflection':
        """SpiralBevelGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2904.SpiralBevelGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_system_deflection(self) -> '_2905.SpiralBevelGearSetCompoundSystemDeflection':
        """SpiralBevelGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2905.SpiralBevelGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_system_deflection(self) -> '_2906.SpringDamperCompoundSystemDeflection':
        """SpringDamperCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2906.SpringDamperCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_system_deflection(self) -> '_2907.SpringDamperConnectionCompoundSystemDeflection':
        """SpringDamperConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2907.SpringDamperConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_system_deflection(self) -> '_2908.SpringDamperHalfCompoundSystemDeflection':
        """SpringDamperHalfCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2908.SpringDamperHalfCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_system_deflection(self) -> '_2909.StraightBevelDiffGearCompoundSystemDeflection':
        """StraightBevelDiffGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2909.StraightBevelDiffGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_system_deflection(self) -> '_2910.StraightBevelDiffGearMeshCompoundSystemDeflection':
        """StraightBevelDiffGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2910.StraightBevelDiffGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_system_deflection(self) -> '_2911.StraightBevelDiffGearSetCompoundSystemDeflection':
        """StraightBevelDiffGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2911.StraightBevelDiffGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_system_deflection(self) -> '_2912.StraightBevelGearCompoundSystemDeflection':
        """StraightBevelGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2912.StraightBevelGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_system_deflection(self) -> '_2913.StraightBevelGearMeshCompoundSystemDeflection':
        """StraightBevelGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2913.StraightBevelGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_system_deflection(self) -> '_2914.StraightBevelGearSetCompoundSystemDeflection':
        """StraightBevelGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2914.StraightBevelGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_system_deflection(self) -> '_2915.StraightBevelPlanetGearCompoundSystemDeflection':
        """StraightBevelPlanetGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2915.StraightBevelPlanetGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_system_deflection(self) -> '_2916.StraightBevelSunGearCompoundSystemDeflection':
        """StraightBevelSunGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2916.StraightBevelSunGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_system_deflection(self) -> '_2917.SynchroniserCompoundSystemDeflection':
        """SynchroniserCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2917.SynchroniserCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_system_deflection(self) -> '_2918.SynchroniserHalfCompoundSystemDeflection':
        """SynchroniserHalfCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2918.SynchroniserHalfCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_system_deflection(self) -> '_2919.SynchroniserPartCompoundSystemDeflection':
        """SynchroniserPartCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2919.SynchroniserPartCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_system_deflection(self) -> '_2920.SynchroniserSleeveCompoundSystemDeflection':
        """SynchroniserSleeveCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2920.SynchroniserSleeveCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_system_deflection(self) -> '_2921.TorqueConverterCompoundSystemDeflection':
        """TorqueConverterCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2921.TorqueConverterCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_system_deflection(self) -> '_2922.TorqueConverterConnectionCompoundSystemDeflection':
        """TorqueConverterConnectionCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2922.TorqueConverterConnectionCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_system_deflection(self) -> '_2923.TorqueConverterPumpCompoundSystemDeflection':
        """TorqueConverterPumpCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2923.TorqueConverterPumpCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_system_deflection(self) -> '_2924.TorqueConverterTurbineCompoundSystemDeflection':
        """TorqueConverterTurbineCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2924.TorqueConverterTurbineCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_system_deflection(self) -> '_2925.UnbalancedMassCompoundSystemDeflection':
        """UnbalancedMassCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2925.UnbalancedMassCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_system_deflection(self) -> '_2926.VirtualComponentCompoundSystemDeflection':
        """VirtualComponentCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2926.VirtualComponentCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_system_deflection(self) -> '_2927.WormGearCompoundSystemDeflection':
        """WormGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2927.WormGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_system_deflection(self) -> '_2928.WormGearMeshCompoundSystemDeflection':
        """WormGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2928.WormGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_system_deflection(self) -> '_2929.WormGearSetCompoundSystemDeflection':
        """WormGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2929.WormGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_system_deflection(self) -> '_2930.ZerolBevelGearCompoundSystemDeflection':
        """ZerolBevelGearCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2930.ZerolBevelGearCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_system_deflection(self) -> '_2931.ZerolBevelGearMeshCompoundSystemDeflection':
        """ZerolBevelGearMeshCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2931.ZerolBevelGearMeshCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_system_deflection(self) -> '_2932.ZerolBevelGearSetCompoundSystemDeflection':
        """ZerolBevelGearSetCompoundSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2932.ZerolBevelGearSetCompoundSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_steady_state_synchronous_response(self) -> '_2934.AbstractAssemblySteadyStateSynchronousResponse':
        """AbstractAssemblySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2934.AbstractAssemblySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_steady_state_synchronous_response(self) -> '_2935.AbstractShaftOrHousingSteadyStateSynchronousResponse':
        """AbstractShaftOrHousingSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2935.AbstractShaftOrHousingSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_steady_state_synchronous_response(self) -> '_2936.AbstractShaftSteadyStateSynchronousResponse':
        """AbstractShaftSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2936.AbstractShaftSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_steady_state_synchronous_response(self) -> '_2937.AbstractShaftToMountableComponentConnectionSteadyStateSynchronousResponse':
        """AbstractShaftToMountableComponentConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2937.AbstractShaftToMountableComponentConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_steady_state_synchronous_response(self) -> '_2938.AGMAGleasonConicalGearMeshSteadyStateSynchronousResponse':
        """AGMAGleasonConicalGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2938.AGMAGleasonConicalGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_steady_state_synchronous_response(self) -> '_2939.AGMAGleasonConicalGearSetSteadyStateSynchronousResponse':
        """AGMAGleasonConicalGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2939.AGMAGleasonConicalGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_steady_state_synchronous_response(self) -> '_2940.AGMAGleasonConicalGearSteadyStateSynchronousResponse':
        """AGMAGleasonConicalGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2940.AGMAGleasonConicalGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_steady_state_synchronous_response(self) -> '_2941.AssemblySteadyStateSynchronousResponse':
        """AssemblySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2941.AssemblySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_steady_state_synchronous_response(self) -> '_2942.BearingSteadyStateSynchronousResponse':
        """BearingSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2942.BearingSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_steady_state_synchronous_response(self) -> '_2943.BeltConnectionSteadyStateSynchronousResponse':
        """BeltConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2943.BeltConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_steady_state_synchronous_response(self) -> '_2944.BeltDriveSteadyStateSynchronousResponse':
        """BeltDriveSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2944.BeltDriveSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_steady_state_synchronous_response(self) -> '_2945.BevelDifferentialGearMeshSteadyStateSynchronousResponse':
        """BevelDifferentialGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2945.BevelDifferentialGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_steady_state_synchronous_response(self) -> '_2946.BevelDifferentialGearSetSteadyStateSynchronousResponse':
        """BevelDifferentialGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2946.BevelDifferentialGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_steady_state_synchronous_response(self) -> '_2947.BevelDifferentialGearSteadyStateSynchronousResponse':
        """BevelDifferentialGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2947.BevelDifferentialGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_steady_state_synchronous_response(self) -> '_2948.BevelDifferentialPlanetGearSteadyStateSynchronousResponse':
        """BevelDifferentialPlanetGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2948.BevelDifferentialPlanetGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_steady_state_synchronous_response(self) -> '_2949.BevelDifferentialSunGearSteadyStateSynchronousResponse':
        """BevelDifferentialSunGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2949.BevelDifferentialSunGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_steady_state_synchronous_response(self) -> '_2950.BevelGearMeshSteadyStateSynchronousResponse':
        """BevelGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2950.BevelGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_steady_state_synchronous_response(self) -> '_2951.BevelGearSetSteadyStateSynchronousResponse':
        """BevelGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2951.BevelGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_steady_state_synchronous_response(self) -> '_2952.BevelGearSteadyStateSynchronousResponse':
        """BevelGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2952.BevelGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_steady_state_synchronous_response(self) -> '_2953.BoltedJointSteadyStateSynchronousResponse':
        """BoltedJointSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2953.BoltedJointSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_steady_state_synchronous_response(self) -> '_2954.BoltSteadyStateSynchronousResponse':
        """BoltSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2954.BoltSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_steady_state_synchronous_response(self) -> '_2955.ClutchConnectionSteadyStateSynchronousResponse':
        """ClutchConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2955.ClutchConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_steady_state_synchronous_response(self) -> '_2956.ClutchHalfSteadyStateSynchronousResponse':
        """ClutchHalfSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2956.ClutchHalfSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_steady_state_synchronous_response(self) -> '_2957.ClutchSteadyStateSynchronousResponse':
        """ClutchSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2957.ClutchSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_steady_state_synchronous_response(self) -> '_2958.CoaxialConnectionSteadyStateSynchronousResponse':
        """CoaxialConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2958.CoaxialConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_steady_state_synchronous_response(self) -> '_2959.ComponentSteadyStateSynchronousResponse':
        """ComponentSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2959.ComponentSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_steady_state_synchronous_response(self) -> '_2960.ConceptCouplingConnectionSteadyStateSynchronousResponse':
        """ConceptCouplingConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2960.ConceptCouplingConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_steady_state_synchronous_response(self) -> '_2961.ConceptCouplingHalfSteadyStateSynchronousResponse':
        """ConceptCouplingHalfSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2961.ConceptCouplingHalfSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_steady_state_synchronous_response(self) -> '_2962.ConceptCouplingSteadyStateSynchronousResponse':
        """ConceptCouplingSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2962.ConceptCouplingSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_steady_state_synchronous_response(self) -> '_2963.ConceptGearMeshSteadyStateSynchronousResponse':
        """ConceptGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2963.ConceptGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_steady_state_synchronous_response(self) -> '_2964.ConceptGearSetSteadyStateSynchronousResponse':
        """ConceptGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2964.ConceptGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_steady_state_synchronous_response(self) -> '_2965.ConceptGearSteadyStateSynchronousResponse':
        """ConceptGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2965.ConceptGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_steady_state_synchronous_response(self) -> '_2966.ConicalGearMeshSteadyStateSynchronousResponse':
        """ConicalGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2966.ConicalGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_steady_state_synchronous_response(self) -> '_2967.ConicalGearSetSteadyStateSynchronousResponse':
        """ConicalGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2967.ConicalGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_steady_state_synchronous_response(self) -> '_2968.ConicalGearSteadyStateSynchronousResponse':
        """ConicalGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2968.ConicalGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_steady_state_synchronous_response(self) -> '_2969.ConnectionSteadyStateSynchronousResponse':
        """ConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2969.ConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_steady_state_synchronous_response(self) -> '_2970.ConnectorSteadyStateSynchronousResponse':
        """ConnectorSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2970.ConnectorSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_steady_state_synchronous_response(self) -> '_2971.CouplingConnectionSteadyStateSynchronousResponse':
        """CouplingConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2971.CouplingConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_steady_state_synchronous_response(self) -> '_2972.CouplingHalfSteadyStateSynchronousResponse':
        """CouplingHalfSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2972.CouplingHalfSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_steady_state_synchronous_response(self) -> '_2973.CouplingSteadyStateSynchronousResponse':
        """CouplingSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2973.CouplingSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_steady_state_synchronous_response(self) -> '_2974.CVTBeltConnectionSteadyStateSynchronousResponse':
        """CVTBeltConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2974.CVTBeltConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_steady_state_synchronous_response(self) -> '_2975.CVTPulleySteadyStateSynchronousResponse':
        """CVTPulleySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2975.CVTPulleySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_steady_state_synchronous_response(self) -> '_2976.CVTSteadyStateSynchronousResponse':
        """CVTSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2976.CVTSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_steady_state_synchronous_response(self) -> '_2977.CycloidalAssemblySteadyStateSynchronousResponse':
        """CycloidalAssemblySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2977.CycloidalAssemblySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_steady_state_synchronous_response(self) -> '_2978.CycloidalDiscCentralBearingConnectionSteadyStateSynchronousResponse':
        """CycloidalDiscCentralBearingConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2978.CycloidalDiscCentralBearingConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_steady_state_synchronous_response(self) -> '_2979.CycloidalDiscPlanetaryBearingConnectionSteadyStateSynchronousResponse':
        """CycloidalDiscPlanetaryBearingConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2979.CycloidalDiscPlanetaryBearingConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_steady_state_synchronous_response(self) -> '_2980.CycloidalDiscSteadyStateSynchronousResponse':
        """CycloidalDiscSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2980.CycloidalDiscSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_steady_state_synchronous_response(self) -> '_2981.CylindricalGearMeshSteadyStateSynchronousResponse':
        """CylindricalGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2981.CylindricalGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_steady_state_synchronous_response(self) -> '_2982.CylindricalGearSetSteadyStateSynchronousResponse':
        """CylindricalGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2982.CylindricalGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_steady_state_synchronous_response(self) -> '_2983.CylindricalGearSteadyStateSynchronousResponse':
        """CylindricalGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2983.CylindricalGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_steady_state_synchronous_response(self) -> '_2984.CylindricalPlanetGearSteadyStateSynchronousResponse':
        """CylindricalPlanetGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2984.CylindricalPlanetGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_steady_state_synchronous_response(self) -> '_2985.DatumSteadyStateSynchronousResponse':
        """DatumSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2985.DatumSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_steady_state_synchronous_response(self) -> '_2987.ExternalCADModelSteadyStateSynchronousResponse':
        """ExternalCADModelSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2987.ExternalCADModelSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_steady_state_synchronous_response(self) -> '_2988.FaceGearMeshSteadyStateSynchronousResponse':
        """FaceGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2988.FaceGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_steady_state_synchronous_response(self) -> '_2989.FaceGearSetSteadyStateSynchronousResponse':
        """FaceGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2989.FaceGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_steady_state_synchronous_response(self) -> '_2990.FaceGearSteadyStateSynchronousResponse':
        """FaceGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2990.FaceGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_steady_state_synchronous_response(self) -> '_2991.FEPartSteadyStateSynchronousResponse':
        """FEPartSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2991.FEPartSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_steady_state_synchronous_response(self) -> '_2992.FlexiblePinAssemblySteadyStateSynchronousResponse':
        """FlexiblePinAssemblySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2992.FlexiblePinAssemblySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_steady_state_synchronous_response(self) -> '_2993.GearMeshSteadyStateSynchronousResponse':
        """GearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2993.GearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_steady_state_synchronous_response(self) -> '_2994.GearSetSteadyStateSynchronousResponse':
        """GearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2994.GearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_steady_state_synchronous_response(self) -> '_2995.GearSteadyStateSynchronousResponse':
        """GearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2995.GearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_steady_state_synchronous_response(self) -> '_2996.GuideDxfModelSteadyStateSynchronousResponse':
        """GuideDxfModelSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2996.GuideDxfModelSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_steady_state_synchronous_response(self) -> '_2997.HypoidGearMeshSteadyStateSynchronousResponse':
        """HypoidGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2997.HypoidGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_steady_state_synchronous_response(self) -> '_2998.HypoidGearSetSteadyStateSynchronousResponse':
        """HypoidGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2998.HypoidGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_steady_state_synchronous_response(self) -> '_2999.HypoidGearSteadyStateSynchronousResponse':
        """HypoidGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _2999.HypoidGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_steady_state_synchronous_response(self) -> '_3000.InterMountableComponentConnectionSteadyStateSynchronousResponse':
        """InterMountableComponentConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3000.InterMountableComponentConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_steady_state_synchronous_response(self) -> '_3001.KlingelnbergCycloPalloidConicalGearMeshSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidConicalGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3001.KlingelnbergCycloPalloidConicalGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_steady_state_synchronous_response(self) -> '_3002.KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3002.KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_steady_state_synchronous_response(self) -> '_3003.KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3003.KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_steady_state_synchronous_response(self) -> '_3004.KlingelnbergCycloPalloidHypoidGearMeshSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidHypoidGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3004.KlingelnbergCycloPalloidHypoidGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_steady_state_synchronous_response(self) -> '_3005.KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3005.KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_steady_state_synchronous_response(self) -> '_3006.KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3006.KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_steady_state_synchronous_response(self) -> '_3007.KlingelnbergCycloPalloidSpiralBevelGearMeshSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3007.KlingelnbergCycloPalloidSpiralBevelGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_steady_state_synchronous_response(self) -> '_3008.KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3008.KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_steady_state_synchronous_response(self) -> '_3009.KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3009.KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_steady_state_synchronous_response(self) -> '_3010.MassDiscSteadyStateSynchronousResponse':
        """MassDiscSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3010.MassDiscSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_steady_state_synchronous_response(self) -> '_3011.MeasurementComponentSteadyStateSynchronousResponse':
        """MeasurementComponentSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3011.MeasurementComponentSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_steady_state_synchronous_response(self) -> '_3012.MountableComponentSteadyStateSynchronousResponse':
        """MountableComponentSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3012.MountableComponentSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_steady_state_synchronous_response(self) -> '_3013.OilSealSteadyStateSynchronousResponse':
        """OilSealSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3013.OilSealSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_steady_state_synchronous_response(self) -> '_3014.PartSteadyStateSynchronousResponse':
        """PartSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3014.PartSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_steady_state_synchronous_response(self) -> '_3015.PartToPartShearCouplingConnectionSteadyStateSynchronousResponse':
        """PartToPartShearCouplingConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3015.PartToPartShearCouplingConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_steady_state_synchronous_response(self) -> '_3016.PartToPartShearCouplingHalfSteadyStateSynchronousResponse':
        """PartToPartShearCouplingHalfSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3016.PartToPartShearCouplingHalfSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_steady_state_synchronous_response(self) -> '_3017.PartToPartShearCouplingSteadyStateSynchronousResponse':
        """PartToPartShearCouplingSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3017.PartToPartShearCouplingSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_steady_state_synchronous_response(self) -> '_3018.PlanetaryConnectionSteadyStateSynchronousResponse':
        """PlanetaryConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3018.PlanetaryConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_steady_state_synchronous_response(self) -> '_3019.PlanetaryGearSetSteadyStateSynchronousResponse':
        """PlanetaryGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3019.PlanetaryGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_steady_state_synchronous_response(self) -> '_3020.PlanetCarrierSteadyStateSynchronousResponse':
        """PlanetCarrierSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3020.PlanetCarrierSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_steady_state_synchronous_response(self) -> '_3021.PointLoadSteadyStateSynchronousResponse':
        """PointLoadSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3021.PointLoadSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_steady_state_synchronous_response(self) -> '_3022.PowerLoadSteadyStateSynchronousResponse':
        """PowerLoadSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3022.PowerLoadSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_steady_state_synchronous_response(self) -> '_3023.PulleySteadyStateSynchronousResponse':
        """PulleySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3023.PulleySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_steady_state_synchronous_response(self) -> '_3024.RingPinsSteadyStateSynchronousResponse':
        """RingPinsSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3024.RingPinsSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_steady_state_synchronous_response(self) -> '_3025.RingPinsToDiscConnectionSteadyStateSynchronousResponse':
        """RingPinsToDiscConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3025.RingPinsToDiscConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_steady_state_synchronous_response(self) -> '_3026.RollingRingAssemblySteadyStateSynchronousResponse':
        """RollingRingAssemblySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3026.RollingRingAssemblySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_steady_state_synchronous_response(self) -> '_3027.RollingRingConnectionSteadyStateSynchronousResponse':
        """RollingRingConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3027.RollingRingConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_steady_state_synchronous_response(self) -> '_3028.RollingRingSteadyStateSynchronousResponse':
        """RollingRingSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3028.RollingRingSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_steady_state_synchronous_response(self) -> '_3029.RootAssemblySteadyStateSynchronousResponse':
        """RootAssemblySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3029.RootAssemblySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_steady_state_synchronous_response(self) -> '_3030.ShaftHubConnectionSteadyStateSynchronousResponse':
        """ShaftHubConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3030.ShaftHubConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_steady_state_synchronous_response(self) -> '_3031.ShaftSteadyStateSynchronousResponse':
        """ShaftSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3031.ShaftSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_steady_state_synchronous_response(self) -> '_3032.ShaftToMountableComponentConnectionSteadyStateSynchronousResponse':
        """ShaftToMountableComponentConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3032.ShaftToMountableComponentConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_steady_state_synchronous_response(self) -> '_3033.SpecialisedAssemblySteadyStateSynchronousResponse':
        """SpecialisedAssemblySteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3033.SpecialisedAssemblySteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblySteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_steady_state_synchronous_response(self) -> '_3034.SpiralBevelGearMeshSteadyStateSynchronousResponse':
        """SpiralBevelGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3034.SpiralBevelGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_steady_state_synchronous_response(self) -> '_3035.SpiralBevelGearSetSteadyStateSynchronousResponse':
        """SpiralBevelGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3035.SpiralBevelGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_steady_state_synchronous_response(self) -> '_3036.SpiralBevelGearSteadyStateSynchronousResponse':
        """SpiralBevelGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3036.SpiralBevelGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_steady_state_synchronous_response(self) -> '_3037.SpringDamperConnectionSteadyStateSynchronousResponse':
        """SpringDamperConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3037.SpringDamperConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_steady_state_synchronous_response(self) -> '_3038.SpringDamperHalfSteadyStateSynchronousResponse':
        """SpringDamperHalfSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3038.SpringDamperHalfSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_steady_state_synchronous_response(self) -> '_3039.SpringDamperSteadyStateSynchronousResponse':
        """SpringDamperSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3039.SpringDamperSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_steady_state_synchronous_response(self) -> '_3043.StraightBevelDiffGearMeshSteadyStateSynchronousResponse':
        """StraightBevelDiffGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3043.StraightBevelDiffGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_steady_state_synchronous_response(self) -> '_3044.StraightBevelDiffGearSetSteadyStateSynchronousResponse':
        """StraightBevelDiffGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3044.StraightBevelDiffGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_steady_state_synchronous_response(self) -> '_3045.StraightBevelDiffGearSteadyStateSynchronousResponse':
        """StraightBevelDiffGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3045.StraightBevelDiffGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_steady_state_synchronous_response(self) -> '_3046.StraightBevelGearMeshSteadyStateSynchronousResponse':
        """StraightBevelGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3046.StraightBevelGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_steady_state_synchronous_response(self) -> '_3047.StraightBevelGearSetSteadyStateSynchronousResponse':
        """StraightBevelGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3047.StraightBevelGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_steady_state_synchronous_response(self) -> '_3048.StraightBevelGearSteadyStateSynchronousResponse':
        """StraightBevelGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3048.StraightBevelGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_steady_state_synchronous_response(self) -> '_3049.StraightBevelPlanetGearSteadyStateSynchronousResponse':
        """StraightBevelPlanetGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3049.StraightBevelPlanetGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_steady_state_synchronous_response(self) -> '_3050.StraightBevelSunGearSteadyStateSynchronousResponse':
        """StraightBevelSunGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3050.StraightBevelSunGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_steady_state_synchronous_response(self) -> '_3051.SynchroniserHalfSteadyStateSynchronousResponse':
        """SynchroniserHalfSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3051.SynchroniserHalfSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_steady_state_synchronous_response(self) -> '_3052.SynchroniserPartSteadyStateSynchronousResponse':
        """SynchroniserPartSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3052.SynchroniserPartSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_steady_state_synchronous_response(self) -> '_3053.SynchroniserSleeveSteadyStateSynchronousResponse':
        """SynchroniserSleeveSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3053.SynchroniserSleeveSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_steady_state_synchronous_response(self) -> '_3054.SynchroniserSteadyStateSynchronousResponse':
        """SynchroniserSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3054.SynchroniserSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_steady_state_synchronous_response(self) -> '_3055.TorqueConverterConnectionSteadyStateSynchronousResponse':
        """TorqueConverterConnectionSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3055.TorqueConverterConnectionSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_steady_state_synchronous_response(self) -> '_3056.TorqueConverterPumpSteadyStateSynchronousResponse':
        """TorqueConverterPumpSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3056.TorqueConverterPumpSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_steady_state_synchronous_response(self) -> '_3057.TorqueConverterSteadyStateSynchronousResponse':
        """TorqueConverterSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3057.TorqueConverterSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_steady_state_synchronous_response(self) -> '_3058.TorqueConverterTurbineSteadyStateSynchronousResponse':
        """TorqueConverterTurbineSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3058.TorqueConverterTurbineSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_steady_state_synchronous_response(self) -> '_3059.UnbalancedMassSteadyStateSynchronousResponse':
        """UnbalancedMassSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3059.UnbalancedMassSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_steady_state_synchronous_response(self) -> '_3060.VirtualComponentSteadyStateSynchronousResponse':
        """VirtualComponentSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3060.VirtualComponentSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_steady_state_synchronous_response(self) -> '_3061.WormGearMeshSteadyStateSynchronousResponse':
        """WormGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3061.WormGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_steady_state_synchronous_response(self) -> '_3062.WormGearSetSteadyStateSynchronousResponse':
        """WormGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3062.WormGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_steady_state_synchronous_response(self) -> '_3063.WormGearSteadyStateSynchronousResponse':
        """WormGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3063.WormGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_steady_state_synchronous_response(self) -> '_3064.ZerolBevelGearMeshSteadyStateSynchronousResponse':
        """ZerolBevelGearMeshSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3064.ZerolBevelGearMeshSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_steady_state_synchronous_response(self) -> '_3065.ZerolBevelGearSetSteadyStateSynchronousResponse':
        """ZerolBevelGearSetSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3065.ZerolBevelGearSetSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_steady_state_synchronous_response(self) -> '_3066.ZerolBevelGearSteadyStateSynchronousResponse':
        """ZerolBevelGearSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3066.ZerolBevelGearSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_steady_state_synchronous_response(self) -> '_3067.AbstractAssemblyCompoundSteadyStateSynchronousResponse':
        """AbstractAssemblyCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3067.AbstractAssemblyCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_steady_state_synchronous_response(self) -> '_3068.AbstractShaftCompoundSteadyStateSynchronousResponse':
        """AbstractShaftCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3068.AbstractShaftCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_steady_state_synchronous_response(self) -> '_3069.AbstractShaftOrHousingCompoundSteadyStateSynchronousResponse':
        """AbstractShaftOrHousingCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3069.AbstractShaftOrHousingCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_steady_state_synchronous_response(self) -> '_3070.AbstractShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponse':
        """AbstractShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3070.AbstractShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_steady_state_synchronous_response(self) -> '_3071.AGMAGleasonConicalGearCompoundSteadyStateSynchronousResponse':
        """AGMAGleasonConicalGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3071.AGMAGleasonConicalGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3072.AGMAGleasonConicalGearMeshCompoundSteadyStateSynchronousResponse':
        """AGMAGleasonConicalGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3072.AGMAGleasonConicalGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_steady_state_synchronous_response(self) -> '_3073.AGMAGleasonConicalGearSetCompoundSteadyStateSynchronousResponse':
        """AGMAGleasonConicalGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3073.AGMAGleasonConicalGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_steady_state_synchronous_response(self) -> '_3074.AssemblyCompoundSteadyStateSynchronousResponse':
        """AssemblyCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3074.AssemblyCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_steady_state_synchronous_response(self) -> '_3075.BearingCompoundSteadyStateSynchronousResponse':
        """BearingCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3075.BearingCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_steady_state_synchronous_response(self) -> '_3076.BeltConnectionCompoundSteadyStateSynchronousResponse':
        """BeltConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3076.BeltConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_steady_state_synchronous_response(self) -> '_3077.BeltDriveCompoundSteadyStateSynchronousResponse':
        """BeltDriveCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3077.BeltDriveCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_steady_state_synchronous_response(self) -> '_3078.BevelDifferentialGearCompoundSteadyStateSynchronousResponse':
        """BevelDifferentialGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3078.BevelDifferentialGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3079.BevelDifferentialGearMeshCompoundSteadyStateSynchronousResponse':
        """BevelDifferentialGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3079.BevelDifferentialGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_steady_state_synchronous_response(self) -> '_3080.BevelDifferentialGearSetCompoundSteadyStateSynchronousResponse':
        """BevelDifferentialGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3080.BevelDifferentialGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_steady_state_synchronous_response(self) -> '_3081.BevelDifferentialPlanetGearCompoundSteadyStateSynchronousResponse':
        """BevelDifferentialPlanetGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3081.BevelDifferentialPlanetGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_steady_state_synchronous_response(self) -> '_3082.BevelDifferentialSunGearCompoundSteadyStateSynchronousResponse':
        """BevelDifferentialSunGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3082.BevelDifferentialSunGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_steady_state_synchronous_response(self) -> '_3083.BevelGearCompoundSteadyStateSynchronousResponse':
        """BevelGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3083.BevelGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3084.BevelGearMeshCompoundSteadyStateSynchronousResponse':
        """BevelGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3084.BevelGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_steady_state_synchronous_response(self) -> '_3085.BevelGearSetCompoundSteadyStateSynchronousResponse':
        """BevelGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3085.BevelGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_steady_state_synchronous_response(self) -> '_3086.BoltCompoundSteadyStateSynchronousResponse':
        """BoltCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3086.BoltCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_steady_state_synchronous_response(self) -> '_3087.BoltedJointCompoundSteadyStateSynchronousResponse':
        """BoltedJointCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3087.BoltedJointCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_steady_state_synchronous_response(self) -> '_3088.ClutchCompoundSteadyStateSynchronousResponse':
        """ClutchCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3088.ClutchCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_steady_state_synchronous_response(self) -> '_3089.ClutchConnectionCompoundSteadyStateSynchronousResponse':
        """ClutchConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3089.ClutchConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_steady_state_synchronous_response(self) -> '_3090.ClutchHalfCompoundSteadyStateSynchronousResponse':
        """ClutchHalfCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3090.ClutchHalfCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_steady_state_synchronous_response(self) -> '_3091.CoaxialConnectionCompoundSteadyStateSynchronousResponse':
        """CoaxialConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3091.CoaxialConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_steady_state_synchronous_response(self) -> '_3092.ComponentCompoundSteadyStateSynchronousResponse':
        """ComponentCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3092.ComponentCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_steady_state_synchronous_response(self) -> '_3093.ConceptCouplingCompoundSteadyStateSynchronousResponse':
        """ConceptCouplingCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3093.ConceptCouplingCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_steady_state_synchronous_response(self) -> '_3094.ConceptCouplingConnectionCompoundSteadyStateSynchronousResponse':
        """ConceptCouplingConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3094.ConceptCouplingConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_steady_state_synchronous_response(self) -> '_3095.ConceptCouplingHalfCompoundSteadyStateSynchronousResponse':
        """ConceptCouplingHalfCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3095.ConceptCouplingHalfCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_steady_state_synchronous_response(self) -> '_3096.ConceptGearCompoundSteadyStateSynchronousResponse':
        """ConceptGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3096.ConceptGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3097.ConceptGearMeshCompoundSteadyStateSynchronousResponse':
        """ConceptGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3097.ConceptGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_steady_state_synchronous_response(self) -> '_3098.ConceptGearSetCompoundSteadyStateSynchronousResponse':
        """ConceptGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3098.ConceptGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_steady_state_synchronous_response(self) -> '_3099.ConicalGearCompoundSteadyStateSynchronousResponse':
        """ConicalGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3099.ConicalGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3100.ConicalGearMeshCompoundSteadyStateSynchronousResponse':
        """ConicalGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3100.ConicalGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_steady_state_synchronous_response(self) -> '_3101.ConicalGearSetCompoundSteadyStateSynchronousResponse':
        """ConicalGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3101.ConicalGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_steady_state_synchronous_response(self) -> '_3102.ConnectionCompoundSteadyStateSynchronousResponse':
        """ConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3102.ConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_steady_state_synchronous_response(self) -> '_3103.ConnectorCompoundSteadyStateSynchronousResponse':
        """ConnectorCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3103.ConnectorCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_steady_state_synchronous_response(self) -> '_3104.CouplingCompoundSteadyStateSynchronousResponse':
        """CouplingCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3104.CouplingCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_steady_state_synchronous_response(self) -> '_3105.CouplingConnectionCompoundSteadyStateSynchronousResponse':
        """CouplingConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3105.CouplingConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_steady_state_synchronous_response(self) -> '_3106.CouplingHalfCompoundSteadyStateSynchronousResponse':
        """CouplingHalfCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3106.CouplingHalfCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_steady_state_synchronous_response(self) -> '_3107.CVTBeltConnectionCompoundSteadyStateSynchronousResponse':
        """CVTBeltConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3107.CVTBeltConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_steady_state_synchronous_response(self) -> '_3108.CVTCompoundSteadyStateSynchronousResponse':
        """CVTCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3108.CVTCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_steady_state_synchronous_response(self) -> '_3109.CVTPulleyCompoundSteadyStateSynchronousResponse':
        """CVTPulleyCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3109.CVTPulleyCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_steady_state_synchronous_response(self) -> '_3110.CycloidalAssemblyCompoundSteadyStateSynchronousResponse':
        """CycloidalAssemblyCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3110.CycloidalAssemblyCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_steady_state_synchronous_response(self) -> '_3111.CycloidalDiscCentralBearingConnectionCompoundSteadyStateSynchronousResponse':
        """CycloidalDiscCentralBearingConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3111.CycloidalDiscCentralBearingConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_steady_state_synchronous_response(self) -> '_3112.CycloidalDiscCompoundSteadyStateSynchronousResponse':
        """CycloidalDiscCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3112.CycloidalDiscCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_steady_state_synchronous_response(self) -> '_3113.CycloidalDiscPlanetaryBearingConnectionCompoundSteadyStateSynchronousResponse':
        """CycloidalDiscPlanetaryBearingConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3113.CycloidalDiscPlanetaryBearingConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_steady_state_synchronous_response(self) -> '_3114.CylindricalGearCompoundSteadyStateSynchronousResponse':
        """CylindricalGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3114.CylindricalGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3115.CylindricalGearMeshCompoundSteadyStateSynchronousResponse':
        """CylindricalGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3115.CylindricalGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_steady_state_synchronous_response(self) -> '_3116.CylindricalGearSetCompoundSteadyStateSynchronousResponse':
        """CylindricalGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3116.CylindricalGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_steady_state_synchronous_response(self) -> '_3117.CylindricalPlanetGearCompoundSteadyStateSynchronousResponse':
        """CylindricalPlanetGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3117.CylindricalPlanetGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_steady_state_synchronous_response(self) -> '_3118.DatumCompoundSteadyStateSynchronousResponse':
        """DatumCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3118.DatumCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_steady_state_synchronous_response(self) -> '_3119.ExternalCADModelCompoundSteadyStateSynchronousResponse':
        """ExternalCADModelCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3119.ExternalCADModelCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_steady_state_synchronous_response(self) -> '_3120.FaceGearCompoundSteadyStateSynchronousResponse':
        """FaceGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3120.FaceGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3121.FaceGearMeshCompoundSteadyStateSynchronousResponse':
        """FaceGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3121.FaceGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_steady_state_synchronous_response(self) -> '_3122.FaceGearSetCompoundSteadyStateSynchronousResponse':
        """FaceGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3122.FaceGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_steady_state_synchronous_response(self) -> '_3123.FEPartCompoundSteadyStateSynchronousResponse':
        """FEPartCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3123.FEPartCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_steady_state_synchronous_response(self) -> '_3124.FlexiblePinAssemblyCompoundSteadyStateSynchronousResponse':
        """FlexiblePinAssemblyCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3124.FlexiblePinAssemblyCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_steady_state_synchronous_response(self) -> '_3125.GearCompoundSteadyStateSynchronousResponse':
        """GearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3125.GearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3126.GearMeshCompoundSteadyStateSynchronousResponse':
        """GearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3126.GearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_steady_state_synchronous_response(self) -> '_3127.GearSetCompoundSteadyStateSynchronousResponse':
        """GearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3127.GearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_steady_state_synchronous_response(self) -> '_3128.GuideDxfModelCompoundSteadyStateSynchronousResponse':
        """GuideDxfModelCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3128.GuideDxfModelCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_steady_state_synchronous_response(self) -> '_3129.HypoidGearCompoundSteadyStateSynchronousResponse':
        """HypoidGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3129.HypoidGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3130.HypoidGearMeshCompoundSteadyStateSynchronousResponse':
        """HypoidGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3130.HypoidGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_steady_state_synchronous_response(self) -> '_3131.HypoidGearSetCompoundSteadyStateSynchronousResponse':
        """HypoidGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3131.HypoidGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_steady_state_synchronous_response(self) -> '_3132.InterMountableComponentConnectionCompoundSteadyStateSynchronousResponse':
        """InterMountableComponentConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3132.InterMountableComponentConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_steady_state_synchronous_response(self) -> '_3133.KlingelnbergCycloPalloidConicalGearCompoundSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidConicalGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3133.KlingelnbergCycloPalloidConicalGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3134.KlingelnbergCycloPalloidConicalGearMeshCompoundSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3134.KlingelnbergCycloPalloidConicalGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_steady_state_synchronous_response(self) -> '_3135.KlingelnbergCycloPalloidConicalGearSetCompoundSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidConicalGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3135.KlingelnbergCycloPalloidConicalGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_steady_state_synchronous_response(self) -> '_3136.KlingelnbergCycloPalloidHypoidGearCompoundSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidHypoidGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3136.KlingelnbergCycloPalloidHypoidGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3137.KlingelnbergCycloPalloidHypoidGearMeshCompoundSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3137.KlingelnbergCycloPalloidHypoidGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_steady_state_synchronous_response(self) -> '_3138.KlingelnbergCycloPalloidHypoidGearSetCompoundSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3138.KlingelnbergCycloPalloidHypoidGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_steady_state_synchronous_response(self) -> '_3139.KlingelnbergCycloPalloidSpiralBevelGearCompoundSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3139.KlingelnbergCycloPalloidSpiralBevelGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3140.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3140.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_steady_state_synchronous_response(self) -> '_3141.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSteadyStateSynchronousResponse':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3141.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_steady_state_synchronous_response(self) -> '_3142.MassDiscCompoundSteadyStateSynchronousResponse':
        """MassDiscCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3142.MassDiscCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_steady_state_synchronous_response(self) -> '_3143.MeasurementComponentCompoundSteadyStateSynchronousResponse':
        """MeasurementComponentCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3143.MeasurementComponentCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_steady_state_synchronous_response(self) -> '_3144.MountableComponentCompoundSteadyStateSynchronousResponse':
        """MountableComponentCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3144.MountableComponentCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_steady_state_synchronous_response(self) -> '_3145.OilSealCompoundSteadyStateSynchronousResponse':
        """OilSealCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3145.OilSealCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_steady_state_synchronous_response(self) -> '_3146.PartCompoundSteadyStateSynchronousResponse':
        """PartCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3146.PartCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_steady_state_synchronous_response(self) -> '_3147.PartToPartShearCouplingCompoundSteadyStateSynchronousResponse':
        """PartToPartShearCouplingCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3147.PartToPartShearCouplingCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_steady_state_synchronous_response(self) -> '_3148.PartToPartShearCouplingConnectionCompoundSteadyStateSynchronousResponse':
        """PartToPartShearCouplingConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3148.PartToPartShearCouplingConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_steady_state_synchronous_response(self) -> '_3149.PartToPartShearCouplingHalfCompoundSteadyStateSynchronousResponse':
        """PartToPartShearCouplingHalfCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3149.PartToPartShearCouplingHalfCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_steady_state_synchronous_response(self) -> '_3150.PlanetaryConnectionCompoundSteadyStateSynchronousResponse':
        """PlanetaryConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3150.PlanetaryConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_steady_state_synchronous_response(self) -> '_3151.PlanetaryGearSetCompoundSteadyStateSynchronousResponse':
        """PlanetaryGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3151.PlanetaryGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_steady_state_synchronous_response(self) -> '_3152.PlanetCarrierCompoundSteadyStateSynchronousResponse':
        """PlanetCarrierCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3152.PlanetCarrierCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_steady_state_synchronous_response(self) -> '_3153.PointLoadCompoundSteadyStateSynchronousResponse':
        """PointLoadCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3153.PointLoadCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_steady_state_synchronous_response(self) -> '_3154.PowerLoadCompoundSteadyStateSynchronousResponse':
        """PowerLoadCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3154.PowerLoadCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_steady_state_synchronous_response(self) -> '_3155.PulleyCompoundSteadyStateSynchronousResponse':
        """PulleyCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3155.PulleyCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_steady_state_synchronous_response(self) -> '_3156.RingPinsCompoundSteadyStateSynchronousResponse':
        """RingPinsCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3156.RingPinsCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_steady_state_synchronous_response(self) -> '_3157.RingPinsToDiscConnectionCompoundSteadyStateSynchronousResponse':
        """RingPinsToDiscConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3157.RingPinsToDiscConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_steady_state_synchronous_response(self) -> '_3158.RollingRingAssemblyCompoundSteadyStateSynchronousResponse':
        """RollingRingAssemblyCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3158.RollingRingAssemblyCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_steady_state_synchronous_response(self) -> '_3159.RollingRingCompoundSteadyStateSynchronousResponse':
        """RollingRingCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3159.RollingRingCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_steady_state_synchronous_response(self) -> '_3160.RollingRingConnectionCompoundSteadyStateSynchronousResponse':
        """RollingRingConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3160.RollingRingConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_steady_state_synchronous_response(self) -> '_3161.RootAssemblyCompoundSteadyStateSynchronousResponse':
        """RootAssemblyCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3161.RootAssemblyCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_steady_state_synchronous_response(self) -> '_3162.ShaftCompoundSteadyStateSynchronousResponse':
        """ShaftCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3162.ShaftCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_steady_state_synchronous_response(self) -> '_3163.ShaftHubConnectionCompoundSteadyStateSynchronousResponse':
        """ShaftHubConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3163.ShaftHubConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_steady_state_synchronous_response(self) -> '_3164.ShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponse':
        """ShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3164.ShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_steady_state_synchronous_response(self) -> '_3165.SpecialisedAssemblyCompoundSteadyStateSynchronousResponse':
        """SpecialisedAssemblyCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3165.SpecialisedAssemblyCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_steady_state_synchronous_response(self) -> '_3166.SpiralBevelGearCompoundSteadyStateSynchronousResponse':
        """SpiralBevelGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3166.SpiralBevelGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3167.SpiralBevelGearMeshCompoundSteadyStateSynchronousResponse':
        """SpiralBevelGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3167.SpiralBevelGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_steady_state_synchronous_response(self) -> '_3168.SpiralBevelGearSetCompoundSteadyStateSynchronousResponse':
        """SpiralBevelGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3168.SpiralBevelGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_steady_state_synchronous_response(self) -> '_3169.SpringDamperCompoundSteadyStateSynchronousResponse':
        """SpringDamperCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3169.SpringDamperCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_steady_state_synchronous_response(self) -> '_3170.SpringDamperConnectionCompoundSteadyStateSynchronousResponse':
        """SpringDamperConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3170.SpringDamperConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_steady_state_synchronous_response(self) -> '_3171.SpringDamperHalfCompoundSteadyStateSynchronousResponse':
        """SpringDamperHalfCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3171.SpringDamperHalfCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_steady_state_synchronous_response(self) -> '_3172.StraightBevelDiffGearCompoundSteadyStateSynchronousResponse':
        """StraightBevelDiffGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3172.StraightBevelDiffGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3173.StraightBevelDiffGearMeshCompoundSteadyStateSynchronousResponse':
        """StraightBevelDiffGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3173.StraightBevelDiffGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_steady_state_synchronous_response(self) -> '_3174.StraightBevelDiffGearSetCompoundSteadyStateSynchronousResponse':
        """StraightBevelDiffGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3174.StraightBevelDiffGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_steady_state_synchronous_response(self) -> '_3175.StraightBevelGearCompoundSteadyStateSynchronousResponse':
        """StraightBevelGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3175.StraightBevelGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3176.StraightBevelGearMeshCompoundSteadyStateSynchronousResponse':
        """StraightBevelGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3176.StraightBevelGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_steady_state_synchronous_response(self) -> '_3177.StraightBevelGearSetCompoundSteadyStateSynchronousResponse':
        """StraightBevelGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3177.StraightBevelGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_steady_state_synchronous_response(self) -> '_3178.StraightBevelPlanetGearCompoundSteadyStateSynchronousResponse':
        """StraightBevelPlanetGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3178.StraightBevelPlanetGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_steady_state_synchronous_response(self) -> '_3179.StraightBevelSunGearCompoundSteadyStateSynchronousResponse':
        """StraightBevelSunGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3179.StraightBevelSunGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_steady_state_synchronous_response(self) -> '_3180.SynchroniserCompoundSteadyStateSynchronousResponse':
        """SynchroniserCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3180.SynchroniserCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_steady_state_synchronous_response(self) -> '_3181.SynchroniserHalfCompoundSteadyStateSynchronousResponse':
        """SynchroniserHalfCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3181.SynchroniserHalfCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_steady_state_synchronous_response(self) -> '_3182.SynchroniserPartCompoundSteadyStateSynchronousResponse':
        """SynchroniserPartCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3182.SynchroniserPartCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_steady_state_synchronous_response(self) -> '_3183.SynchroniserSleeveCompoundSteadyStateSynchronousResponse':
        """SynchroniserSleeveCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3183.SynchroniserSleeveCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_steady_state_synchronous_response(self) -> '_3184.TorqueConverterCompoundSteadyStateSynchronousResponse':
        """TorqueConverterCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3184.TorqueConverterCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_steady_state_synchronous_response(self) -> '_3185.TorqueConverterConnectionCompoundSteadyStateSynchronousResponse':
        """TorqueConverterConnectionCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3185.TorqueConverterConnectionCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_steady_state_synchronous_response(self) -> '_3186.TorqueConverterPumpCompoundSteadyStateSynchronousResponse':
        """TorqueConverterPumpCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3186.TorqueConverterPumpCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_steady_state_synchronous_response(self) -> '_3187.TorqueConverterTurbineCompoundSteadyStateSynchronousResponse':
        """TorqueConverterTurbineCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3187.TorqueConverterTurbineCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_steady_state_synchronous_response(self) -> '_3188.UnbalancedMassCompoundSteadyStateSynchronousResponse':
        """UnbalancedMassCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3188.UnbalancedMassCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_steady_state_synchronous_response(self) -> '_3189.VirtualComponentCompoundSteadyStateSynchronousResponse':
        """VirtualComponentCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3189.VirtualComponentCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_steady_state_synchronous_response(self) -> '_3190.WormGearCompoundSteadyStateSynchronousResponse':
        """WormGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3190.WormGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3191.WormGearMeshCompoundSteadyStateSynchronousResponse':
        """WormGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3191.WormGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_steady_state_synchronous_response(self) -> '_3192.WormGearSetCompoundSteadyStateSynchronousResponse':
        """WormGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3192.WormGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_steady_state_synchronous_response(self) -> '_3193.ZerolBevelGearCompoundSteadyStateSynchronousResponse':
        """ZerolBevelGearCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3193.ZerolBevelGearCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_steady_state_synchronous_response(self) -> '_3194.ZerolBevelGearMeshCompoundSteadyStateSynchronousResponse':
        """ZerolBevelGearMeshCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3194.ZerolBevelGearMeshCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_steady_state_synchronous_response(self) -> '_3195.ZerolBevelGearSetCompoundSteadyStateSynchronousResponse':
        """ZerolBevelGearSetCompoundSteadyStateSynchronousResponse: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3195.ZerolBevelGearSetCompoundSteadyStateSynchronousResponse.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundSteadyStateSynchronousResponse. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_steady_state_synchronous_response_on_a_shaft(self) -> '_3196.AbstractAssemblySteadyStateSynchronousResponseOnAShaft':
        """AbstractAssemblySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3196.AbstractAssemblySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_steady_state_synchronous_response_on_a_shaft(self) -> '_3197.AbstractShaftOrHousingSteadyStateSynchronousResponseOnAShaft':
        """AbstractShaftOrHousingSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3197.AbstractShaftOrHousingSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_steady_state_synchronous_response_on_a_shaft(self) -> '_3198.AbstractShaftSteadyStateSynchronousResponseOnAShaft':
        """AbstractShaftSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3198.AbstractShaftSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3199.AbstractShaftToMountableComponentConnectionSteadyStateSynchronousResponseOnAShaft':
        """AbstractShaftToMountableComponentConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3199.AbstractShaftToMountableComponentConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3200.AGMAGleasonConicalGearMeshSteadyStateSynchronousResponseOnAShaft':
        """AGMAGleasonConicalGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3200.AGMAGleasonConicalGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3201.AGMAGleasonConicalGearSetSteadyStateSynchronousResponseOnAShaft':
        """AGMAGleasonConicalGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3201.AGMAGleasonConicalGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3202.AGMAGleasonConicalGearSteadyStateSynchronousResponseOnAShaft':
        """AGMAGleasonConicalGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3202.AGMAGleasonConicalGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_steady_state_synchronous_response_on_a_shaft(self) -> '_3203.AssemblySteadyStateSynchronousResponseOnAShaft':
        """AssemblySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3203.AssemblySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_steady_state_synchronous_response_on_a_shaft(self) -> '_3204.BearingSteadyStateSynchronousResponseOnAShaft':
        """BearingSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3204.BearingSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3205.BeltConnectionSteadyStateSynchronousResponseOnAShaft':
        """BeltConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3205.BeltConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_steady_state_synchronous_response_on_a_shaft(self) -> '_3206.BeltDriveSteadyStateSynchronousResponseOnAShaft':
        """BeltDriveSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3206.BeltDriveSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3207.BevelDifferentialGearMeshSteadyStateSynchronousResponseOnAShaft':
        """BevelDifferentialGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3207.BevelDifferentialGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3208.BevelDifferentialGearSetSteadyStateSynchronousResponseOnAShaft':
        """BevelDifferentialGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3208.BevelDifferentialGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3209.BevelDifferentialGearSteadyStateSynchronousResponseOnAShaft':
        """BevelDifferentialGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3209.BevelDifferentialGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3210.BevelDifferentialPlanetGearSteadyStateSynchronousResponseOnAShaft':
        """BevelDifferentialPlanetGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3210.BevelDifferentialPlanetGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3211.BevelDifferentialSunGearSteadyStateSynchronousResponseOnAShaft':
        """BevelDifferentialSunGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3211.BevelDifferentialSunGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3212.BevelGearMeshSteadyStateSynchronousResponseOnAShaft':
        """BevelGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3212.BevelGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3213.BevelGearSetSteadyStateSynchronousResponseOnAShaft':
        """BevelGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3213.BevelGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3214.BevelGearSteadyStateSynchronousResponseOnAShaft':
        """BevelGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3214.BevelGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_steady_state_synchronous_response_on_a_shaft(self) -> '_3215.BoltedJointSteadyStateSynchronousResponseOnAShaft':
        """BoltedJointSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3215.BoltedJointSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_steady_state_synchronous_response_on_a_shaft(self) -> '_3216.BoltSteadyStateSynchronousResponseOnAShaft':
        """BoltSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3216.BoltSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3217.ClutchConnectionSteadyStateSynchronousResponseOnAShaft':
        """ClutchConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3217.ClutchConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_steady_state_synchronous_response_on_a_shaft(self) -> '_3218.ClutchHalfSteadyStateSynchronousResponseOnAShaft':
        """ClutchHalfSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3218.ClutchHalfSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_steady_state_synchronous_response_on_a_shaft(self) -> '_3219.ClutchSteadyStateSynchronousResponseOnAShaft':
        """ClutchSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3219.ClutchSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3220.CoaxialConnectionSteadyStateSynchronousResponseOnAShaft':
        """CoaxialConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3220.CoaxialConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_steady_state_synchronous_response_on_a_shaft(self) -> '_3221.ComponentSteadyStateSynchronousResponseOnAShaft':
        """ComponentSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3221.ComponentSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3222.ConceptCouplingConnectionSteadyStateSynchronousResponseOnAShaft':
        """ConceptCouplingConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3222.ConceptCouplingConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_steady_state_synchronous_response_on_a_shaft(self) -> '_3223.ConceptCouplingHalfSteadyStateSynchronousResponseOnAShaft':
        """ConceptCouplingHalfSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3223.ConceptCouplingHalfSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_steady_state_synchronous_response_on_a_shaft(self) -> '_3224.ConceptCouplingSteadyStateSynchronousResponseOnAShaft':
        """ConceptCouplingSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3224.ConceptCouplingSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3225.ConceptGearMeshSteadyStateSynchronousResponseOnAShaft':
        """ConceptGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3225.ConceptGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3226.ConceptGearSetSteadyStateSynchronousResponseOnAShaft':
        """ConceptGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3226.ConceptGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3227.ConceptGearSteadyStateSynchronousResponseOnAShaft':
        """ConceptGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3227.ConceptGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3228.ConicalGearMeshSteadyStateSynchronousResponseOnAShaft':
        """ConicalGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3228.ConicalGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3229.ConicalGearSetSteadyStateSynchronousResponseOnAShaft':
        """ConicalGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3229.ConicalGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3230.ConicalGearSteadyStateSynchronousResponseOnAShaft':
        """ConicalGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3230.ConicalGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3231.ConnectionSteadyStateSynchronousResponseOnAShaft':
        """ConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3231.ConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_steady_state_synchronous_response_on_a_shaft(self) -> '_3232.ConnectorSteadyStateSynchronousResponseOnAShaft':
        """ConnectorSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3232.ConnectorSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3233.CouplingConnectionSteadyStateSynchronousResponseOnAShaft':
        """CouplingConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3233.CouplingConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_steady_state_synchronous_response_on_a_shaft(self) -> '_3234.CouplingHalfSteadyStateSynchronousResponseOnAShaft':
        """CouplingHalfSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3234.CouplingHalfSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_steady_state_synchronous_response_on_a_shaft(self) -> '_3235.CouplingSteadyStateSynchronousResponseOnAShaft':
        """CouplingSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3235.CouplingSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3236.CVTBeltConnectionSteadyStateSynchronousResponseOnAShaft':
        """CVTBeltConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3236.CVTBeltConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_steady_state_synchronous_response_on_a_shaft(self) -> '_3237.CVTPulleySteadyStateSynchronousResponseOnAShaft':
        """CVTPulleySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3237.CVTPulleySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_steady_state_synchronous_response_on_a_shaft(self) -> '_3238.CVTSteadyStateSynchronousResponseOnAShaft':
        """CVTSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3238.CVTSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_steady_state_synchronous_response_on_a_shaft(self) -> '_3239.CycloidalAssemblySteadyStateSynchronousResponseOnAShaft':
        """CycloidalAssemblySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3239.CycloidalAssemblySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3240.CycloidalDiscCentralBearingConnectionSteadyStateSynchronousResponseOnAShaft':
        """CycloidalDiscCentralBearingConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3240.CycloidalDiscCentralBearingConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3241.CycloidalDiscPlanetaryBearingConnectionSteadyStateSynchronousResponseOnAShaft':
        """CycloidalDiscPlanetaryBearingConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3241.CycloidalDiscPlanetaryBearingConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_steady_state_synchronous_response_on_a_shaft(self) -> '_3242.CycloidalDiscSteadyStateSynchronousResponseOnAShaft':
        """CycloidalDiscSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3242.CycloidalDiscSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3243.CylindricalGearMeshSteadyStateSynchronousResponseOnAShaft':
        """CylindricalGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3243.CylindricalGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3244.CylindricalGearSetSteadyStateSynchronousResponseOnAShaft':
        """CylindricalGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3244.CylindricalGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3245.CylindricalGearSteadyStateSynchronousResponseOnAShaft':
        """CylindricalGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3245.CylindricalGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3246.CylindricalPlanetGearSteadyStateSynchronousResponseOnAShaft':
        """CylindricalPlanetGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3246.CylindricalPlanetGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_steady_state_synchronous_response_on_a_shaft(self) -> '_3247.DatumSteadyStateSynchronousResponseOnAShaft':
        """DatumSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3247.DatumSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_steady_state_synchronous_response_on_a_shaft(self) -> '_3248.ExternalCADModelSteadyStateSynchronousResponseOnAShaft':
        """ExternalCADModelSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3248.ExternalCADModelSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3249.FaceGearMeshSteadyStateSynchronousResponseOnAShaft':
        """FaceGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3249.FaceGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3250.FaceGearSetSteadyStateSynchronousResponseOnAShaft':
        """FaceGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3250.FaceGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3251.FaceGearSteadyStateSynchronousResponseOnAShaft':
        """FaceGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3251.FaceGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_steady_state_synchronous_response_on_a_shaft(self) -> '_3252.FEPartSteadyStateSynchronousResponseOnAShaft':
        """FEPartSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3252.FEPartSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_steady_state_synchronous_response_on_a_shaft(self) -> '_3253.FlexiblePinAssemblySteadyStateSynchronousResponseOnAShaft':
        """FlexiblePinAssemblySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3253.FlexiblePinAssemblySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3254.GearMeshSteadyStateSynchronousResponseOnAShaft':
        """GearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3254.GearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3255.GearSetSteadyStateSynchronousResponseOnAShaft':
        """GearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3255.GearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3256.GearSteadyStateSynchronousResponseOnAShaft':
        """GearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3256.GearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_steady_state_synchronous_response_on_a_shaft(self) -> '_3257.GuideDxfModelSteadyStateSynchronousResponseOnAShaft':
        """GuideDxfModelSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3257.GuideDxfModelSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3258.HypoidGearMeshSteadyStateSynchronousResponseOnAShaft':
        """HypoidGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3258.HypoidGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3259.HypoidGearSetSteadyStateSynchronousResponseOnAShaft':
        """HypoidGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3259.HypoidGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3260.HypoidGearSteadyStateSynchronousResponseOnAShaft':
        """HypoidGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3260.HypoidGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3261.InterMountableComponentConnectionSteadyStateSynchronousResponseOnAShaft':
        """InterMountableComponentConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3261.InterMountableComponentConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3262.KlingelnbergCycloPalloidConicalGearMeshSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidConicalGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3262.KlingelnbergCycloPalloidConicalGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3263.KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3263.KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3264.KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3264.KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3265.KlingelnbergCycloPalloidHypoidGearMeshSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidHypoidGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3265.KlingelnbergCycloPalloidHypoidGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3266.KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3266.KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3267.KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3267.KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3268.KlingelnbergCycloPalloidSpiralBevelGearMeshSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3268.KlingelnbergCycloPalloidSpiralBevelGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3269.KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3269.KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3270.KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3270.KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_steady_state_synchronous_response_on_a_shaft(self) -> '_3271.MassDiscSteadyStateSynchronousResponseOnAShaft':
        """MassDiscSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3271.MassDiscSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_steady_state_synchronous_response_on_a_shaft(self) -> '_3272.MeasurementComponentSteadyStateSynchronousResponseOnAShaft':
        """MeasurementComponentSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3272.MeasurementComponentSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_steady_state_synchronous_response_on_a_shaft(self) -> '_3273.MountableComponentSteadyStateSynchronousResponseOnAShaft':
        """MountableComponentSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3273.MountableComponentSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_steady_state_synchronous_response_on_a_shaft(self) -> '_3274.OilSealSteadyStateSynchronousResponseOnAShaft':
        """OilSealSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3274.OilSealSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_steady_state_synchronous_response_on_a_shaft(self) -> '_3275.PartSteadyStateSynchronousResponseOnAShaft':
        """PartSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3275.PartSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3276.PartToPartShearCouplingConnectionSteadyStateSynchronousResponseOnAShaft':
        """PartToPartShearCouplingConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3276.PartToPartShearCouplingConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_steady_state_synchronous_response_on_a_shaft(self) -> '_3277.PartToPartShearCouplingHalfSteadyStateSynchronousResponseOnAShaft':
        """PartToPartShearCouplingHalfSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3277.PartToPartShearCouplingHalfSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_steady_state_synchronous_response_on_a_shaft(self) -> '_3278.PartToPartShearCouplingSteadyStateSynchronousResponseOnAShaft':
        """PartToPartShearCouplingSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3278.PartToPartShearCouplingSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3279.PlanetaryConnectionSteadyStateSynchronousResponseOnAShaft':
        """PlanetaryConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3279.PlanetaryConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3280.PlanetaryGearSetSteadyStateSynchronousResponseOnAShaft':
        """PlanetaryGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3280.PlanetaryGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_steady_state_synchronous_response_on_a_shaft(self) -> '_3281.PlanetCarrierSteadyStateSynchronousResponseOnAShaft':
        """PlanetCarrierSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3281.PlanetCarrierSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_steady_state_synchronous_response_on_a_shaft(self) -> '_3282.PointLoadSteadyStateSynchronousResponseOnAShaft':
        """PointLoadSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3282.PointLoadSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_steady_state_synchronous_response_on_a_shaft(self) -> '_3283.PowerLoadSteadyStateSynchronousResponseOnAShaft':
        """PowerLoadSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3283.PowerLoadSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_steady_state_synchronous_response_on_a_shaft(self) -> '_3284.PulleySteadyStateSynchronousResponseOnAShaft':
        """PulleySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3284.PulleySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_steady_state_synchronous_response_on_a_shaft(self) -> '_3285.RingPinsSteadyStateSynchronousResponseOnAShaft':
        """RingPinsSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3285.RingPinsSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3286.RingPinsToDiscConnectionSteadyStateSynchronousResponseOnAShaft':
        """RingPinsToDiscConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3286.RingPinsToDiscConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_steady_state_synchronous_response_on_a_shaft(self) -> '_3287.RollingRingAssemblySteadyStateSynchronousResponseOnAShaft':
        """RollingRingAssemblySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3287.RollingRingAssemblySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3288.RollingRingConnectionSteadyStateSynchronousResponseOnAShaft':
        """RollingRingConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3288.RollingRingConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_steady_state_synchronous_response_on_a_shaft(self) -> '_3289.RollingRingSteadyStateSynchronousResponseOnAShaft':
        """RollingRingSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3289.RollingRingSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_steady_state_synchronous_response_on_a_shaft(self) -> '_3290.RootAssemblySteadyStateSynchronousResponseOnAShaft':
        """RootAssemblySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3290.RootAssemblySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3291.ShaftHubConnectionSteadyStateSynchronousResponseOnAShaft':
        """ShaftHubConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3291.ShaftHubConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_steady_state_synchronous_response_on_a_shaft(self) -> '_3292.ShaftSteadyStateSynchronousResponseOnAShaft':
        """ShaftSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3292.ShaftSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3293.ShaftToMountableComponentConnectionSteadyStateSynchronousResponseOnAShaft':
        """ShaftToMountableComponentConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3293.ShaftToMountableComponentConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_steady_state_synchronous_response_on_a_shaft(self) -> '_3294.SpecialisedAssemblySteadyStateSynchronousResponseOnAShaft':
        """SpecialisedAssemblySteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3294.SpecialisedAssemblySteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblySteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3295.SpiralBevelGearMeshSteadyStateSynchronousResponseOnAShaft':
        """SpiralBevelGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3295.SpiralBevelGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3296.SpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft':
        """SpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3296.SpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3297.SpiralBevelGearSteadyStateSynchronousResponseOnAShaft':
        """SpiralBevelGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3297.SpiralBevelGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3298.SpringDamperConnectionSteadyStateSynchronousResponseOnAShaft':
        """SpringDamperConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3298.SpringDamperConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_steady_state_synchronous_response_on_a_shaft(self) -> '_3299.SpringDamperHalfSteadyStateSynchronousResponseOnAShaft':
        """SpringDamperHalfSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3299.SpringDamperHalfSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_steady_state_synchronous_response_on_a_shaft(self) -> '_3300.SpringDamperSteadyStateSynchronousResponseOnAShaft':
        """SpringDamperSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3300.SpringDamperSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3302.StraightBevelDiffGearMeshSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelDiffGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3302.StraightBevelDiffGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3303.StraightBevelDiffGearSetSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelDiffGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3303.StraightBevelDiffGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3304.StraightBevelDiffGearSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelDiffGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3304.StraightBevelDiffGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3305.StraightBevelGearMeshSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3305.StraightBevelGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3306.StraightBevelGearSetSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3306.StraightBevelGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3307.StraightBevelGearSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3307.StraightBevelGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3308.StraightBevelPlanetGearSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelPlanetGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3308.StraightBevelPlanetGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3309.StraightBevelSunGearSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelSunGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3309.StraightBevelSunGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_steady_state_synchronous_response_on_a_shaft(self) -> '_3310.SynchroniserHalfSteadyStateSynchronousResponseOnAShaft':
        """SynchroniserHalfSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3310.SynchroniserHalfSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_steady_state_synchronous_response_on_a_shaft(self) -> '_3311.SynchroniserPartSteadyStateSynchronousResponseOnAShaft':
        """SynchroniserPartSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3311.SynchroniserPartSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_steady_state_synchronous_response_on_a_shaft(self) -> '_3312.SynchroniserSleeveSteadyStateSynchronousResponseOnAShaft':
        """SynchroniserSleeveSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3312.SynchroniserSleeveSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_steady_state_synchronous_response_on_a_shaft(self) -> '_3313.SynchroniserSteadyStateSynchronousResponseOnAShaft':
        """SynchroniserSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3313.SynchroniserSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_steady_state_synchronous_response_on_a_shaft(self) -> '_3314.TorqueConverterConnectionSteadyStateSynchronousResponseOnAShaft':
        """TorqueConverterConnectionSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3314.TorqueConverterConnectionSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_steady_state_synchronous_response_on_a_shaft(self) -> '_3315.TorqueConverterPumpSteadyStateSynchronousResponseOnAShaft':
        """TorqueConverterPumpSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3315.TorqueConverterPumpSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_steady_state_synchronous_response_on_a_shaft(self) -> '_3316.TorqueConverterSteadyStateSynchronousResponseOnAShaft':
        """TorqueConverterSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3316.TorqueConverterSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_steady_state_synchronous_response_on_a_shaft(self) -> '_3317.TorqueConverterTurbineSteadyStateSynchronousResponseOnAShaft':
        """TorqueConverterTurbineSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3317.TorqueConverterTurbineSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_steady_state_synchronous_response_on_a_shaft(self) -> '_3318.UnbalancedMassSteadyStateSynchronousResponseOnAShaft':
        """UnbalancedMassSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3318.UnbalancedMassSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_steady_state_synchronous_response_on_a_shaft(self) -> '_3319.VirtualComponentSteadyStateSynchronousResponseOnAShaft':
        """VirtualComponentSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3319.VirtualComponentSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3320.WormGearMeshSteadyStateSynchronousResponseOnAShaft':
        """WormGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3320.WormGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3321.WormGearSetSteadyStateSynchronousResponseOnAShaft':
        """WormGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3321.WormGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3322.WormGearSteadyStateSynchronousResponseOnAShaft':
        """WormGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3322.WormGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_steady_state_synchronous_response_on_a_shaft(self) -> '_3323.ZerolBevelGearMeshSteadyStateSynchronousResponseOnAShaft':
        """ZerolBevelGearMeshSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3323.ZerolBevelGearMeshSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_steady_state_synchronous_response_on_a_shaft(self) -> '_3324.ZerolBevelGearSetSteadyStateSynchronousResponseOnAShaft':
        """ZerolBevelGearSetSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3324.ZerolBevelGearSetSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_steady_state_synchronous_response_on_a_shaft(self) -> '_3325.ZerolBevelGearSteadyStateSynchronousResponseOnAShaft':
        """ZerolBevelGearSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3325.ZerolBevelGearSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3326.AbstractAssemblyCompoundSteadyStateSynchronousResponseOnAShaft':
        """AbstractAssemblyCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3326.AbstractAssemblyCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3327.AbstractShaftCompoundSteadyStateSynchronousResponseOnAShaft':
        """AbstractShaftCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3327.AbstractShaftCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3328.AbstractShaftOrHousingCompoundSteadyStateSynchronousResponseOnAShaft':
        """AbstractShaftOrHousingCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3328.AbstractShaftOrHousingCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3329.AbstractShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """AbstractShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3329.AbstractShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3330.AGMAGleasonConicalGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """AGMAGleasonConicalGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3330.AGMAGleasonConicalGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3331.AGMAGleasonConicalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """AGMAGleasonConicalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3331.AGMAGleasonConicalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3332.AGMAGleasonConicalGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """AGMAGleasonConicalGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3332.AGMAGleasonConicalGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3333.AssemblyCompoundSteadyStateSynchronousResponseOnAShaft':
        """AssemblyCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3333.AssemblyCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3334.BearingCompoundSteadyStateSynchronousResponseOnAShaft':
        """BearingCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3334.BearingCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3335.BeltConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """BeltConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3335.BeltConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3336.BeltDriveCompoundSteadyStateSynchronousResponseOnAShaft':
        """BeltDriveCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3336.BeltDriveCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3337.BevelDifferentialGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """BevelDifferentialGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3337.BevelDifferentialGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3338.BevelDifferentialGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """BevelDifferentialGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3338.BevelDifferentialGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3339.BevelDifferentialGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """BevelDifferentialGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3339.BevelDifferentialGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3340.BevelDifferentialPlanetGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """BevelDifferentialPlanetGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3340.BevelDifferentialPlanetGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3341.BevelDifferentialSunGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """BevelDifferentialSunGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3341.BevelDifferentialSunGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3342.BevelGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """BevelGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3342.BevelGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3343.BevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """BevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3343.BevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3344.BevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """BevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3344.BevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3345.BoltCompoundSteadyStateSynchronousResponseOnAShaft':
        """BoltCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3345.BoltCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3346.BoltedJointCompoundSteadyStateSynchronousResponseOnAShaft':
        """BoltedJointCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3346.BoltedJointCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3347.ClutchCompoundSteadyStateSynchronousResponseOnAShaft':
        """ClutchCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3347.ClutchCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3348.ClutchConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """ClutchConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3348.ClutchConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3349.ClutchHalfCompoundSteadyStateSynchronousResponseOnAShaft':
        """ClutchHalfCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3349.ClutchHalfCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3350.CoaxialConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """CoaxialConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3350.CoaxialConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3351.ComponentCompoundSteadyStateSynchronousResponseOnAShaft':
        """ComponentCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3351.ComponentCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3352.ConceptCouplingCompoundSteadyStateSynchronousResponseOnAShaft':
        """ConceptCouplingCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3352.ConceptCouplingCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3353.ConceptCouplingConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """ConceptCouplingConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3353.ConceptCouplingConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3354.ConceptCouplingHalfCompoundSteadyStateSynchronousResponseOnAShaft':
        """ConceptCouplingHalfCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3354.ConceptCouplingHalfCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3355.ConceptGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """ConceptGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3355.ConceptGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3356.ConceptGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """ConceptGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3356.ConceptGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3357.ConceptGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """ConceptGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3357.ConceptGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3358.ConicalGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """ConicalGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3358.ConicalGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3359.ConicalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """ConicalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3359.ConicalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3360.ConicalGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """ConicalGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3360.ConicalGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3361.ConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """ConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3361.ConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3362.ConnectorCompoundSteadyStateSynchronousResponseOnAShaft':
        """ConnectorCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3362.ConnectorCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3363.CouplingCompoundSteadyStateSynchronousResponseOnAShaft':
        """CouplingCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3363.CouplingCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3364.CouplingConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """CouplingConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3364.CouplingConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3365.CouplingHalfCompoundSteadyStateSynchronousResponseOnAShaft':
        """CouplingHalfCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3365.CouplingHalfCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3366.CVTBeltConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """CVTBeltConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3366.CVTBeltConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3367.CVTCompoundSteadyStateSynchronousResponseOnAShaft':
        """CVTCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3367.CVTCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3368.CVTPulleyCompoundSteadyStateSynchronousResponseOnAShaft':
        """CVTPulleyCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3368.CVTPulleyCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3369.CycloidalAssemblyCompoundSteadyStateSynchronousResponseOnAShaft':
        """CycloidalAssemblyCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3369.CycloidalAssemblyCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3370.CycloidalDiscCentralBearingConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """CycloidalDiscCentralBearingConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3370.CycloidalDiscCentralBearingConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3371.CycloidalDiscCompoundSteadyStateSynchronousResponseOnAShaft':
        """CycloidalDiscCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3371.CycloidalDiscCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3372.CycloidalDiscPlanetaryBearingConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """CycloidalDiscPlanetaryBearingConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3372.CycloidalDiscPlanetaryBearingConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3373.CylindricalGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """CylindricalGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3373.CylindricalGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3374.CylindricalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """CylindricalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3374.CylindricalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3375.CylindricalGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """CylindricalGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3375.CylindricalGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3376.CylindricalPlanetGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """CylindricalPlanetGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3376.CylindricalPlanetGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3377.DatumCompoundSteadyStateSynchronousResponseOnAShaft':
        """DatumCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3377.DatumCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3378.ExternalCADModelCompoundSteadyStateSynchronousResponseOnAShaft':
        """ExternalCADModelCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3378.ExternalCADModelCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3379.FaceGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """FaceGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3379.FaceGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3380.FaceGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """FaceGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3380.FaceGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3381.FaceGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """FaceGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3381.FaceGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3382.FEPartCompoundSteadyStateSynchronousResponseOnAShaft':
        """FEPartCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3382.FEPartCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3383.FlexiblePinAssemblyCompoundSteadyStateSynchronousResponseOnAShaft':
        """FlexiblePinAssemblyCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3383.FlexiblePinAssemblyCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3384.GearCompoundSteadyStateSynchronousResponseOnAShaft':
        """GearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3384.GearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3385.GearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """GearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3385.GearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3386.GearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """GearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3386.GearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3387.GuideDxfModelCompoundSteadyStateSynchronousResponseOnAShaft':
        """GuideDxfModelCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3387.GuideDxfModelCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3388.HypoidGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """HypoidGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3388.HypoidGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3389.HypoidGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """HypoidGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3389.HypoidGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3390.HypoidGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """HypoidGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3390.HypoidGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3391.InterMountableComponentConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """InterMountableComponentConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3391.InterMountableComponentConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3392.KlingelnbergCycloPalloidConicalGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidConicalGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3392.KlingelnbergCycloPalloidConicalGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3393.KlingelnbergCycloPalloidConicalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3393.KlingelnbergCycloPalloidConicalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3394.KlingelnbergCycloPalloidConicalGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidConicalGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3394.KlingelnbergCycloPalloidConicalGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3395.KlingelnbergCycloPalloidHypoidGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidHypoidGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3395.KlingelnbergCycloPalloidHypoidGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3396.KlingelnbergCycloPalloidHypoidGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3396.KlingelnbergCycloPalloidHypoidGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3397.KlingelnbergCycloPalloidHypoidGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3397.KlingelnbergCycloPalloidHypoidGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3398.KlingelnbergCycloPalloidSpiralBevelGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3398.KlingelnbergCycloPalloidSpiralBevelGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3399.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3399.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3400.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3400.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3401.MassDiscCompoundSteadyStateSynchronousResponseOnAShaft':
        """MassDiscCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3401.MassDiscCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3402.MeasurementComponentCompoundSteadyStateSynchronousResponseOnAShaft':
        """MeasurementComponentCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3402.MeasurementComponentCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3403.MountableComponentCompoundSteadyStateSynchronousResponseOnAShaft':
        """MountableComponentCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3403.MountableComponentCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3404.OilSealCompoundSteadyStateSynchronousResponseOnAShaft':
        """OilSealCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3404.OilSealCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3405.PartCompoundSteadyStateSynchronousResponseOnAShaft':
        """PartCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3405.PartCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3406.PartToPartShearCouplingCompoundSteadyStateSynchronousResponseOnAShaft':
        """PartToPartShearCouplingCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3406.PartToPartShearCouplingCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3407.PartToPartShearCouplingConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """PartToPartShearCouplingConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3407.PartToPartShearCouplingConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3408.PartToPartShearCouplingHalfCompoundSteadyStateSynchronousResponseOnAShaft':
        """PartToPartShearCouplingHalfCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3408.PartToPartShearCouplingHalfCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3409.PlanetaryConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """PlanetaryConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3409.PlanetaryConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3410.PlanetaryGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """PlanetaryGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3410.PlanetaryGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3411.PlanetCarrierCompoundSteadyStateSynchronousResponseOnAShaft':
        """PlanetCarrierCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3411.PlanetCarrierCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3412.PointLoadCompoundSteadyStateSynchronousResponseOnAShaft':
        """PointLoadCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3412.PointLoadCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3413.PowerLoadCompoundSteadyStateSynchronousResponseOnAShaft':
        """PowerLoadCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3413.PowerLoadCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3414.PulleyCompoundSteadyStateSynchronousResponseOnAShaft':
        """PulleyCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3414.PulleyCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3415.RingPinsCompoundSteadyStateSynchronousResponseOnAShaft':
        """RingPinsCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3415.RingPinsCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3416.RingPinsToDiscConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """RingPinsToDiscConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3416.RingPinsToDiscConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3417.RollingRingAssemblyCompoundSteadyStateSynchronousResponseOnAShaft':
        """RollingRingAssemblyCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3417.RollingRingAssemblyCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3418.RollingRingCompoundSteadyStateSynchronousResponseOnAShaft':
        """RollingRingCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3418.RollingRingCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3419.RollingRingConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """RollingRingConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3419.RollingRingConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3420.RootAssemblyCompoundSteadyStateSynchronousResponseOnAShaft':
        """RootAssemblyCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3420.RootAssemblyCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3421.ShaftCompoundSteadyStateSynchronousResponseOnAShaft':
        """ShaftCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3421.ShaftCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3422.ShaftHubConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """ShaftHubConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3422.ShaftHubConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3423.ShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """ShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3423.ShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3424.SpecialisedAssemblyCompoundSteadyStateSynchronousResponseOnAShaft':
        """SpecialisedAssemblyCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3424.SpecialisedAssemblyCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3425.SpiralBevelGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """SpiralBevelGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3425.SpiralBevelGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3426.SpiralBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """SpiralBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3426.SpiralBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3427.SpiralBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """SpiralBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3427.SpiralBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3428.SpringDamperCompoundSteadyStateSynchronousResponseOnAShaft':
        """SpringDamperCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3428.SpringDamperCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3429.SpringDamperConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """SpringDamperConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3429.SpringDamperConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3430.SpringDamperHalfCompoundSteadyStateSynchronousResponseOnAShaft':
        """SpringDamperHalfCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3430.SpringDamperHalfCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3431.StraightBevelDiffGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelDiffGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3431.StraightBevelDiffGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3432.StraightBevelDiffGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelDiffGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3432.StraightBevelDiffGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3433.StraightBevelDiffGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelDiffGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3433.StraightBevelDiffGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3434.StraightBevelGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3434.StraightBevelGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3435.StraightBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3435.StraightBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3436.StraightBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3436.StraightBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3437.StraightBevelPlanetGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelPlanetGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3437.StraightBevelPlanetGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3438.StraightBevelSunGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """StraightBevelSunGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3438.StraightBevelSunGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3439.SynchroniserCompoundSteadyStateSynchronousResponseOnAShaft':
        """SynchroniserCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3439.SynchroniserCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3440.SynchroniserHalfCompoundSteadyStateSynchronousResponseOnAShaft':
        """SynchroniserHalfCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3440.SynchroniserHalfCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3441.SynchroniserPartCompoundSteadyStateSynchronousResponseOnAShaft':
        """SynchroniserPartCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3441.SynchroniserPartCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3442.SynchroniserSleeveCompoundSteadyStateSynchronousResponseOnAShaft':
        """SynchroniserSleeveCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3442.SynchroniserSleeveCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3443.TorqueConverterCompoundSteadyStateSynchronousResponseOnAShaft':
        """TorqueConverterCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3443.TorqueConverterCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3444.TorqueConverterConnectionCompoundSteadyStateSynchronousResponseOnAShaft':
        """TorqueConverterConnectionCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3444.TorqueConverterConnectionCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3445.TorqueConverterPumpCompoundSteadyStateSynchronousResponseOnAShaft':
        """TorqueConverterPumpCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3445.TorqueConverterPumpCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3446.TorqueConverterTurbineCompoundSteadyStateSynchronousResponseOnAShaft':
        """TorqueConverterTurbineCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3446.TorqueConverterTurbineCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3447.UnbalancedMassCompoundSteadyStateSynchronousResponseOnAShaft':
        """UnbalancedMassCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3447.UnbalancedMassCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3448.VirtualComponentCompoundSteadyStateSynchronousResponseOnAShaft':
        """VirtualComponentCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3448.VirtualComponentCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3449.WormGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """WormGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3449.WormGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3450.WormGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """WormGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3450.WormGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3451.WormGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """WormGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3451.WormGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3452.ZerolBevelGearCompoundSteadyStateSynchronousResponseOnAShaft':
        """ZerolBevelGearCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3452.ZerolBevelGearCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3453.ZerolBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft':
        """ZerolBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3453.ZerolBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_steady_state_synchronous_response_on_a_shaft(self) -> '_3454.ZerolBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft':
        """ZerolBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3454.ZerolBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundSteadyStateSynchronousResponseOnAShaft. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_steady_state_synchronous_response_at_a_speed(self) -> '_3455.AbstractAssemblySteadyStateSynchronousResponseAtASpeed':
        """AbstractAssemblySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3455.AbstractAssemblySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_steady_state_synchronous_response_at_a_speed(self) -> '_3456.AbstractShaftOrHousingSteadyStateSynchronousResponseAtASpeed':
        """AbstractShaftOrHousingSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3456.AbstractShaftOrHousingSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_steady_state_synchronous_response_at_a_speed(self) -> '_3457.AbstractShaftSteadyStateSynchronousResponseAtASpeed':
        """AbstractShaftSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3457.AbstractShaftSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3458.AbstractShaftToMountableComponentConnectionSteadyStateSynchronousResponseAtASpeed':
        """AbstractShaftToMountableComponentConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3458.AbstractShaftToMountableComponentConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3459.AGMAGleasonConicalGearMeshSteadyStateSynchronousResponseAtASpeed':
        """AGMAGleasonConicalGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3459.AGMAGleasonConicalGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3460.AGMAGleasonConicalGearSetSteadyStateSynchronousResponseAtASpeed':
        """AGMAGleasonConicalGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3460.AGMAGleasonConicalGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3461.AGMAGleasonConicalGearSteadyStateSynchronousResponseAtASpeed':
        """AGMAGleasonConicalGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3461.AGMAGleasonConicalGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_steady_state_synchronous_response_at_a_speed(self) -> '_3462.AssemblySteadyStateSynchronousResponseAtASpeed':
        """AssemblySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3462.AssemblySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_steady_state_synchronous_response_at_a_speed(self) -> '_3463.BearingSteadyStateSynchronousResponseAtASpeed':
        """BearingSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3463.BearingSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3464.BeltConnectionSteadyStateSynchronousResponseAtASpeed':
        """BeltConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3464.BeltConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_steady_state_synchronous_response_at_a_speed(self) -> '_3465.BeltDriveSteadyStateSynchronousResponseAtASpeed':
        """BeltDriveSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3465.BeltDriveSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3466.BevelDifferentialGearMeshSteadyStateSynchronousResponseAtASpeed':
        """BevelDifferentialGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3466.BevelDifferentialGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3467.BevelDifferentialGearSetSteadyStateSynchronousResponseAtASpeed':
        """BevelDifferentialGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3467.BevelDifferentialGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3468.BevelDifferentialGearSteadyStateSynchronousResponseAtASpeed':
        """BevelDifferentialGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3468.BevelDifferentialGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3469.BevelDifferentialPlanetGearSteadyStateSynchronousResponseAtASpeed':
        """BevelDifferentialPlanetGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3469.BevelDifferentialPlanetGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3470.BevelDifferentialSunGearSteadyStateSynchronousResponseAtASpeed':
        """BevelDifferentialSunGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3470.BevelDifferentialSunGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3471.BevelGearMeshSteadyStateSynchronousResponseAtASpeed':
        """BevelGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3471.BevelGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3472.BevelGearSetSteadyStateSynchronousResponseAtASpeed':
        """BevelGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3472.BevelGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3473.BevelGearSteadyStateSynchronousResponseAtASpeed':
        """BevelGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3473.BevelGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_steady_state_synchronous_response_at_a_speed(self) -> '_3474.BoltedJointSteadyStateSynchronousResponseAtASpeed':
        """BoltedJointSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3474.BoltedJointSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_steady_state_synchronous_response_at_a_speed(self) -> '_3475.BoltSteadyStateSynchronousResponseAtASpeed':
        """BoltSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3475.BoltSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3476.ClutchConnectionSteadyStateSynchronousResponseAtASpeed':
        """ClutchConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3476.ClutchConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_steady_state_synchronous_response_at_a_speed(self) -> '_3477.ClutchHalfSteadyStateSynchronousResponseAtASpeed':
        """ClutchHalfSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3477.ClutchHalfSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_steady_state_synchronous_response_at_a_speed(self) -> '_3478.ClutchSteadyStateSynchronousResponseAtASpeed':
        """ClutchSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3478.ClutchSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3479.CoaxialConnectionSteadyStateSynchronousResponseAtASpeed':
        """CoaxialConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3479.CoaxialConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_steady_state_synchronous_response_at_a_speed(self) -> '_3480.ComponentSteadyStateSynchronousResponseAtASpeed':
        """ComponentSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3480.ComponentSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3481.ConceptCouplingConnectionSteadyStateSynchronousResponseAtASpeed':
        """ConceptCouplingConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3481.ConceptCouplingConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_steady_state_synchronous_response_at_a_speed(self) -> '_3482.ConceptCouplingHalfSteadyStateSynchronousResponseAtASpeed':
        """ConceptCouplingHalfSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3482.ConceptCouplingHalfSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_steady_state_synchronous_response_at_a_speed(self) -> '_3483.ConceptCouplingSteadyStateSynchronousResponseAtASpeed':
        """ConceptCouplingSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3483.ConceptCouplingSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3484.ConceptGearMeshSteadyStateSynchronousResponseAtASpeed':
        """ConceptGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3484.ConceptGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3485.ConceptGearSetSteadyStateSynchronousResponseAtASpeed':
        """ConceptGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3485.ConceptGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3486.ConceptGearSteadyStateSynchronousResponseAtASpeed':
        """ConceptGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3486.ConceptGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3487.ConicalGearMeshSteadyStateSynchronousResponseAtASpeed':
        """ConicalGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3487.ConicalGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3488.ConicalGearSetSteadyStateSynchronousResponseAtASpeed':
        """ConicalGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3488.ConicalGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3489.ConicalGearSteadyStateSynchronousResponseAtASpeed':
        """ConicalGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3489.ConicalGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3490.ConnectionSteadyStateSynchronousResponseAtASpeed':
        """ConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3490.ConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_steady_state_synchronous_response_at_a_speed(self) -> '_3491.ConnectorSteadyStateSynchronousResponseAtASpeed':
        """ConnectorSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3491.ConnectorSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3492.CouplingConnectionSteadyStateSynchronousResponseAtASpeed':
        """CouplingConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3492.CouplingConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_steady_state_synchronous_response_at_a_speed(self) -> '_3493.CouplingHalfSteadyStateSynchronousResponseAtASpeed':
        """CouplingHalfSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3493.CouplingHalfSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_steady_state_synchronous_response_at_a_speed(self) -> '_3494.CouplingSteadyStateSynchronousResponseAtASpeed':
        """CouplingSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3494.CouplingSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3495.CVTBeltConnectionSteadyStateSynchronousResponseAtASpeed':
        """CVTBeltConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3495.CVTBeltConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_steady_state_synchronous_response_at_a_speed(self) -> '_3496.CVTPulleySteadyStateSynchronousResponseAtASpeed':
        """CVTPulleySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3496.CVTPulleySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_steady_state_synchronous_response_at_a_speed(self) -> '_3497.CVTSteadyStateSynchronousResponseAtASpeed':
        """CVTSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3497.CVTSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_steady_state_synchronous_response_at_a_speed(self) -> '_3498.CycloidalAssemblySteadyStateSynchronousResponseAtASpeed':
        """CycloidalAssemblySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3498.CycloidalAssemblySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3499.CycloidalDiscCentralBearingConnectionSteadyStateSynchronousResponseAtASpeed':
        """CycloidalDiscCentralBearingConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3499.CycloidalDiscCentralBearingConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3500.CycloidalDiscPlanetaryBearingConnectionSteadyStateSynchronousResponseAtASpeed':
        """CycloidalDiscPlanetaryBearingConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3500.CycloidalDiscPlanetaryBearingConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_steady_state_synchronous_response_at_a_speed(self) -> '_3501.CycloidalDiscSteadyStateSynchronousResponseAtASpeed':
        """CycloidalDiscSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3501.CycloidalDiscSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3502.CylindricalGearMeshSteadyStateSynchronousResponseAtASpeed':
        """CylindricalGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3502.CylindricalGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3503.CylindricalGearSetSteadyStateSynchronousResponseAtASpeed':
        """CylindricalGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3503.CylindricalGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3504.CylindricalGearSteadyStateSynchronousResponseAtASpeed':
        """CylindricalGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3504.CylindricalGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3505.CylindricalPlanetGearSteadyStateSynchronousResponseAtASpeed':
        """CylindricalPlanetGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3505.CylindricalPlanetGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_steady_state_synchronous_response_at_a_speed(self) -> '_3506.DatumSteadyStateSynchronousResponseAtASpeed':
        """DatumSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3506.DatumSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_steady_state_synchronous_response_at_a_speed(self) -> '_3507.ExternalCADModelSteadyStateSynchronousResponseAtASpeed':
        """ExternalCADModelSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3507.ExternalCADModelSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3508.FaceGearMeshSteadyStateSynchronousResponseAtASpeed':
        """FaceGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3508.FaceGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3509.FaceGearSetSteadyStateSynchronousResponseAtASpeed':
        """FaceGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3509.FaceGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3510.FaceGearSteadyStateSynchronousResponseAtASpeed':
        """FaceGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3510.FaceGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_steady_state_synchronous_response_at_a_speed(self) -> '_3511.FEPartSteadyStateSynchronousResponseAtASpeed':
        """FEPartSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3511.FEPartSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_steady_state_synchronous_response_at_a_speed(self) -> '_3512.FlexiblePinAssemblySteadyStateSynchronousResponseAtASpeed':
        """FlexiblePinAssemblySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3512.FlexiblePinAssemblySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3513.GearMeshSteadyStateSynchronousResponseAtASpeed':
        """GearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3513.GearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3514.GearSetSteadyStateSynchronousResponseAtASpeed':
        """GearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3514.GearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3515.GearSteadyStateSynchronousResponseAtASpeed':
        """GearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3515.GearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_steady_state_synchronous_response_at_a_speed(self) -> '_3516.GuideDxfModelSteadyStateSynchronousResponseAtASpeed':
        """GuideDxfModelSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3516.GuideDxfModelSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3517.HypoidGearMeshSteadyStateSynchronousResponseAtASpeed':
        """HypoidGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3517.HypoidGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3518.HypoidGearSetSteadyStateSynchronousResponseAtASpeed':
        """HypoidGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3518.HypoidGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3519.HypoidGearSteadyStateSynchronousResponseAtASpeed':
        """HypoidGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3519.HypoidGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3520.InterMountableComponentConnectionSteadyStateSynchronousResponseAtASpeed':
        """InterMountableComponentConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3520.InterMountableComponentConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3521.KlingelnbergCycloPalloidConicalGearMeshSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidConicalGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3521.KlingelnbergCycloPalloidConicalGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3522.KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3522.KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3523.KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3523.KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3524.KlingelnbergCycloPalloidHypoidGearMeshSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3524.KlingelnbergCycloPalloidHypoidGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3525.KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3525.KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3526.KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3526.KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3527.KlingelnbergCycloPalloidSpiralBevelGearMeshSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3527.KlingelnbergCycloPalloidSpiralBevelGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3528.KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3528.KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3529.KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3529.KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_steady_state_synchronous_response_at_a_speed(self) -> '_3530.MassDiscSteadyStateSynchronousResponseAtASpeed':
        """MassDiscSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3530.MassDiscSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_steady_state_synchronous_response_at_a_speed(self) -> '_3531.MeasurementComponentSteadyStateSynchronousResponseAtASpeed':
        """MeasurementComponentSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3531.MeasurementComponentSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_steady_state_synchronous_response_at_a_speed(self) -> '_3532.MountableComponentSteadyStateSynchronousResponseAtASpeed':
        """MountableComponentSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3532.MountableComponentSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_steady_state_synchronous_response_at_a_speed(self) -> '_3533.OilSealSteadyStateSynchronousResponseAtASpeed':
        """OilSealSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3533.OilSealSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_steady_state_synchronous_response_at_a_speed(self) -> '_3534.PartSteadyStateSynchronousResponseAtASpeed':
        """PartSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3534.PartSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3535.PartToPartShearCouplingConnectionSteadyStateSynchronousResponseAtASpeed':
        """PartToPartShearCouplingConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3535.PartToPartShearCouplingConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_steady_state_synchronous_response_at_a_speed(self) -> '_3536.PartToPartShearCouplingHalfSteadyStateSynchronousResponseAtASpeed':
        """PartToPartShearCouplingHalfSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3536.PartToPartShearCouplingHalfSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_steady_state_synchronous_response_at_a_speed(self) -> '_3537.PartToPartShearCouplingSteadyStateSynchronousResponseAtASpeed':
        """PartToPartShearCouplingSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3537.PartToPartShearCouplingSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3538.PlanetaryConnectionSteadyStateSynchronousResponseAtASpeed':
        """PlanetaryConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3538.PlanetaryConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3539.PlanetaryGearSetSteadyStateSynchronousResponseAtASpeed':
        """PlanetaryGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3539.PlanetaryGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_steady_state_synchronous_response_at_a_speed(self) -> '_3540.PlanetCarrierSteadyStateSynchronousResponseAtASpeed':
        """PlanetCarrierSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3540.PlanetCarrierSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_steady_state_synchronous_response_at_a_speed(self) -> '_3541.PointLoadSteadyStateSynchronousResponseAtASpeed':
        """PointLoadSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3541.PointLoadSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_steady_state_synchronous_response_at_a_speed(self) -> '_3542.PowerLoadSteadyStateSynchronousResponseAtASpeed':
        """PowerLoadSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3542.PowerLoadSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_steady_state_synchronous_response_at_a_speed(self) -> '_3543.PulleySteadyStateSynchronousResponseAtASpeed':
        """PulleySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3543.PulleySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_steady_state_synchronous_response_at_a_speed(self) -> '_3544.RingPinsSteadyStateSynchronousResponseAtASpeed':
        """RingPinsSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3544.RingPinsSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3545.RingPinsToDiscConnectionSteadyStateSynchronousResponseAtASpeed':
        """RingPinsToDiscConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3545.RingPinsToDiscConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_steady_state_synchronous_response_at_a_speed(self) -> '_3546.RollingRingAssemblySteadyStateSynchronousResponseAtASpeed':
        """RollingRingAssemblySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3546.RollingRingAssemblySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3547.RollingRingConnectionSteadyStateSynchronousResponseAtASpeed':
        """RollingRingConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3547.RollingRingConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_steady_state_synchronous_response_at_a_speed(self) -> '_3548.RollingRingSteadyStateSynchronousResponseAtASpeed':
        """RollingRingSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3548.RollingRingSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_steady_state_synchronous_response_at_a_speed(self) -> '_3549.RootAssemblySteadyStateSynchronousResponseAtASpeed':
        """RootAssemblySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3549.RootAssemblySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3550.ShaftHubConnectionSteadyStateSynchronousResponseAtASpeed':
        """ShaftHubConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3550.ShaftHubConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_steady_state_synchronous_response_at_a_speed(self) -> '_3551.ShaftSteadyStateSynchronousResponseAtASpeed':
        """ShaftSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3551.ShaftSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3552.ShaftToMountableComponentConnectionSteadyStateSynchronousResponseAtASpeed':
        """ShaftToMountableComponentConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3552.ShaftToMountableComponentConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_steady_state_synchronous_response_at_a_speed(self) -> '_3553.SpecialisedAssemblySteadyStateSynchronousResponseAtASpeed':
        """SpecialisedAssemblySteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3553.SpecialisedAssemblySteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblySteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3554.SpiralBevelGearMeshSteadyStateSynchronousResponseAtASpeed':
        """SpiralBevelGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3554.SpiralBevelGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3555.SpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed':
        """SpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3555.SpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3556.SpiralBevelGearSteadyStateSynchronousResponseAtASpeed':
        """SpiralBevelGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3556.SpiralBevelGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3557.SpringDamperConnectionSteadyStateSynchronousResponseAtASpeed':
        """SpringDamperConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3557.SpringDamperConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_steady_state_synchronous_response_at_a_speed(self) -> '_3558.SpringDamperHalfSteadyStateSynchronousResponseAtASpeed':
        """SpringDamperHalfSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3558.SpringDamperHalfSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_steady_state_synchronous_response_at_a_speed(self) -> '_3559.SpringDamperSteadyStateSynchronousResponseAtASpeed':
        """SpringDamperSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3559.SpringDamperSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3561.StraightBevelDiffGearMeshSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelDiffGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3561.StraightBevelDiffGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3562.StraightBevelDiffGearSetSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelDiffGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3562.StraightBevelDiffGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3563.StraightBevelDiffGearSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelDiffGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3563.StraightBevelDiffGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3564.StraightBevelGearMeshSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3564.StraightBevelGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3565.StraightBevelGearSetSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3565.StraightBevelGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3566.StraightBevelGearSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3566.StraightBevelGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3567.StraightBevelPlanetGearSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelPlanetGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3567.StraightBevelPlanetGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3568.StraightBevelSunGearSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelSunGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3568.StraightBevelSunGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_steady_state_synchronous_response_at_a_speed(self) -> '_3569.SynchroniserHalfSteadyStateSynchronousResponseAtASpeed':
        """SynchroniserHalfSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3569.SynchroniserHalfSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_steady_state_synchronous_response_at_a_speed(self) -> '_3570.SynchroniserPartSteadyStateSynchronousResponseAtASpeed':
        """SynchroniserPartSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3570.SynchroniserPartSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_steady_state_synchronous_response_at_a_speed(self) -> '_3571.SynchroniserSleeveSteadyStateSynchronousResponseAtASpeed':
        """SynchroniserSleeveSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3571.SynchroniserSleeveSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_steady_state_synchronous_response_at_a_speed(self) -> '_3572.SynchroniserSteadyStateSynchronousResponseAtASpeed':
        """SynchroniserSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3572.SynchroniserSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_steady_state_synchronous_response_at_a_speed(self) -> '_3573.TorqueConverterConnectionSteadyStateSynchronousResponseAtASpeed':
        """TorqueConverterConnectionSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3573.TorqueConverterConnectionSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_steady_state_synchronous_response_at_a_speed(self) -> '_3574.TorqueConverterPumpSteadyStateSynchronousResponseAtASpeed':
        """TorqueConverterPumpSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3574.TorqueConverterPumpSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_steady_state_synchronous_response_at_a_speed(self) -> '_3575.TorqueConverterSteadyStateSynchronousResponseAtASpeed':
        """TorqueConverterSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3575.TorqueConverterSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_steady_state_synchronous_response_at_a_speed(self) -> '_3576.TorqueConverterTurbineSteadyStateSynchronousResponseAtASpeed':
        """TorqueConverterTurbineSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3576.TorqueConverterTurbineSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_steady_state_synchronous_response_at_a_speed(self) -> '_3577.UnbalancedMassSteadyStateSynchronousResponseAtASpeed':
        """UnbalancedMassSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3577.UnbalancedMassSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_steady_state_synchronous_response_at_a_speed(self) -> '_3578.VirtualComponentSteadyStateSynchronousResponseAtASpeed':
        """VirtualComponentSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3578.VirtualComponentSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3579.WormGearMeshSteadyStateSynchronousResponseAtASpeed':
        """WormGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3579.WormGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3580.WormGearSetSteadyStateSynchronousResponseAtASpeed':
        """WormGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3580.WormGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3581.WormGearSteadyStateSynchronousResponseAtASpeed':
        """WormGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3581.WormGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_steady_state_synchronous_response_at_a_speed(self) -> '_3582.ZerolBevelGearMeshSteadyStateSynchronousResponseAtASpeed':
        """ZerolBevelGearMeshSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3582.ZerolBevelGearMeshSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_steady_state_synchronous_response_at_a_speed(self) -> '_3583.ZerolBevelGearSetSteadyStateSynchronousResponseAtASpeed':
        """ZerolBevelGearSetSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3583.ZerolBevelGearSetSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_steady_state_synchronous_response_at_a_speed(self) -> '_3584.ZerolBevelGearSteadyStateSynchronousResponseAtASpeed':
        """ZerolBevelGearSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3584.ZerolBevelGearSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3585.AbstractAssemblyCompoundSteadyStateSynchronousResponseAtASpeed':
        """AbstractAssemblyCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3585.AbstractAssemblyCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3586.AbstractShaftCompoundSteadyStateSynchronousResponseAtASpeed':
        """AbstractShaftCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3586.AbstractShaftCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3587.AbstractShaftOrHousingCompoundSteadyStateSynchronousResponseAtASpeed':
        """AbstractShaftOrHousingCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3587.AbstractShaftOrHousingCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3588.AbstractShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """AbstractShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3588.AbstractShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3589.AGMAGleasonConicalGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """AGMAGleasonConicalGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3589.AGMAGleasonConicalGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3590.AGMAGleasonConicalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """AGMAGleasonConicalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3590.AGMAGleasonConicalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3591.AGMAGleasonConicalGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """AGMAGleasonConicalGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3591.AGMAGleasonConicalGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3592.AssemblyCompoundSteadyStateSynchronousResponseAtASpeed':
        """AssemblyCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3592.AssemblyCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3593.BearingCompoundSteadyStateSynchronousResponseAtASpeed':
        """BearingCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3593.BearingCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3594.BeltConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """BeltConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3594.BeltConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3595.BeltDriveCompoundSteadyStateSynchronousResponseAtASpeed':
        """BeltDriveCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3595.BeltDriveCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3596.BevelDifferentialGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """BevelDifferentialGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3596.BevelDifferentialGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3597.BevelDifferentialGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """BevelDifferentialGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3597.BevelDifferentialGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3598.BevelDifferentialGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """BevelDifferentialGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3598.BevelDifferentialGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3599.BevelDifferentialPlanetGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """BevelDifferentialPlanetGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3599.BevelDifferentialPlanetGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3600.BevelDifferentialSunGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """BevelDifferentialSunGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3600.BevelDifferentialSunGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3601.BevelGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """BevelGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3601.BevelGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3602.BevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """BevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3602.BevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3603.BevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """BevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3603.BevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3604.BoltCompoundSteadyStateSynchronousResponseAtASpeed':
        """BoltCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3604.BoltCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3605.BoltedJointCompoundSteadyStateSynchronousResponseAtASpeed':
        """BoltedJointCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3605.BoltedJointCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3606.ClutchCompoundSteadyStateSynchronousResponseAtASpeed':
        """ClutchCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3606.ClutchCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3607.ClutchConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """ClutchConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3607.ClutchConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3608.ClutchHalfCompoundSteadyStateSynchronousResponseAtASpeed':
        """ClutchHalfCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3608.ClutchHalfCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3609.CoaxialConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """CoaxialConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3609.CoaxialConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3610.ComponentCompoundSteadyStateSynchronousResponseAtASpeed':
        """ComponentCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3610.ComponentCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3611.ConceptCouplingCompoundSteadyStateSynchronousResponseAtASpeed':
        """ConceptCouplingCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3611.ConceptCouplingCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3612.ConceptCouplingConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """ConceptCouplingConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3612.ConceptCouplingConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3613.ConceptCouplingHalfCompoundSteadyStateSynchronousResponseAtASpeed':
        """ConceptCouplingHalfCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3613.ConceptCouplingHalfCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3614.ConceptGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """ConceptGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3614.ConceptGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3615.ConceptGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """ConceptGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3615.ConceptGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3616.ConceptGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """ConceptGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3616.ConceptGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3617.ConicalGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """ConicalGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3617.ConicalGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3618.ConicalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """ConicalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3618.ConicalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3619.ConicalGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """ConicalGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3619.ConicalGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3620.ConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """ConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3620.ConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3621.ConnectorCompoundSteadyStateSynchronousResponseAtASpeed':
        """ConnectorCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3621.ConnectorCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3622.CouplingCompoundSteadyStateSynchronousResponseAtASpeed':
        """CouplingCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3622.CouplingCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3623.CouplingConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """CouplingConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3623.CouplingConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3624.CouplingHalfCompoundSteadyStateSynchronousResponseAtASpeed':
        """CouplingHalfCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3624.CouplingHalfCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3625.CVTBeltConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """CVTBeltConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3625.CVTBeltConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3626.CVTCompoundSteadyStateSynchronousResponseAtASpeed':
        """CVTCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3626.CVTCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3627.CVTPulleyCompoundSteadyStateSynchronousResponseAtASpeed':
        """CVTPulleyCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3627.CVTPulleyCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3628.CycloidalAssemblyCompoundSteadyStateSynchronousResponseAtASpeed':
        """CycloidalAssemblyCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3628.CycloidalAssemblyCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3629.CycloidalDiscCentralBearingConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """CycloidalDiscCentralBearingConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3629.CycloidalDiscCentralBearingConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3630.CycloidalDiscCompoundSteadyStateSynchronousResponseAtASpeed':
        """CycloidalDiscCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3630.CycloidalDiscCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3631.CycloidalDiscPlanetaryBearingConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """CycloidalDiscPlanetaryBearingConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3631.CycloidalDiscPlanetaryBearingConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3632.CylindricalGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """CylindricalGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3632.CylindricalGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3633.CylindricalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """CylindricalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3633.CylindricalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3634.CylindricalGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """CylindricalGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3634.CylindricalGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3635.CylindricalPlanetGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """CylindricalPlanetGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3635.CylindricalPlanetGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3636.DatumCompoundSteadyStateSynchronousResponseAtASpeed':
        """DatumCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3636.DatumCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3637.ExternalCADModelCompoundSteadyStateSynchronousResponseAtASpeed':
        """ExternalCADModelCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3637.ExternalCADModelCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3638.FaceGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """FaceGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3638.FaceGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3639.FaceGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """FaceGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3639.FaceGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3640.FaceGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """FaceGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3640.FaceGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3641.FEPartCompoundSteadyStateSynchronousResponseAtASpeed':
        """FEPartCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3641.FEPartCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3642.FlexiblePinAssemblyCompoundSteadyStateSynchronousResponseAtASpeed':
        """FlexiblePinAssemblyCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3642.FlexiblePinAssemblyCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3643.GearCompoundSteadyStateSynchronousResponseAtASpeed':
        """GearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3643.GearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3644.GearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """GearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3644.GearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3645.GearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """GearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3645.GearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3646.GuideDxfModelCompoundSteadyStateSynchronousResponseAtASpeed':
        """GuideDxfModelCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3646.GuideDxfModelCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3647.HypoidGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """HypoidGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3647.HypoidGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3648.HypoidGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """HypoidGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3648.HypoidGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3649.HypoidGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """HypoidGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3649.HypoidGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3650.InterMountableComponentConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """InterMountableComponentConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3650.InterMountableComponentConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3651.KlingelnbergCycloPalloidConicalGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidConicalGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3651.KlingelnbergCycloPalloidConicalGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3652.KlingelnbergCycloPalloidConicalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3652.KlingelnbergCycloPalloidConicalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3653.KlingelnbergCycloPalloidConicalGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidConicalGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3653.KlingelnbergCycloPalloidConicalGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3654.KlingelnbergCycloPalloidHypoidGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3654.KlingelnbergCycloPalloidHypoidGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3655.KlingelnbergCycloPalloidHypoidGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3655.KlingelnbergCycloPalloidHypoidGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3656.KlingelnbergCycloPalloidHypoidGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3656.KlingelnbergCycloPalloidHypoidGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3657.KlingelnbergCycloPalloidSpiralBevelGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3657.KlingelnbergCycloPalloidSpiralBevelGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3658.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3658.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3659.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3659.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3660.MassDiscCompoundSteadyStateSynchronousResponseAtASpeed':
        """MassDiscCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3660.MassDiscCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3661.MeasurementComponentCompoundSteadyStateSynchronousResponseAtASpeed':
        """MeasurementComponentCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3661.MeasurementComponentCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3662.MountableComponentCompoundSteadyStateSynchronousResponseAtASpeed':
        """MountableComponentCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3662.MountableComponentCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3663.OilSealCompoundSteadyStateSynchronousResponseAtASpeed':
        """OilSealCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3663.OilSealCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3664.PartCompoundSteadyStateSynchronousResponseAtASpeed':
        """PartCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3664.PartCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3665.PartToPartShearCouplingCompoundSteadyStateSynchronousResponseAtASpeed':
        """PartToPartShearCouplingCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3665.PartToPartShearCouplingCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3666.PartToPartShearCouplingConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """PartToPartShearCouplingConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3666.PartToPartShearCouplingConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3667.PartToPartShearCouplingHalfCompoundSteadyStateSynchronousResponseAtASpeed':
        """PartToPartShearCouplingHalfCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3667.PartToPartShearCouplingHalfCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3668.PlanetaryConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """PlanetaryConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3668.PlanetaryConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3669.PlanetaryGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """PlanetaryGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3669.PlanetaryGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3670.PlanetCarrierCompoundSteadyStateSynchronousResponseAtASpeed':
        """PlanetCarrierCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3670.PlanetCarrierCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3671.PointLoadCompoundSteadyStateSynchronousResponseAtASpeed':
        """PointLoadCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3671.PointLoadCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3672.PowerLoadCompoundSteadyStateSynchronousResponseAtASpeed':
        """PowerLoadCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3672.PowerLoadCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3673.PulleyCompoundSteadyStateSynchronousResponseAtASpeed':
        """PulleyCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3673.PulleyCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3674.RingPinsCompoundSteadyStateSynchronousResponseAtASpeed':
        """RingPinsCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3674.RingPinsCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3675.RingPinsToDiscConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """RingPinsToDiscConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3675.RingPinsToDiscConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3676.RollingRingAssemblyCompoundSteadyStateSynchronousResponseAtASpeed':
        """RollingRingAssemblyCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3676.RollingRingAssemblyCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3677.RollingRingCompoundSteadyStateSynchronousResponseAtASpeed':
        """RollingRingCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3677.RollingRingCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3678.RollingRingConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """RollingRingConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3678.RollingRingConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3679.RootAssemblyCompoundSteadyStateSynchronousResponseAtASpeed':
        """RootAssemblyCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3679.RootAssemblyCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3680.ShaftCompoundSteadyStateSynchronousResponseAtASpeed':
        """ShaftCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3680.ShaftCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3681.ShaftHubConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """ShaftHubConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3681.ShaftHubConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3682.ShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """ShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3682.ShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3683.SpecialisedAssemblyCompoundSteadyStateSynchronousResponseAtASpeed':
        """SpecialisedAssemblyCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3683.SpecialisedAssemblyCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3684.SpiralBevelGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """SpiralBevelGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3684.SpiralBevelGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3685.SpiralBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """SpiralBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3685.SpiralBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3686.SpiralBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """SpiralBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3686.SpiralBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3687.SpringDamperCompoundSteadyStateSynchronousResponseAtASpeed':
        """SpringDamperCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3687.SpringDamperCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3688.SpringDamperConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """SpringDamperConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3688.SpringDamperConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3689.SpringDamperHalfCompoundSteadyStateSynchronousResponseAtASpeed':
        """SpringDamperHalfCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3689.SpringDamperHalfCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3690.StraightBevelDiffGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelDiffGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3690.StraightBevelDiffGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3691.StraightBevelDiffGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelDiffGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3691.StraightBevelDiffGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3692.StraightBevelDiffGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelDiffGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3692.StraightBevelDiffGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3693.StraightBevelGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3693.StraightBevelGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3694.StraightBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3694.StraightBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3695.StraightBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3695.StraightBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3696.StraightBevelPlanetGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelPlanetGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3696.StraightBevelPlanetGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3697.StraightBevelSunGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """StraightBevelSunGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3697.StraightBevelSunGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3698.SynchroniserCompoundSteadyStateSynchronousResponseAtASpeed':
        """SynchroniserCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3698.SynchroniserCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3699.SynchroniserHalfCompoundSteadyStateSynchronousResponseAtASpeed':
        """SynchroniserHalfCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3699.SynchroniserHalfCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3700.SynchroniserPartCompoundSteadyStateSynchronousResponseAtASpeed':
        """SynchroniserPartCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3700.SynchroniserPartCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3701.SynchroniserSleeveCompoundSteadyStateSynchronousResponseAtASpeed':
        """SynchroniserSleeveCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3701.SynchroniserSleeveCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3702.TorqueConverterCompoundSteadyStateSynchronousResponseAtASpeed':
        """TorqueConverterCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3702.TorqueConverterCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3703.TorqueConverterConnectionCompoundSteadyStateSynchronousResponseAtASpeed':
        """TorqueConverterConnectionCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3703.TorqueConverterConnectionCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3704.TorqueConverterPumpCompoundSteadyStateSynchronousResponseAtASpeed':
        """TorqueConverterPumpCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3704.TorqueConverterPumpCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3705.TorqueConverterTurbineCompoundSteadyStateSynchronousResponseAtASpeed':
        """TorqueConverterTurbineCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3705.TorqueConverterTurbineCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3706.UnbalancedMassCompoundSteadyStateSynchronousResponseAtASpeed':
        """UnbalancedMassCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3706.UnbalancedMassCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3707.VirtualComponentCompoundSteadyStateSynchronousResponseAtASpeed':
        """VirtualComponentCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3707.VirtualComponentCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3708.WormGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """WormGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3708.WormGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3709.WormGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """WormGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3709.WormGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3710.WormGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """WormGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3710.WormGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3711.ZerolBevelGearCompoundSteadyStateSynchronousResponseAtASpeed':
        """ZerolBevelGearCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3711.ZerolBevelGearCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3712.ZerolBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed':
        """ZerolBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3712.ZerolBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_steady_state_synchronous_response_at_a_speed(self) -> '_3713.ZerolBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed':
        """ZerolBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3713.ZerolBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundSteadyStateSynchronousResponseAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_stability_analysis(self) -> '_3714.AbstractAssemblyStabilityAnalysis':
        """AbstractAssemblyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3714.AbstractAssemblyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_stability_analysis(self) -> '_3715.AbstractShaftOrHousingStabilityAnalysis':
        """AbstractShaftOrHousingStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3715.AbstractShaftOrHousingStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_stability_analysis(self) -> '_3716.AbstractShaftStabilityAnalysis':
        """AbstractShaftStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3716.AbstractShaftStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_stability_analysis(self) -> '_3717.AbstractShaftToMountableComponentConnectionStabilityAnalysis':
        """AbstractShaftToMountableComponentConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3717.AbstractShaftToMountableComponentConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_stability_analysis(self) -> '_3718.AGMAGleasonConicalGearMeshStabilityAnalysis':
        """AGMAGleasonConicalGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3718.AGMAGleasonConicalGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_stability_analysis(self) -> '_3719.AGMAGleasonConicalGearSetStabilityAnalysis':
        """AGMAGleasonConicalGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3719.AGMAGleasonConicalGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_stability_analysis(self) -> '_3720.AGMAGleasonConicalGearStabilityAnalysis':
        """AGMAGleasonConicalGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3720.AGMAGleasonConicalGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_stability_analysis(self) -> '_3721.AssemblyStabilityAnalysis':
        """AssemblyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3721.AssemblyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_stability_analysis(self) -> '_3722.BearingStabilityAnalysis':
        """BearingStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3722.BearingStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_stability_analysis(self) -> '_3723.BeltConnectionStabilityAnalysis':
        """BeltConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3723.BeltConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_stability_analysis(self) -> '_3724.BeltDriveStabilityAnalysis':
        """BeltDriveStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3724.BeltDriveStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_stability_analysis(self) -> '_3725.BevelDifferentialGearMeshStabilityAnalysis':
        """BevelDifferentialGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3725.BevelDifferentialGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_stability_analysis(self) -> '_3726.BevelDifferentialGearSetStabilityAnalysis':
        """BevelDifferentialGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3726.BevelDifferentialGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_stability_analysis(self) -> '_3727.BevelDifferentialGearStabilityAnalysis':
        """BevelDifferentialGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3727.BevelDifferentialGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_stability_analysis(self) -> '_3728.BevelDifferentialPlanetGearStabilityAnalysis':
        """BevelDifferentialPlanetGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3728.BevelDifferentialPlanetGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_stability_analysis(self) -> '_3729.BevelDifferentialSunGearStabilityAnalysis':
        """BevelDifferentialSunGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3729.BevelDifferentialSunGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_stability_analysis(self) -> '_3730.BevelGearMeshStabilityAnalysis':
        """BevelGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3730.BevelGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_stability_analysis(self) -> '_3731.BevelGearSetStabilityAnalysis':
        """BevelGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3731.BevelGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_stability_analysis(self) -> '_3732.BevelGearStabilityAnalysis':
        """BevelGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3732.BevelGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_stability_analysis(self) -> '_3733.BoltedJointStabilityAnalysis':
        """BoltedJointStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3733.BoltedJointStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_stability_analysis(self) -> '_3734.BoltStabilityAnalysis':
        """BoltStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3734.BoltStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_stability_analysis(self) -> '_3735.ClutchConnectionStabilityAnalysis':
        """ClutchConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3735.ClutchConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_stability_analysis(self) -> '_3736.ClutchHalfStabilityAnalysis':
        """ClutchHalfStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3736.ClutchHalfStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_stability_analysis(self) -> '_3737.ClutchStabilityAnalysis':
        """ClutchStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3737.ClutchStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_stability_analysis(self) -> '_3738.CoaxialConnectionStabilityAnalysis':
        """CoaxialConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3738.CoaxialConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_stability_analysis(self) -> '_3739.ComponentStabilityAnalysis':
        """ComponentStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3739.ComponentStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_stability_analysis(self) -> '_3740.ConceptCouplingConnectionStabilityAnalysis':
        """ConceptCouplingConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3740.ConceptCouplingConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_stability_analysis(self) -> '_3741.ConceptCouplingHalfStabilityAnalysis':
        """ConceptCouplingHalfStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3741.ConceptCouplingHalfStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_stability_analysis(self) -> '_3742.ConceptCouplingStabilityAnalysis':
        """ConceptCouplingStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3742.ConceptCouplingStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_stability_analysis(self) -> '_3743.ConceptGearMeshStabilityAnalysis':
        """ConceptGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3743.ConceptGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_stability_analysis(self) -> '_3744.ConceptGearSetStabilityAnalysis':
        """ConceptGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3744.ConceptGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_stability_analysis(self) -> '_3745.ConceptGearStabilityAnalysis':
        """ConceptGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3745.ConceptGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_stability_analysis(self) -> '_3746.ConicalGearMeshStabilityAnalysis':
        """ConicalGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3746.ConicalGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_stability_analysis(self) -> '_3747.ConicalGearSetStabilityAnalysis':
        """ConicalGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3747.ConicalGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_stability_analysis(self) -> '_3748.ConicalGearStabilityAnalysis':
        """ConicalGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3748.ConicalGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_stability_analysis(self) -> '_3749.ConnectionStabilityAnalysis':
        """ConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3749.ConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_stability_analysis(self) -> '_3750.ConnectorStabilityAnalysis':
        """ConnectorStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3750.ConnectorStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_stability_analysis(self) -> '_3751.CouplingConnectionStabilityAnalysis':
        """CouplingConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3751.CouplingConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_stability_analysis(self) -> '_3752.CouplingHalfStabilityAnalysis':
        """CouplingHalfStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3752.CouplingHalfStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_stability_analysis(self) -> '_3753.CouplingStabilityAnalysis':
        """CouplingStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3753.CouplingStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_stability_analysis(self) -> '_3755.CVTBeltConnectionStabilityAnalysis':
        """CVTBeltConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3755.CVTBeltConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_stability_analysis(self) -> '_3756.CVTPulleyStabilityAnalysis':
        """CVTPulleyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3756.CVTPulleyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_stability_analysis(self) -> '_3757.CVTStabilityAnalysis':
        """CVTStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3757.CVTStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_stability_analysis(self) -> '_3758.CycloidalAssemblyStabilityAnalysis':
        """CycloidalAssemblyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3758.CycloidalAssemblyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_stability_analysis(self) -> '_3759.CycloidalDiscCentralBearingConnectionStabilityAnalysis':
        """CycloidalDiscCentralBearingConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3759.CycloidalDiscCentralBearingConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_stability_analysis(self) -> '_3760.CycloidalDiscPlanetaryBearingConnectionStabilityAnalysis':
        """CycloidalDiscPlanetaryBearingConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3760.CycloidalDiscPlanetaryBearingConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_stability_analysis(self) -> '_3761.CycloidalDiscStabilityAnalysis':
        """CycloidalDiscStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3761.CycloidalDiscStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_stability_analysis(self) -> '_3762.CylindricalGearMeshStabilityAnalysis':
        """CylindricalGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3762.CylindricalGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_stability_analysis(self) -> '_3763.CylindricalGearSetStabilityAnalysis':
        """CylindricalGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3763.CylindricalGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_stability_analysis(self) -> '_3764.CylindricalGearStabilityAnalysis':
        """CylindricalGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3764.CylindricalGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_stability_analysis(self) -> '_3765.CylindricalPlanetGearStabilityAnalysis':
        """CylindricalPlanetGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3765.CylindricalPlanetGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_stability_analysis(self) -> '_3766.DatumStabilityAnalysis':
        """DatumStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3766.DatumStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_stability_analysis(self) -> '_3767.ExternalCADModelStabilityAnalysis':
        """ExternalCADModelStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3767.ExternalCADModelStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_stability_analysis(self) -> '_3768.FaceGearMeshStabilityAnalysis':
        """FaceGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3768.FaceGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_stability_analysis(self) -> '_3769.FaceGearSetStabilityAnalysis':
        """FaceGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3769.FaceGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_stability_analysis(self) -> '_3770.FaceGearStabilityAnalysis':
        """FaceGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3770.FaceGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_stability_analysis(self) -> '_3771.FEPartStabilityAnalysis':
        """FEPartStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3771.FEPartStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_stability_analysis(self) -> '_3772.FlexiblePinAssemblyStabilityAnalysis':
        """FlexiblePinAssemblyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3772.FlexiblePinAssemblyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_stability_analysis(self) -> '_3773.GearMeshStabilityAnalysis':
        """GearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3773.GearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_stability_analysis(self) -> '_3774.GearSetStabilityAnalysis':
        """GearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3774.GearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_stability_analysis(self) -> '_3775.GearStabilityAnalysis':
        """GearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3775.GearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_stability_analysis(self) -> '_3776.GuideDxfModelStabilityAnalysis':
        """GuideDxfModelStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3776.GuideDxfModelStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_stability_analysis(self) -> '_3777.HypoidGearMeshStabilityAnalysis':
        """HypoidGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3777.HypoidGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_stability_analysis(self) -> '_3778.HypoidGearSetStabilityAnalysis':
        """HypoidGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3778.HypoidGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_stability_analysis(self) -> '_3779.HypoidGearStabilityAnalysis':
        """HypoidGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3779.HypoidGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_stability_analysis(self) -> '_3780.InterMountableComponentConnectionStabilityAnalysis':
        """InterMountableComponentConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3780.InterMountableComponentConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_stability_analysis(self) -> '_3781.KlingelnbergCycloPalloidConicalGearMeshStabilityAnalysis':
        """KlingelnbergCycloPalloidConicalGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3781.KlingelnbergCycloPalloidConicalGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_stability_analysis(self) -> '_3782.KlingelnbergCycloPalloidConicalGearSetStabilityAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3782.KlingelnbergCycloPalloidConicalGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_stability_analysis(self) -> '_3783.KlingelnbergCycloPalloidConicalGearStabilityAnalysis':
        """KlingelnbergCycloPalloidConicalGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3783.KlingelnbergCycloPalloidConicalGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_stability_analysis(self) -> '_3784.KlingelnbergCycloPalloidHypoidGearMeshStabilityAnalysis':
        """KlingelnbergCycloPalloidHypoidGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3784.KlingelnbergCycloPalloidHypoidGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_stability_analysis(self) -> '_3785.KlingelnbergCycloPalloidHypoidGearSetStabilityAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3785.KlingelnbergCycloPalloidHypoidGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_stability_analysis(self) -> '_3786.KlingelnbergCycloPalloidHypoidGearStabilityAnalysis':
        """KlingelnbergCycloPalloidHypoidGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3786.KlingelnbergCycloPalloidHypoidGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_stability_analysis(self) -> '_3787.KlingelnbergCycloPalloidSpiralBevelGearMeshStabilityAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3787.KlingelnbergCycloPalloidSpiralBevelGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_stability_analysis(self) -> '_3788.KlingelnbergCycloPalloidSpiralBevelGearSetStabilityAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3788.KlingelnbergCycloPalloidSpiralBevelGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_stability_analysis(self) -> '_3789.KlingelnbergCycloPalloidSpiralBevelGearStabilityAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3789.KlingelnbergCycloPalloidSpiralBevelGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_stability_analysis(self) -> '_3790.MassDiscStabilityAnalysis':
        """MassDiscStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3790.MassDiscStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_stability_analysis(self) -> '_3791.MeasurementComponentStabilityAnalysis':
        """MeasurementComponentStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3791.MeasurementComponentStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_stability_analysis(self) -> '_3792.MountableComponentStabilityAnalysis':
        """MountableComponentStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3792.MountableComponentStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_stability_analysis(self) -> '_3793.OilSealStabilityAnalysis':
        """OilSealStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3793.OilSealStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_stability_analysis(self) -> '_3794.PartStabilityAnalysis':
        """PartStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3794.PartStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_stability_analysis(self) -> '_3795.PartToPartShearCouplingConnectionStabilityAnalysis':
        """PartToPartShearCouplingConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3795.PartToPartShearCouplingConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_stability_analysis(self) -> '_3796.PartToPartShearCouplingHalfStabilityAnalysis':
        """PartToPartShearCouplingHalfStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3796.PartToPartShearCouplingHalfStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_stability_analysis(self) -> '_3797.PartToPartShearCouplingStabilityAnalysis':
        """PartToPartShearCouplingStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3797.PartToPartShearCouplingStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_stability_analysis(self) -> '_3798.PlanetaryConnectionStabilityAnalysis':
        """PlanetaryConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3798.PlanetaryConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_stability_analysis(self) -> '_3799.PlanetaryGearSetStabilityAnalysis':
        """PlanetaryGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3799.PlanetaryGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_stability_analysis(self) -> '_3800.PlanetCarrierStabilityAnalysis':
        """PlanetCarrierStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3800.PlanetCarrierStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_stability_analysis(self) -> '_3801.PointLoadStabilityAnalysis':
        """PointLoadStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3801.PointLoadStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_stability_analysis(self) -> '_3802.PowerLoadStabilityAnalysis':
        """PowerLoadStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3802.PowerLoadStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_stability_analysis(self) -> '_3803.PulleyStabilityAnalysis':
        """PulleyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3803.PulleyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_stability_analysis(self) -> '_3804.RingPinsStabilityAnalysis':
        """RingPinsStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3804.RingPinsStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_stability_analysis(self) -> '_3805.RingPinsToDiscConnectionStabilityAnalysis':
        """RingPinsToDiscConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3805.RingPinsToDiscConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_stability_analysis(self) -> '_3806.RollingRingAssemblyStabilityAnalysis':
        """RollingRingAssemblyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3806.RollingRingAssemblyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_stability_analysis(self) -> '_3807.RollingRingConnectionStabilityAnalysis':
        """RollingRingConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3807.RollingRingConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_stability_analysis(self) -> '_3808.RollingRingStabilityAnalysis':
        """RollingRingStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3808.RollingRingStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_stability_analysis(self) -> '_3809.RootAssemblyStabilityAnalysis':
        """RootAssemblyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3809.RootAssemblyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_stability_analysis(self) -> '_3810.ShaftHubConnectionStabilityAnalysis':
        """ShaftHubConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3810.ShaftHubConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_stability_analysis(self) -> '_3811.ShaftStabilityAnalysis':
        """ShaftStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3811.ShaftStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_stability_analysis(self) -> '_3812.ShaftToMountableComponentConnectionStabilityAnalysis':
        """ShaftToMountableComponentConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3812.ShaftToMountableComponentConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_stability_analysis(self) -> '_3813.SpecialisedAssemblyStabilityAnalysis':
        """SpecialisedAssemblyStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3813.SpecialisedAssemblyStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_stability_analysis(self) -> '_3814.SpiralBevelGearMeshStabilityAnalysis':
        """SpiralBevelGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3814.SpiralBevelGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_stability_analysis(self) -> '_3815.SpiralBevelGearSetStabilityAnalysis':
        """SpiralBevelGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3815.SpiralBevelGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_stability_analysis(self) -> '_3816.SpiralBevelGearStabilityAnalysis':
        """SpiralBevelGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3816.SpiralBevelGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_stability_analysis(self) -> '_3817.SpringDamperConnectionStabilityAnalysis':
        """SpringDamperConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3817.SpringDamperConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_stability_analysis(self) -> '_3818.SpringDamperHalfStabilityAnalysis':
        """SpringDamperHalfStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3818.SpringDamperHalfStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_stability_analysis(self) -> '_3819.SpringDamperStabilityAnalysis':
        """SpringDamperStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3819.SpringDamperStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_stability_analysis(self) -> '_3822.StraightBevelDiffGearMeshStabilityAnalysis':
        """StraightBevelDiffGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3822.StraightBevelDiffGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_stability_analysis(self) -> '_3823.StraightBevelDiffGearSetStabilityAnalysis':
        """StraightBevelDiffGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3823.StraightBevelDiffGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_stability_analysis(self) -> '_3824.StraightBevelDiffGearStabilityAnalysis':
        """StraightBevelDiffGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3824.StraightBevelDiffGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_stability_analysis(self) -> '_3825.StraightBevelGearMeshStabilityAnalysis':
        """StraightBevelGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3825.StraightBevelGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_stability_analysis(self) -> '_3826.StraightBevelGearSetStabilityAnalysis':
        """StraightBevelGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3826.StraightBevelGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_stability_analysis(self) -> '_3827.StraightBevelGearStabilityAnalysis':
        """StraightBevelGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3827.StraightBevelGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_stability_analysis(self) -> '_3828.StraightBevelPlanetGearStabilityAnalysis':
        """StraightBevelPlanetGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3828.StraightBevelPlanetGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_stability_analysis(self) -> '_3829.StraightBevelSunGearStabilityAnalysis':
        """StraightBevelSunGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3829.StraightBevelSunGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_stability_analysis(self) -> '_3830.SynchroniserHalfStabilityAnalysis':
        """SynchroniserHalfStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3830.SynchroniserHalfStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_stability_analysis(self) -> '_3831.SynchroniserPartStabilityAnalysis':
        """SynchroniserPartStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3831.SynchroniserPartStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_stability_analysis(self) -> '_3832.SynchroniserSleeveStabilityAnalysis':
        """SynchroniserSleeveStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3832.SynchroniserSleeveStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_stability_analysis(self) -> '_3833.SynchroniserStabilityAnalysis':
        """SynchroniserStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3833.SynchroniserStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_stability_analysis(self) -> '_3834.TorqueConverterConnectionStabilityAnalysis':
        """TorqueConverterConnectionStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3834.TorqueConverterConnectionStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_stability_analysis(self) -> '_3835.TorqueConverterPumpStabilityAnalysis':
        """TorqueConverterPumpStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3835.TorqueConverterPumpStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_stability_analysis(self) -> '_3836.TorqueConverterStabilityAnalysis':
        """TorqueConverterStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3836.TorqueConverterStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_stability_analysis(self) -> '_3837.TorqueConverterTurbineStabilityAnalysis':
        """TorqueConverterTurbineStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3837.TorqueConverterTurbineStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_stability_analysis(self) -> '_3838.UnbalancedMassStabilityAnalysis':
        """UnbalancedMassStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3838.UnbalancedMassStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_stability_analysis(self) -> '_3839.VirtualComponentStabilityAnalysis':
        """VirtualComponentStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3839.VirtualComponentStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_stability_analysis(self) -> '_3840.WormGearMeshStabilityAnalysis':
        """WormGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3840.WormGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_stability_analysis(self) -> '_3841.WormGearSetStabilityAnalysis':
        """WormGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3841.WormGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_stability_analysis(self) -> '_3842.WormGearStabilityAnalysis':
        """WormGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3842.WormGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_stability_analysis(self) -> '_3843.ZerolBevelGearMeshStabilityAnalysis':
        """ZerolBevelGearMeshStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3843.ZerolBevelGearMeshStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_stability_analysis(self) -> '_3844.ZerolBevelGearSetStabilityAnalysis':
        """ZerolBevelGearSetStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3844.ZerolBevelGearSetStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_stability_analysis(self) -> '_3845.ZerolBevelGearStabilityAnalysis':
        """ZerolBevelGearStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3845.ZerolBevelGearStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_stability_analysis(self) -> '_3846.AbstractAssemblyCompoundStabilityAnalysis':
        """AbstractAssemblyCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3846.AbstractAssemblyCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_stability_analysis(self) -> '_3847.AbstractShaftCompoundStabilityAnalysis':
        """AbstractShaftCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3847.AbstractShaftCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_stability_analysis(self) -> '_3848.AbstractShaftOrHousingCompoundStabilityAnalysis':
        """AbstractShaftOrHousingCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3848.AbstractShaftOrHousingCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_stability_analysis(self) -> '_3849.AbstractShaftToMountableComponentConnectionCompoundStabilityAnalysis':
        """AbstractShaftToMountableComponentConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3849.AbstractShaftToMountableComponentConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_stability_analysis(self) -> '_3850.AGMAGleasonConicalGearCompoundStabilityAnalysis':
        """AGMAGleasonConicalGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3850.AGMAGleasonConicalGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_stability_analysis(self) -> '_3851.AGMAGleasonConicalGearMeshCompoundStabilityAnalysis':
        """AGMAGleasonConicalGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3851.AGMAGleasonConicalGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_stability_analysis(self) -> '_3852.AGMAGleasonConicalGearSetCompoundStabilityAnalysis':
        """AGMAGleasonConicalGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3852.AGMAGleasonConicalGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_stability_analysis(self) -> '_3853.AssemblyCompoundStabilityAnalysis':
        """AssemblyCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3853.AssemblyCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_stability_analysis(self) -> '_3854.BearingCompoundStabilityAnalysis':
        """BearingCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3854.BearingCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_stability_analysis(self) -> '_3855.BeltConnectionCompoundStabilityAnalysis':
        """BeltConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3855.BeltConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_stability_analysis(self) -> '_3856.BeltDriveCompoundStabilityAnalysis':
        """BeltDriveCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3856.BeltDriveCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_stability_analysis(self) -> '_3857.BevelDifferentialGearCompoundStabilityAnalysis':
        """BevelDifferentialGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3857.BevelDifferentialGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_stability_analysis(self) -> '_3858.BevelDifferentialGearMeshCompoundStabilityAnalysis':
        """BevelDifferentialGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3858.BevelDifferentialGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_stability_analysis(self) -> '_3859.BevelDifferentialGearSetCompoundStabilityAnalysis':
        """BevelDifferentialGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3859.BevelDifferentialGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_stability_analysis(self) -> '_3860.BevelDifferentialPlanetGearCompoundStabilityAnalysis':
        """BevelDifferentialPlanetGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3860.BevelDifferentialPlanetGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_stability_analysis(self) -> '_3861.BevelDifferentialSunGearCompoundStabilityAnalysis':
        """BevelDifferentialSunGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3861.BevelDifferentialSunGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_stability_analysis(self) -> '_3862.BevelGearCompoundStabilityAnalysis':
        """BevelGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3862.BevelGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_stability_analysis(self) -> '_3863.BevelGearMeshCompoundStabilityAnalysis':
        """BevelGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3863.BevelGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_stability_analysis(self) -> '_3864.BevelGearSetCompoundStabilityAnalysis':
        """BevelGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3864.BevelGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_stability_analysis(self) -> '_3865.BoltCompoundStabilityAnalysis':
        """BoltCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3865.BoltCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_stability_analysis(self) -> '_3866.BoltedJointCompoundStabilityAnalysis':
        """BoltedJointCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3866.BoltedJointCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_stability_analysis(self) -> '_3867.ClutchCompoundStabilityAnalysis':
        """ClutchCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3867.ClutchCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_stability_analysis(self) -> '_3868.ClutchConnectionCompoundStabilityAnalysis':
        """ClutchConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3868.ClutchConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_stability_analysis(self) -> '_3869.ClutchHalfCompoundStabilityAnalysis':
        """ClutchHalfCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3869.ClutchHalfCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_stability_analysis(self) -> '_3870.CoaxialConnectionCompoundStabilityAnalysis':
        """CoaxialConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3870.CoaxialConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_stability_analysis(self) -> '_3871.ComponentCompoundStabilityAnalysis':
        """ComponentCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3871.ComponentCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_stability_analysis(self) -> '_3872.ConceptCouplingCompoundStabilityAnalysis':
        """ConceptCouplingCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3872.ConceptCouplingCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_stability_analysis(self) -> '_3873.ConceptCouplingConnectionCompoundStabilityAnalysis':
        """ConceptCouplingConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3873.ConceptCouplingConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_stability_analysis(self) -> '_3874.ConceptCouplingHalfCompoundStabilityAnalysis':
        """ConceptCouplingHalfCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3874.ConceptCouplingHalfCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_stability_analysis(self) -> '_3875.ConceptGearCompoundStabilityAnalysis':
        """ConceptGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3875.ConceptGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_stability_analysis(self) -> '_3876.ConceptGearMeshCompoundStabilityAnalysis':
        """ConceptGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3876.ConceptGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_stability_analysis(self) -> '_3877.ConceptGearSetCompoundStabilityAnalysis':
        """ConceptGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3877.ConceptGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_stability_analysis(self) -> '_3878.ConicalGearCompoundStabilityAnalysis':
        """ConicalGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3878.ConicalGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_stability_analysis(self) -> '_3879.ConicalGearMeshCompoundStabilityAnalysis':
        """ConicalGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3879.ConicalGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_stability_analysis(self) -> '_3880.ConicalGearSetCompoundStabilityAnalysis':
        """ConicalGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3880.ConicalGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_stability_analysis(self) -> '_3881.ConnectionCompoundStabilityAnalysis':
        """ConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3881.ConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_stability_analysis(self) -> '_3882.ConnectorCompoundStabilityAnalysis':
        """ConnectorCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3882.ConnectorCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_stability_analysis(self) -> '_3883.CouplingCompoundStabilityAnalysis':
        """CouplingCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3883.CouplingCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_stability_analysis(self) -> '_3884.CouplingConnectionCompoundStabilityAnalysis':
        """CouplingConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3884.CouplingConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_stability_analysis(self) -> '_3885.CouplingHalfCompoundStabilityAnalysis':
        """CouplingHalfCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3885.CouplingHalfCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_stability_analysis(self) -> '_3886.CVTBeltConnectionCompoundStabilityAnalysis':
        """CVTBeltConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3886.CVTBeltConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_stability_analysis(self) -> '_3887.CVTCompoundStabilityAnalysis':
        """CVTCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3887.CVTCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_stability_analysis(self) -> '_3888.CVTPulleyCompoundStabilityAnalysis':
        """CVTPulleyCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3888.CVTPulleyCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_stability_analysis(self) -> '_3889.CycloidalAssemblyCompoundStabilityAnalysis':
        """CycloidalAssemblyCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3889.CycloidalAssemblyCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_stability_analysis(self) -> '_3890.CycloidalDiscCentralBearingConnectionCompoundStabilityAnalysis':
        """CycloidalDiscCentralBearingConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3890.CycloidalDiscCentralBearingConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_stability_analysis(self) -> '_3891.CycloidalDiscCompoundStabilityAnalysis':
        """CycloidalDiscCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3891.CycloidalDiscCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_stability_analysis(self) -> '_3892.CycloidalDiscPlanetaryBearingConnectionCompoundStabilityAnalysis':
        """CycloidalDiscPlanetaryBearingConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3892.CycloidalDiscPlanetaryBearingConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_stability_analysis(self) -> '_3893.CylindricalGearCompoundStabilityAnalysis':
        """CylindricalGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3893.CylindricalGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_stability_analysis(self) -> '_3894.CylindricalGearMeshCompoundStabilityAnalysis':
        """CylindricalGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3894.CylindricalGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_stability_analysis(self) -> '_3895.CylindricalGearSetCompoundStabilityAnalysis':
        """CylindricalGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3895.CylindricalGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_stability_analysis(self) -> '_3896.CylindricalPlanetGearCompoundStabilityAnalysis':
        """CylindricalPlanetGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3896.CylindricalPlanetGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_stability_analysis(self) -> '_3897.DatumCompoundStabilityAnalysis':
        """DatumCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3897.DatumCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_stability_analysis(self) -> '_3898.ExternalCADModelCompoundStabilityAnalysis':
        """ExternalCADModelCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3898.ExternalCADModelCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_stability_analysis(self) -> '_3899.FaceGearCompoundStabilityAnalysis':
        """FaceGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3899.FaceGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_stability_analysis(self) -> '_3900.FaceGearMeshCompoundStabilityAnalysis':
        """FaceGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3900.FaceGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_stability_analysis(self) -> '_3901.FaceGearSetCompoundStabilityAnalysis':
        """FaceGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3901.FaceGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_stability_analysis(self) -> '_3902.FEPartCompoundStabilityAnalysis':
        """FEPartCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3902.FEPartCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_stability_analysis(self) -> '_3903.FlexiblePinAssemblyCompoundStabilityAnalysis':
        """FlexiblePinAssemblyCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3903.FlexiblePinAssemblyCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_stability_analysis(self) -> '_3904.GearCompoundStabilityAnalysis':
        """GearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3904.GearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_stability_analysis(self) -> '_3905.GearMeshCompoundStabilityAnalysis':
        """GearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3905.GearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_stability_analysis(self) -> '_3906.GearSetCompoundStabilityAnalysis':
        """GearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3906.GearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_stability_analysis(self) -> '_3907.GuideDxfModelCompoundStabilityAnalysis':
        """GuideDxfModelCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3907.GuideDxfModelCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_stability_analysis(self) -> '_3908.HypoidGearCompoundStabilityAnalysis':
        """HypoidGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3908.HypoidGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_stability_analysis(self) -> '_3909.HypoidGearMeshCompoundStabilityAnalysis':
        """HypoidGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3909.HypoidGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_stability_analysis(self) -> '_3910.HypoidGearSetCompoundStabilityAnalysis':
        """HypoidGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3910.HypoidGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_stability_analysis(self) -> '_3911.InterMountableComponentConnectionCompoundStabilityAnalysis':
        """InterMountableComponentConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3911.InterMountableComponentConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_stability_analysis(self) -> '_3912.KlingelnbergCycloPalloidConicalGearCompoundStabilityAnalysis':
        """KlingelnbergCycloPalloidConicalGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3912.KlingelnbergCycloPalloidConicalGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_stability_analysis(self) -> '_3913.KlingelnbergCycloPalloidConicalGearMeshCompoundStabilityAnalysis':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3913.KlingelnbergCycloPalloidConicalGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_stability_analysis(self) -> '_3914.KlingelnbergCycloPalloidConicalGearSetCompoundStabilityAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3914.KlingelnbergCycloPalloidConicalGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_stability_analysis(self) -> '_3915.KlingelnbergCycloPalloidHypoidGearCompoundStabilityAnalysis':
        """KlingelnbergCycloPalloidHypoidGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3915.KlingelnbergCycloPalloidHypoidGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_stability_analysis(self) -> '_3916.KlingelnbergCycloPalloidHypoidGearMeshCompoundStabilityAnalysis':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3916.KlingelnbergCycloPalloidHypoidGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_stability_analysis(self) -> '_3917.KlingelnbergCycloPalloidHypoidGearSetCompoundStabilityAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3917.KlingelnbergCycloPalloidHypoidGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_stability_analysis(self) -> '_3918.KlingelnbergCycloPalloidSpiralBevelGearCompoundStabilityAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3918.KlingelnbergCycloPalloidSpiralBevelGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_stability_analysis(self) -> '_3919.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundStabilityAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3919.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_stability_analysis(self) -> '_3920.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundStabilityAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3920.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_stability_analysis(self) -> '_3921.MassDiscCompoundStabilityAnalysis':
        """MassDiscCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3921.MassDiscCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_stability_analysis(self) -> '_3922.MeasurementComponentCompoundStabilityAnalysis':
        """MeasurementComponentCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3922.MeasurementComponentCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_stability_analysis(self) -> '_3923.MountableComponentCompoundStabilityAnalysis':
        """MountableComponentCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3923.MountableComponentCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_stability_analysis(self) -> '_3924.OilSealCompoundStabilityAnalysis':
        """OilSealCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3924.OilSealCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_stability_analysis(self) -> '_3925.PartCompoundStabilityAnalysis':
        """PartCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3925.PartCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_stability_analysis(self) -> '_3926.PartToPartShearCouplingCompoundStabilityAnalysis':
        """PartToPartShearCouplingCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3926.PartToPartShearCouplingCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_stability_analysis(self) -> '_3927.PartToPartShearCouplingConnectionCompoundStabilityAnalysis':
        """PartToPartShearCouplingConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3927.PartToPartShearCouplingConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_stability_analysis(self) -> '_3928.PartToPartShearCouplingHalfCompoundStabilityAnalysis':
        """PartToPartShearCouplingHalfCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3928.PartToPartShearCouplingHalfCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_stability_analysis(self) -> '_3929.PlanetaryConnectionCompoundStabilityAnalysis':
        """PlanetaryConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3929.PlanetaryConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_stability_analysis(self) -> '_3930.PlanetaryGearSetCompoundStabilityAnalysis':
        """PlanetaryGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3930.PlanetaryGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_stability_analysis(self) -> '_3931.PlanetCarrierCompoundStabilityAnalysis':
        """PlanetCarrierCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3931.PlanetCarrierCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_stability_analysis(self) -> '_3932.PointLoadCompoundStabilityAnalysis':
        """PointLoadCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3932.PointLoadCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_stability_analysis(self) -> '_3933.PowerLoadCompoundStabilityAnalysis':
        """PowerLoadCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3933.PowerLoadCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_stability_analysis(self) -> '_3934.PulleyCompoundStabilityAnalysis':
        """PulleyCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3934.PulleyCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_stability_analysis(self) -> '_3935.RingPinsCompoundStabilityAnalysis':
        """RingPinsCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3935.RingPinsCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_stability_analysis(self) -> '_3936.RingPinsToDiscConnectionCompoundStabilityAnalysis':
        """RingPinsToDiscConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3936.RingPinsToDiscConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_stability_analysis(self) -> '_3937.RollingRingAssemblyCompoundStabilityAnalysis':
        """RollingRingAssemblyCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3937.RollingRingAssemblyCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_stability_analysis(self) -> '_3938.RollingRingCompoundStabilityAnalysis':
        """RollingRingCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3938.RollingRingCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_stability_analysis(self) -> '_3939.RollingRingConnectionCompoundStabilityAnalysis':
        """RollingRingConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3939.RollingRingConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_stability_analysis(self) -> '_3940.RootAssemblyCompoundStabilityAnalysis':
        """RootAssemblyCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3940.RootAssemblyCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_stability_analysis(self) -> '_3941.ShaftCompoundStabilityAnalysis':
        """ShaftCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3941.ShaftCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_stability_analysis(self) -> '_3942.ShaftHubConnectionCompoundStabilityAnalysis':
        """ShaftHubConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3942.ShaftHubConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_stability_analysis(self) -> '_3943.ShaftToMountableComponentConnectionCompoundStabilityAnalysis':
        """ShaftToMountableComponentConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3943.ShaftToMountableComponentConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_stability_analysis(self) -> '_3944.SpecialisedAssemblyCompoundStabilityAnalysis':
        """SpecialisedAssemblyCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3944.SpecialisedAssemblyCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_stability_analysis(self) -> '_3945.SpiralBevelGearCompoundStabilityAnalysis':
        """SpiralBevelGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3945.SpiralBevelGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_stability_analysis(self) -> '_3946.SpiralBevelGearMeshCompoundStabilityAnalysis':
        """SpiralBevelGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3946.SpiralBevelGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_stability_analysis(self) -> '_3947.SpiralBevelGearSetCompoundStabilityAnalysis':
        """SpiralBevelGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3947.SpiralBevelGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_stability_analysis(self) -> '_3948.SpringDamperCompoundStabilityAnalysis':
        """SpringDamperCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3948.SpringDamperCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_stability_analysis(self) -> '_3949.SpringDamperConnectionCompoundStabilityAnalysis':
        """SpringDamperConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3949.SpringDamperConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_stability_analysis(self) -> '_3950.SpringDamperHalfCompoundStabilityAnalysis':
        """SpringDamperHalfCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3950.SpringDamperHalfCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_stability_analysis(self) -> '_3951.StraightBevelDiffGearCompoundStabilityAnalysis':
        """StraightBevelDiffGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3951.StraightBevelDiffGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_stability_analysis(self) -> '_3952.StraightBevelDiffGearMeshCompoundStabilityAnalysis':
        """StraightBevelDiffGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3952.StraightBevelDiffGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_stability_analysis(self) -> '_3953.StraightBevelDiffGearSetCompoundStabilityAnalysis':
        """StraightBevelDiffGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3953.StraightBevelDiffGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_stability_analysis(self) -> '_3954.StraightBevelGearCompoundStabilityAnalysis':
        """StraightBevelGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3954.StraightBevelGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_stability_analysis(self) -> '_3955.StraightBevelGearMeshCompoundStabilityAnalysis':
        """StraightBevelGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3955.StraightBevelGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_stability_analysis(self) -> '_3956.StraightBevelGearSetCompoundStabilityAnalysis':
        """StraightBevelGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3956.StraightBevelGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_stability_analysis(self) -> '_3957.StraightBevelPlanetGearCompoundStabilityAnalysis':
        """StraightBevelPlanetGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3957.StraightBevelPlanetGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_stability_analysis(self) -> '_3958.StraightBevelSunGearCompoundStabilityAnalysis':
        """StraightBevelSunGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3958.StraightBevelSunGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_stability_analysis(self) -> '_3959.SynchroniserCompoundStabilityAnalysis':
        """SynchroniserCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3959.SynchroniserCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_stability_analysis(self) -> '_3960.SynchroniserHalfCompoundStabilityAnalysis':
        """SynchroniserHalfCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3960.SynchroniserHalfCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_stability_analysis(self) -> '_3961.SynchroniserPartCompoundStabilityAnalysis':
        """SynchroniserPartCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3961.SynchroniserPartCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_stability_analysis(self) -> '_3962.SynchroniserSleeveCompoundStabilityAnalysis':
        """SynchroniserSleeveCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3962.SynchroniserSleeveCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_stability_analysis(self) -> '_3963.TorqueConverterCompoundStabilityAnalysis':
        """TorqueConverterCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3963.TorqueConverterCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_stability_analysis(self) -> '_3964.TorqueConverterConnectionCompoundStabilityAnalysis':
        """TorqueConverterConnectionCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3964.TorqueConverterConnectionCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_stability_analysis(self) -> '_3965.TorqueConverterPumpCompoundStabilityAnalysis':
        """TorqueConverterPumpCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3965.TorqueConverterPumpCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_stability_analysis(self) -> '_3966.TorqueConverterTurbineCompoundStabilityAnalysis':
        """TorqueConverterTurbineCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3966.TorqueConverterTurbineCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_stability_analysis(self) -> '_3967.UnbalancedMassCompoundStabilityAnalysis':
        """UnbalancedMassCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3967.UnbalancedMassCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_stability_analysis(self) -> '_3968.VirtualComponentCompoundStabilityAnalysis':
        """VirtualComponentCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3968.VirtualComponentCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_stability_analysis(self) -> '_3969.WormGearCompoundStabilityAnalysis':
        """WormGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3969.WormGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_stability_analysis(self) -> '_3970.WormGearMeshCompoundStabilityAnalysis':
        """WormGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3970.WormGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_stability_analysis(self) -> '_3971.WormGearSetCompoundStabilityAnalysis':
        """WormGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3971.WormGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_stability_analysis(self) -> '_3972.ZerolBevelGearCompoundStabilityAnalysis':
        """ZerolBevelGearCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3972.ZerolBevelGearCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_stability_analysis(self) -> '_3973.ZerolBevelGearMeshCompoundStabilityAnalysis':
        """ZerolBevelGearMeshCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3973.ZerolBevelGearMeshCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_stability_analysis(self) -> '_3974.ZerolBevelGearSetCompoundStabilityAnalysis':
        """ZerolBevelGearSetCompoundStabilityAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3974.ZerolBevelGearSetCompoundStabilityAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundStabilityAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_power_flow(self) -> '_3981.AbstractAssemblyPowerFlow':
        """AbstractAssemblyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3981.AbstractAssemblyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_power_flow(self) -> '_3982.AbstractShaftOrHousingPowerFlow':
        """AbstractShaftOrHousingPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3982.AbstractShaftOrHousingPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_power_flow(self) -> '_3983.AbstractShaftPowerFlow':
        """AbstractShaftPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3983.AbstractShaftPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_power_flow(self) -> '_3984.AbstractShaftToMountableComponentConnectionPowerFlow':
        """AbstractShaftToMountableComponentConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3984.AbstractShaftToMountableComponentConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_power_flow(self) -> '_3985.AGMAGleasonConicalGearMeshPowerFlow':
        """AGMAGleasonConicalGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3985.AGMAGleasonConicalGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_power_flow(self) -> '_3986.AGMAGleasonConicalGearPowerFlow':
        """AGMAGleasonConicalGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3986.AGMAGleasonConicalGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_power_flow(self) -> '_3987.AGMAGleasonConicalGearSetPowerFlow':
        """AGMAGleasonConicalGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3987.AGMAGleasonConicalGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_power_flow(self) -> '_3988.AssemblyPowerFlow':
        """AssemblyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3988.AssemblyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_power_flow(self) -> '_3989.BearingPowerFlow':
        """BearingPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3989.BearingPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_power_flow(self) -> '_3990.BeltConnectionPowerFlow':
        """BeltConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3990.BeltConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_power_flow(self) -> '_3991.BeltDrivePowerFlow':
        """BeltDrivePowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3991.BeltDrivePowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDrivePowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_power_flow(self) -> '_3992.BevelDifferentialGearMeshPowerFlow':
        """BevelDifferentialGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3992.BevelDifferentialGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_power_flow(self) -> '_3993.BevelDifferentialGearPowerFlow':
        """BevelDifferentialGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3993.BevelDifferentialGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_power_flow(self) -> '_3994.BevelDifferentialGearSetPowerFlow':
        """BevelDifferentialGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3994.BevelDifferentialGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_power_flow(self) -> '_3995.BevelDifferentialPlanetGearPowerFlow':
        """BevelDifferentialPlanetGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3995.BevelDifferentialPlanetGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_power_flow(self) -> '_3996.BevelDifferentialSunGearPowerFlow':
        """BevelDifferentialSunGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3996.BevelDifferentialSunGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_power_flow(self) -> '_3997.BevelGearMeshPowerFlow':
        """BevelGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3997.BevelGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_power_flow(self) -> '_3998.BevelGearPowerFlow':
        """BevelGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3998.BevelGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_power_flow(self) -> '_3999.BevelGearSetPowerFlow':
        """BevelGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _3999.BevelGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_power_flow(self) -> '_4000.BoltedJointPowerFlow':
        """BoltedJointPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4000.BoltedJointPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_power_flow(self) -> '_4001.BoltPowerFlow':
        """BoltPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4001.BoltPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_power_flow(self) -> '_4002.ClutchConnectionPowerFlow':
        """ClutchConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4002.ClutchConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_power_flow(self) -> '_4003.ClutchHalfPowerFlow':
        """ClutchHalfPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4003.ClutchHalfPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_power_flow(self) -> '_4004.ClutchPowerFlow':
        """ClutchPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4004.ClutchPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_power_flow(self) -> '_4005.CoaxialConnectionPowerFlow':
        """CoaxialConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4005.CoaxialConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_power_flow(self) -> '_4006.ComponentPowerFlow':
        """ComponentPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4006.ComponentPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_power_flow(self) -> '_4007.ConceptCouplingConnectionPowerFlow':
        """ConceptCouplingConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4007.ConceptCouplingConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_power_flow(self) -> '_4008.ConceptCouplingHalfPowerFlow':
        """ConceptCouplingHalfPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4008.ConceptCouplingHalfPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_power_flow(self) -> '_4009.ConceptCouplingPowerFlow':
        """ConceptCouplingPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4009.ConceptCouplingPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_power_flow(self) -> '_4010.ConceptGearMeshPowerFlow':
        """ConceptGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4010.ConceptGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_power_flow(self) -> '_4011.ConceptGearPowerFlow':
        """ConceptGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4011.ConceptGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_power_flow(self) -> '_4012.ConceptGearSetPowerFlow':
        """ConceptGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4012.ConceptGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_power_flow(self) -> '_4013.ConicalGearMeshPowerFlow':
        """ConicalGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4013.ConicalGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_power_flow(self) -> '_4014.ConicalGearPowerFlow':
        """ConicalGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4014.ConicalGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_power_flow(self) -> '_4015.ConicalGearSetPowerFlow':
        """ConicalGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4015.ConicalGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_power_flow(self) -> '_4016.ConnectionPowerFlow':
        """ConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4016.ConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_power_flow(self) -> '_4017.ConnectorPowerFlow':
        """ConnectorPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4017.ConnectorPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_power_flow(self) -> '_4018.CouplingConnectionPowerFlow':
        """CouplingConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4018.CouplingConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_power_flow(self) -> '_4019.CouplingHalfPowerFlow':
        """CouplingHalfPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4019.CouplingHalfPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_power_flow(self) -> '_4020.CouplingPowerFlow':
        """CouplingPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4020.CouplingPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_power_flow(self) -> '_4021.CVTBeltConnectionPowerFlow':
        """CVTBeltConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4021.CVTBeltConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_power_flow(self) -> '_4022.CVTPowerFlow':
        """CVTPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4022.CVTPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_power_flow(self) -> '_4023.CVTPulleyPowerFlow':
        """CVTPulleyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4023.CVTPulleyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_power_flow(self) -> '_4024.CycloidalAssemblyPowerFlow':
        """CycloidalAssemblyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4024.CycloidalAssemblyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_power_flow(self) -> '_4025.CycloidalDiscCentralBearingConnectionPowerFlow':
        """CycloidalDiscCentralBearingConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4025.CycloidalDiscCentralBearingConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_power_flow(self) -> '_4026.CycloidalDiscPlanetaryBearingConnectionPowerFlow':
        """CycloidalDiscPlanetaryBearingConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4026.CycloidalDiscPlanetaryBearingConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_power_flow(self) -> '_4027.CycloidalDiscPowerFlow':
        """CycloidalDiscPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4027.CycloidalDiscPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_power_flow(self) -> '_4029.CylindricalGearMeshPowerFlow':
        """CylindricalGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4029.CylindricalGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_power_flow(self) -> '_4030.CylindricalGearPowerFlow':
        """CylindricalGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4030.CylindricalGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_power_flow(self) -> '_4031.CylindricalGearSetPowerFlow':
        """CylindricalGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4031.CylindricalGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_power_flow(self) -> '_4032.CylindricalPlanetGearPowerFlow':
        """CylindricalPlanetGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4032.CylindricalPlanetGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_power_flow(self) -> '_4033.DatumPowerFlow':
        """DatumPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4033.DatumPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_power_flow(self) -> '_4034.ExternalCADModelPowerFlow':
        """ExternalCADModelPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4034.ExternalCADModelPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_power_flow(self) -> '_4035.FaceGearMeshPowerFlow':
        """FaceGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4035.FaceGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_power_flow(self) -> '_4036.FaceGearPowerFlow':
        """FaceGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4036.FaceGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_power_flow(self) -> '_4037.FaceGearSetPowerFlow':
        """FaceGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4037.FaceGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_power_flow(self) -> '_4038.FEPartPowerFlow':
        """FEPartPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4038.FEPartPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_power_flow(self) -> '_4039.FlexiblePinAssemblyPowerFlow':
        """FlexiblePinAssemblyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4039.FlexiblePinAssemblyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_power_flow(self) -> '_4040.GearMeshPowerFlow':
        """GearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4040.GearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_power_flow(self) -> '_4041.GearPowerFlow':
        """GearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4041.GearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_power_flow(self) -> '_4042.GearSetPowerFlow':
        """GearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4042.GearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_power_flow(self) -> '_4043.GuideDxfModelPowerFlow':
        """GuideDxfModelPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4043.GuideDxfModelPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_power_flow(self) -> '_4044.HypoidGearMeshPowerFlow':
        """HypoidGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4044.HypoidGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_power_flow(self) -> '_4045.HypoidGearPowerFlow':
        """HypoidGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4045.HypoidGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_power_flow(self) -> '_4046.HypoidGearSetPowerFlow':
        """HypoidGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4046.HypoidGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_power_flow(self) -> '_4047.InterMountableComponentConnectionPowerFlow':
        """InterMountableComponentConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4047.InterMountableComponentConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_power_flow(self) -> '_4048.KlingelnbergCycloPalloidConicalGearMeshPowerFlow':
        """KlingelnbergCycloPalloidConicalGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4048.KlingelnbergCycloPalloidConicalGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_power_flow(self) -> '_4049.KlingelnbergCycloPalloidConicalGearPowerFlow':
        """KlingelnbergCycloPalloidConicalGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4049.KlingelnbergCycloPalloidConicalGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_power_flow(self) -> '_4050.KlingelnbergCycloPalloidConicalGearSetPowerFlow':
        """KlingelnbergCycloPalloidConicalGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4050.KlingelnbergCycloPalloidConicalGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_power_flow(self) -> '_4051.KlingelnbergCycloPalloidHypoidGearMeshPowerFlow':
        """KlingelnbergCycloPalloidHypoidGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4051.KlingelnbergCycloPalloidHypoidGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_power_flow(self) -> '_4052.KlingelnbergCycloPalloidHypoidGearPowerFlow':
        """KlingelnbergCycloPalloidHypoidGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4052.KlingelnbergCycloPalloidHypoidGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_power_flow(self) -> '_4053.KlingelnbergCycloPalloidHypoidGearSetPowerFlow':
        """KlingelnbergCycloPalloidHypoidGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4053.KlingelnbergCycloPalloidHypoidGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_power_flow(self) -> '_4054.KlingelnbergCycloPalloidSpiralBevelGearMeshPowerFlow':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4054.KlingelnbergCycloPalloidSpiralBevelGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_power_flow(self) -> '_4055.KlingelnbergCycloPalloidSpiralBevelGearPowerFlow':
        """KlingelnbergCycloPalloidSpiralBevelGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4055.KlingelnbergCycloPalloidSpiralBevelGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_power_flow(self) -> '_4056.KlingelnbergCycloPalloidSpiralBevelGearSetPowerFlow':
        """KlingelnbergCycloPalloidSpiralBevelGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4056.KlingelnbergCycloPalloidSpiralBevelGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_power_flow(self) -> '_4057.MassDiscPowerFlow':
        """MassDiscPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4057.MassDiscPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_power_flow(self) -> '_4058.MeasurementComponentPowerFlow':
        """MeasurementComponentPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4058.MeasurementComponentPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_power_flow(self) -> '_4059.MountableComponentPowerFlow':
        """MountableComponentPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4059.MountableComponentPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_power_flow(self) -> '_4060.OilSealPowerFlow':
        """OilSealPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4060.OilSealPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_power_flow(self) -> '_4061.PartPowerFlow':
        """PartPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4061.PartPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_power_flow(self) -> '_4062.PartToPartShearCouplingConnectionPowerFlow':
        """PartToPartShearCouplingConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4062.PartToPartShearCouplingConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_power_flow(self) -> '_4063.PartToPartShearCouplingHalfPowerFlow':
        """PartToPartShearCouplingHalfPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4063.PartToPartShearCouplingHalfPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_power_flow(self) -> '_4064.PartToPartShearCouplingPowerFlow':
        """PartToPartShearCouplingPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4064.PartToPartShearCouplingPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_power_flow(self) -> '_4065.PlanetaryConnectionPowerFlow':
        """PlanetaryConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4065.PlanetaryConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_power_flow(self) -> '_4066.PlanetaryGearSetPowerFlow':
        """PlanetaryGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4066.PlanetaryGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_power_flow(self) -> '_4067.PlanetCarrierPowerFlow':
        """PlanetCarrierPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4067.PlanetCarrierPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_power_flow(self) -> '_4068.PointLoadPowerFlow':
        """PointLoadPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4068.PointLoadPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_power_flow(self) -> '_4071.PowerLoadPowerFlow':
        """PowerLoadPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4071.PowerLoadPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_power_flow(self) -> '_4072.PulleyPowerFlow':
        """PulleyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4072.PulleyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_power_flow(self) -> '_4073.RingPinsPowerFlow':
        """RingPinsPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4073.RingPinsPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_power_flow(self) -> '_4074.RingPinsToDiscConnectionPowerFlow':
        """RingPinsToDiscConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4074.RingPinsToDiscConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_power_flow(self) -> '_4075.RollingRingAssemblyPowerFlow':
        """RollingRingAssemblyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4075.RollingRingAssemblyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_power_flow(self) -> '_4076.RollingRingConnectionPowerFlow':
        """RollingRingConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4076.RollingRingConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_power_flow(self) -> '_4077.RollingRingPowerFlow':
        """RollingRingPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4077.RollingRingPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_power_flow(self) -> '_4078.RootAssemblyPowerFlow':
        """RootAssemblyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4078.RootAssemblyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_power_flow(self) -> '_4079.ShaftHubConnectionPowerFlow':
        """ShaftHubConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4079.ShaftHubConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_power_flow(self) -> '_4080.ShaftPowerFlow':
        """ShaftPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4080.ShaftPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_power_flow(self) -> '_4081.ShaftToMountableComponentConnectionPowerFlow':
        """ShaftToMountableComponentConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4081.ShaftToMountableComponentConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_power_flow(self) -> '_4082.SpecialisedAssemblyPowerFlow':
        """SpecialisedAssemblyPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4082.SpecialisedAssemblyPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_power_flow(self) -> '_4083.SpiralBevelGearMeshPowerFlow':
        """SpiralBevelGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4083.SpiralBevelGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_power_flow(self) -> '_4084.SpiralBevelGearPowerFlow':
        """SpiralBevelGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4084.SpiralBevelGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_power_flow(self) -> '_4085.SpiralBevelGearSetPowerFlow':
        """SpiralBevelGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4085.SpiralBevelGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_power_flow(self) -> '_4086.SpringDamperConnectionPowerFlow':
        """SpringDamperConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4086.SpringDamperConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_power_flow(self) -> '_4087.SpringDamperHalfPowerFlow':
        """SpringDamperHalfPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4087.SpringDamperHalfPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_power_flow(self) -> '_4088.SpringDamperPowerFlow':
        """SpringDamperPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4088.SpringDamperPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_power_flow(self) -> '_4089.StraightBevelDiffGearMeshPowerFlow':
        """StraightBevelDiffGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4089.StraightBevelDiffGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_power_flow(self) -> '_4090.StraightBevelDiffGearPowerFlow':
        """StraightBevelDiffGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4090.StraightBevelDiffGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_power_flow(self) -> '_4091.StraightBevelDiffGearSetPowerFlow':
        """StraightBevelDiffGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4091.StraightBevelDiffGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_power_flow(self) -> '_4092.StraightBevelGearMeshPowerFlow':
        """StraightBevelGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4092.StraightBevelGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_power_flow(self) -> '_4093.StraightBevelGearPowerFlow':
        """StraightBevelGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4093.StraightBevelGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_power_flow(self) -> '_4094.StraightBevelGearSetPowerFlow':
        """StraightBevelGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4094.StraightBevelGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_power_flow(self) -> '_4095.StraightBevelPlanetGearPowerFlow':
        """StraightBevelPlanetGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4095.StraightBevelPlanetGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_power_flow(self) -> '_4096.StraightBevelSunGearPowerFlow':
        """StraightBevelSunGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4096.StraightBevelSunGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_power_flow(self) -> '_4097.SynchroniserHalfPowerFlow':
        """SynchroniserHalfPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4097.SynchroniserHalfPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_power_flow(self) -> '_4098.SynchroniserPartPowerFlow':
        """SynchroniserPartPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4098.SynchroniserPartPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_power_flow(self) -> '_4099.SynchroniserPowerFlow':
        """SynchroniserPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4099.SynchroniserPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_power_flow(self) -> '_4100.SynchroniserSleevePowerFlow':
        """SynchroniserSleevePowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4100.SynchroniserSleevePowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleevePowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_power_flow(self) -> '_4102.TorqueConverterConnectionPowerFlow':
        """TorqueConverterConnectionPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4102.TorqueConverterConnectionPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_power_flow(self) -> '_4103.TorqueConverterPowerFlow':
        """TorqueConverterPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4103.TorqueConverterPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_power_flow(self) -> '_4104.TorqueConverterPumpPowerFlow':
        """TorqueConverterPumpPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4104.TorqueConverterPumpPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_power_flow(self) -> '_4105.TorqueConverterTurbinePowerFlow':
        """TorqueConverterTurbinePowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4105.TorqueConverterTurbinePowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbinePowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_power_flow(self) -> '_4106.UnbalancedMassPowerFlow':
        """UnbalancedMassPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4106.UnbalancedMassPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_power_flow(self) -> '_4107.VirtualComponentPowerFlow':
        """VirtualComponentPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4107.VirtualComponentPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_power_flow(self) -> '_4108.WormGearMeshPowerFlow':
        """WormGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4108.WormGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_power_flow(self) -> '_4109.WormGearPowerFlow':
        """WormGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4109.WormGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_power_flow(self) -> '_4110.WormGearSetPowerFlow':
        """WormGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4110.WormGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_power_flow(self) -> '_4111.ZerolBevelGearMeshPowerFlow':
        """ZerolBevelGearMeshPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4111.ZerolBevelGearMeshPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_power_flow(self) -> '_4112.ZerolBevelGearPowerFlow':
        """ZerolBevelGearPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4112.ZerolBevelGearPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_power_flow(self) -> '_4113.ZerolBevelGearSetPowerFlow':
        """ZerolBevelGearSetPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4113.ZerolBevelGearSetPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_power_flow(self) -> '_4114.AbstractAssemblyCompoundPowerFlow':
        """AbstractAssemblyCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4114.AbstractAssemblyCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_power_flow(self) -> '_4115.AbstractShaftCompoundPowerFlow':
        """AbstractShaftCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4115.AbstractShaftCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_power_flow(self) -> '_4116.AbstractShaftOrHousingCompoundPowerFlow':
        """AbstractShaftOrHousingCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4116.AbstractShaftOrHousingCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_power_flow(self) -> '_4117.AbstractShaftToMountableComponentConnectionCompoundPowerFlow':
        """AbstractShaftToMountableComponentConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4117.AbstractShaftToMountableComponentConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_power_flow(self) -> '_4118.AGMAGleasonConicalGearCompoundPowerFlow':
        """AGMAGleasonConicalGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4118.AGMAGleasonConicalGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_power_flow(self) -> '_4119.AGMAGleasonConicalGearMeshCompoundPowerFlow':
        """AGMAGleasonConicalGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4119.AGMAGleasonConicalGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_power_flow(self) -> '_4120.AGMAGleasonConicalGearSetCompoundPowerFlow':
        """AGMAGleasonConicalGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4120.AGMAGleasonConicalGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_power_flow(self) -> '_4121.AssemblyCompoundPowerFlow':
        """AssemblyCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4121.AssemblyCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_power_flow(self) -> '_4122.BearingCompoundPowerFlow':
        """BearingCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4122.BearingCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_power_flow(self) -> '_4123.BeltConnectionCompoundPowerFlow':
        """BeltConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4123.BeltConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_power_flow(self) -> '_4124.BeltDriveCompoundPowerFlow':
        """BeltDriveCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4124.BeltDriveCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_power_flow(self) -> '_4125.BevelDifferentialGearCompoundPowerFlow':
        """BevelDifferentialGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4125.BevelDifferentialGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_power_flow(self) -> '_4126.BevelDifferentialGearMeshCompoundPowerFlow':
        """BevelDifferentialGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4126.BevelDifferentialGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_power_flow(self) -> '_4127.BevelDifferentialGearSetCompoundPowerFlow':
        """BevelDifferentialGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4127.BevelDifferentialGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_power_flow(self) -> '_4128.BevelDifferentialPlanetGearCompoundPowerFlow':
        """BevelDifferentialPlanetGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4128.BevelDifferentialPlanetGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_power_flow(self) -> '_4129.BevelDifferentialSunGearCompoundPowerFlow':
        """BevelDifferentialSunGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4129.BevelDifferentialSunGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_power_flow(self) -> '_4130.BevelGearCompoundPowerFlow':
        """BevelGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4130.BevelGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_power_flow(self) -> '_4131.BevelGearMeshCompoundPowerFlow':
        """BevelGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4131.BevelGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_power_flow(self) -> '_4132.BevelGearSetCompoundPowerFlow':
        """BevelGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4132.BevelGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_power_flow(self) -> '_4133.BoltCompoundPowerFlow':
        """BoltCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4133.BoltCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_power_flow(self) -> '_4134.BoltedJointCompoundPowerFlow':
        """BoltedJointCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4134.BoltedJointCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_power_flow(self) -> '_4135.ClutchCompoundPowerFlow':
        """ClutchCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4135.ClutchCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_power_flow(self) -> '_4136.ClutchConnectionCompoundPowerFlow':
        """ClutchConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4136.ClutchConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_power_flow(self) -> '_4137.ClutchHalfCompoundPowerFlow':
        """ClutchHalfCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4137.ClutchHalfCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_power_flow(self) -> '_4138.CoaxialConnectionCompoundPowerFlow':
        """CoaxialConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4138.CoaxialConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_power_flow(self) -> '_4139.ComponentCompoundPowerFlow':
        """ComponentCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4139.ComponentCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_power_flow(self) -> '_4140.ConceptCouplingCompoundPowerFlow':
        """ConceptCouplingCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4140.ConceptCouplingCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_power_flow(self) -> '_4141.ConceptCouplingConnectionCompoundPowerFlow':
        """ConceptCouplingConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4141.ConceptCouplingConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_power_flow(self) -> '_4142.ConceptCouplingHalfCompoundPowerFlow':
        """ConceptCouplingHalfCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4142.ConceptCouplingHalfCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_power_flow(self) -> '_4143.ConceptGearCompoundPowerFlow':
        """ConceptGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4143.ConceptGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_power_flow(self) -> '_4144.ConceptGearMeshCompoundPowerFlow':
        """ConceptGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4144.ConceptGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_power_flow(self) -> '_4145.ConceptGearSetCompoundPowerFlow':
        """ConceptGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4145.ConceptGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_power_flow(self) -> '_4146.ConicalGearCompoundPowerFlow':
        """ConicalGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4146.ConicalGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_power_flow(self) -> '_4147.ConicalGearMeshCompoundPowerFlow':
        """ConicalGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4147.ConicalGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_power_flow(self) -> '_4148.ConicalGearSetCompoundPowerFlow':
        """ConicalGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4148.ConicalGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_power_flow(self) -> '_4149.ConnectionCompoundPowerFlow':
        """ConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4149.ConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_power_flow(self) -> '_4150.ConnectorCompoundPowerFlow':
        """ConnectorCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4150.ConnectorCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_power_flow(self) -> '_4151.CouplingCompoundPowerFlow':
        """CouplingCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4151.CouplingCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_power_flow(self) -> '_4152.CouplingConnectionCompoundPowerFlow':
        """CouplingConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4152.CouplingConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_power_flow(self) -> '_4153.CouplingHalfCompoundPowerFlow':
        """CouplingHalfCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4153.CouplingHalfCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_power_flow(self) -> '_4154.CVTBeltConnectionCompoundPowerFlow':
        """CVTBeltConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4154.CVTBeltConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_power_flow(self) -> '_4155.CVTCompoundPowerFlow':
        """CVTCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4155.CVTCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_power_flow(self) -> '_4156.CVTPulleyCompoundPowerFlow':
        """CVTPulleyCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4156.CVTPulleyCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_power_flow(self) -> '_4157.CycloidalAssemblyCompoundPowerFlow':
        """CycloidalAssemblyCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4157.CycloidalAssemblyCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_power_flow(self) -> '_4158.CycloidalDiscCentralBearingConnectionCompoundPowerFlow':
        """CycloidalDiscCentralBearingConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4158.CycloidalDiscCentralBearingConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_power_flow(self) -> '_4159.CycloidalDiscCompoundPowerFlow':
        """CycloidalDiscCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4159.CycloidalDiscCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_power_flow(self) -> '_4160.CycloidalDiscPlanetaryBearingConnectionCompoundPowerFlow':
        """CycloidalDiscPlanetaryBearingConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4160.CycloidalDiscPlanetaryBearingConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_power_flow(self) -> '_4161.CylindricalGearCompoundPowerFlow':
        """CylindricalGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4161.CylindricalGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_power_flow(self) -> '_4162.CylindricalGearMeshCompoundPowerFlow':
        """CylindricalGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4162.CylindricalGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_power_flow(self) -> '_4163.CylindricalGearSetCompoundPowerFlow':
        """CylindricalGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4163.CylindricalGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_power_flow(self) -> '_4164.CylindricalPlanetGearCompoundPowerFlow':
        """CylindricalPlanetGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4164.CylindricalPlanetGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_power_flow(self) -> '_4165.DatumCompoundPowerFlow':
        """DatumCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4165.DatumCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_power_flow(self) -> '_4166.ExternalCADModelCompoundPowerFlow':
        """ExternalCADModelCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4166.ExternalCADModelCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_power_flow(self) -> '_4167.FaceGearCompoundPowerFlow':
        """FaceGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4167.FaceGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_power_flow(self) -> '_4168.FaceGearMeshCompoundPowerFlow':
        """FaceGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4168.FaceGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_power_flow(self) -> '_4169.FaceGearSetCompoundPowerFlow':
        """FaceGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4169.FaceGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_power_flow(self) -> '_4170.FEPartCompoundPowerFlow':
        """FEPartCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4170.FEPartCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_power_flow(self) -> '_4171.FlexiblePinAssemblyCompoundPowerFlow':
        """FlexiblePinAssemblyCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4171.FlexiblePinAssemblyCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_power_flow(self) -> '_4172.GearCompoundPowerFlow':
        """GearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4172.GearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_power_flow(self) -> '_4173.GearMeshCompoundPowerFlow':
        """GearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4173.GearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_power_flow(self) -> '_4174.GearSetCompoundPowerFlow':
        """GearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4174.GearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_power_flow(self) -> '_4175.GuideDxfModelCompoundPowerFlow':
        """GuideDxfModelCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4175.GuideDxfModelCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_power_flow(self) -> '_4176.HypoidGearCompoundPowerFlow':
        """HypoidGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4176.HypoidGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_power_flow(self) -> '_4177.HypoidGearMeshCompoundPowerFlow':
        """HypoidGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4177.HypoidGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_power_flow(self) -> '_4178.HypoidGearSetCompoundPowerFlow':
        """HypoidGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4178.HypoidGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_power_flow(self) -> '_4179.InterMountableComponentConnectionCompoundPowerFlow':
        """InterMountableComponentConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4179.InterMountableComponentConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_power_flow(self) -> '_4180.KlingelnbergCycloPalloidConicalGearCompoundPowerFlow':
        """KlingelnbergCycloPalloidConicalGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4180.KlingelnbergCycloPalloidConicalGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_power_flow(self) -> '_4181.KlingelnbergCycloPalloidConicalGearMeshCompoundPowerFlow':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4181.KlingelnbergCycloPalloidConicalGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_power_flow(self) -> '_4182.KlingelnbergCycloPalloidConicalGearSetCompoundPowerFlow':
        """KlingelnbergCycloPalloidConicalGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4182.KlingelnbergCycloPalloidConicalGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_power_flow(self) -> '_4183.KlingelnbergCycloPalloidHypoidGearCompoundPowerFlow':
        """KlingelnbergCycloPalloidHypoidGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4183.KlingelnbergCycloPalloidHypoidGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_power_flow(self) -> '_4184.KlingelnbergCycloPalloidHypoidGearMeshCompoundPowerFlow':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4184.KlingelnbergCycloPalloidHypoidGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_power_flow(self) -> '_4185.KlingelnbergCycloPalloidHypoidGearSetCompoundPowerFlow':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4185.KlingelnbergCycloPalloidHypoidGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_power_flow(self) -> '_4186.KlingelnbergCycloPalloidSpiralBevelGearCompoundPowerFlow':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4186.KlingelnbergCycloPalloidSpiralBevelGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_power_flow(self) -> '_4187.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundPowerFlow':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4187.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_power_flow(self) -> '_4188.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundPowerFlow':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4188.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_power_flow(self) -> '_4189.MassDiscCompoundPowerFlow':
        """MassDiscCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4189.MassDiscCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_power_flow(self) -> '_4190.MeasurementComponentCompoundPowerFlow':
        """MeasurementComponentCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4190.MeasurementComponentCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_power_flow(self) -> '_4191.MountableComponentCompoundPowerFlow':
        """MountableComponentCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4191.MountableComponentCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_power_flow(self) -> '_4192.OilSealCompoundPowerFlow':
        """OilSealCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4192.OilSealCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_power_flow(self) -> '_4193.PartCompoundPowerFlow':
        """PartCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4193.PartCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_power_flow(self) -> '_4194.PartToPartShearCouplingCompoundPowerFlow':
        """PartToPartShearCouplingCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4194.PartToPartShearCouplingCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_power_flow(self) -> '_4195.PartToPartShearCouplingConnectionCompoundPowerFlow':
        """PartToPartShearCouplingConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4195.PartToPartShearCouplingConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_power_flow(self) -> '_4196.PartToPartShearCouplingHalfCompoundPowerFlow':
        """PartToPartShearCouplingHalfCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4196.PartToPartShearCouplingHalfCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_power_flow(self) -> '_4197.PlanetaryConnectionCompoundPowerFlow':
        """PlanetaryConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4197.PlanetaryConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_power_flow(self) -> '_4198.PlanetaryGearSetCompoundPowerFlow':
        """PlanetaryGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4198.PlanetaryGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_power_flow(self) -> '_4199.PlanetCarrierCompoundPowerFlow':
        """PlanetCarrierCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4199.PlanetCarrierCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_power_flow(self) -> '_4200.PointLoadCompoundPowerFlow':
        """PointLoadCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4200.PointLoadCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_power_flow(self) -> '_4201.PowerLoadCompoundPowerFlow':
        """PowerLoadCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4201.PowerLoadCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_power_flow(self) -> '_4202.PulleyCompoundPowerFlow':
        """PulleyCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4202.PulleyCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_power_flow(self) -> '_4203.RingPinsCompoundPowerFlow':
        """RingPinsCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4203.RingPinsCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_power_flow(self) -> '_4204.RingPinsToDiscConnectionCompoundPowerFlow':
        """RingPinsToDiscConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4204.RingPinsToDiscConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_power_flow(self) -> '_4205.RollingRingAssemblyCompoundPowerFlow':
        """RollingRingAssemblyCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4205.RollingRingAssemblyCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_power_flow(self) -> '_4206.RollingRingCompoundPowerFlow':
        """RollingRingCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4206.RollingRingCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_power_flow(self) -> '_4207.RollingRingConnectionCompoundPowerFlow':
        """RollingRingConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4207.RollingRingConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_power_flow(self) -> '_4208.RootAssemblyCompoundPowerFlow':
        """RootAssemblyCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4208.RootAssemblyCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_power_flow(self) -> '_4209.ShaftCompoundPowerFlow':
        """ShaftCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4209.ShaftCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_power_flow(self) -> '_4210.ShaftHubConnectionCompoundPowerFlow':
        """ShaftHubConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4210.ShaftHubConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_power_flow(self) -> '_4211.ShaftToMountableComponentConnectionCompoundPowerFlow':
        """ShaftToMountableComponentConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4211.ShaftToMountableComponentConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_power_flow(self) -> '_4212.SpecialisedAssemblyCompoundPowerFlow':
        """SpecialisedAssemblyCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4212.SpecialisedAssemblyCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_power_flow(self) -> '_4213.SpiralBevelGearCompoundPowerFlow':
        """SpiralBevelGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4213.SpiralBevelGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_power_flow(self) -> '_4214.SpiralBevelGearMeshCompoundPowerFlow':
        """SpiralBevelGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4214.SpiralBevelGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_power_flow(self) -> '_4215.SpiralBevelGearSetCompoundPowerFlow':
        """SpiralBevelGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4215.SpiralBevelGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_power_flow(self) -> '_4216.SpringDamperCompoundPowerFlow':
        """SpringDamperCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4216.SpringDamperCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_power_flow(self) -> '_4217.SpringDamperConnectionCompoundPowerFlow':
        """SpringDamperConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4217.SpringDamperConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_power_flow(self) -> '_4218.SpringDamperHalfCompoundPowerFlow':
        """SpringDamperHalfCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4218.SpringDamperHalfCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_power_flow(self) -> '_4219.StraightBevelDiffGearCompoundPowerFlow':
        """StraightBevelDiffGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4219.StraightBevelDiffGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_power_flow(self) -> '_4220.StraightBevelDiffGearMeshCompoundPowerFlow':
        """StraightBevelDiffGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4220.StraightBevelDiffGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_power_flow(self) -> '_4221.StraightBevelDiffGearSetCompoundPowerFlow':
        """StraightBevelDiffGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4221.StraightBevelDiffGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_power_flow(self) -> '_4222.StraightBevelGearCompoundPowerFlow':
        """StraightBevelGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4222.StraightBevelGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_power_flow(self) -> '_4223.StraightBevelGearMeshCompoundPowerFlow':
        """StraightBevelGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4223.StraightBevelGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_power_flow(self) -> '_4224.StraightBevelGearSetCompoundPowerFlow':
        """StraightBevelGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4224.StraightBevelGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_power_flow(self) -> '_4225.StraightBevelPlanetGearCompoundPowerFlow':
        """StraightBevelPlanetGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4225.StraightBevelPlanetGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_power_flow(self) -> '_4226.StraightBevelSunGearCompoundPowerFlow':
        """StraightBevelSunGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4226.StraightBevelSunGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_power_flow(self) -> '_4227.SynchroniserCompoundPowerFlow':
        """SynchroniserCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4227.SynchroniserCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_power_flow(self) -> '_4228.SynchroniserHalfCompoundPowerFlow':
        """SynchroniserHalfCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4228.SynchroniserHalfCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_power_flow(self) -> '_4229.SynchroniserPartCompoundPowerFlow':
        """SynchroniserPartCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4229.SynchroniserPartCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_power_flow(self) -> '_4230.SynchroniserSleeveCompoundPowerFlow':
        """SynchroniserSleeveCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4230.SynchroniserSleeveCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_power_flow(self) -> '_4231.TorqueConverterCompoundPowerFlow':
        """TorqueConverterCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4231.TorqueConverterCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_power_flow(self) -> '_4232.TorqueConverterConnectionCompoundPowerFlow':
        """TorqueConverterConnectionCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4232.TorqueConverterConnectionCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_power_flow(self) -> '_4233.TorqueConverterPumpCompoundPowerFlow':
        """TorqueConverterPumpCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4233.TorqueConverterPumpCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_power_flow(self) -> '_4234.TorqueConverterTurbineCompoundPowerFlow':
        """TorqueConverterTurbineCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4234.TorqueConverterTurbineCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_power_flow(self) -> '_4235.UnbalancedMassCompoundPowerFlow':
        """UnbalancedMassCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4235.UnbalancedMassCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_power_flow(self) -> '_4236.VirtualComponentCompoundPowerFlow':
        """VirtualComponentCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4236.VirtualComponentCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_power_flow(self) -> '_4237.WormGearCompoundPowerFlow':
        """WormGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4237.WormGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_power_flow(self) -> '_4238.WormGearMeshCompoundPowerFlow':
        """WormGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4238.WormGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_power_flow(self) -> '_4239.WormGearSetCompoundPowerFlow':
        """WormGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4239.WormGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_power_flow(self) -> '_4240.ZerolBevelGearCompoundPowerFlow':
        """ZerolBevelGearCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4240.ZerolBevelGearCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_power_flow(self) -> '_4241.ZerolBevelGearMeshCompoundPowerFlow':
        """ZerolBevelGearMeshCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4241.ZerolBevelGearMeshCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_power_flow(self) -> '_4242.ZerolBevelGearSetCompoundPowerFlow':
        """ZerolBevelGearSetCompoundPowerFlow: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4242.ZerolBevelGearSetCompoundPowerFlow.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundPowerFlow. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_parametric_study_tool(self) -> '_4243.AbstractAssemblyParametricStudyTool':
        """AbstractAssemblyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4243.AbstractAssemblyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_parametric_study_tool(self) -> '_4244.AbstractShaftOrHousingParametricStudyTool':
        """AbstractShaftOrHousingParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4244.AbstractShaftOrHousingParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_parametric_study_tool(self) -> '_4245.AbstractShaftParametricStudyTool':
        """AbstractShaftParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4245.AbstractShaftParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_parametric_study_tool(self) -> '_4246.AbstractShaftToMountableComponentConnectionParametricStudyTool':
        """AbstractShaftToMountableComponentConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4246.AbstractShaftToMountableComponentConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_parametric_study_tool(self) -> '_4247.AGMAGleasonConicalGearMeshParametricStudyTool':
        """AGMAGleasonConicalGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4247.AGMAGleasonConicalGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_parametric_study_tool(self) -> '_4248.AGMAGleasonConicalGearParametricStudyTool':
        """AGMAGleasonConicalGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4248.AGMAGleasonConicalGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_parametric_study_tool(self) -> '_4249.AGMAGleasonConicalGearSetParametricStudyTool':
        """AGMAGleasonConicalGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4249.AGMAGleasonConicalGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_parametric_study_tool(self) -> '_4250.AssemblyParametricStudyTool':
        """AssemblyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4250.AssemblyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_parametric_study_tool(self) -> '_4251.BearingParametricStudyTool':
        """BearingParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4251.BearingParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_parametric_study_tool(self) -> '_4252.BeltConnectionParametricStudyTool':
        """BeltConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4252.BeltConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_parametric_study_tool(self) -> '_4253.BeltDriveParametricStudyTool':
        """BeltDriveParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4253.BeltDriveParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_parametric_study_tool(self) -> '_4254.BevelDifferentialGearMeshParametricStudyTool':
        """BevelDifferentialGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4254.BevelDifferentialGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_parametric_study_tool(self) -> '_4255.BevelDifferentialGearParametricStudyTool':
        """BevelDifferentialGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4255.BevelDifferentialGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_parametric_study_tool(self) -> '_4256.BevelDifferentialGearSetParametricStudyTool':
        """BevelDifferentialGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4256.BevelDifferentialGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_parametric_study_tool(self) -> '_4257.BevelDifferentialPlanetGearParametricStudyTool':
        """BevelDifferentialPlanetGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4257.BevelDifferentialPlanetGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_parametric_study_tool(self) -> '_4258.BevelDifferentialSunGearParametricStudyTool':
        """BevelDifferentialSunGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4258.BevelDifferentialSunGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_parametric_study_tool(self) -> '_4259.BevelGearMeshParametricStudyTool':
        """BevelGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4259.BevelGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_parametric_study_tool(self) -> '_4260.BevelGearParametricStudyTool':
        """BevelGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4260.BevelGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_parametric_study_tool(self) -> '_4261.BevelGearSetParametricStudyTool':
        """BevelGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4261.BevelGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_parametric_study_tool(self) -> '_4262.BoltedJointParametricStudyTool':
        """BoltedJointParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4262.BoltedJointParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_parametric_study_tool(self) -> '_4263.BoltParametricStudyTool':
        """BoltParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4263.BoltParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_parametric_study_tool(self) -> '_4264.ClutchConnectionParametricStudyTool':
        """ClutchConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4264.ClutchConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_parametric_study_tool(self) -> '_4265.ClutchHalfParametricStudyTool':
        """ClutchHalfParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4265.ClutchHalfParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_parametric_study_tool(self) -> '_4266.ClutchParametricStudyTool':
        """ClutchParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4266.ClutchParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_parametric_study_tool(self) -> '_4267.CoaxialConnectionParametricStudyTool':
        """CoaxialConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4267.CoaxialConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_parametric_study_tool(self) -> '_4268.ComponentParametricStudyTool':
        """ComponentParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4268.ComponentParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_parametric_study_tool(self) -> '_4269.ConceptCouplingConnectionParametricStudyTool':
        """ConceptCouplingConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4269.ConceptCouplingConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_parametric_study_tool(self) -> '_4270.ConceptCouplingHalfParametricStudyTool':
        """ConceptCouplingHalfParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4270.ConceptCouplingHalfParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_parametric_study_tool(self) -> '_4271.ConceptCouplingParametricStudyTool':
        """ConceptCouplingParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4271.ConceptCouplingParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_parametric_study_tool(self) -> '_4272.ConceptGearMeshParametricStudyTool':
        """ConceptGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4272.ConceptGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_parametric_study_tool(self) -> '_4273.ConceptGearParametricStudyTool':
        """ConceptGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4273.ConceptGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_parametric_study_tool(self) -> '_4274.ConceptGearSetParametricStudyTool':
        """ConceptGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4274.ConceptGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_parametric_study_tool(self) -> '_4275.ConicalGearMeshParametricStudyTool':
        """ConicalGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4275.ConicalGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_parametric_study_tool(self) -> '_4276.ConicalGearParametricStudyTool':
        """ConicalGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4276.ConicalGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_parametric_study_tool(self) -> '_4277.ConicalGearSetParametricStudyTool':
        """ConicalGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4277.ConicalGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_parametric_study_tool(self) -> '_4278.ConnectionParametricStudyTool':
        """ConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4278.ConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_parametric_study_tool(self) -> '_4279.ConnectorParametricStudyTool':
        """ConnectorParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4279.ConnectorParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_parametric_study_tool(self) -> '_4280.CouplingConnectionParametricStudyTool':
        """CouplingConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4280.CouplingConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_parametric_study_tool(self) -> '_4281.CouplingHalfParametricStudyTool':
        """CouplingHalfParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4281.CouplingHalfParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_parametric_study_tool(self) -> '_4282.CouplingParametricStudyTool':
        """CouplingParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4282.CouplingParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_parametric_study_tool(self) -> '_4283.CVTBeltConnectionParametricStudyTool':
        """CVTBeltConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4283.CVTBeltConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_parametric_study_tool(self) -> '_4284.CVTParametricStudyTool':
        """CVTParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4284.CVTParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_parametric_study_tool(self) -> '_4285.CVTPulleyParametricStudyTool':
        """CVTPulleyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4285.CVTPulleyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_parametric_study_tool(self) -> '_4286.CycloidalAssemblyParametricStudyTool':
        """CycloidalAssemblyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4286.CycloidalAssemblyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_parametric_study_tool(self) -> '_4287.CycloidalDiscCentralBearingConnectionParametricStudyTool':
        """CycloidalDiscCentralBearingConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4287.CycloidalDiscCentralBearingConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_parametric_study_tool(self) -> '_4288.CycloidalDiscParametricStudyTool':
        """CycloidalDiscParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4288.CycloidalDiscParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_parametric_study_tool(self) -> '_4289.CycloidalDiscPlanetaryBearingConnectionParametricStudyTool':
        """CycloidalDiscPlanetaryBearingConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4289.CycloidalDiscPlanetaryBearingConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_parametric_study_tool(self) -> '_4290.CylindricalGearMeshParametricStudyTool':
        """CylindricalGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4290.CylindricalGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_parametric_study_tool(self) -> '_4291.CylindricalGearParametricStudyTool':
        """CylindricalGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4291.CylindricalGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_parametric_study_tool(self) -> '_4292.CylindricalGearSetParametricStudyTool':
        """CylindricalGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4292.CylindricalGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_parametric_study_tool(self) -> '_4293.CylindricalPlanetGearParametricStudyTool':
        """CylindricalPlanetGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4293.CylindricalPlanetGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_parametric_study_tool(self) -> '_4294.DatumParametricStudyTool':
        """DatumParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4294.DatumParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_parametric_study_tool(self) -> '_4302.ExternalCADModelParametricStudyTool':
        """ExternalCADModelParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4302.ExternalCADModelParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_parametric_study_tool(self) -> '_4303.FaceGearMeshParametricStudyTool':
        """FaceGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4303.FaceGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_parametric_study_tool(self) -> '_4304.FaceGearParametricStudyTool':
        """FaceGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4304.FaceGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_parametric_study_tool(self) -> '_4305.FaceGearSetParametricStudyTool':
        """FaceGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4305.FaceGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_parametric_study_tool(self) -> '_4306.FEPartParametricStudyTool':
        """FEPartParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4306.FEPartParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_parametric_study_tool(self) -> '_4307.FlexiblePinAssemblyParametricStudyTool':
        """FlexiblePinAssemblyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4307.FlexiblePinAssemblyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_parametric_study_tool(self) -> '_4308.GearMeshParametricStudyTool':
        """GearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4308.GearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_parametric_study_tool(self) -> '_4309.GearParametricStudyTool':
        """GearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4309.GearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_parametric_study_tool(self) -> '_4310.GearSetParametricStudyTool':
        """GearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4310.GearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_parametric_study_tool(self) -> '_4311.GuideDxfModelParametricStudyTool':
        """GuideDxfModelParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4311.GuideDxfModelParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_parametric_study_tool(self) -> '_4312.HypoidGearMeshParametricStudyTool':
        """HypoidGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4312.HypoidGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_parametric_study_tool(self) -> '_4313.HypoidGearParametricStudyTool':
        """HypoidGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4313.HypoidGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_parametric_study_tool(self) -> '_4314.HypoidGearSetParametricStudyTool':
        """HypoidGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4314.HypoidGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_parametric_study_tool(self) -> '_4315.InterMountableComponentConnectionParametricStudyTool':
        """InterMountableComponentConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4315.InterMountableComponentConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_parametric_study_tool(self) -> '_4316.KlingelnbergCycloPalloidConicalGearMeshParametricStudyTool':
        """KlingelnbergCycloPalloidConicalGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4316.KlingelnbergCycloPalloidConicalGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_parametric_study_tool(self) -> '_4317.KlingelnbergCycloPalloidConicalGearParametricStudyTool':
        """KlingelnbergCycloPalloidConicalGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4317.KlingelnbergCycloPalloidConicalGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_parametric_study_tool(self) -> '_4318.KlingelnbergCycloPalloidConicalGearSetParametricStudyTool':
        """KlingelnbergCycloPalloidConicalGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4318.KlingelnbergCycloPalloidConicalGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_parametric_study_tool(self) -> '_4319.KlingelnbergCycloPalloidHypoidGearMeshParametricStudyTool':
        """KlingelnbergCycloPalloidHypoidGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4319.KlingelnbergCycloPalloidHypoidGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_parametric_study_tool(self) -> '_4320.KlingelnbergCycloPalloidHypoidGearParametricStudyTool':
        """KlingelnbergCycloPalloidHypoidGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4320.KlingelnbergCycloPalloidHypoidGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_parametric_study_tool(self) -> '_4321.KlingelnbergCycloPalloidHypoidGearSetParametricStudyTool':
        """KlingelnbergCycloPalloidHypoidGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4321.KlingelnbergCycloPalloidHypoidGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_parametric_study_tool(self) -> '_4322.KlingelnbergCycloPalloidSpiralBevelGearMeshParametricStudyTool':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4322.KlingelnbergCycloPalloidSpiralBevelGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_parametric_study_tool(self) -> '_4323.KlingelnbergCycloPalloidSpiralBevelGearParametricStudyTool':
        """KlingelnbergCycloPalloidSpiralBevelGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4323.KlingelnbergCycloPalloidSpiralBevelGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_parametric_study_tool(self) -> '_4324.KlingelnbergCycloPalloidSpiralBevelGearSetParametricStudyTool':
        """KlingelnbergCycloPalloidSpiralBevelGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4324.KlingelnbergCycloPalloidSpiralBevelGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_parametric_study_tool(self) -> '_4325.MassDiscParametricStudyTool':
        """MassDiscParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4325.MassDiscParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_parametric_study_tool(self) -> '_4326.MeasurementComponentParametricStudyTool':
        """MeasurementComponentParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4326.MeasurementComponentParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_parametric_study_tool(self) -> '_4328.MountableComponentParametricStudyTool':
        """MountableComponentParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4328.MountableComponentParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_parametric_study_tool(self) -> '_4329.OilSealParametricStudyTool':
        """OilSealParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4329.OilSealParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_parametric_study_tool(self) -> '_4340.PartParametricStudyTool':
        """PartParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4340.PartParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_parametric_study_tool(self) -> '_4341.PartToPartShearCouplingConnectionParametricStudyTool':
        """PartToPartShearCouplingConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4341.PartToPartShearCouplingConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_parametric_study_tool(self) -> '_4342.PartToPartShearCouplingHalfParametricStudyTool':
        """PartToPartShearCouplingHalfParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4342.PartToPartShearCouplingHalfParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_parametric_study_tool(self) -> '_4343.PartToPartShearCouplingParametricStudyTool':
        """PartToPartShearCouplingParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4343.PartToPartShearCouplingParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_parametric_study_tool(self) -> '_4344.PlanetaryConnectionParametricStudyTool':
        """PlanetaryConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4344.PlanetaryConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_parametric_study_tool(self) -> '_4345.PlanetaryGearSetParametricStudyTool':
        """PlanetaryGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4345.PlanetaryGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_parametric_study_tool(self) -> '_4346.PlanetCarrierParametricStudyTool':
        """PlanetCarrierParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4346.PlanetCarrierParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_parametric_study_tool(self) -> '_4347.PointLoadParametricStudyTool':
        """PointLoadParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4347.PointLoadParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_parametric_study_tool(self) -> '_4348.PowerLoadParametricStudyTool':
        """PowerLoadParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4348.PowerLoadParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_parametric_study_tool(self) -> '_4349.PulleyParametricStudyTool':
        """PulleyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4349.PulleyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_parametric_study_tool(self) -> '_4350.RingPinsParametricStudyTool':
        """RingPinsParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4350.RingPinsParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_parametric_study_tool(self) -> '_4351.RingPinsToDiscConnectionParametricStudyTool':
        """RingPinsToDiscConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4351.RingPinsToDiscConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_parametric_study_tool(self) -> '_4352.RollingRingAssemblyParametricStudyTool':
        """RollingRingAssemblyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4352.RollingRingAssemblyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_parametric_study_tool(self) -> '_4353.RollingRingConnectionParametricStudyTool':
        """RollingRingConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4353.RollingRingConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_parametric_study_tool(self) -> '_4354.RollingRingParametricStudyTool':
        """RollingRingParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4354.RollingRingParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_parametric_study_tool(self) -> '_4355.RootAssemblyParametricStudyTool':
        """RootAssemblyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4355.RootAssemblyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_parametric_study_tool(self) -> '_4356.ShaftHubConnectionParametricStudyTool':
        """ShaftHubConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4356.ShaftHubConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_parametric_study_tool(self) -> '_4357.ShaftParametricStudyTool':
        """ShaftParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4357.ShaftParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_parametric_study_tool(self) -> '_4358.ShaftToMountableComponentConnectionParametricStudyTool':
        """ShaftToMountableComponentConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4358.ShaftToMountableComponentConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_parametric_study_tool(self) -> '_4359.SpecialisedAssemblyParametricStudyTool':
        """SpecialisedAssemblyParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4359.SpecialisedAssemblyParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_parametric_study_tool(self) -> '_4360.SpiralBevelGearMeshParametricStudyTool':
        """SpiralBevelGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4360.SpiralBevelGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_parametric_study_tool(self) -> '_4361.SpiralBevelGearParametricStudyTool':
        """SpiralBevelGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4361.SpiralBevelGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_parametric_study_tool(self) -> '_4362.SpiralBevelGearSetParametricStudyTool':
        """SpiralBevelGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4362.SpiralBevelGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_parametric_study_tool(self) -> '_4363.SpringDamperConnectionParametricStudyTool':
        """SpringDamperConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4363.SpringDamperConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_parametric_study_tool(self) -> '_4364.SpringDamperHalfParametricStudyTool':
        """SpringDamperHalfParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4364.SpringDamperHalfParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_parametric_study_tool(self) -> '_4365.SpringDamperParametricStudyTool':
        """SpringDamperParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4365.SpringDamperParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_parametric_study_tool(self) -> '_4366.StraightBevelDiffGearMeshParametricStudyTool':
        """StraightBevelDiffGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4366.StraightBevelDiffGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_parametric_study_tool(self) -> '_4367.StraightBevelDiffGearParametricStudyTool':
        """StraightBevelDiffGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4367.StraightBevelDiffGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_parametric_study_tool(self) -> '_4368.StraightBevelDiffGearSetParametricStudyTool':
        """StraightBevelDiffGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4368.StraightBevelDiffGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_parametric_study_tool(self) -> '_4369.StraightBevelGearMeshParametricStudyTool':
        """StraightBevelGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4369.StraightBevelGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_parametric_study_tool(self) -> '_4370.StraightBevelGearParametricStudyTool':
        """StraightBevelGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4370.StraightBevelGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_parametric_study_tool(self) -> '_4371.StraightBevelGearSetParametricStudyTool':
        """StraightBevelGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4371.StraightBevelGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_parametric_study_tool(self) -> '_4372.StraightBevelPlanetGearParametricStudyTool':
        """StraightBevelPlanetGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4372.StraightBevelPlanetGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_parametric_study_tool(self) -> '_4373.StraightBevelSunGearParametricStudyTool':
        """StraightBevelSunGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4373.StraightBevelSunGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_parametric_study_tool(self) -> '_4374.SynchroniserHalfParametricStudyTool':
        """SynchroniserHalfParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4374.SynchroniserHalfParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_parametric_study_tool(self) -> '_4375.SynchroniserParametricStudyTool':
        """SynchroniserParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4375.SynchroniserParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_parametric_study_tool(self) -> '_4376.SynchroniserPartParametricStudyTool':
        """SynchroniserPartParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4376.SynchroniserPartParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_parametric_study_tool(self) -> '_4377.SynchroniserSleeveParametricStudyTool':
        """SynchroniserSleeveParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4377.SynchroniserSleeveParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_parametric_study_tool(self) -> '_4378.TorqueConverterConnectionParametricStudyTool':
        """TorqueConverterConnectionParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4378.TorqueConverterConnectionParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_parametric_study_tool(self) -> '_4379.TorqueConverterParametricStudyTool':
        """TorqueConverterParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4379.TorqueConverterParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_parametric_study_tool(self) -> '_4380.TorqueConverterPumpParametricStudyTool':
        """TorqueConverterPumpParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4380.TorqueConverterPumpParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_parametric_study_tool(self) -> '_4381.TorqueConverterTurbineParametricStudyTool':
        """TorqueConverterTurbineParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4381.TorqueConverterTurbineParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_parametric_study_tool(self) -> '_4382.UnbalancedMassParametricStudyTool':
        """UnbalancedMassParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4382.UnbalancedMassParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_parametric_study_tool(self) -> '_4383.VirtualComponentParametricStudyTool':
        """VirtualComponentParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4383.VirtualComponentParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_parametric_study_tool(self) -> '_4384.WormGearMeshParametricStudyTool':
        """WormGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4384.WormGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_parametric_study_tool(self) -> '_4385.WormGearParametricStudyTool':
        """WormGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4385.WormGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_parametric_study_tool(self) -> '_4386.WormGearSetParametricStudyTool':
        """WormGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4386.WormGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_parametric_study_tool(self) -> '_4387.ZerolBevelGearMeshParametricStudyTool':
        """ZerolBevelGearMeshParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4387.ZerolBevelGearMeshParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_parametric_study_tool(self) -> '_4388.ZerolBevelGearParametricStudyTool':
        """ZerolBevelGearParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4388.ZerolBevelGearParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_parametric_study_tool(self) -> '_4389.ZerolBevelGearSetParametricStudyTool':
        """ZerolBevelGearSetParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4389.ZerolBevelGearSetParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_parametric_study_tool(self) -> '_4390.AbstractAssemblyCompoundParametricStudyTool':
        """AbstractAssemblyCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4390.AbstractAssemblyCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_parametric_study_tool(self) -> '_4391.AbstractShaftCompoundParametricStudyTool':
        """AbstractShaftCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4391.AbstractShaftCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_parametric_study_tool(self) -> '_4392.AbstractShaftOrHousingCompoundParametricStudyTool':
        """AbstractShaftOrHousingCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4392.AbstractShaftOrHousingCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_parametric_study_tool(self) -> '_4393.AbstractShaftToMountableComponentConnectionCompoundParametricStudyTool':
        """AbstractShaftToMountableComponentConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4393.AbstractShaftToMountableComponentConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_parametric_study_tool(self) -> '_4394.AGMAGleasonConicalGearCompoundParametricStudyTool':
        """AGMAGleasonConicalGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4394.AGMAGleasonConicalGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_parametric_study_tool(self) -> '_4395.AGMAGleasonConicalGearMeshCompoundParametricStudyTool':
        """AGMAGleasonConicalGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4395.AGMAGleasonConicalGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_parametric_study_tool(self) -> '_4396.AGMAGleasonConicalGearSetCompoundParametricStudyTool':
        """AGMAGleasonConicalGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4396.AGMAGleasonConicalGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_parametric_study_tool(self) -> '_4397.AssemblyCompoundParametricStudyTool':
        """AssemblyCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4397.AssemblyCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_parametric_study_tool(self) -> '_4398.BearingCompoundParametricStudyTool':
        """BearingCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4398.BearingCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_parametric_study_tool(self) -> '_4399.BeltConnectionCompoundParametricStudyTool':
        """BeltConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4399.BeltConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_parametric_study_tool(self) -> '_4400.BeltDriveCompoundParametricStudyTool':
        """BeltDriveCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4400.BeltDriveCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_parametric_study_tool(self) -> '_4401.BevelDifferentialGearCompoundParametricStudyTool':
        """BevelDifferentialGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4401.BevelDifferentialGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_parametric_study_tool(self) -> '_4402.BevelDifferentialGearMeshCompoundParametricStudyTool':
        """BevelDifferentialGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4402.BevelDifferentialGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_parametric_study_tool(self) -> '_4403.BevelDifferentialGearSetCompoundParametricStudyTool':
        """BevelDifferentialGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4403.BevelDifferentialGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_parametric_study_tool(self) -> '_4404.BevelDifferentialPlanetGearCompoundParametricStudyTool':
        """BevelDifferentialPlanetGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4404.BevelDifferentialPlanetGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_parametric_study_tool(self) -> '_4405.BevelDifferentialSunGearCompoundParametricStudyTool':
        """BevelDifferentialSunGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4405.BevelDifferentialSunGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_parametric_study_tool(self) -> '_4406.BevelGearCompoundParametricStudyTool':
        """BevelGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4406.BevelGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_parametric_study_tool(self) -> '_4407.BevelGearMeshCompoundParametricStudyTool':
        """BevelGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4407.BevelGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_parametric_study_tool(self) -> '_4408.BevelGearSetCompoundParametricStudyTool':
        """BevelGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4408.BevelGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_parametric_study_tool(self) -> '_4409.BoltCompoundParametricStudyTool':
        """BoltCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4409.BoltCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_parametric_study_tool(self) -> '_4410.BoltedJointCompoundParametricStudyTool':
        """BoltedJointCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4410.BoltedJointCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_parametric_study_tool(self) -> '_4411.ClutchCompoundParametricStudyTool':
        """ClutchCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4411.ClutchCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_parametric_study_tool(self) -> '_4412.ClutchConnectionCompoundParametricStudyTool':
        """ClutchConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4412.ClutchConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_parametric_study_tool(self) -> '_4413.ClutchHalfCompoundParametricStudyTool':
        """ClutchHalfCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4413.ClutchHalfCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_parametric_study_tool(self) -> '_4414.CoaxialConnectionCompoundParametricStudyTool':
        """CoaxialConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4414.CoaxialConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_parametric_study_tool(self) -> '_4415.ComponentCompoundParametricStudyTool':
        """ComponentCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4415.ComponentCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_parametric_study_tool(self) -> '_4416.ConceptCouplingCompoundParametricStudyTool':
        """ConceptCouplingCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4416.ConceptCouplingCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_parametric_study_tool(self) -> '_4417.ConceptCouplingConnectionCompoundParametricStudyTool':
        """ConceptCouplingConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4417.ConceptCouplingConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_parametric_study_tool(self) -> '_4418.ConceptCouplingHalfCompoundParametricStudyTool':
        """ConceptCouplingHalfCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4418.ConceptCouplingHalfCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_parametric_study_tool(self) -> '_4419.ConceptGearCompoundParametricStudyTool':
        """ConceptGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4419.ConceptGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_parametric_study_tool(self) -> '_4420.ConceptGearMeshCompoundParametricStudyTool':
        """ConceptGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4420.ConceptGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_parametric_study_tool(self) -> '_4421.ConceptGearSetCompoundParametricStudyTool':
        """ConceptGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4421.ConceptGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_parametric_study_tool(self) -> '_4422.ConicalGearCompoundParametricStudyTool':
        """ConicalGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4422.ConicalGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_parametric_study_tool(self) -> '_4423.ConicalGearMeshCompoundParametricStudyTool':
        """ConicalGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4423.ConicalGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_parametric_study_tool(self) -> '_4424.ConicalGearSetCompoundParametricStudyTool':
        """ConicalGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4424.ConicalGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_parametric_study_tool(self) -> '_4425.ConnectionCompoundParametricStudyTool':
        """ConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4425.ConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_parametric_study_tool(self) -> '_4426.ConnectorCompoundParametricStudyTool':
        """ConnectorCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4426.ConnectorCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_parametric_study_tool(self) -> '_4427.CouplingCompoundParametricStudyTool':
        """CouplingCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4427.CouplingCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_parametric_study_tool(self) -> '_4428.CouplingConnectionCompoundParametricStudyTool':
        """CouplingConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4428.CouplingConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_parametric_study_tool(self) -> '_4429.CouplingHalfCompoundParametricStudyTool':
        """CouplingHalfCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4429.CouplingHalfCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_parametric_study_tool(self) -> '_4430.CVTBeltConnectionCompoundParametricStudyTool':
        """CVTBeltConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4430.CVTBeltConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_parametric_study_tool(self) -> '_4431.CVTCompoundParametricStudyTool':
        """CVTCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4431.CVTCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_parametric_study_tool(self) -> '_4432.CVTPulleyCompoundParametricStudyTool':
        """CVTPulleyCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4432.CVTPulleyCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_parametric_study_tool(self) -> '_4433.CycloidalAssemblyCompoundParametricStudyTool':
        """CycloidalAssemblyCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4433.CycloidalAssemblyCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_parametric_study_tool(self) -> '_4434.CycloidalDiscCentralBearingConnectionCompoundParametricStudyTool':
        """CycloidalDiscCentralBearingConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4434.CycloidalDiscCentralBearingConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_parametric_study_tool(self) -> '_4435.CycloidalDiscCompoundParametricStudyTool':
        """CycloidalDiscCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4435.CycloidalDiscCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_parametric_study_tool(self) -> '_4436.CycloidalDiscPlanetaryBearingConnectionCompoundParametricStudyTool':
        """CycloidalDiscPlanetaryBearingConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4436.CycloidalDiscPlanetaryBearingConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_parametric_study_tool(self) -> '_4437.CylindricalGearCompoundParametricStudyTool':
        """CylindricalGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4437.CylindricalGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_parametric_study_tool(self) -> '_4438.CylindricalGearMeshCompoundParametricStudyTool':
        """CylindricalGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4438.CylindricalGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_parametric_study_tool(self) -> '_4439.CylindricalGearSetCompoundParametricStudyTool':
        """CylindricalGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4439.CylindricalGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_parametric_study_tool(self) -> '_4440.CylindricalPlanetGearCompoundParametricStudyTool':
        """CylindricalPlanetGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4440.CylindricalPlanetGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_parametric_study_tool(self) -> '_4441.DatumCompoundParametricStudyTool':
        """DatumCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4441.DatumCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_parametric_study_tool(self) -> '_4442.ExternalCADModelCompoundParametricStudyTool':
        """ExternalCADModelCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4442.ExternalCADModelCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_parametric_study_tool(self) -> '_4443.FaceGearCompoundParametricStudyTool':
        """FaceGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4443.FaceGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_parametric_study_tool(self) -> '_4444.FaceGearMeshCompoundParametricStudyTool':
        """FaceGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4444.FaceGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_parametric_study_tool(self) -> '_4445.FaceGearSetCompoundParametricStudyTool':
        """FaceGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4445.FaceGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_parametric_study_tool(self) -> '_4446.FEPartCompoundParametricStudyTool':
        """FEPartCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4446.FEPartCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_parametric_study_tool(self) -> '_4447.FlexiblePinAssemblyCompoundParametricStudyTool':
        """FlexiblePinAssemblyCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4447.FlexiblePinAssemblyCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_parametric_study_tool(self) -> '_4448.GearCompoundParametricStudyTool':
        """GearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4448.GearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_parametric_study_tool(self) -> '_4449.GearMeshCompoundParametricStudyTool':
        """GearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4449.GearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_parametric_study_tool(self) -> '_4450.GearSetCompoundParametricStudyTool':
        """GearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4450.GearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_parametric_study_tool(self) -> '_4451.GuideDxfModelCompoundParametricStudyTool':
        """GuideDxfModelCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4451.GuideDxfModelCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_parametric_study_tool(self) -> '_4452.HypoidGearCompoundParametricStudyTool':
        """HypoidGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4452.HypoidGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_parametric_study_tool(self) -> '_4453.HypoidGearMeshCompoundParametricStudyTool':
        """HypoidGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4453.HypoidGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_parametric_study_tool(self) -> '_4454.HypoidGearSetCompoundParametricStudyTool':
        """HypoidGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4454.HypoidGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_parametric_study_tool(self) -> '_4455.InterMountableComponentConnectionCompoundParametricStudyTool':
        """InterMountableComponentConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4455.InterMountableComponentConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_parametric_study_tool(self) -> '_4456.KlingelnbergCycloPalloidConicalGearCompoundParametricStudyTool':
        """KlingelnbergCycloPalloidConicalGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4456.KlingelnbergCycloPalloidConicalGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_parametric_study_tool(self) -> '_4457.KlingelnbergCycloPalloidConicalGearMeshCompoundParametricStudyTool':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4457.KlingelnbergCycloPalloidConicalGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_parametric_study_tool(self) -> '_4458.KlingelnbergCycloPalloidConicalGearSetCompoundParametricStudyTool':
        """KlingelnbergCycloPalloidConicalGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4458.KlingelnbergCycloPalloidConicalGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_parametric_study_tool(self) -> '_4459.KlingelnbergCycloPalloidHypoidGearCompoundParametricStudyTool':
        """KlingelnbergCycloPalloidHypoidGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4459.KlingelnbergCycloPalloidHypoidGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_parametric_study_tool(self) -> '_4460.KlingelnbergCycloPalloidHypoidGearMeshCompoundParametricStudyTool':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4460.KlingelnbergCycloPalloidHypoidGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_parametric_study_tool(self) -> '_4461.KlingelnbergCycloPalloidHypoidGearSetCompoundParametricStudyTool':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4461.KlingelnbergCycloPalloidHypoidGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_parametric_study_tool(self) -> '_4462.KlingelnbergCycloPalloidSpiralBevelGearCompoundParametricStudyTool':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4462.KlingelnbergCycloPalloidSpiralBevelGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_parametric_study_tool(self) -> '_4463.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundParametricStudyTool':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4463.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_parametric_study_tool(self) -> '_4464.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundParametricStudyTool':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4464.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_parametric_study_tool(self) -> '_4465.MassDiscCompoundParametricStudyTool':
        """MassDiscCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4465.MassDiscCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_parametric_study_tool(self) -> '_4466.MeasurementComponentCompoundParametricStudyTool':
        """MeasurementComponentCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4466.MeasurementComponentCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_parametric_study_tool(self) -> '_4467.MountableComponentCompoundParametricStudyTool':
        """MountableComponentCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4467.MountableComponentCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_parametric_study_tool(self) -> '_4468.OilSealCompoundParametricStudyTool':
        """OilSealCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4468.OilSealCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_parametric_study_tool(self) -> '_4469.PartCompoundParametricStudyTool':
        """PartCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4469.PartCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_parametric_study_tool(self) -> '_4470.PartToPartShearCouplingCompoundParametricStudyTool':
        """PartToPartShearCouplingCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4470.PartToPartShearCouplingCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_parametric_study_tool(self) -> '_4471.PartToPartShearCouplingConnectionCompoundParametricStudyTool':
        """PartToPartShearCouplingConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4471.PartToPartShearCouplingConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_parametric_study_tool(self) -> '_4472.PartToPartShearCouplingHalfCompoundParametricStudyTool':
        """PartToPartShearCouplingHalfCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4472.PartToPartShearCouplingHalfCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_parametric_study_tool(self) -> '_4473.PlanetaryConnectionCompoundParametricStudyTool':
        """PlanetaryConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4473.PlanetaryConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_parametric_study_tool(self) -> '_4474.PlanetaryGearSetCompoundParametricStudyTool':
        """PlanetaryGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4474.PlanetaryGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_parametric_study_tool(self) -> '_4475.PlanetCarrierCompoundParametricStudyTool':
        """PlanetCarrierCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4475.PlanetCarrierCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_parametric_study_tool(self) -> '_4476.PointLoadCompoundParametricStudyTool':
        """PointLoadCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4476.PointLoadCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_parametric_study_tool(self) -> '_4477.PowerLoadCompoundParametricStudyTool':
        """PowerLoadCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4477.PowerLoadCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_parametric_study_tool(self) -> '_4478.PulleyCompoundParametricStudyTool':
        """PulleyCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4478.PulleyCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_parametric_study_tool(self) -> '_4479.RingPinsCompoundParametricStudyTool':
        """RingPinsCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4479.RingPinsCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_parametric_study_tool(self) -> '_4480.RingPinsToDiscConnectionCompoundParametricStudyTool':
        """RingPinsToDiscConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4480.RingPinsToDiscConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_parametric_study_tool(self) -> '_4481.RollingRingAssemblyCompoundParametricStudyTool':
        """RollingRingAssemblyCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4481.RollingRingAssemblyCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_parametric_study_tool(self) -> '_4482.RollingRingCompoundParametricStudyTool':
        """RollingRingCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4482.RollingRingCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_parametric_study_tool(self) -> '_4483.RollingRingConnectionCompoundParametricStudyTool':
        """RollingRingConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4483.RollingRingConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_parametric_study_tool(self) -> '_4484.RootAssemblyCompoundParametricStudyTool':
        """RootAssemblyCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4484.RootAssemblyCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_parametric_study_tool(self) -> '_4485.ShaftCompoundParametricStudyTool':
        """ShaftCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4485.ShaftCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_parametric_study_tool(self) -> '_4486.ShaftHubConnectionCompoundParametricStudyTool':
        """ShaftHubConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4486.ShaftHubConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_parametric_study_tool(self) -> '_4487.ShaftToMountableComponentConnectionCompoundParametricStudyTool':
        """ShaftToMountableComponentConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4487.ShaftToMountableComponentConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_parametric_study_tool(self) -> '_4488.SpecialisedAssemblyCompoundParametricStudyTool':
        """SpecialisedAssemblyCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4488.SpecialisedAssemblyCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_parametric_study_tool(self) -> '_4489.SpiralBevelGearCompoundParametricStudyTool':
        """SpiralBevelGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4489.SpiralBevelGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_parametric_study_tool(self) -> '_4490.SpiralBevelGearMeshCompoundParametricStudyTool':
        """SpiralBevelGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4490.SpiralBevelGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_parametric_study_tool(self) -> '_4491.SpiralBevelGearSetCompoundParametricStudyTool':
        """SpiralBevelGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4491.SpiralBevelGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_parametric_study_tool(self) -> '_4492.SpringDamperCompoundParametricStudyTool':
        """SpringDamperCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4492.SpringDamperCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_parametric_study_tool(self) -> '_4493.SpringDamperConnectionCompoundParametricStudyTool':
        """SpringDamperConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4493.SpringDamperConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_parametric_study_tool(self) -> '_4494.SpringDamperHalfCompoundParametricStudyTool':
        """SpringDamperHalfCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4494.SpringDamperHalfCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_parametric_study_tool(self) -> '_4495.StraightBevelDiffGearCompoundParametricStudyTool':
        """StraightBevelDiffGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4495.StraightBevelDiffGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_parametric_study_tool(self) -> '_4496.StraightBevelDiffGearMeshCompoundParametricStudyTool':
        """StraightBevelDiffGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4496.StraightBevelDiffGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_parametric_study_tool(self) -> '_4497.StraightBevelDiffGearSetCompoundParametricStudyTool':
        """StraightBevelDiffGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4497.StraightBevelDiffGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_parametric_study_tool(self) -> '_4498.StraightBevelGearCompoundParametricStudyTool':
        """StraightBevelGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4498.StraightBevelGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_parametric_study_tool(self) -> '_4499.StraightBevelGearMeshCompoundParametricStudyTool':
        """StraightBevelGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4499.StraightBevelGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_parametric_study_tool(self) -> '_4500.StraightBevelGearSetCompoundParametricStudyTool':
        """StraightBevelGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4500.StraightBevelGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_parametric_study_tool(self) -> '_4501.StraightBevelPlanetGearCompoundParametricStudyTool':
        """StraightBevelPlanetGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4501.StraightBevelPlanetGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_parametric_study_tool(self) -> '_4502.StraightBevelSunGearCompoundParametricStudyTool':
        """StraightBevelSunGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4502.StraightBevelSunGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_parametric_study_tool(self) -> '_4503.SynchroniserCompoundParametricStudyTool':
        """SynchroniserCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4503.SynchroniserCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_parametric_study_tool(self) -> '_4504.SynchroniserHalfCompoundParametricStudyTool':
        """SynchroniserHalfCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4504.SynchroniserHalfCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_parametric_study_tool(self) -> '_4505.SynchroniserPartCompoundParametricStudyTool':
        """SynchroniserPartCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4505.SynchroniserPartCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_parametric_study_tool(self) -> '_4506.SynchroniserSleeveCompoundParametricStudyTool':
        """SynchroniserSleeveCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4506.SynchroniserSleeveCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_parametric_study_tool(self) -> '_4507.TorqueConverterCompoundParametricStudyTool':
        """TorqueConverterCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4507.TorqueConverterCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_parametric_study_tool(self) -> '_4508.TorqueConverterConnectionCompoundParametricStudyTool':
        """TorqueConverterConnectionCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4508.TorqueConverterConnectionCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_parametric_study_tool(self) -> '_4509.TorqueConverterPumpCompoundParametricStudyTool':
        """TorqueConverterPumpCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4509.TorqueConverterPumpCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_parametric_study_tool(self) -> '_4510.TorqueConverterTurbineCompoundParametricStudyTool':
        """TorqueConverterTurbineCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4510.TorqueConverterTurbineCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_parametric_study_tool(self) -> '_4511.UnbalancedMassCompoundParametricStudyTool':
        """UnbalancedMassCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4511.UnbalancedMassCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_parametric_study_tool(self) -> '_4512.VirtualComponentCompoundParametricStudyTool':
        """VirtualComponentCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4512.VirtualComponentCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_parametric_study_tool(self) -> '_4513.WormGearCompoundParametricStudyTool':
        """WormGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4513.WormGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_parametric_study_tool(self) -> '_4514.WormGearMeshCompoundParametricStudyTool':
        """WormGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4514.WormGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_parametric_study_tool(self) -> '_4515.WormGearSetCompoundParametricStudyTool':
        """WormGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4515.WormGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_parametric_study_tool(self) -> '_4516.ZerolBevelGearCompoundParametricStudyTool':
        """ZerolBevelGearCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4516.ZerolBevelGearCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_parametric_study_tool(self) -> '_4517.ZerolBevelGearMeshCompoundParametricStudyTool':
        """ZerolBevelGearMeshCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4517.ZerolBevelGearMeshCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_parametric_study_tool(self) -> '_4518.ZerolBevelGearSetCompoundParametricStudyTool':
        """ZerolBevelGearSetCompoundParametricStudyTool: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4518.ZerolBevelGearSetCompoundParametricStudyTool.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundParametricStudyTool. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_modal_analysis(self) -> '_4519.AbstractAssemblyModalAnalysis':
        """AbstractAssemblyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4519.AbstractAssemblyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_modal_analysis(self) -> '_4520.AbstractShaftModalAnalysis':
        """AbstractShaftModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4520.AbstractShaftModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_modal_analysis(self) -> '_4521.AbstractShaftOrHousingModalAnalysis':
        """AbstractShaftOrHousingModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4521.AbstractShaftOrHousingModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_modal_analysis(self) -> '_4522.AbstractShaftToMountableComponentConnectionModalAnalysis':
        """AbstractShaftToMountableComponentConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4522.AbstractShaftToMountableComponentConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_modal_analysis(self) -> '_4523.AGMAGleasonConicalGearMeshModalAnalysis':
        """AGMAGleasonConicalGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4523.AGMAGleasonConicalGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_modal_analysis(self) -> '_4524.AGMAGleasonConicalGearModalAnalysis':
        """AGMAGleasonConicalGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4524.AGMAGleasonConicalGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_modal_analysis(self) -> '_4525.AGMAGleasonConicalGearSetModalAnalysis':
        """AGMAGleasonConicalGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4525.AGMAGleasonConicalGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_modal_analysis(self) -> '_4526.AssemblyModalAnalysis':
        """AssemblyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4526.AssemblyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_modal_analysis(self) -> '_4527.BearingModalAnalysis':
        """BearingModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4527.BearingModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_modal_analysis(self) -> '_4528.BeltConnectionModalAnalysis':
        """BeltConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4528.BeltConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_modal_analysis(self) -> '_4529.BeltDriveModalAnalysis':
        """BeltDriveModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4529.BeltDriveModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_modal_analysis(self) -> '_4530.BevelDifferentialGearMeshModalAnalysis':
        """BevelDifferentialGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4530.BevelDifferentialGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_modal_analysis(self) -> '_4531.BevelDifferentialGearModalAnalysis':
        """BevelDifferentialGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4531.BevelDifferentialGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_modal_analysis(self) -> '_4532.BevelDifferentialGearSetModalAnalysis':
        """BevelDifferentialGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4532.BevelDifferentialGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_modal_analysis(self) -> '_4533.BevelDifferentialPlanetGearModalAnalysis':
        """BevelDifferentialPlanetGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4533.BevelDifferentialPlanetGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_modal_analysis(self) -> '_4534.BevelDifferentialSunGearModalAnalysis':
        """BevelDifferentialSunGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4534.BevelDifferentialSunGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_modal_analysis(self) -> '_4535.BevelGearMeshModalAnalysis':
        """BevelGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4535.BevelGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_modal_analysis(self) -> '_4536.BevelGearModalAnalysis':
        """BevelGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4536.BevelGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_modal_analysis(self) -> '_4537.BevelGearSetModalAnalysis':
        """BevelGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4537.BevelGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_modal_analysis(self) -> '_4538.BoltedJointModalAnalysis':
        """BoltedJointModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4538.BoltedJointModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_modal_analysis(self) -> '_4539.BoltModalAnalysis':
        """BoltModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4539.BoltModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_modal_analysis(self) -> '_4540.ClutchConnectionModalAnalysis':
        """ClutchConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4540.ClutchConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_modal_analysis(self) -> '_4541.ClutchHalfModalAnalysis':
        """ClutchHalfModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4541.ClutchHalfModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_modal_analysis(self) -> '_4542.ClutchModalAnalysis':
        """ClutchModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4542.ClutchModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_modal_analysis(self) -> '_4543.CoaxialConnectionModalAnalysis':
        """CoaxialConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4543.CoaxialConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_modal_analysis(self) -> '_4544.ComponentModalAnalysis':
        """ComponentModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4544.ComponentModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_modal_analysis(self) -> '_4545.ConceptCouplingConnectionModalAnalysis':
        """ConceptCouplingConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4545.ConceptCouplingConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_modal_analysis(self) -> '_4546.ConceptCouplingHalfModalAnalysis':
        """ConceptCouplingHalfModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4546.ConceptCouplingHalfModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_modal_analysis(self) -> '_4547.ConceptCouplingModalAnalysis':
        """ConceptCouplingModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4547.ConceptCouplingModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_modal_analysis(self) -> '_4548.ConceptGearMeshModalAnalysis':
        """ConceptGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4548.ConceptGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_modal_analysis(self) -> '_4549.ConceptGearModalAnalysis':
        """ConceptGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4549.ConceptGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_modal_analysis(self) -> '_4550.ConceptGearSetModalAnalysis':
        """ConceptGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4550.ConceptGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_modal_analysis(self) -> '_4551.ConicalGearMeshModalAnalysis':
        """ConicalGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4551.ConicalGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_modal_analysis(self) -> '_4552.ConicalGearModalAnalysis':
        """ConicalGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4552.ConicalGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_modal_analysis(self) -> '_4553.ConicalGearSetModalAnalysis':
        """ConicalGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4553.ConicalGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_modal_analysis(self) -> '_4554.ConnectionModalAnalysis':
        """ConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4554.ConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_modal_analysis(self) -> '_4555.ConnectorModalAnalysis':
        """ConnectorModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4555.ConnectorModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_modal_analysis(self) -> '_4557.CouplingConnectionModalAnalysis':
        """CouplingConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4557.CouplingConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_modal_analysis(self) -> '_4558.CouplingHalfModalAnalysis':
        """CouplingHalfModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4558.CouplingHalfModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_modal_analysis(self) -> '_4559.CouplingModalAnalysis':
        """CouplingModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4559.CouplingModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_modal_analysis(self) -> '_4560.CVTBeltConnectionModalAnalysis':
        """CVTBeltConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4560.CVTBeltConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_modal_analysis(self) -> '_4561.CVTModalAnalysis':
        """CVTModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4561.CVTModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_modal_analysis(self) -> '_4562.CVTPulleyModalAnalysis':
        """CVTPulleyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4562.CVTPulleyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_modal_analysis(self) -> '_4563.CycloidalAssemblyModalAnalysis':
        """CycloidalAssemblyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4563.CycloidalAssemblyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_modal_analysis(self) -> '_4564.CycloidalDiscCentralBearingConnectionModalAnalysis':
        """CycloidalDiscCentralBearingConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4564.CycloidalDiscCentralBearingConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_modal_analysis(self) -> '_4565.CycloidalDiscModalAnalysis':
        """CycloidalDiscModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4565.CycloidalDiscModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_modal_analysis(self) -> '_4566.CycloidalDiscPlanetaryBearingConnectionModalAnalysis':
        """CycloidalDiscPlanetaryBearingConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4566.CycloidalDiscPlanetaryBearingConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_modal_analysis(self) -> '_4567.CylindricalGearMeshModalAnalysis':
        """CylindricalGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4567.CylindricalGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_modal_analysis(self) -> '_4568.CylindricalGearModalAnalysis':
        """CylindricalGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4568.CylindricalGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_modal_analysis(self) -> '_4569.CylindricalGearSetModalAnalysis':
        """CylindricalGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4569.CylindricalGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_modal_analysis(self) -> '_4570.CylindricalPlanetGearModalAnalysis':
        """CylindricalPlanetGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4570.CylindricalPlanetGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_modal_analysis(self) -> '_4571.DatumModalAnalysis':
        """DatumModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4571.DatumModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_modal_analysis(self) -> '_4574.ExternalCADModelModalAnalysis':
        """ExternalCADModelModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4574.ExternalCADModelModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_modal_analysis(self) -> '_4575.FaceGearMeshModalAnalysis':
        """FaceGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4575.FaceGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_modal_analysis(self) -> '_4576.FaceGearModalAnalysis':
        """FaceGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4576.FaceGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_modal_analysis(self) -> '_4577.FaceGearSetModalAnalysis':
        """FaceGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4577.FaceGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_modal_analysis(self) -> '_4578.FEPartModalAnalysis':
        """FEPartModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4578.FEPartModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_modal_analysis(self) -> '_4579.FlexiblePinAssemblyModalAnalysis':
        """FlexiblePinAssemblyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4579.FlexiblePinAssemblyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_modal_analysis(self) -> '_4581.GearMeshModalAnalysis':
        """GearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4581.GearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_modal_analysis(self) -> '_4582.GearModalAnalysis':
        """GearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4582.GearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_modal_analysis(self) -> '_4583.GearSetModalAnalysis':
        """GearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4583.GearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_modal_analysis(self) -> '_4584.GuideDxfModelModalAnalysis':
        """GuideDxfModelModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4584.GuideDxfModelModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_modal_analysis(self) -> '_4585.HypoidGearMeshModalAnalysis':
        """HypoidGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4585.HypoidGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_modal_analysis(self) -> '_4586.HypoidGearModalAnalysis':
        """HypoidGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4586.HypoidGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_modal_analysis(self) -> '_4587.HypoidGearSetModalAnalysis':
        """HypoidGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4587.HypoidGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_modal_analysis(self) -> '_4588.InterMountableComponentConnectionModalAnalysis':
        """InterMountableComponentConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4588.InterMountableComponentConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_modal_analysis(self) -> '_4589.KlingelnbergCycloPalloidConicalGearMeshModalAnalysis':
        """KlingelnbergCycloPalloidConicalGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4589.KlingelnbergCycloPalloidConicalGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_modal_analysis(self) -> '_4590.KlingelnbergCycloPalloidConicalGearModalAnalysis':
        """KlingelnbergCycloPalloidConicalGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4590.KlingelnbergCycloPalloidConicalGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_modal_analysis(self) -> '_4591.KlingelnbergCycloPalloidConicalGearSetModalAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4591.KlingelnbergCycloPalloidConicalGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_modal_analysis(self) -> '_4592.KlingelnbergCycloPalloidHypoidGearMeshModalAnalysis':
        """KlingelnbergCycloPalloidHypoidGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4592.KlingelnbergCycloPalloidHypoidGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_modal_analysis(self) -> '_4593.KlingelnbergCycloPalloidHypoidGearModalAnalysis':
        """KlingelnbergCycloPalloidHypoidGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4593.KlingelnbergCycloPalloidHypoidGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_modal_analysis(self) -> '_4594.KlingelnbergCycloPalloidHypoidGearSetModalAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4594.KlingelnbergCycloPalloidHypoidGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_modal_analysis(self) -> '_4595.KlingelnbergCycloPalloidSpiralBevelGearMeshModalAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4595.KlingelnbergCycloPalloidSpiralBevelGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_modal_analysis(self) -> '_4596.KlingelnbergCycloPalloidSpiralBevelGearModalAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4596.KlingelnbergCycloPalloidSpiralBevelGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_modal_analysis(self) -> '_4597.KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4597.KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_modal_analysis(self) -> '_4598.MassDiscModalAnalysis':
        """MassDiscModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4598.MassDiscModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_modal_analysis(self) -> '_4599.MeasurementComponentModalAnalysis':
        """MeasurementComponentModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4599.MeasurementComponentModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_modal_analysis(self) -> '_4603.MountableComponentModalAnalysis':
        """MountableComponentModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4603.MountableComponentModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_modal_analysis(self) -> '_4605.OilSealModalAnalysis':
        """OilSealModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4605.OilSealModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_modal_analysis(self) -> '_4607.PartModalAnalysis':
        """PartModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4607.PartModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_modal_analysis(self) -> '_4608.PartToPartShearCouplingConnectionModalAnalysis':
        """PartToPartShearCouplingConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4608.PartToPartShearCouplingConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_modal_analysis(self) -> '_4609.PartToPartShearCouplingHalfModalAnalysis':
        """PartToPartShearCouplingHalfModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4609.PartToPartShearCouplingHalfModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_modal_analysis(self) -> '_4610.PartToPartShearCouplingModalAnalysis':
        """PartToPartShearCouplingModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4610.PartToPartShearCouplingModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_modal_analysis(self) -> '_4611.PlanetaryConnectionModalAnalysis':
        """PlanetaryConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4611.PlanetaryConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_modal_analysis(self) -> '_4612.PlanetaryGearSetModalAnalysis':
        """PlanetaryGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4612.PlanetaryGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_modal_analysis(self) -> '_4613.PlanetCarrierModalAnalysis':
        """PlanetCarrierModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4613.PlanetCarrierModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_modal_analysis(self) -> '_4614.PointLoadModalAnalysis':
        """PointLoadModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4614.PointLoadModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_modal_analysis(self) -> '_4615.PowerLoadModalAnalysis':
        """PowerLoadModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4615.PowerLoadModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_modal_analysis(self) -> '_4616.PulleyModalAnalysis':
        """PulleyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4616.PulleyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_modal_analysis(self) -> '_4617.RingPinsModalAnalysis':
        """RingPinsModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4617.RingPinsModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_modal_analysis(self) -> '_4618.RingPinsToDiscConnectionModalAnalysis':
        """RingPinsToDiscConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4618.RingPinsToDiscConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_modal_analysis(self) -> '_4619.RollingRingAssemblyModalAnalysis':
        """RollingRingAssemblyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4619.RollingRingAssemblyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_modal_analysis(self) -> '_4620.RollingRingConnectionModalAnalysis':
        """RollingRingConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4620.RollingRingConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_modal_analysis(self) -> '_4621.RollingRingModalAnalysis':
        """RollingRingModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4621.RollingRingModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_modal_analysis(self) -> '_4622.RootAssemblyModalAnalysis':
        """RootAssemblyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4622.RootAssemblyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_modal_analysis(self) -> '_4623.ShaftHubConnectionModalAnalysis':
        """ShaftHubConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4623.ShaftHubConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_modal_analysis(self) -> '_4624.ShaftModalAnalysis':
        """ShaftModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4624.ShaftModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_modal_analysis(self) -> '_4626.ShaftToMountableComponentConnectionModalAnalysis':
        """ShaftToMountableComponentConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4626.ShaftToMountableComponentConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_modal_analysis(self) -> '_4627.SpecialisedAssemblyModalAnalysis':
        """SpecialisedAssemblyModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4627.SpecialisedAssemblyModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_modal_analysis(self) -> '_4628.SpiralBevelGearMeshModalAnalysis':
        """SpiralBevelGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4628.SpiralBevelGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_modal_analysis(self) -> '_4629.SpiralBevelGearModalAnalysis':
        """SpiralBevelGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4629.SpiralBevelGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_modal_analysis(self) -> '_4630.SpiralBevelGearSetModalAnalysis':
        """SpiralBevelGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4630.SpiralBevelGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_modal_analysis(self) -> '_4631.SpringDamperConnectionModalAnalysis':
        """SpringDamperConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4631.SpringDamperConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_modal_analysis(self) -> '_4632.SpringDamperHalfModalAnalysis':
        """SpringDamperHalfModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4632.SpringDamperHalfModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_modal_analysis(self) -> '_4633.SpringDamperModalAnalysis':
        """SpringDamperModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4633.SpringDamperModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_modal_analysis(self) -> '_4634.StraightBevelDiffGearMeshModalAnalysis':
        """StraightBevelDiffGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4634.StraightBevelDiffGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_modal_analysis(self) -> '_4635.StraightBevelDiffGearModalAnalysis':
        """StraightBevelDiffGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4635.StraightBevelDiffGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_modal_analysis(self) -> '_4636.StraightBevelDiffGearSetModalAnalysis':
        """StraightBevelDiffGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4636.StraightBevelDiffGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_modal_analysis(self) -> '_4637.StraightBevelGearMeshModalAnalysis':
        """StraightBevelGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4637.StraightBevelGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_modal_analysis(self) -> '_4638.StraightBevelGearModalAnalysis':
        """StraightBevelGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4638.StraightBevelGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_modal_analysis(self) -> '_4639.StraightBevelGearSetModalAnalysis':
        """StraightBevelGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4639.StraightBevelGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_modal_analysis(self) -> '_4640.StraightBevelPlanetGearModalAnalysis':
        """StraightBevelPlanetGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4640.StraightBevelPlanetGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_modal_analysis(self) -> '_4641.StraightBevelSunGearModalAnalysis':
        """StraightBevelSunGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4641.StraightBevelSunGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_modal_analysis(self) -> '_4642.SynchroniserHalfModalAnalysis':
        """SynchroniserHalfModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4642.SynchroniserHalfModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_modal_analysis(self) -> '_4643.SynchroniserModalAnalysis':
        """SynchroniserModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4643.SynchroniserModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_modal_analysis(self) -> '_4644.SynchroniserPartModalAnalysis':
        """SynchroniserPartModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4644.SynchroniserPartModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_modal_analysis(self) -> '_4645.SynchroniserSleeveModalAnalysis':
        """SynchroniserSleeveModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4645.SynchroniserSleeveModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_modal_analysis(self) -> '_4646.TorqueConverterConnectionModalAnalysis':
        """TorqueConverterConnectionModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4646.TorqueConverterConnectionModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_modal_analysis(self) -> '_4647.TorqueConverterModalAnalysis':
        """TorqueConverterModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4647.TorqueConverterModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_modal_analysis(self) -> '_4648.TorqueConverterPumpModalAnalysis':
        """TorqueConverterPumpModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4648.TorqueConverterPumpModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_modal_analysis(self) -> '_4649.TorqueConverterTurbineModalAnalysis':
        """TorqueConverterTurbineModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4649.TorqueConverterTurbineModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_modal_analysis(self) -> '_4650.UnbalancedMassModalAnalysis':
        """UnbalancedMassModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4650.UnbalancedMassModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_modal_analysis(self) -> '_4651.VirtualComponentModalAnalysis':
        """VirtualComponentModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4651.VirtualComponentModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_modal_analysis(self) -> '_4655.WormGearMeshModalAnalysis':
        """WormGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4655.WormGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_modal_analysis(self) -> '_4656.WormGearModalAnalysis':
        """WormGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4656.WormGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_modal_analysis(self) -> '_4657.WormGearSetModalAnalysis':
        """WormGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4657.WormGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_modal_analysis(self) -> '_4658.ZerolBevelGearMeshModalAnalysis':
        """ZerolBevelGearMeshModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4658.ZerolBevelGearMeshModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_modal_analysis(self) -> '_4659.ZerolBevelGearModalAnalysis':
        """ZerolBevelGearModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4659.ZerolBevelGearModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_modal_analysis(self) -> '_4660.ZerolBevelGearSetModalAnalysis':
        """ZerolBevelGearSetModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4660.ZerolBevelGearSetModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_modal_analysis(self) -> '_4673.AbstractAssemblyCompoundModalAnalysis':
        """AbstractAssemblyCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4673.AbstractAssemblyCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_modal_analysis(self) -> '_4674.AbstractShaftCompoundModalAnalysis':
        """AbstractShaftCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4674.AbstractShaftCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_modal_analysis(self) -> '_4675.AbstractShaftOrHousingCompoundModalAnalysis':
        """AbstractShaftOrHousingCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4675.AbstractShaftOrHousingCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_modal_analysis(self) -> '_4676.AbstractShaftToMountableComponentConnectionCompoundModalAnalysis':
        """AbstractShaftToMountableComponentConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4676.AbstractShaftToMountableComponentConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_modal_analysis(self) -> '_4677.AGMAGleasonConicalGearCompoundModalAnalysis':
        """AGMAGleasonConicalGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4677.AGMAGleasonConicalGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_modal_analysis(self) -> '_4678.AGMAGleasonConicalGearMeshCompoundModalAnalysis':
        """AGMAGleasonConicalGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4678.AGMAGleasonConicalGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_modal_analysis(self) -> '_4679.AGMAGleasonConicalGearSetCompoundModalAnalysis':
        """AGMAGleasonConicalGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4679.AGMAGleasonConicalGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_modal_analysis(self) -> '_4680.AssemblyCompoundModalAnalysis':
        """AssemblyCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4680.AssemblyCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_modal_analysis(self) -> '_4681.BearingCompoundModalAnalysis':
        """BearingCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4681.BearingCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_modal_analysis(self) -> '_4682.BeltConnectionCompoundModalAnalysis':
        """BeltConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4682.BeltConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_modal_analysis(self) -> '_4683.BeltDriveCompoundModalAnalysis':
        """BeltDriveCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4683.BeltDriveCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_modal_analysis(self) -> '_4684.BevelDifferentialGearCompoundModalAnalysis':
        """BevelDifferentialGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4684.BevelDifferentialGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_modal_analysis(self) -> '_4685.BevelDifferentialGearMeshCompoundModalAnalysis':
        """BevelDifferentialGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4685.BevelDifferentialGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_modal_analysis(self) -> '_4686.BevelDifferentialGearSetCompoundModalAnalysis':
        """BevelDifferentialGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4686.BevelDifferentialGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_modal_analysis(self) -> '_4687.BevelDifferentialPlanetGearCompoundModalAnalysis':
        """BevelDifferentialPlanetGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4687.BevelDifferentialPlanetGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_modal_analysis(self) -> '_4688.BevelDifferentialSunGearCompoundModalAnalysis':
        """BevelDifferentialSunGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4688.BevelDifferentialSunGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_modal_analysis(self) -> '_4689.BevelGearCompoundModalAnalysis':
        """BevelGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4689.BevelGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_modal_analysis(self) -> '_4690.BevelGearMeshCompoundModalAnalysis':
        """BevelGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4690.BevelGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_modal_analysis(self) -> '_4691.BevelGearSetCompoundModalAnalysis':
        """BevelGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4691.BevelGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_modal_analysis(self) -> '_4692.BoltCompoundModalAnalysis':
        """BoltCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4692.BoltCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_modal_analysis(self) -> '_4693.BoltedJointCompoundModalAnalysis':
        """BoltedJointCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4693.BoltedJointCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_modal_analysis(self) -> '_4694.ClutchCompoundModalAnalysis':
        """ClutchCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4694.ClutchCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_modal_analysis(self) -> '_4695.ClutchConnectionCompoundModalAnalysis':
        """ClutchConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4695.ClutchConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_modal_analysis(self) -> '_4696.ClutchHalfCompoundModalAnalysis':
        """ClutchHalfCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4696.ClutchHalfCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_modal_analysis(self) -> '_4697.CoaxialConnectionCompoundModalAnalysis':
        """CoaxialConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4697.CoaxialConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_modal_analysis(self) -> '_4698.ComponentCompoundModalAnalysis':
        """ComponentCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4698.ComponentCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_modal_analysis(self) -> '_4699.ConceptCouplingCompoundModalAnalysis':
        """ConceptCouplingCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4699.ConceptCouplingCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_modal_analysis(self) -> '_4700.ConceptCouplingConnectionCompoundModalAnalysis':
        """ConceptCouplingConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4700.ConceptCouplingConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_modal_analysis(self) -> '_4701.ConceptCouplingHalfCompoundModalAnalysis':
        """ConceptCouplingHalfCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4701.ConceptCouplingHalfCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_modal_analysis(self) -> '_4702.ConceptGearCompoundModalAnalysis':
        """ConceptGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4702.ConceptGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_modal_analysis(self) -> '_4703.ConceptGearMeshCompoundModalAnalysis':
        """ConceptGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4703.ConceptGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_modal_analysis(self) -> '_4704.ConceptGearSetCompoundModalAnalysis':
        """ConceptGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4704.ConceptGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_modal_analysis(self) -> '_4705.ConicalGearCompoundModalAnalysis':
        """ConicalGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4705.ConicalGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_modal_analysis(self) -> '_4706.ConicalGearMeshCompoundModalAnalysis':
        """ConicalGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4706.ConicalGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_modal_analysis(self) -> '_4707.ConicalGearSetCompoundModalAnalysis':
        """ConicalGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4707.ConicalGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_modal_analysis(self) -> '_4708.ConnectionCompoundModalAnalysis':
        """ConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4708.ConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_modal_analysis(self) -> '_4709.ConnectorCompoundModalAnalysis':
        """ConnectorCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4709.ConnectorCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_modal_analysis(self) -> '_4710.CouplingCompoundModalAnalysis':
        """CouplingCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4710.CouplingCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_modal_analysis(self) -> '_4711.CouplingConnectionCompoundModalAnalysis':
        """CouplingConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4711.CouplingConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_modal_analysis(self) -> '_4712.CouplingHalfCompoundModalAnalysis':
        """CouplingHalfCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4712.CouplingHalfCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_modal_analysis(self) -> '_4713.CVTBeltConnectionCompoundModalAnalysis':
        """CVTBeltConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4713.CVTBeltConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_modal_analysis(self) -> '_4714.CVTCompoundModalAnalysis':
        """CVTCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4714.CVTCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_modal_analysis(self) -> '_4715.CVTPulleyCompoundModalAnalysis':
        """CVTPulleyCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4715.CVTPulleyCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_modal_analysis(self) -> '_4716.CycloidalAssemblyCompoundModalAnalysis':
        """CycloidalAssemblyCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4716.CycloidalAssemblyCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_modal_analysis(self) -> '_4717.CycloidalDiscCentralBearingConnectionCompoundModalAnalysis':
        """CycloidalDiscCentralBearingConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4717.CycloidalDiscCentralBearingConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_modal_analysis(self) -> '_4718.CycloidalDiscCompoundModalAnalysis':
        """CycloidalDiscCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4718.CycloidalDiscCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_modal_analysis(self) -> '_4719.CycloidalDiscPlanetaryBearingConnectionCompoundModalAnalysis':
        """CycloidalDiscPlanetaryBearingConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4719.CycloidalDiscPlanetaryBearingConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_modal_analysis(self) -> '_4720.CylindricalGearCompoundModalAnalysis':
        """CylindricalGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4720.CylindricalGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_modal_analysis(self) -> '_4721.CylindricalGearMeshCompoundModalAnalysis':
        """CylindricalGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4721.CylindricalGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_modal_analysis(self) -> '_4722.CylindricalGearSetCompoundModalAnalysis':
        """CylindricalGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4722.CylindricalGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_modal_analysis(self) -> '_4723.CylindricalPlanetGearCompoundModalAnalysis':
        """CylindricalPlanetGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4723.CylindricalPlanetGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_modal_analysis(self) -> '_4724.DatumCompoundModalAnalysis':
        """DatumCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4724.DatumCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_modal_analysis(self) -> '_4725.ExternalCADModelCompoundModalAnalysis':
        """ExternalCADModelCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4725.ExternalCADModelCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_modal_analysis(self) -> '_4726.FaceGearCompoundModalAnalysis':
        """FaceGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4726.FaceGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_modal_analysis(self) -> '_4727.FaceGearMeshCompoundModalAnalysis':
        """FaceGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4727.FaceGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_modal_analysis(self) -> '_4728.FaceGearSetCompoundModalAnalysis':
        """FaceGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4728.FaceGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_modal_analysis(self) -> '_4729.FEPartCompoundModalAnalysis':
        """FEPartCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4729.FEPartCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_modal_analysis(self) -> '_4730.FlexiblePinAssemblyCompoundModalAnalysis':
        """FlexiblePinAssemblyCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4730.FlexiblePinAssemblyCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_modal_analysis(self) -> '_4731.GearCompoundModalAnalysis':
        """GearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4731.GearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_modal_analysis(self) -> '_4732.GearMeshCompoundModalAnalysis':
        """GearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4732.GearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_modal_analysis(self) -> '_4733.GearSetCompoundModalAnalysis':
        """GearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4733.GearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_modal_analysis(self) -> '_4734.GuideDxfModelCompoundModalAnalysis':
        """GuideDxfModelCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4734.GuideDxfModelCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_modal_analysis(self) -> '_4735.HypoidGearCompoundModalAnalysis':
        """HypoidGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4735.HypoidGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_modal_analysis(self) -> '_4736.HypoidGearMeshCompoundModalAnalysis':
        """HypoidGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4736.HypoidGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_modal_analysis(self) -> '_4737.HypoidGearSetCompoundModalAnalysis':
        """HypoidGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4737.HypoidGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_modal_analysis(self) -> '_4738.InterMountableComponentConnectionCompoundModalAnalysis':
        """InterMountableComponentConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4738.InterMountableComponentConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_modal_analysis(self) -> '_4739.KlingelnbergCycloPalloidConicalGearCompoundModalAnalysis':
        """KlingelnbergCycloPalloidConicalGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4739.KlingelnbergCycloPalloidConicalGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_modal_analysis(self) -> '_4740.KlingelnbergCycloPalloidConicalGearMeshCompoundModalAnalysis':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4740.KlingelnbergCycloPalloidConicalGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_modal_analysis(self) -> '_4741.KlingelnbergCycloPalloidConicalGearSetCompoundModalAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4741.KlingelnbergCycloPalloidConicalGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_modal_analysis(self) -> '_4742.KlingelnbergCycloPalloidHypoidGearCompoundModalAnalysis':
        """KlingelnbergCycloPalloidHypoidGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4742.KlingelnbergCycloPalloidHypoidGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_modal_analysis(self) -> '_4743.KlingelnbergCycloPalloidHypoidGearMeshCompoundModalAnalysis':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4743.KlingelnbergCycloPalloidHypoidGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_modal_analysis(self) -> '_4744.KlingelnbergCycloPalloidHypoidGearSetCompoundModalAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4744.KlingelnbergCycloPalloidHypoidGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_modal_analysis(self) -> '_4745.KlingelnbergCycloPalloidSpiralBevelGearCompoundModalAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4745.KlingelnbergCycloPalloidSpiralBevelGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_modal_analysis(self) -> '_4746.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundModalAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4746.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_modal_analysis(self) -> '_4747.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundModalAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4747.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_modal_analysis(self) -> '_4748.MassDiscCompoundModalAnalysis':
        """MassDiscCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4748.MassDiscCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_modal_analysis(self) -> '_4749.MeasurementComponentCompoundModalAnalysis':
        """MeasurementComponentCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4749.MeasurementComponentCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_modal_analysis(self) -> '_4750.MountableComponentCompoundModalAnalysis':
        """MountableComponentCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4750.MountableComponentCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_modal_analysis(self) -> '_4751.OilSealCompoundModalAnalysis':
        """OilSealCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4751.OilSealCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_modal_analysis(self) -> '_4752.PartCompoundModalAnalysis':
        """PartCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4752.PartCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_modal_analysis(self) -> '_4753.PartToPartShearCouplingCompoundModalAnalysis':
        """PartToPartShearCouplingCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4753.PartToPartShearCouplingCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_modal_analysis(self) -> '_4754.PartToPartShearCouplingConnectionCompoundModalAnalysis':
        """PartToPartShearCouplingConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4754.PartToPartShearCouplingConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_modal_analysis(self) -> '_4755.PartToPartShearCouplingHalfCompoundModalAnalysis':
        """PartToPartShearCouplingHalfCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4755.PartToPartShearCouplingHalfCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_modal_analysis(self) -> '_4756.PlanetaryConnectionCompoundModalAnalysis':
        """PlanetaryConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4756.PlanetaryConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_modal_analysis(self) -> '_4757.PlanetaryGearSetCompoundModalAnalysis':
        """PlanetaryGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4757.PlanetaryGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_modal_analysis(self) -> '_4758.PlanetCarrierCompoundModalAnalysis':
        """PlanetCarrierCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4758.PlanetCarrierCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_modal_analysis(self) -> '_4759.PointLoadCompoundModalAnalysis':
        """PointLoadCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4759.PointLoadCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_modal_analysis(self) -> '_4760.PowerLoadCompoundModalAnalysis':
        """PowerLoadCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4760.PowerLoadCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_modal_analysis(self) -> '_4761.PulleyCompoundModalAnalysis':
        """PulleyCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4761.PulleyCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_modal_analysis(self) -> '_4762.RingPinsCompoundModalAnalysis':
        """RingPinsCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4762.RingPinsCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_modal_analysis(self) -> '_4763.RingPinsToDiscConnectionCompoundModalAnalysis':
        """RingPinsToDiscConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4763.RingPinsToDiscConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_modal_analysis(self) -> '_4764.RollingRingAssemblyCompoundModalAnalysis':
        """RollingRingAssemblyCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4764.RollingRingAssemblyCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_modal_analysis(self) -> '_4765.RollingRingCompoundModalAnalysis':
        """RollingRingCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4765.RollingRingCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_modal_analysis(self) -> '_4766.RollingRingConnectionCompoundModalAnalysis':
        """RollingRingConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4766.RollingRingConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_modal_analysis(self) -> '_4767.RootAssemblyCompoundModalAnalysis':
        """RootAssemblyCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4767.RootAssemblyCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_modal_analysis(self) -> '_4768.ShaftCompoundModalAnalysis':
        """ShaftCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4768.ShaftCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_modal_analysis(self) -> '_4769.ShaftHubConnectionCompoundModalAnalysis':
        """ShaftHubConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4769.ShaftHubConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_modal_analysis(self) -> '_4770.ShaftToMountableComponentConnectionCompoundModalAnalysis':
        """ShaftToMountableComponentConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4770.ShaftToMountableComponentConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_modal_analysis(self) -> '_4771.SpecialisedAssemblyCompoundModalAnalysis':
        """SpecialisedAssemblyCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4771.SpecialisedAssemblyCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_modal_analysis(self) -> '_4772.SpiralBevelGearCompoundModalAnalysis':
        """SpiralBevelGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4772.SpiralBevelGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_modal_analysis(self) -> '_4773.SpiralBevelGearMeshCompoundModalAnalysis':
        """SpiralBevelGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4773.SpiralBevelGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_modal_analysis(self) -> '_4774.SpiralBevelGearSetCompoundModalAnalysis':
        """SpiralBevelGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4774.SpiralBevelGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_modal_analysis(self) -> '_4775.SpringDamperCompoundModalAnalysis':
        """SpringDamperCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4775.SpringDamperCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_modal_analysis(self) -> '_4776.SpringDamperConnectionCompoundModalAnalysis':
        """SpringDamperConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4776.SpringDamperConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_modal_analysis(self) -> '_4777.SpringDamperHalfCompoundModalAnalysis':
        """SpringDamperHalfCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4777.SpringDamperHalfCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_modal_analysis(self) -> '_4778.StraightBevelDiffGearCompoundModalAnalysis':
        """StraightBevelDiffGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4778.StraightBevelDiffGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_modal_analysis(self) -> '_4779.StraightBevelDiffGearMeshCompoundModalAnalysis':
        """StraightBevelDiffGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4779.StraightBevelDiffGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_modal_analysis(self) -> '_4780.StraightBevelDiffGearSetCompoundModalAnalysis':
        """StraightBevelDiffGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4780.StraightBevelDiffGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_modal_analysis(self) -> '_4781.StraightBevelGearCompoundModalAnalysis':
        """StraightBevelGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4781.StraightBevelGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_modal_analysis(self) -> '_4782.StraightBevelGearMeshCompoundModalAnalysis':
        """StraightBevelGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4782.StraightBevelGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_modal_analysis(self) -> '_4783.StraightBevelGearSetCompoundModalAnalysis':
        """StraightBevelGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4783.StraightBevelGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_modal_analysis(self) -> '_4784.StraightBevelPlanetGearCompoundModalAnalysis':
        """StraightBevelPlanetGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4784.StraightBevelPlanetGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_modal_analysis(self) -> '_4785.StraightBevelSunGearCompoundModalAnalysis':
        """StraightBevelSunGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4785.StraightBevelSunGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_modal_analysis(self) -> '_4786.SynchroniserCompoundModalAnalysis':
        """SynchroniserCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4786.SynchroniserCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_modal_analysis(self) -> '_4787.SynchroniserHalfCompoundModalAnalysis':
        """SynchroniserHalfCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4787.SynchroniserHalfCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_modal_analysis(self) -> '_4788.SynchroniserPartCompoundModalAnalysis':
        """SynchroniserPartCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4788.SynchroniserPartCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_modal_analysis(self) -> '_4789.SynchroniserSleeveCompoundModalAnalysis':
        """SynchroniserSleeveCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4789.SynchroniserSleeveCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_modal_analysis(self) -> '_4790.TorqueConverterCompoundModalAnalysis':
        """TorqueConverterCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4790.TorqueConverterCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_modal_analysis(self) -> '_4791.TorqueConverterConnectionCompoundModalAnalysis':
        """TorqueConverterConnectionCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4791.TorqueConverterConnectionCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_modal_analysis(self) -> '_4792.TorqueConverterPumpCompoundModalAnalysis':
        """TorqueConverterPumpCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4792.TorqueConverterPumpCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_modal_analysis(self) -> '_4793.TorqueConverterTurbineCompoundModalAnalysis':
        """TorqueConverterTurbineCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4793.TorqueConverterTurbineCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_modal_analysis(self) -> '_4794.UnbalancedMassCompoundModalAnalysis':
        """UnbalancedMassCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4794.UnbalancedMassCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_modal_analysis(self) -> '_4795.VirtualComponentCompoundModalAnalysis':
        """VirtualComponentCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4795.VirtualComponentCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_modal_analysis(self) -> '_4796.WormGearCompoundModalAnalysis':
        """WormGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4796.WormGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_modal_analysis(self) -> '_4797.WormGearMeshCompoundModalAnalysis':
        """WormGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4797.WormGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_modal_analysis(self) -> '_4798.WormGearSetCompoundModalAnalysis':
        """WormGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4798.WormGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_modal_analysis(self) -> '_4799.ZerolBevelGearCompoundModalAnalysis':
        """ZerolBevelGearCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4799.ZerolBevelGearCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_modal_analysis(self) -> '_4800.ZerolBevelGearMeshCompoundModalAnalysis':
        """ZerolBevelGearMeshCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4800.ZerolBevelGearMeshCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_modal_analysis(self) -> '_4801.ZerolBevelGearSetCompoundModalAnalysis':
        """ZerolBevelGearSetCompoundModalAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4801.ZerolBevelGearSetCompoundModalAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundModalAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_modal_analysis_at_a_stiffness(self) -> '_4802.AbstractAssemblyModalAnalysisAtAStiffness':
        """AbstractAssemblyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4802.AbstractAssemblyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_modal_analysis_at_a_stiffness(self) -> '_4803.AbstractShaftModalAnalysisAtAStiffness':
        """AbstractShaftModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4803.AbstractShaftModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_modal_analysis_at_a_stiffness(self) -> '_4804.AbstractShaftOrHousingModalAnalysisAtAStiffness':
        """AbstractShaftOrHousingModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4804.AbstractShaftOrHousingModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_modal_analysis_at_a_stiffness(self) -> '_4805.AbstractShaftToMountableComponentConnectionModalAnalysisAtAStiffness':
        """AbstractShaftToMountableComponentConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4805.AbstractShaftToMountableComponentConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4806.AGMAGleasonConicalGearMeshModalAnalysisAtAStiffness':
        """AGMAGleasonConicalGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4806.AGMAGleasonConicalGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_modal_analysis_at_a_stiffness(self) -> '_4807.AGMAGleasonConicalGearModalAnalysisAtAStiffness':
        """AGMAGleasonConicalGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4807.AGMAGleasonConicalGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_modal_analysis_at_a_stiffness(self) -> '_4808.AGMAGleasonConicalGearSetModalAnalysisAtAStiffness':
        """AGMAGleasonConicalGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4808.AGMAGleasonConicalGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_modal_analysis_at_a_stiffness(self) -> '_4809.AssemblyModalAnalysisAtAStiffness':
        """AssemblyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4809.AssemblyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_modal_analysis_at_a_stiffness(self) -> '_4810.BearingModalAnalysisAtAStiffness':
        """BearingModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4810.BearingModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_modal_analysis_at_a_stiffness(self) -> '_4811.BeltConnectionModalAnalysisAtAStiffness':
        """BeltConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4811.BeltConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_modal_analysis_at_a_stiffness(self) -> '_4812.BeltDriveModalAnalysisAtAStiffness':
        """BeltDriveModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4812.BeltDriveModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4813.BevelDifferentialGearMeshModalAnalysisAtAStiffness':
        """BevelDifferentialGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4813.BevelDifferentialGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_modal_analysis_at_a_stiffness(self) -> '_4814.BevelDifferentialGearModalAnalysisAtAStiffness':
        """BevelDifferentialGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4814.BevelDifferentialGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_modal_analysis_at_a_stiffness(self) -> '_4815.BevelDifferentialGearSetModalAnalysisAtAStiffness':
        """BevelDifferentialGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4815.BevelDifferentialGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_modal_analysis_at_a_stiffness(self) -> '_4816.BevelDifferentialPlanetGearModalAnalysisAtAStiffness':
        """BevelDifferentialPlanetGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4816.BevelDifferentialPlanetGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_modal_analysis_at_a_stiffness(self) -> '_4817.BevelDifferentialSunGearModalAnalysisAtAStiffness':
        """BevelDifferentialSunGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4817.BevelDifferentialSunGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4818.BevelGearMeshModalAnalysisAtAStiffness':
        """BevelGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4818.BevelGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_modal_analysis_at_a_stiffness(self) -> '_4819.BevelGearModalAnalysisAtAStiffness':
        """BevelGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4819.BevelGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_modal_analysis_at_a_stiffness(self) -> '_4820.BevelGearSetModalAnalysisAtAStiffness':
        """BevelGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4820.BevelGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_modal_analysis_at_a_stiffness(self) -> '_4821.BoltedJointModalAnalysisAtAStiffness':
        """BoltedJointModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4821.BoltedJointModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_modal_analysis_at_a_stiffness(self) -> '_4822.BoltModalAnalysisAtAStiffness':
        """BoltModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4822.BoltModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_modal_analysis_at_a_stiffness(self) -> '_4823.ClutchConnectionModalAnalysisAtAStiffness':
        """ClutchConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4823.ClutchConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_modal_analysis_at_a_stiffness(self) -> '_4824.ClutchHalfModalAnalysisAtAStiffness':
        """ClutchHalfModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4824.ClutchHalfModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_modal_analysis_at_a_stiffness(self) -> '_4825.ClutchModalAnalysisAtAStiffness':
        """ClutchModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4825.ClutchModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_modal_analysis_at_a_stiffness(self) -> '_4826.CoaxialConnectionModalAnalysisAtAStiffness':
        """CoaxialConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4826.CoaxialConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_modal_analysis_at_a_stiffness(self) -> '_4827.ComponentModalAnalysisAtAStiffness':
        """ComponentModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4827.ComponentModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_modal_analysis_at_a_stiffness(self) -> '_4828.ConceptCouplingConnectionModalAnalysisAtAStiffness':
        """ConceptCouplingConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4828.ConceptCouplingConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_modal_analysis_at_a_stiffness(self) -> '_4829.ConceptCouplingHalfModalAnalysisAtAStiffness':
        """ConceptCouplingHalfModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4829.ConceptCouplingHalfModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_modal_analysis_at_a_stiffness(self) -> '_4830.ConceptCouplingModalAnalysisAtAStiffness':
        """ConceptCouplingModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4830.ConceptCouplingModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4831.ConceptGearMeshModalAnalysisAtAStiffness':
        """ConceptGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4831.ConceptGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_modal_analysis_at_a_stiffness(self) -> '_4832.ConceptGearModalAnalysisAtAStiffness':
        """ConceptGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4832.ConceptGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_modal_analysis_at_a_stiffness(self) -> '_4833.ConceptGearSetModalAnalysisAtAStiffness':
        """ConceptGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4833.ConceptGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4834.ConicalGearMeshModalAnalysisAtAStiffness':
        """ConicalGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4834.ConicalGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_modal_analysis_at_a_stiffness(self) -> '_4835.ConicalGearModalAnalysisAtAStiffness':
        """ConicalGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4835.ConicalGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_modal_analysis_at_a_stiffness(self) -> '_4836.ConicalGearSetModalAnalysisAtAStiffness':
        """ConicalGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4836.ConicalGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_modal_analysis_at_a_stiffness(self) -> '_4837.ConnectionModalAnalysisAtAStiffness':
        """ConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4837.ConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_modal_analysis_at_a_stiffness(self) -> '_4838.ConnectorModalAnalysisAtAStiffness':
        """ConnectorModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4838.ConnectorModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_modal_analysis_at_a_stiffness(self) -> '_4839.CouplingConnectionModalAnalysisAtAStiffness':
        """CouplingConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4839.CouplingConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_modal_analysis_at_a_stiffness(self) -> '_4840.CouplingHalfModalAnalysisAtAStiffness':
        """CouplingHalfModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4840.CouplingHalfModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_modal_analysis_at_a_stiffness(self) -> '_4841.CouplingModalAnalysisAtAStiffness':
        """CouplingModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4841.CouplingModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_modal_analysis_at_a_stiffness(self) -> '_4842.CVTBeltConnectionModalAnalysisAtAStiffness':
        """CVTBeltConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4842.CVTBeltConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_modal_analysis_at_a_stiffness(self) -> '_4843.CVTModalAnalysisAtAStiffness':
        """CVTModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4843.CVTModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_modal_analysis_at_a_stiffness(self) -> '_4844.CVTPulleyModalAnalysisAtAStiffness':
        """CVTPulleyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4844.CVTPulleyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_modal_analysis_at_a_stiffness(self) -> '_4845.CycloidalAssemblyModalAnalysisAtAStiffness':
        """CycloidalAssemblyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4845.CycloidalAssemblyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_modal_analysis_at_a_stiffness(self) -> '_4846.CycloidalDiscCentralBearingConnectionModalAnalysisAtAStiffness':
        """CycloidalDiscCentralBearingConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4846.CycloidalDiscCentralBearingConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_modal_analysis_at_a_stiffness(self) -> '_4847.CycloidalDiscModalAnalysisAtAStiffness':
        """CycloidalDiscModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4847.CycloidalDiscModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_modal_analysis_at_a_stiffness(self) -> '_4848.CycloidalDiscPlanetaryBearingConnectionModalAnalysisAtAStiffness':
        """CycloidalDiscPlanetaryBearingConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4848.CycloidalDiscPlanetaryBearingConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4849.CylindricalGearMeshModalAnalysisAtAStiffness':
        """CylindricalGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4849.CylindricalGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_modal_analysis_at_a_stiffness(self) -> '_4850.CylindricalGearModalAnalysisAtAStiffness':
        """CylindricalGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4850.CylindricalGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_modal_analysis_at_a_stiffness(self) -> '_4851.CylindricalGearSetModalAnalysisAtAStiffness':
        """CylindricalGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4851.CylindricalGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_modal_analysis_at_a_stiffness(self) -> '_4852.CylindricalPlanetGearModalAnalysisAtAStiffness':
        """CylindricalPlanetGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4852.CylindricalPlanetGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_modal_analysis_at_a_stiffness(self) -> '_4853.DatumModalAnalysisAtAStiffness':
        """DatumModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4853.DatumModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_modal_analysis_at_a_stiffness(self) -> '_4855.ExternalCADModelModalAnalysisAtAStiffness':
        """ExternalCADModelModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4855.ExternalCADModelModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4856.FaceGearMeshModalAnalysisAtAStiffness':
        """FaceGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4856.FaceGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_modal_analysis_at_a_stiffness(self) -> '_4857.FaceGearModalAnalysisAtAStiffness':
        """FaceGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4857.FaceGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_modal_analysis_at_a_stiffness(self) -> '_4858.FaceGearSetModalAnalysisAtAStiffness':
        """FaceGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4858.FaceGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_modal_analysis_at_a_stiffness(self) -> '_4859.FEPartModalAnalysisAtAStiffness':
        """FEPartModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4859.FEPartModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_modal_analysis_at_a_stiffness(self) -> '_4860.FlexiblePinAssemblyModalAnalysisAtAStiffness':
        """FlexiblePinAssemblyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4860.FlexiblePinAssemblyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4861.GearMeshModalAnalysisAtAStiffness':
        """GearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4861.GearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_modal_analysis_at_a_stiffness(self) -> '_4862.GearModalAnalysisAtAStiffness':
        """GearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4862.GearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_modal_analysis_at_a_stiffness(self) -> '_4863.GearSetModalAnalysisAtAStiffness':
        """GearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4863.GearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_modal_analysis_at_a_stiffness(self) -> '_4864.GuideDxfModelModalAnalysisAtAStiffness':
        """GuideDxfModelModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4864.GuideDxfModelModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4865.HypoidGearMeshModalAnalysisAtAStiffness':
        """HypoidGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4865.HypoidGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_modal_analysis_at_a_stiffness(self) -> '_4866.HypoidGearModalAnalysisAtAStiffness':
        """HypoidGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4866.HypoidGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_modal_analysis_at_a_stiffness(self) -> '_4867.HypoidGearSetModalAnalysisAtAStiffness':
        """HypoidGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4867.HypoidGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_modal_analysis_at_a_stiffness(self) -> '_4868.InterMountableComponentConnectionModalAnalysisAtAStiffness':
        """InterMountableComponentConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4868.InterMountableComponentConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4869.KlingelnbergCycloPalloidConicalGearMeshModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidConicalGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4869.KlingelnbergCycloPalloidConicalGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_modal_analysis_at_a_stiffness(self) -> '_4870.KlingelnbergCycloPalloidConicalGearModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidConicalGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4870.KlingelnbergCycloPalloidConicalGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_modal_analysis_at_a_stiffness(self) -> '_4871.KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4871.KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4872.KlingelnbergCycloPalloidHypoidGearMeshModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidHypoidGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4872.KlingelnbergCycloPalloidHypoidGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_modal_analysis_at_a_stiffness(self) -> '_4873.KlingelnbergCycloPalloidHypoidGearModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidHypoidGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4873.KlingelnbergCycloPalloidHypoidGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_modal_analysis_at_a_stiffness(self) -> '_4874.KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4874.KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4875.KlingelnbergCycloPalloidSpiralBevelGearMeshModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4875.KlingelnbergCycloPalloidSpiralBevelGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_modal_analysis_at_a_stiffness(self) -> '_4876.KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4876.KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_modal_analysis_at_a_stiffness(self) -> '_4877.KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4877.KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_modal_analysis_at_a_stiffness(self) -> '_4878.MassDiscModalAnalysisAtAStiffness':
        """MassDiscModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4878.MassDiscModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_modal_analysis_at_a_stiffness(self) -> '_4879.MeasurementComponentModalAnalysisAtAStiffness':
        """MeasurementComponentModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4879.MeasurementComponentModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_modal_analysis_at_a_stiffness(self) -> '_4880.MountableComponentModalAnalysisAtAStiffness':
        """MountableComponentModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4880.MountableComponentModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_modal_analysis_at_a_stiffness(self) -> '_4881.OilSealModalAnalysisAtAStiffness':
        """OilSealModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4881.OilSealModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_modal_analysis_at_a_stiffness(self) -> '_4882.PartModalAnalysisAtAStiffness':
        """PartModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4882.PartModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_modal_analysis_at_a_stiffness(self) -> '_4883.PartToPartShearCouplingConnectionModalAnalysisAtAStiffness':
        """PartToPartShearCouplingConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4883.PartToPartShearCouplingConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_modal_analysis_at_a_stiffness(self) -> '_4884.PartToPartShearCouplingHalfModalAnalysisAtAStiffness':
        """PartToPartShearCouplingHalfModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4884.PartToPartShearCouplingHalfModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_modal_analysis_at_a_stiffness(self) -> '_4885.PartToPartShearCouplingModalAnalysisAtAStiffness':
        """PartToPartShearCouplingModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4885.PartToPartShearCouplingModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_modal_analysis_at_a_stiffness(self) -> '_4886.PlanetaryConnectionModalAnalysisAtAStiffness':
        """PlanetaryConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4886.PlanetaryConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_modal_analysis_at_a_stiffness(self) -> '_4887.PlanetaryGearSetModalAnalysisAtAStiffness':
        """PlanetaryGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4887.PlanetaryGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_modal_analysis_at_a_stiffness(self) -> '_4888.PlanetCarrierModalAnalysisAtAStiffness':
        """PlanetCarrierModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4888.PlanetCarrierModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_modal_analysis_at_a_stiffness(self) -> '_4889.PointLoadModalAnalysisAtAStiffness':
        """PointLoadModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4889.PointLoadModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_modal_analysis_at_a_stiffness(self) -> '_4890.PowerLoadModalAnalysisAtAStiffness':
        """PowerLoadModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4890.PowerLoadModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_modal_analysis_at_a_stiffness(self) -> '_4891.PulleyModalAnalysisAtAStiffness':
        """PulleyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4891.PulleyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_modal_analysis_at_a_stiffness(self) -> '_4892.RingPinsModalAnalysisAtAStiffness':
        """RingPinsModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4892.RingPinsModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_modal_analysis_at_a_stiffness(self) -> '_4893.RingPinsToDiscConnectionModalAnalysisAtAStiffness':
        """RingPinsToDiscConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4893.RingPinsToDiscConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_modal_analysis_at_a_stiffness(self) -> '_4894.RollingRingAssemblyModalAnalysisAtAStiffness':
        """RollingRingAssemblyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4894.RollingRingAssemblyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_modal_analysis_at_a_stiffness(self) -> '_4895.RollingRingConnectionModalAnalysisAtAStiffness':
        """RollingRingConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4895.RollingRingConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_modal_analysis_at_a_stiffness(self) -> '_4896.RollingRingModalAnalysisAtAStiffness':
        """RollingRingModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4896.RollingRingModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_modal_analysis_at_a_stiffness(self) -> '_4897.RootAssemblyModalAnalysisAtAStiffness':
        """RootAssemblyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4897.RootAssemblyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_modal_analysis_at_a_stiffness(self) -> '_4898.ShaftHubConnectionModalAnalysisAtAStiffness':
        """ShaftHubConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4898.ShaftHubConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_modal_analysis_at_a_stiffness(self) -> '_4899.ShaftModalAnalysisAtAStiffness':
        """ShaftModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4899.ShaftModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_modal_analysis_at_a_stiffness(self) -> '_4900.ShaftToMountableComponentConnectionModalAnalysisAtAStiffness':
        """ShaftToMountableComponentConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4900.ShaftToMountableComponentConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_modal_analysis_at_a_stiffness(self) -> '_4901.SpecialisedAssemblyModalAnalysisAtAStiffness':
        """SpecialisedAssemblyModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4901.SpecialisedAssemblyModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4902.SpiralBevelGearMeshModalAnalysisAtAStiffness':
        """SpiralBevelGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4902.SpiralBevelGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_modal_analysis_at_a_stiffness(self) -> '_4903.SpiralBevelGearModalAnalysisAtAStiffness':
        """SpiralBevelGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4903.SpiralBevelGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_modal_analysis_at_a_stiffness(self) -> '_4904.SpiralBevelGearSetModalAnalysisAtAStiffness':
        """SpiralBevelGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4904.SpiralBevelGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_modal_analysis_at_a_stiffness(self) -> '_4905.SpringDamperConnectionModalAnalysisAtAStiffness':
        """SpringDamperConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4905.SpringDamperConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_modal_analysis_at_a_stiffness(self) -> '_4906.SpringDamperHalfModalAnalysisAtAStiffness':
        """SpringDamperHalfModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4906.SpringDamperHalfModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_modal_analysis_at_a_stiffness(self) -> '_4907.SpringDamperModalAnalysisAtAStiffness':
        """SpringDamperModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4907.SpringDamperModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4908.StraightBevelDiffGearMeshModalAnalysisAtAStiffness':
        """StraightBevelDiffGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4908.StraightBevelDiffGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_modal_analysis_at_a_stiffness(self) -> '_4909.StraightBevelDiffGearModalAnalysisAtAStiffness':
        """StraightBevelDiffGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4909.StraightBevelDiffGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_modal_analysis_at_a_stiffness(self) -> '_4910.StraightBevelDiffGearSetModalAnalysisAtAStiffness':
        """StraightBevelDiffGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4910.StraightBevelDiffGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4911.StraightBevelGearMeshModalAnalysisAtAStiffness':
        """StraightBevelGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4911.StraightBevelGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_modal_analysis_at_a_stiffness(self) -> '_4912.StraightBevelGearModalAnalysisAtAStiffness':
        """StraightBevelGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4912.StraightBevelGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_modal_analysis_at_a_stiffness(self) -> '_4913.StraightBevelGearSetModalAnalysisAtAStiffness':
        """StraightBevelGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4913.StraightBevelGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_modal_analysis_at_a_stiffness(self) -> '_4914.StraightBevelPlanetGearModalAnalysisAtAStiffness':
        """StraightBevelPlanetGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4914.StraightBevelPlanetGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_modal_analysis_at_a_stiffness(self) -> '_4915.StraightBevelSunGearModalAnalysisAtAStiffness':
        """StraightBevelSunGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4915.StraightBevelSunGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_modal_analysis_at_a_stiffness(self) -> '_4916.SynchroniserHalfModalAnalysisAtAStiffness':
        """SynchroniserHalfModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4916.SynchroniserHalfModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_modal_analysis_at_a_stiffness(self) -> '_4917.SynchroniserModalAnalysisAtAStiffness':
        """SynchroniserModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4917.SynchroniserModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_modal_analysis_at_a_stiffness(self) -> '_4918.SynchroniserPartModalAnalysisAtAStiffness':
        """SynchroniserPartModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4918.SynchroniserPartModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_modal_analysis_at_a_stiffness(self) -> '_4919.SynchroniserSleeveModalAnalysisAtAStiffness':
        """SynchroniserSleeveModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4919.SynchroniserSleeveModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_modal_analysis_at_a_stiffness(self) -> '_4920.TorqueConverterConnectionModalAnalysisAtAStiffness':
        """TorqueConverterConnectionModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4920.TorqueConverterConnectionModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_modal_analysis_at_a_stiffness(self) -> '_4921.TorqueConverterModalAnalysisAtAStiffness':
        """TorqueConverterModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4921.TorqueConverterModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_modal_analysis_at_a_stiffness(self) -> '_4922.TorqueConverterPumpModalAnalysisAtAStiffness':
        """TorqueConverterPumpModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4922.TorqueConverterPumpModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_modal_analysis_at_a_stiffness(self) -> '_4923.TorqueConverterTurbineModalAnalysisAtAStiffness':
        """TorqueConverterTurbineModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4923.TorqueConverterTurbineModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_modal_analysis_at_a_stiffness(self) -> '_4924.UnbalancedMassModalAnalysisAtAStiffness':
        """UnbalancedMassModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4924.UnbalancedMassModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_modal_analysis_at_a_stiffness(self) -> '_4925.VirtualComponentModalAnalysisAtAStiffness':
        """VirtualComponentModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4925.VirtualComponentModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4926.WormGearMeshModalAnalysisAtAStiffness':
        """WormGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4926.WormGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_modal_analysis_at_a_stiffness(self) -> '_4927.WormGearModalAnalysisAtAStiffness':
        """WormGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4927.WormGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_modal_analysis_at_a_stiffness(self) -> '_4928.WormGearSetModalAnalysisAtAStiffness':
        """WormGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4928.WormGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_modal_analysis_at_a_stiffness(self) -> '_4929.ZerolBevelGearMeshModalAnalysisAtAStiffness':
        """ZerolBevelGearMeshModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4929.ZerolBevelGearMeshModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_modal_analysis_at_a_stiffness(self) -> '_4930.ZerolBevelGearModalAnalysisAtAStiffness':
        """ZerolBevelGearModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4930.ZerolBevelGearModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_modal_analysis_at_a_stiffness(self) -> '_4931.ZerolBevelGearSetModalAnalysisAtAStiffness':
        """ZerolBevelGearSetModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4931.ZerolBevelGearSetModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_modal_analysis_at_a_stiffness(self) -> '_4932.AbstractAssemblyCompoundModalAnalysisAtAStiffness':
        """AbstractAssemblyCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4932.AbstractAssemblyCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_modal_analysis_at_a_stiffness(self) -> '_4933.AbstractShaftCompoundModalAnalysisAtAStiffness':
        """AbstractShaftCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4933.AbstractShaftCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_modal_analysis_at_a_stiffness(self) -> '_4934.AbstractShaftOrHousingCompoundModalAnalysisAtAStiffness':
        """AbstractShaftOrHousingCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4934.AbstractShaftOrHousingCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_modal_analysis_at_a_stiffness(self) -> '_4935.AbstractShaftToMountableComponentConnectionCompoundModalAnalysisAtAStiffness':
        """AbstractShaftToMountableComponentConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4935.AbstractShaftToMountableComponentConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_modal_analysis_at_a_stiffness(self) -> '_4936.AGMAGleasonConicalGearCompoundModalAnalysisAtAStiffness':
        """AGMAGleasonConicalGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4936.AGMAGleasonConicalGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_4937.AGMAGleasonConicalGearMeshCompoundModalAnalysisAtAStiffness':
        """AGMAGleasonConicalGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4937.AGMAGleasonConicalGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_4938.AGMAGleasonConicalGearSetCompoundModalAnalysisAtAStiffness':
        """AGMAGleasonConicalGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4938.AGMAGleasonConicalGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_modal_analysis_at_a_stiffness(self) -> '_4939.AssemblyCompoundModalAnalysisAtAStiffness':
        """AssemblyCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4939.AssemblyCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_modal_analysis_at_a_stiffness(self) -> '_4940.BearingCompoundModalAnalysisAtAStiffness':
        """BearingCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4940.BearingCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_modal_analysis_at_a_stiffness(self) -> '_4941.BeltConnectionCompoundModalAnalysisAtAStiffness':
        """BeltConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4941.BeltConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_modal_analysis_at_a_stiffness(self) -> '_4942.BeltDriveCompoundModalAnalysisAtAStiffness':
        """BeltDriveCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4942.BeltDriveCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_modal_analysis_at_a_stiffness(self) -> '_4943.BevelDifferentialGearCompoundModalAnalysisAtAStiffness':
        """BevelDifferentialGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4943.BevelDifferentialGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_4944.BevelDifferentialGearMeshCompoundModalAnalysisAtAStiffness':
        """BevelDifferentialGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4944.BevelDifferentialGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_4945.BevelDifferentialGearSetCompoundModalAnalysisAtAStiffness':
        """BevelDifferentialGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4945.BevelDifferentialGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_modal_analysis_at_a_stiffness(self) -> '_4946.BevelDifferentialPlanetGearCompoundModalAnalysisAtAStiffness':
        """BevelDifferentialPlanetGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4946.BevelDifferentialPlanetGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_modal_analysis_at_a_stiffness(self) -> '_4947.BevelDifferentialSunGearCompoundModalAnalysisAtAStiffness':
        """BevelDifferentialSunGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4947.BevelDifferentialSunGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_modal_analysis_at_a_stiffness(self) -> '_4948.BevelGearCompoundModalAnalysisAtAStiffness':
        """BevelGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4948.BevelGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_4949.BevelGearMeshCompoundModalAnalysisAtAStiffness':
        """BevelGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4949.BevelGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_4950.BevelGearSetCompoundModalAnalysisAtAStiffness':
        """BevelGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4950.BevelGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_modal_analysis_at_a_stiffness(self) -> '_4951.BoltCompoundModalAnalysisAtAStiffness':
        """BoltCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4951.BoltCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_modal_analysis_at_a_stiffness(self) -> '_4952.BoltedJointCompoundModalAnalysisAtAStiffness':
        """BoltedJointCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4952.BoltedJointCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_modal_analysis_at_a_stiffness(self) -> '_4953.ClutchCompoundModalAnalysisAtAStiffness':
        """ClutchCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4953.ClutchCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_modal_analysis_at_a_stiffness(self) -> '_4954.ClutchConnectionCompoundModalAnalysisAtAStiffness':
        """ClutchConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4954.ClutchConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_modal_analysis_at_a_stiffness(self) -> '_4955.ClutchHalfCompoundModalAnalysisAtAStiffness':
        """ClutchHalfCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4955.ClutchHalfCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_modal_analysis_at_a_stiffness(self) -> '_4956.CoaxialConnectionCompoundModalAnalysisAtAStiffness':
        """CoaxialConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4956.CoaxialConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_modal_analysis_at_a_stiffness(self) -> '_4957.ComponentCompoundModalAnalysisAtAStiffness':
        """ComponentCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4957.ComponentCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_modal_analysis_at_a_stiffness(self) -> '_4958.ConceptCouplingCompoundModalAnalysisAtAStiffness':
        """ConceptCouplingCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4958.ConceptCouplingCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_modal_analysis_at_a_stiffness(self) -> '_4959.ConceptCouplingConnectionCompoundModalAnalysisAtAStiffness':
        """ConceptCouplingConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4959.ConceptCouplingConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_modal_analysis_at_a_stiffness(self) -> '_4960.ConceptCouplingHalfCompoundModalAnalysisAtAStiffness':
        """ConceptCouplingHalfCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4960.ConceptCouplingHalfCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_modal_analysis_at_a_stiffness(self) -> '_4961.ConceptGearCompoundModalAnalysisAtAStiffness':
        """ConceptGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4961.ConceptGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_4962.ConceptGearMeshCompoundModalAnalysisAtAStiffness':
        """ConceptGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4962.ConceptGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_4963.ConceptGearSetCompoundModalAnalysisAtAStiffness':
        """ConceptGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4963.ConceptGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_modal_analysis_at_a_stiffness(self) -> '_4964.ConicalGearCompoundModalAnalysisAtAStiffness':
        """ConicalGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4964.ConicalGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_4965.ConicalGearMeshCompoundModalAnalysisAtAStiffness':
        """ConicalGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4965.ConicalGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_4966.ConicalGearSetCompoundModalAnalysisAtAStiffness':
        """ConicalGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4966.ConicalGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_modal_analysis_at_a_stiffness(self) -> '_4967.ConnectionCompoundModalAnalysisAtAStiffness':
        """ConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4967.ConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_modal_analysis_at_a_stiffness(self) -> '_4968.ConnectorCompoundModalAnalysisAtAStiffness':
        """ConnectorCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4968.ConnectorCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_modal_analysis_at_a_stiffness(self) -> '_4969.CouplingCompoundModalAnalysisAtAStiffness':
        """CouplingCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4969.CouplingCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_modal_analysis_at_a_stiffness(self) -> '_4970.CouplingConnectionCompoundModalAnalysisAtAStiffness':
        """CouplingConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4970.CouplingConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_modal_analysis_at_a_stiffness(self) -> '_4971.CouplingHalfCompoundModalAnalysisAtAStiffness':
        """CouplingHalfCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4971.CouplingHalfCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_modal_analysis_at_a_stiffness(self) -> '_4972.CVTBeltConnectionCompoundModalAnalysisAtAStiffness':
        """CVTBeltConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4972.CVTBeltConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_modal_analysis_at_a_stiffness(self) -> '_4973.CVTCompoundModalAnalysisAtAStiffness':
        """CVTCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4973.CVTCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_modal_analysis_at_a_stiffness(self) -> '_4974.CVTPulleyCompoundModalAnalysisAtAStiffness':
        """CVTPulleyCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4974.CVTPulleyCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_modal_analysis_at_a_stiffness(self) -> '_4975.CycloidalAssemblyCompoundModalAnalysisAtAStiffness':
        """CycloidalAssemblyCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4975.CycloidalAssemblyCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_modal_analysis_at_a_stiffness(self) -> '_4976.CycloidalDiscCentralBearingConnectionCompoundModalAnalysisAtAStiffness':
        """CycloidalDiscCentralBearingConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4976.CycloidalDiscCentralBearingConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_modal_analysis_at_a_stiffness(self) -> '_4977.CycloidalDiscCompoundModalAnalysisAtAStiffness':
        """CycloidalDiscCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4977.CycloidalDiscCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_modal_analysis_at_a_stiffness(self) -> '_4978.CycloidalDiscPlanetaryBearingConnectionCompoundModalAnalysisAtAStiffness':
        """CycloidalDiscPlanetaryBearingConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4978.CycloidalDiscPlanetaryBearingConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_modal_analysis_at_a_stiffness(self) -> '_4979.CylindricalGearCompoundModalAnalysisAtAStiffness':
        """CylindricalGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4979.CylindricalGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_4980.CylindricalGearMeshCompoundModalAnalysisAtAStiffness':
        """CylindricalGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4980.CylindricalGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_4981.CylindricalGearSetCompoundModalAnalysisAtAStiffness':
        """CylindricalGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4981.CylindricalGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_modal_analysis_at_a_stiffness(self) -> '_4982.CylindricalPlanetGearCompoundModalAnalysisAtAStiffness':
        """CylindricalPlanetGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4982.CylindricalPlanetGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_modal_analysis_at_a_stiffness(self) -> '_4983.DatumCompoundModalAnalysisAtAStiffness':
        """DatumCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4983.DatumCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_modal_analysis_at_a_stiffness(self) -> '_4984.ExternalCADModelCompoundModalAnalysisAtAStiffness':
        """ExternalCADModelCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4984.ExternalCADModelCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_modal_analysis_at_a_stiffness(self) -> '_4985.FaceGearCompoundModalAnalysisAtAStiffness':
        """FaceGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4985.FaceGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_4986.FaceGearMeshCompoundModalAnalysisAtAStiffness':
        """FaceGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4986.FaceGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_4987.FaceGearSetCompoundModalAnalysisAtAStiffness':
        """FaceGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4987.FaceGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_modal_analysis_at_a_stiffness(self) -> '_4988.FEPartCompoundModalAnalysisAtAStiffness':
        """FEPartCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4988.FEPartCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_modal_analysis_at_a_stiffness(self) -> '_4989.FlexiblePinAssemblyCompoundModalAnalysisAtAStiffness':
        """FlexiblePinAssemblyCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4989.FlexiblePinAssemblyCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_modal_analysis_at_a_stiffness(self) -> '_4990.GearCompoundModalAnalysisAtAStiffness':
        """GearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4990.GearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_4991.GearMeshCompoundModalAnalysisAtAStiffness':
        """GearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4991.GearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_4992.GearSetCompoundModalAnalysisAtAStiffness':
        """GearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4992.GearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_modal_analysis_at_a_stiffness(self) -> '_4993.GuideDxfModelCompoundModalAnalysisAtAStiffness':
        """GuideDxfModelCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4993.GuideDxfModelCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_modal_analysis_at_a_stiffness(self) -> '_4994.HypoidGearCompoundModalAnalysisAtAStiffness':
        """HypoidGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4994.HypoidGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_4995.HypoidGearMeshCompoundModalAnalysisAtAStiffness':
        """HypoidGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4995.HypoidGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_4996.HypoidGearSetCompoundModalAnalysisAtAStiffness':
        """HypoidGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4996.HypoidGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_modal_analysis_at_a_stiffness(self) -> '_4997.InterMountableComponentConnectionCompoundModalAnalysisAtAStiffness':
        """InterMountableComponentConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4997.InterMountableComponentConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_modal_analysis_at_a_stiffness(self) -> '_4998.KlingelnbergCycloPalloidConicalGearCompoundModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidConicalGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4998.KlingelnbergCycloPalloidConicalGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_4999.KlingelnbergCycloPalloidConicalGearMeshCompoundModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _4999.KlingelnbergCycloPalloidConicalGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_5000.KlingelnbergCycloPalloidConicalGearSetCompoundModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidConicalGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5000.KlingelnbergCycloPalloidConicalGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_modal_analysis_at_a_stiffness(self) -> '_5001.KlingelnbergCycloPalloidHypoidGearCompoundModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidHypoidGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5001.KlingelnbergCycloPalloidHypoidGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_5002.KlingelnbergCycloPalloidHypoidGearMeshCompoundModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5002.KlingelnbergCycloPalloidHypoidGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_5003.KlingelnbergCycloPalloidHypoidGearSetCompoundModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5003.KlingelnbergCycloPalloidHypoidGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_modal_analysis_at_a_stiffness(self) -> '_5004.KlingelnbergCycloPalloidSpiralBevelGearCompoundModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5004.KlingelnbergCycloPalloidSpiralBevelGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_5005.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5005.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_5006.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundModalAnalysisAtAStiffness':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5006.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_modal_analysis_at_a_stiffness(self) -> '_5007.MassDiscCompoundModalAnalysisAtAStiffness':
        """MassDiscCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5007.MassDiscCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_modal_analysis_at_a_stiffness(self) -> '_5008.MeasurementComponentCompoundModalAnalysisAtAStiffness':
        """MeasurementComponentCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5008.MeasurementComponentCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_modal_analysis_at_a_stiffness(self) -> '_5009.MountableComponentCompoundModalAnalysisAtAStiffness':
        """MountableComponentCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5009.MountableComponentCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_modal_analysis_at_a_stiffness(self) -> '_5010.OilSealCompoundModalAnalysisAtAStiffness':
        """OilSealCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5010.OilSealCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_modal_analysis_at_a_stiffness(self) -> '_5011.PartCompoundModalAnalysisAtAStiffness':
        """PartCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5011.PartCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_modal_analysis_at_a_stiffness(self) -> '_5012.PartToPartShearCouplingCompoundModalAnalysisAtAStiffness':
        """PartToPartShearCouplingCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5012.PartToPartShearCouplingCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_modal_analysis_at_a_stiffness(self) -> '_5013.PartToPartShearCouplingConnectionCompoundModalAnalysisAtAStiffness':
        """PartToPartShearCouplingConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5013.PartToPartShearCouplingConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_modal_analysis_at_a_stiffness(self) -> '_5014.PartToPartShearCouplingHalfCompoundModalAnalysisAtAStiffness':
        """PartToPartShearCouplingHalfCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5014.PartToPartShearCouplingHalfCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_modal_analysis_at_a_stiffness(self) -> '_5015.PlanetaryConnectionCompoundModalAnalysisAtAStiffness':
        """PlanetaryConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5015.PlanetaryConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_5016.PlanetaryGearSetCompoundModalAnalysisAtAStiffness':
        """PlanetaryGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5016.PlanetaryGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_modal_analysis_at_a_stiffness(self) -> '_5017.PlanetCarrierCompoundModalAnalysisAtAStiffness':
        """PlanetCarrierCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5017.PlanetCarrierCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_modal_analysis_at_a_stiffness(self) -> '_5018.PointLoadCompoundModalAnalysisAtAStiffness':
        """PointLoadCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5018.PointLoadCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_modal_analysis_at_a_stiffness(self) -> '_5019.PowerLoadCompoundModalAnalysisAtAStiffness':
        """PowerLoadCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5019.PowerLoadCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_modal_analysis_at_a_stiffness(self) -> '_5020.PulleyCompoundModalAnalysisAtAStiffness':
        """PulleyCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5020.PulleyCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_modal_analysis_at_a_stiffness(self) -> '_5021.RingPinsCompoundModalAnalysisAtAStiffness':
        """RingPinsCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5021.RingPinsCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_modal_analysis_at_a_stiffness(self) -> '_5022.RingPinsToDiscConnectionCompoundModalAnalysisAtAStiffness':
        """RingPinsToDiscConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5022.RingPinsToDiscConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_modal_analysis_at_a_stiffness(self) -> '_5023.RollingRingAssemblyCompoundModalAnalysisAtAStiffness':
        """RollingRingAssemblyCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5023.RollingRingAssemblyCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_modal_analysis_at_a_stiffness(self) -> '_5024.RollingRingCompoundModalAnalysisAtAStiffness':
        """RollingRingCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5024.RollingRingCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_modal_analysis_at_a_stiffness(self) -> '_5025.RollingRingConnectionCompoundModalAnalysisAtAStiffness':
        """RollingRingConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5025.RollingRingConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_modal_analysis_at_a_stiffness(self) -> '_5026.RootAssemblyCompoundModalAnalysisAtAStiffness':
        """RootAssemblyCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5026.RootAssemblyCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_modal_analysis_at_a_stiffness(self) -> '_5027.ShaftCompoundModalAnalysisAtAStiffness':
        """ShaftCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5027.ShaftCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_modal_analysis_at_a_stiffness(self) -> '_5028.ShaftHubConnectionCompoundModalAnalysisAtAStiffness':
        """ShaftHubConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5028.ShaftHubConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_modal_analysis_at_a_stiffness(self) -> '_5029.ShaftToMountableComponentConnectionCompoundModalAnalysisAtAStiffness':
        """ShaftToMountableComponentConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5029.ShaftToMountableComponentConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_modal_analysis_at_a_stiffness(self) -> '_5030.SpecialisedAssemblyCompoundModalAnalysisAtAStiffness':
        """SpecialisedAssemblyCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5030.SpecialisedAssemblyCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_modal_analysis_at_a_stiffness(self) -> '_5031.SpiralBevelGearCompoundModalAnalysisAtAStiffness':
        """SpiralBevelGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5031.SpiralBevelGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_5032.SpiralBevelGearMeshCompoundModalAnalysisAtAStiffness':
        """SpiralBevelGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5032.SpiralBevelGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_5033.SpiralBevelGearSetCompoundModalAnalysisAtAStiffness':
        """SpiralBevelGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5033.SpiralBevelGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_modal_analysis_at_a_stiffness(self) -> '_5034.SpringDamperCompoundModalAnalysisAtAStiffness':
        """SpringDamperCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5034.SpringDamperCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_modal_analysis_at_a_stiffness(self) -> '_5035.SpringDamperConnectionCompoundModalAnalysisAtAStiffness':
        """SpringDamperConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5035.SpringDamperConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_modal_analysis_at_a_stiffness(self) -> '_5036.SpringDamperHalfCompoundModalAnalysisAtAStiffness':
        """SpringDamperHalfCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5036.SpringDamperHalfCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_modal_analysis_at_a_stiffness(self) -> '_5037.StraightBevelDiffGearCompoundModalAnalysisAtAStiffness':
        """StraightBevelDiffGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5037.StraightBevelDiffGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_5038.StraightBevelDiffGearMeshCompoundModalAnalysisAtAStiffness':
        """StraightBevelDiffGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5038.StraightBevelDiffGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_5039.StraightBevelDiffGearSetCompoundModalAnalysisAtAStiffness':
        """StraightBevelDiffGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5039.StraightBevelDiffGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_modal_analysis_at_a_stiffness(self) -> '_5040.StraightBevelGearCompoundModalAnalysisAtAStiffness':
        """StraightBevelGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5040.StraightBevelGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_5041.StraightBevelGearMeshCompoundModalAnalysisAtAStiffness':
        """StraightBevelGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5041.StraightBevelGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_5042.StraightBevelGearSetCompoundModalAnalysisAtAStiffness':
        """StraightBevelGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5042.StraightBevelGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_modal_analysis_at_a_stiffness(self) -> '_5043.StraightBevelPlanetGearCompoundModalAnalysisAtAStiffness':
        """StraightBevelPlanetGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5043.StraightBevelPlanetGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_modal_analysis_at_a_stiffness(self) -> '_5044.StraightBevelSunGearCompoundModalAnalysisAtAStiffness':
        """StraightBevelSunGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5044.StraightBevelSunGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_modal_analysis_at_a_stiffness(self) -> '_5045.SynchroniserCompoundModalAnalysisAtAStiffness':
        """SynchroniserCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5045.SynchroniserCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_modal_analysis_at_a_stiffness(self) -> '_5046.SynchroniserHalfCompoundModalAnalysisAtAStiffness':
        """SynchroniserHalfCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5046.SynchroniserHalfCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_modal_analysis_at_a_stiffness(self) -> '_5047.SynchroniserPartCompoundModalAnalysisAtAStiffness':
        """SynchroniserPartCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5047.SynchroniserPartCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_modal_analysis_at_a_stiffness(self) -> '_5048.SynchroniserSleeveCompoundModalAnalysisAtAStiffness':
        """SynchroniserSleeveCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5048.SynchroniserSleeveCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_modal_analysis_at_a_stiffness(self) -> '_5049.TorqueConverterCompoundModalAnalysisAtAStiffness':
        """TorqueConverterCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5049.TorqueConverterCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_modal_analysis_at_a_stiffness(self) -> '_5050.TorqueConverterConnectionCompoundModalAnalysisAtAStiffness':
        """TorqueConverterConnectionCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5050.TorqueConverterConnectionCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_modal_analysis_at_a_stiffness(self) -> '_5051.TorqueConverterPumpCompoundModalAnalysisAtAStiffness':
        """TorqueConverterPumpCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5051.TorqueConverterPumpCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_modal_analysis_at_a_stiffness(self) -> '_5052.TorqueConverterTurbineCompoundModalAnalysisAtAStiffness':
        """TorqueConverterTurbineCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5052.TorqueConverterTurbineCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_modal_analysis_at_a_stiffness(self) -> '_5053.UnbalancedMassCompoundModalAnalysisAtAStiffness':
        """UnbalancedMassCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5053.UnbalancedMassCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_modal_analysis_at_a_stiffness(self) -> '_5054.VirtualComponentCompoundModalAnalysisAtAStiffness':
        """VirtualComponentCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5054.VirtualComponentCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_modal_analysis_at_a_stiffness(self) -> '_5055.WormGearCompoundModalAnalysisAtAStiffness':
        """WormGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5055.WormGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_5056.WormGearMeshCompoundModalAnalysisAtAStiffness':
        """WormGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5056.WormGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_5057.WormGearSetCompoundModalAnalysisAtAStiffness':
        """WormGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5057.WormGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_modal_analysis_at_a_stiffness(self) -> '_5058.ZerolBevelGearCompoundModalAnalysisAtAStiffness':
        """ZerolBevelGearCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5058.ZerolBevelGearCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_modal_analysis_at_a_stiffness(self) -> '_5059.ZerolBevelGearMeshCompoundModalAnalysisAtAStiffness':
        """ZerolBevelGearMeshCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5059.ZerolBevelGearMeshCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_modal_analysis_at_a_stiffness(self) -> '_5060.ZerolBevelGearSetCompoundModalAnalysisAtAStiffness':
        """ZerolBevelGearSetCompoundModalAnalysisAtAStiffness: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5060.ZerolBevelGearSetCompoundModalAnalysisAtAStiffness.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundModalAnalysisAtAStiffness. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_modal_analysis_at_a_speed(self) -> '_5061.AbstractAssemblyModalAnalysisAtASpeed':
        """AbstractAssemblyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5061.AbstractAssemblyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_modal_analysis_at_a_speed(self) -> '_5062.AbstractShaftModalAnalysisAtASpeed':
        """AbstractShaftModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5062.AbstractShaftModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_modal_analysis_at_a_speed(self) -> '_5063.AbstractShaftOrHousingModalAnalysisAtASpeed':
        """AbstractShaftOrHousingModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5063.AbstractShaftOrHousingModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_modal_analysis_at_a_speed(self) -> '_5064.AbstractShaftToMountableComponentConnectionModalAnalysisAtASpeed':
        """AbstractShaftToMountableComponentConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5064.AbstractShaftToMountableComponentConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_modal_analysis_at_a_speed(self) -> '_5065.AGMAGleasonConicalGearMeshModalAnalysisAtASpeed':
        """AGMAGleasonConicalGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5065.AGMAGleasonConicalGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_modal_analysis_at_a_speed(self) -> '_5066.AGMAGleasonConicalGearModalAnalysisAtASpeed':
        """AGMAGleasonConicalGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5066.AGMAGleasonConicalGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_modal_analysis_at_a_speed(self) -> '_5067.AGMAGleasonConicalGearSetModalAnalysisAtASpeed':
        """AGMAGleasonConicalGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5067.AGMAGleasonConicalGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_modal_analysis_at_a_speed(self) -> '_5068.AssemblyModalAnalysisAtASpeed':
        """AssemblyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5068.AssemblyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_modal_analysis_at_a_speed(self) -> '_5069.BearingModalAnalysisAtASpeed':
        """BearingModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5069.BearingModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_modal_analysis_at_a_speed(self) -> '_5070.BeltConnectionModalAnalysisAtASpeed':
        """BeltConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5070.BeltConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_modal_analysis_at_a_speed(self) -> '_5071.BeltDriveModalAnalysisAtASpeed':
        """BeltDriveModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5071.BeltDriveModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_modal_analysis_at_a_speed(self) -> '_5072.BevelDifferentialGearMeshModalAnalysisAtASpeed':
        """BevelDifferentialGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5072.BevelDifferentialGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_modal_analysis_at_a_speed(self) -> '_5073.BevelDifferentialGearModalAnalysisAtASpeed':
        """BevelDifferentialGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5073.BevelDifferentialGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_modal_analysis_at_a_speed(self) -> '_5074.BevelDifferentialGearSetModalAnalysisAtASpeed':
        """BevelDifferentialGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5074.BevelDifferentialGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_modal_analysis_at_a_speed(self) -> '_5075.BevelDifferentialPlanetGearModalAnalysisAtASpeed':
        """BevelDifferentialPlanetGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5075.BevelDifferentialPlanetGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_modal_analysis_at_a_speed(self) -> '_5076.BevelDifferentialSunGearModalAnalysisAtASpeed':
        """BevelDifferentialSunGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5076.BevelDifferentialSunGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_modal_analysis_at_a_speed(self) -> '_5077.BevelGearMeshModalAnalysisAtASpeed':
        """BevelGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5077.BevelGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_modal_analysis_at_a_speed(self) -> '_5078.BevelGearModalAnalysisAtASpeed':
        """BevelGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5078.BevelGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_modal_analysis_at_a_speed(self) -> '_5079.BevelGearSetModalAnalysisAtASpeed':
        """BevelGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5079.BevelGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_modal_analysis_at_a_speed(self) -> '_5080.BoltedJointModalAnalysisAtASpeed':
        """BoltedJointModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5080.BoltedJointModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_modal_analysis_at_a_speed(self) -> '_5081.BoltModalAnalysisAtASpeed':
        """BoltModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5081.BoltModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_modal_analysis_at_a_speed(self) -> '_5082.ClutchConnectionModalAnalysisAtASpeed':
        """ClutchConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5082.ClutchConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_modal_analysis_at_a_speed(self) -> '_5083.ClutchHalfModalAnalysisAtASpeed':
        """ClutchHalfModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5083.ClutchHalfModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_modal_analysis_at_a_speed(self) -> '_5084.ClutchModalAnalysisAtASpeed':
        """ClutchModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5084.ClutchModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_modal_analysis_at_a_speed(self) -> '_5085.CoaxialConnectionModalAnalysisAtASpeed':
        """CoaxialConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5085.CoaxialConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_modal_analysis_at_a_speed(self) -> '_5086.ComponentModalAnalysisAtASpeed':
        """ComponentModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5086.ComponentModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_modal_analysis_at_a_speed(self) -> '_5087.ConceptCouplingConnectionModalAnalysisAtASpeed':
        """ConceptCouplingConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5087.ConceptCouplingConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_modal_analysis_at_a_speed(self) -> '_5088.ConceptCouplingHalfModalAnalysisAtASpeed':
        """ConceptCouplingHalfModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5088.ConceptCouplingHalfModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_modal_analysis_at_a_speed(self) -> '_5089.ConceptCouplingModalAnalysisAtASpeed':
        """ConceptCouplingModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5089.ConceptCouplingModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_modal_analysis_at_a_speed(self) -> '_5090.ConceptGearMeshModalAnalysisAtASpeed':
        """ConceptGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5090.ConceptGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_modal_analysis_at_a_speed(self) -> '_5091.ConceptGearModalAnalysisAtASpeed':
        """ConceptGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5091.ConceptGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_modal_analysis_at_a_speed(self) -> '_5092.ConceptGearSetModalAnalysisAtASpeed':
        """ConceptGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5092.ConceptGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_modal_analysis_at_a_speed(self) -> '_5093.ConicalGearMeshModalAnalysisAtASpeed':
        """ConicalGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5093.ConicalGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_modal_analysis_at_a_speed(self) -> '_5094.ConicalGearModalAnalysisAtASpeed':
        """ConicalGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5094.ConicalGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_modal_analysis_at_a_speed(self) -> '_5095.ConicalGearSetModalAnalysisAtASpeed':
        """ConicalGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5095.ConicalGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_modal_analysis_at_a_speed(self) -> '_5096.ConnectionModalAnalysisAtASpeed':
        """ConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5096.ConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_modal_analysis_at_a_speed(self) -> '_5097.ConnectorModalAnalysisAtASpeed':
        """ConnectorModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5097.ConnectorModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_modal_analysis_at_a_speed(self) -> '_5098.CouplingConnectionModalAnalysisAtASpeed':
        """CouplingConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5098.CouplingConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_modal_analysis_at_a_speed(self) -> '_5099.CouplingHalfModalAnalysisAtASpeed':
        """CouplingHalfModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5099.CouplingHalfModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_modal_analysis_at_a_speed(self) -> '_5100.CouplingModalAnalysisAtASpeed':
        """CouplingModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5100.CouplingModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_modal_analysis_at_a_speed(self) -> '_5101.CVTBeltConnectionModalAnalysisAtASpeed':
        """CVTBeltConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5101.CVTBeltConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_modal_analysis_at_a_speed(self) -> '_5102.CVTModalAnalysisAtASpeed':
        """CVTModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5102.CVTModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_modal_analysis_at_a_speed(self) -> '_5103.CVTPulleyModalAnalysisAtASpeed':
        """CVTPulleyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5103.CVTPulleyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_modal_analysis_at_a_speed(self) -> '_5104.CycloidalAssemblyModalAnalysisAtASpeed':
        """CycloidalAssemblyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5104.CycloidalAssemblyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_modal_analysis_at_a_speed(self) -> '_5105.CycloidalDiscCentralBearingConnectionModalAnalysisAtASpeed':
        """CycloidalDiscCentralBearingConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5105.CycloidalDiscCentralBearingConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_modal_analysis_at_a_speed(self) -> '_5106.CycloidalDiscModalAnalysisAtASpeed':
        """CycloidalDiscModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5106.CycloidalDiscModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_modal_analysis_at_a_speed(self) -> '_5107.CycloidalDiscPlanetaryBearingConnectionModalAnalysisAtASpeed':
        """CycloidalDiscPlanetaryBearingConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5107.CycloidalDiscPlanetaryBearingConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_modal_analysis_at_a_speed(self) -> '_5108.CylindricalGearMeshModalAnalysisAtASpeed':
        """CylindricalGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5108.CylindricalGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_modal_analysis_at_a_speed(self) -> '_5109.CylindricalGearModalAnalysisAtASpeed':
        """CylindricalGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5109.CylindricalGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_modal_analysis_at_a_speed(self) -> '_5110.CylindricalGearSetModalAnalysisAtASpeed':
        """CylindricalGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5110.CylindricalGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_modal_analysis_at_a_speed(self) -> '_5111.CylindricalPlanetGearModalAnalysisAtASpeed':
        """CylindricalPlanetGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5111.CylindricalPlanetGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_modal_analysis_at_a_speed(self) -> '_5112.DatumModalAnalysisAtASpeed':
        """DatumModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5112.DatumModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_modal_analysis_at_a_speed(self) -> '_5113.ExternalCADModelModalAnalysisAtASpeed':
        """ExternalCADModelModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5113.ExternalCADModelModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_modal_analysis_at_a_speed(self) -> '_5114.FaceGearMeshModalAnalysisAtASpeed':
        """FaceGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5114.FaceGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_modal_analysis_at_a_speed(self) -> '_5115.FaceGearModalAnalysisAtASpeed':
        """FaceGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5115.FaceGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_modal_analysis_at_a_speed(self) -> '_5116.FaceGearSetModalAnalysisAtASpeed':
        """FaceGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5116.FaceGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_modal_analysis_at_a_speed(self) -> '_5117.FEPartModalAnalysisAtASpeed':
        """FEPartModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5117.FEPartModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_modal_analysis_at_a_speed(self) -> '_5118.FlexiblePinAssemblyModalAnalysisAtASpeed':
        """FlexiblePinAssemblyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5118.FlexiblePinAssemblyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_modal_analysis_at_a_speed(self) -> '_5119.GearMeshModalAnalysisAtASpeed':
        """GearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5119.GearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_modal_analysis_at_a_speed(self) -> '_5120.GearModalAnalysisAtASpeed':
        """GearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5120.GearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_modal_analysis_at_a_speed(self) -> '_5121.GearSetModalAnalysisAtASpeed':
        """GearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5121.GearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_modal_analysis_at_a_speed(self) -> '_5122.GuideDxfModelModalAnalysisAtASpeed':
        """GuideDxfModelModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5122.GuideDxfModelModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_modal_analysis_at_a_speed(self) -> '_5123.HypoidGearMeshModalAnalysisAtASpeed':
        """HypoidGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5123.HypoidGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_modal_analysis_at_a_speed(self) -> '_5124.HypoidGearModalAnalysisAtASpeed':
        """HypoidGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5124.HypoidGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_modal_analysis_at_a_speed(self) -> '_5125.HypoidGearSetModalAnalysisAtASpeed':
        """HypoidGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5125.HypoidGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_modal_analysis_at_a_speed(self) -> '_5126.InterMountableComponentConnectionModalAnalysisAtASpeed':
        """InterMountableComponentConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5126.InterMountableComponentConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_modal_analysis_at_a_speed(self) -> '_5127.KlingelnbergCycloPalloidConicalGearMeshModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidConicalGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5127.KlingelnbergCycloPalloidConicalGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_modal_analysis_at_a_speed(self) -> '_5128.KlingelnbergCycloPalloidConicalGearModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidConicalGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5128.KlingelnbergCycloPalloidConicalGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_modal_analysis_at_a_speed(self) -> '_5129.KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5129.KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_modal_analysis_at_a_speed(self) -> '_5130.KlingelnbergCycloPalloidHypoidGearMeshModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5130.KlingelnbergCycloPalloidHypoidGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_modal_analysis_at_a_speed(self) -> '_5131.KlingelnbergCycloPalloidHypoidGearModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5131.KlingelnbergCycloPalloidHypoidGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_modal_analysis_at_a_speed(self) -> '_5132.KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5132.KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_modal_analysis_at_a_speed(self) -> '_5133.KlingelnbergCycloPalloidSpiralBevelGearMeshModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5133.KlingelnbergCycloPalloidSpiralBevelGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_modal_analysis_at_a_speed(self) -> '_5134.KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5134.KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_modal_analysis_at_a_speed(self) -> '_5135.KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5135.KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_modal_analysis_at_a_speed(self) -> '_5136.MassDiscModalAnalysisAtASpeed':
        """MassDiscModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5136.MassDiscModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_modal_analysis_at_a_speed(self) -> '_5137.MeasurementComponentModalAnalysisAtASpeed':
        """MeasurementComponentModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5137.MeasurementComponentModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_modal_analysis_at_a_speed(self) -> '_5138.MountableComponentModalAnalysisAtASpeed':
        """MountableComponentModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5138.MountableComponentModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_modal_analysis_at_a_speed(self) -> '_5139.OilSealModalAnalysisAtASpeed':
        """OilSealModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5139.OilSealModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_modal_analysis_at_a_speed(self) -> '_5140.PartModalAnalysisAtASpeed':
        """PartModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5140.PartModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_modal_analysis_at_a_speed(self) -> '_5141.PartToPartShearCouplingConnectionModalAnalysisAtASpeed':
        """PartToPartShearCouplingConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5141.PartToPartShearCouplingConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_modal_analysis_at_a_speed(self) -> '_5142.PartToPartShearCouplingHalfModalAnalysisAtASpeed':
        """PartToPartShearCouplingHalfModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5142.PartToPartShearCouplingHalfModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_modal_analysis_at_a_speed(self) -> '_5143.PartToPartShearCouplingModalAnalysisAtASpeed':
        """PartToPartShearCouplingModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5143.PartToPartShearCouplingModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_modal_analysis_at_a_speed(self) -> '_5144.PlanetaryConnectionModalAnalysisAtASpeed':
        """PlanetaryConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5144.PlanetaryConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_modal_analysis_at_a_speed(self) -> '_5145.PlanetaryGearSetModalAnalysisAtASpeed':
        """PlanetaryGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5145.PlanetaryGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_modal_analysis_at_a_speed(self) -> '_5146.PlanetCarrierModalAnalysisAtASpeed':
        """PlanetCarrierModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5146.PlanetCarrierModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_modal_analysis_at_a_speed(self) -> '_5147.PointLoadModalAnalysisAtASpeed':
        """PointLoadModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5147.PointLoadModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_modal_analysis_at_a_speed(self) -> '_5148.PowerLoadModalAnalysisAtASpeed':
        """PowerLoadModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5148.PowerLoadModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_modal_analysis_at_a_speed(self) -> '_5149.PulleyModalAnalysisAtASpeed':
        """PulleyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5149.PulleyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_modal_analysis_at_a_speed(self) -> '_5150.RingPinsModalAnalysisAtASpeed':
        """RingPinsModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5150.RingPinsModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_modal_analysis_at_a_speed(self) -> '_5151.RingPinsToDiscConnectionModalAnalysisAtASpeed':
        """RingPinsToDiscConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5151.RingPinsToDiscConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_modal_analysis_at_a_speed(self) -> '_5152.RollingRingAssemblyModalAnalysisAtASpeed':
        """RollingRingAssemblyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5152.RollingRingAssemblyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_modal_analysis_at_a_speed(self) -> '_5153.RollingRingConnectionModalAnalysisAtASpeed':
        """RollingRingConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5153.RollingRingConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_modal_analysis_at_a_speed(self) -> '_5154.RollingRingModalAnalysisAtASpeed':
        """RollingRingModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5154.RollingRingModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_modal_analysis_at_a_speed(self) -> '_5155.RootAssemblyModalAnalysisAtASpeed':
        """RootAssemblyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5155.RootAssemblyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_modal_analysis_at_a_speed(self) -> '_5156.ShaftHubConnectionModalAnalysisAtASpeed':
        """ShaftHubConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5156.ShaftHubConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_modal_analysis_at_a_speed(self) -> '_5157.ShaftModalAnalysisAtASpeed':
        """ShaftModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5157.ShaftModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_modal_analysis_at_a_speed(self) -> '_5158.ShaftToMountableComponentConnectionModalAnalysisAtASpeed':
        """ShaftToMountableComponentConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5158.ShaftToMountableComponentConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_modal_analysis_at_a_speed(self) -> '_5159.SpecialisedAssemblyModalAnalysisAtASpeed':
        """SpecialisedAssemblyModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5159.SpecialisedAssemblyModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_modal_analysis_at_a_speed(self) -> '_5160.SpiralBevelGearMeshModalAnalysisAtASpeed':
        """SpiralBevelGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5160.SpiralBevelGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_modal_analysis_at_a_speed(self) -> '_5161.SpiralBevelGearModalAnalysisAtASpeed':
        """SpiralBevelGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5161.SpiralBevelGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_modal_analysis_at_a_speed(self) -> '_5162.SpiralBevelGearSetModalAnalysisAtASpeed':
        """SpiralBevelGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5162.SpiralBevelGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_modal_analysis_at_a_speed(self) -> '_5163.SpringDamperConnectionModalAnalysisAtASpeed':
        """SpringDamperConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5163.SpringDamperConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_modal_analysis_at_a_speed(self) -> '_5164.SpringDamperHalfModalAnalysisAtASpeed':
        """SpringDamperHalfModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5164.SpringDamperHalfModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_modal_analysis_at_a_speed(self) -> '_5165.SpringDamperModalAnalysisAtASpeed':
        """SpringDamperModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5165.SpringDamperModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_modal_analysis_at_a_speed(self) -> '_5166.StraightBevelDiffGearMeshModalAnalysisAtASpeed':
        """StraightBevelDiffGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5166.StraightBevelDiffGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_modal_analysis_at_a_speed(self) -> '_5167.StraightBevelDiffGearModalAnalysisAtASpeed':
        """StraightBevelDiffGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5167.StraightBevelDiffGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_modal_analysis_at_a_speed(self) -> '_5168.StraightBevelDiffGearSetModalAnalysisAtASpeed':
        """StraightBevelDiffGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5168.StraightBevelDiffGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_modal_analysis_at_a_speed(self) -> '_5169.StraightBevelGearMeshModalAnalysisAtASpeed':
        """StraightBevelGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5169.StraightBevelGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_modal_analysis_at_a_speed(self) -> '_5170.StraightBevelGearModalAnalysisAtASpeed':
        """StraightBevelGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5170.StraightBevelGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_modal_analysis_at_a_speed(self) -> '_5171.StraightBevelGearSetModalAnalysisAtASpeed':
        """StraightBevelGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5171.StraightBevelGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_modal_analysis_at_a_speed(self) -> '_5172.StraightBevelPlanetGearModalAnalysisAtASpeed':
        """StraightBevelPlanetGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5172.StraightBevelPlanetGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_modal_analysis_at_a_speed(self) -> '_5173.StraightBevelSunGearModalAnalysisAtASpeed':
        """StraightBevelSunGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5173.StraightBevelSunGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_modal_analysis_at_a_speed(self) -> '_5174.SynchroniserHalfModalAnalysisAtASpeed':
        """SynchroniserHalfModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5174.SynchroniserHalfModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_modal_analysis_at_a_speed(self) -> '_5175.SynchroniserModalAnalysisAtASpeed':
        """SynchroniserModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5175.SynchroniserModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_modal_analysis_at_a_speed(self) -> '_5176.SynchroniserPartModalAnalysisAtASpeed':
        """SynchroniserPartModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5176.SynchroniserPartModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_modal_analysis_at_a_speed(self) -> '_5177.SynchroniserSleeveModalAnalysisAtASpeed':
        """SynchroniserSleeveModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5177.SynchroniserSleeveModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_modal_analysis_at_a_speed(self) -> '_5178.TorqueConverterConnectionModalAnalysisAtASpeed':
        """TorqueConverterConnectionModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5178.TorqueConverterConnectionModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_modal_analysis_at_a_speed(self) -> '_5179.TorqueConverterModalAnalysisAtASpeed':
        """TorqueConverterModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5179.TorqueConverterModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_modal_analysis_at_a_speed(self) -> '_5180.TorqueConverterPumpModalAnalysisAtASpeed':
        """TorqueConverterPumpModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5180.TorqueConverterPumpModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_modal_analysis_at_a_speed(self) -> '_5181.TorqueConverterTurbineModalAnalysisAtASpeed':
        """TorqueConverterTurbineModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5181.TorqueConverterTurbineModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_modal_analysis_at_a_speed(self) -> '_5182.UnbalancedMassModalAnalysisAtASpeed':
        """UnbalancedMassModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5182.UnbalancedMassModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_modal_analysis_at_a_speed(self) -> '_5183.VirtualComponentModalAnalysisAtASpeed':
        """VirtualComponentModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5183.VirtualComponentModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_modal_analysis_at_a_speed(self) -> '_5184.WormGearMeshModalAnalysisAtASpeed':
        """WormGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5184.WormGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_modal_analysis_at_a_speed(self) -> '_5185.WormGearModalAnalysisAtASpeed':
        """WormGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5185.WormGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_modal_analysis_at_a_speed(self) -> '_5186.WormGearSetModalAnalysisAtASpeed':
        """WormGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5186.WormGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_modal_analysis_at_a_speed(self) -> '_5187.ZerolBevelGearMeshModalAnalysisAtASpeed':
        """ZerolBevelGearMeshModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5187.ZerolBevelGearMeshModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_modal_analysis_at_a_speed(self) -> '_5188.ZerolBevelGearModalAnalysisAtASpeed':
        """ZerolBevelGearModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5188.ZerolBevelGearModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_modal_analysis_at_a_speed(self) -> '_5189.ZerolBevelGearSetModalAnalysisAtASpeed':
        """ZerolBevelGearSetModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5189.ZerolBevelGearSetModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_modal_analysis_at_a_speed(self) -> '_5190.AbstractAssemblyCompoundModalAnalysisAtASpeed':
        """AbstractAssemblyCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5190.AbstractAssemblyCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_modal_analysis_at_a_speed(self) -> '_5191.AbstractShaftCompoundModalAnalysisAtASpeed':
        """AbstractShaftCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5191.AbstractShaftCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_modal_analysis_at_a_speed(self) -> '_5192.AbstractShaftOrHousingCompoundModalAnalysisAtASpeed':
        """AbstractShaftOrHousingCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5192.AbstractShaftOrHousingCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_modal_analysis_at_a_speed(self) -> '_5193.AbstractShaftToMountableComponentConnectionCompoundModalAnalysisAtASpeed':
        """AbstractShaftToMountableComponentConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5193.AbstractShaftToMountableComponentConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_modal_analysis_at_a_speed(self) -> '_5194.AGMAGleasonConicalGearCompoundModalAnalysisAtASpeed':
        """AGMAGleasonConicalGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5194.AGMAGleasonConicalGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5195.AGMAGleasonConicalGearMeshCompoundModalAnalysisAtASpeed':
        """AGMAGleasonConicalGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5195.AGMAGleasonConicalGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5196.AGMAGleasonConicalGearSetCompoundModalAnalysisAtASpeed':
        """AGMAGleasonConicalGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5196.AGMAGleasonConicalGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_modal_analysis_at_a_speed(self) -> '_5197.AssemblyCompoundModalAnalysisAtASpeed':
        """AssemblyCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5197.AssemblyCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_modal_analysis_at_a_speed(self) -> '_5198.BearingCompoundModalAnalysisAtASpeed':
        """BearingCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5198.BearingCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_modal_analysis_at_a_speed(self) -> '_5199.BeltConnectionCompoundModalAnalysisAtASpeed':
        """BeltConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5199.BeltConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_modal_analysis_at_a_speed(self) -> '_5200.BeltDriveCompoundModalAnalysisAtASpeed':
        """BeltDriveCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5200.BeltDriveCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_modal_analysis_at_a_speed(self) -> '_5201.BevelDifferentialGearCompoundModalAnalysisAtASpeed':
        """BevelDifferentialGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5201.BevelDifferentialGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5202.BevelDifferentialGearMeshCompoundModalAnalysisAtASpeed':
        """BevelDifferentialGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5202.BevelDifferentialGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5203.BevelDifferentialGearSetCompoundModalAnalysisAtASpeed':
        """BevelDifferentialGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5203.BevelDifferentialGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_modal_analysis_at_a_speed(self) -> '_5204.BevelDifferentialPlanetGearCompoundModalAnalysisAtASpeed':
        """BevelDifferentialPlanetGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5204.BevelDifferentialPlanetGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_modal_analysis_at_a_speed(self) -> '_5205.BevelDifferentialSunGearCompoundModalAnalysisAtASpeed':
        """BevelDifferentialSunGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5205.BevelDifferentialSunGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_modal_analysis_at_a_speed(self) -> '_5206.BevelGearCompoundModalAnalysisAtASpeed':
        """BevelGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5206.BevelGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5207.BevelGearMeshCompoundModalAnalysisAtASpeed':
        """BevelGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5207.BevelGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5208.BevelGearSetCompoundModalAnalysisAtASpeed':
        """BevelGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5208.BevelGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_modal_analysis_at_a_speed(self) -> '_5209.BoltCompoundModalAnalysisAtASpeed':
        """BoltCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5209.BoltCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_modal_analysis_at_a_speed(self) -> '_5210.BoltedJointCompoundModalAnalysisAtASpeed':
        """BoltedJointCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5210.BoltedJointCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_modal_analysis_at_a_speed(self) -> '_5211.ClutchCompoundModalAnalysisAtASpeed':
        """ClutchCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5211.ClutchCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_modal_analysis_at_a_speed(self) -> '_5212.ClutchConnectionCompoundModalAnalysisAtASpeed':
        """ClutchConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5212.ClutchConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_modal_analysis_at_a_speed(self) -> '_5213.ClutchHalfCompoundModalAnalysisAtASpeed':
        """ClutchHalfCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5213.ClutchHalfCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_modal_analysis_at_a_speed(self) -> '_5214.CoaxialConnectionCompoundModalAnalysisAtASpeed':
        """CoaxialConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5214.CoaxialConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_modal_analysis_at_a_speed(self) -> '_5215.ComponentCompoundModalAnalysisAtASpeed':
        """ComponentCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5215.ComponentCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_modal_analysis_at_a_speed(self) -> '_5216.ConceptCouplingCompoundModalAnalysisAtASpeed':
        """ConceptCouplingCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5216.ConceptCouplingCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_modal_analysis_at_a_speed(self) -> '_5217.ConceptCouplingConnectionCompoundModalAnalysisAtASpeed':
        """ConceptCouplingConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5217.ConceptCouplingConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_modal_analysis_at_a_speed(self) -> '_5218.ConceptCouplingHalfCompoundModalAnalysisAtASpeed':
        """ConceptCouplingHalfCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5218.ConceptCouplingHalfCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_modal_analysis_at_a_speed(self) -> '_5219.ConceptGearCompoundModalAnalysisAtASpeed':
        """ConceptGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5219.ConceptGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5220.ConceptGearMeshCompoundModalAnalysisAtASpeed':
        """ConceptGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5220.ConceptGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5221.ConceptGearSetCompoundModalAnalysisAtASpeed':
        """ConceptGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5221.ConceptGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_modal_analysis_at_a_speed(self) -> '_5222.ConicalGearCompoundModalAnalysisAtASpeed':
        """ConicalGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5222.ConicalGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5223.ConicalGearMeshCompoundModalAnalysisAtASpeed':
        """ConicalGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5223.ConicalGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5224.ConicalGearSetCompoundModalAnalysisAtASpeed':
        """ConicalGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5224.ConicalGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_modal_analysis_at_a_speed(self) -> '_5225.ConnectionCompoundModalAnalysisAtASpeed':
        """ConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5225.ConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_modal_analysis_at_a_speed(self) -> '_5226.ConnectorCompoundModalAnalysisAtASpeed':
        """ConnectorCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5226.ConnectorCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_modal_analysis_at_a_speed(self) -> '_5227.CouplingCompoundModalAnalysisAtASpeed':
        """CouplingCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5227.CouplingCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_modal_analysis_at_a_speed(self) -> '_5228.CouplingConnectionCompoundModalAnalysisAtASpeed':
        """CouplingConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5228.CouplingConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_modal_analysis_at_a_speed(self) -> '_5229.CouplingHalfCompoundModalAnalysisAtASpeed':
        """CouplingHalfCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5229.CouplingHalfCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_modal_analysis_at_a_speed(self) -> '_5230.CVTBeltConnectionCompoundModalAnalysisAtASpeed':
        """CVTBeltConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5230.CVTBeltConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_modal_analysis_at_a_speed(self) -> '_5231.CVTCompoundModalAnalysisAtASpeed':
        """CVTCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5231.CVTCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_modal_analysis_at_a_speed(self) -> '_5232.CVTPulleyCompoundModalAnalysisAtASpeed':
        """CVTPulleyCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5232.CVTPulleyCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_modal_analysis_at_a_speed(self) -> '_5233.CycloidalAssemblyCompoundModalAnalysisAtASpeed':
        """CycloidalAssemblyCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5233.CycloidalAssemblyCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_modal_analysis_at_a_speed(self) -> '_5234.CycloidalDiscCentralBearingConnectionCompoundModalAnalysisAtASpeed':
        """CycloidalDiscCentralBearingConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5234.CycloidalDiscCentralBearingConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_modal_analysis_at_a_speed(self) -> '_5235.CycloidalDiscCompoundModalAnalysisAtASpeed':
        """CycloidalDiscCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5235.CycloidalDiscCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_modal_analysis_at_a_speed(self) -> '_5236.CycloidalDiscPlanetaryBearingConnectionCompoundModalAnalysisAtASpeed':
        """CycloidalDiscPlanetaryBearingConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5236.CycloidalDiscPlanetaryBearingConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_modal_analysis_at_a_speed(self) -> '_5237.CylindricalGearCompoundModalAnalysisAtASpeed':
        """CylindricalGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5237.CylindricalGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5238.CylindricalGearMeshCompoundModalAnalysisAtASpeed':
        """CylindricalGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5238.CylindricalGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5239.CylindricalGearSetCompoundModalAnalysisAtASpeed':
        """CylindricalGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5239.CylindricalGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_modal_analysis_at_a_speed(self) -> '_5240.CylindricalPlanetGearCompoundModalAnalysisAtASpeed':
        """CylindricalPlanetGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5240.CylindricalPlanetGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_modal_analysis_at_a_speed(self) -> '_5241.DatumCompoundModalAnalysisAtASpeed':
        """DatumCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5241.DatumCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_modal_analysis_at_a_speed(self) -> '_5242.ExternalCADModelCompoundModalAnalysisAtASpeed':
        """ExternalCADModelCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5242.ExternalCADModelCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_modal_analysis_at_a_speed(self) -> '_5243.FaceGearCompoundModalAnalysisAtASpeed':
        """FaceGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5243.FaceGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5244.FaceGearMeshCompoundModalAnalysisAtASpeed':
        """FaceGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5244.FaceGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5245.FaceGearSetCompoundModalAnalysisAtASpeed':
        """FaceGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5245.FaceGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_modal_analysis_at_a_speed(self) -> '_5246.FEPartCompoundModalAnalysisAtASpeed':
        """FEPartCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5246.FEPartCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_modal_analysis_at_a_speed(self) -> '_5247.FlexiblePinAssemblyCompoundModalAnalysisAtASpeed':
        """FlexiblePinAssemblyCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5247.FlexiblePinAssemblyCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_modal_analysis_at_a_speed(self) -> '_5248.GearCompoundModalAnalysisAtASpeed':
        """GearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5248.GearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5249.GearMeshCompoundModalAnalysisAtASpeed':
        """GearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5249.GearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5250.GearSetCompoundModalAnalysisAtASpeed':
        """GearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5250.GearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_modal_analysis_at_a_speed(self) -> '_5251.GuideDxfModelCompoundModalAnalysisAtASpeed':
        """GuideDxfModelCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5251.GuideDxfModelCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_modal_analysis_at_a_speed(self) -> '_5252.HypoidGearCompoundModalAnalysisAtASpeed':
        """HypoidGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5252.HypoidGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5253.HypoidGearMeshCompoundModalAnalysisAtASpeed':
        """HypoidGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5253.HypoidGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5254.HypoidGearSetCompoundModalAnalysisAtASpeed':
        """HypoidGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5254.HypoidGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_modal_analysis_at_a_speed(self) -> '_5255.InterMountableComponentConnectionCompoundModalAnalysisAtASpeed':
        """InterMountableComponentConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5255.InterMountableComponentConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_modal_analysis_at_a_speed(self) -> '_5256.KlingelnbergCycloPalloidConicalGearCompoundModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidConicalGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5256.KlingelnbergCycloPalloidConicalGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5257.KlingelnbergCycloPalloidConicalGearMeshCompoundModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5257.KlingelnbergCycloPalloidConicalGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5258.KlingelnbergCycloPalloidConicalGearSetCompoundModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidConicalGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5258.KlingelnbergCycloPalloidConicalGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_modal_analysis_at_a_speed(self) -> '_5259.KlingelnbergCycloPalloidHypoidGearCompoundModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5259.KlingelnbergCycloPalloidHypoidGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5260.KlingelnbergCycloPalloidHypoidGearMeshCompoundModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5260.KlingelnbergCycloPalloidHypoidGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5261.KlingelnbergCycloPalloidHypoidGearSetCompoundModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5261.KlingelnbergCycloPalloidHypoidGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_modal_analysis_at_a_speed(self) -> '_5262.KlingelnbergCycloPalloidSpiralBevelGearCompoundModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5262.KlingelnbergCycloPalloidSpiralBevelGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5263.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5263.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5264.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundModalAnalysisAtASpeed':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5264.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_modal_analysis_at_a_speed(self) -> '_5265.MassDiscCompoundModalAnalysisAtASpeed':
        """MassDiscCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5265.MassDiscCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_modal_analysis_at_a_speed(self) -> '_5266.MeasurementComponentCompoundModalAnalysisAtASpeed':
        """MeasurementComponentCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5266.MeasurementComponentCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_modal_analysis_at_a_speed(self) -> '_5267.MountableComponentCompoundModalAnalysisAtASpeed':
        """MountableComponentCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5267.MountableComponentCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_modal_analysis_at_a_speed(self) -> '_5268.OilSealCompoundModalAnalysisAtASpeed':
        """OilSealCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5268.OilSealCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_modal_analysis_at_a_speed(self) -> '_5269.PartCompoundModalAnalysisAtASpeed':
        """PartCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5269.PartCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_modal_analysis_at_a_speed(self) -> '_5270.PartToPartShearCouplingCompoundModalAnalysisAtASpeed':
        """PartToPartShearCouplingCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5270.PartToPartShearCouplingCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_modal_analysis_at_a_speed(self) -> '_5271.PartToPartShearCouplingConnectionCompoundModalAnalysisAtASpeed':
        """PartToPartShearCouplingConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5271.PartToPartShearCouplingConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_modal_analysis_at_a_speed(self) -> '_5272.PartToPartShearCouplingHalfCompoundModalAnalysisAtASpeed':
        """PartToPartShearCouplingHalfCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5272.PartToPartShearCouplingHalfCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_modal_analysis_at_a_speed(self) -> '_5273.PlanetaryConnectionCompoundModalAnalysisAtASpeed':
        """PlanetaryConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5273.PlanetaryConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5274.PlanetaryGearSetCompoundModalAnalysisAtASpeed':
        """PlanetaryGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5274.PlanetaryGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_modal_analysis_at_a_speed(self) -> '_5275.PlanetCarrierCompoundModalAnalysisAtASpeed':
        """PlanetCarrierCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5275.PlanetCarrierCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_modal_analysis_at_a_speed(self) -> '_5276.PointLoadCompoundModalAnalysisAtASpeed':
        """PointLoadCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5276.PointLoadCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_modal_analysis_at_a_speed(self) -> '_5277.PowerLoadCompoundModalAnalysisAtASpeed':
        """PowerLoadCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5277.PowerLoadCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_modal_analysis_at_a_speed(self) -> '_5278.PulleyCompoundModalAnalysisAtASpeed':
        """PulleyCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5278.PulleyCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_modal_analysis_at_a_speed(self) -> '_5279.RingPinsCompoundModalAnalysisAtASpeed':
        """RingPinsCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5279.RingPinsCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_modal_analysis_at_a_speed(self) -> '_5280.RingPinsToDiscConnectionCompoundModalAnalysisAtASpeed':
        """RingPinsToDiscConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5280.RingPinsToDiscConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_modal_analysis_at_a_speed(self) -> '_5281.RollingRingAssemblyCompoundModalAnalysisAtASpeed':
        """RollingRingAssemblyCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5281.RollingRingAssemblyCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_modal_analysis_at_a_speed(self) -> '_5282.RollingRingCompoundModalAnalysisAtASpeed':
        """RollingRingCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5282.RollingRingCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_modal_analysis_at_a_speed(self) -> '_5283.RollingRingConnectionCompoundModalAnalysisAtASpeed':
        """RollingRingConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5283.RollingRingConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_modal_analysis_at_a_speed(self) -> '_5284.RootAssemblyCompoundModalAnalysisAtASpeed':
        """RootAssemblyCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5284.RootAssemblyCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_modal_analysis_at_a_speed(self) -> '_5285.ShaftCompoundModalAnalysisAtASpeed':
        """ShaftCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5285.ShaftCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_modal_analysis_at_a_speed(self) -> '_5286.ShaftHubConnectionCompoundModalAnalysisAtASpeed':
        """ShaftHubConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5286.ShaftHubConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_modal_analysis_at_a_speed(self) -> '_5287.ShaftToMountableComponentConnectionCompoundModalAnalysisAtASpeed':
        """ShaftToMountableComponentConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5287.ShaftToMountableComponentConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_modal_analysis_at_a_speed(self) -> '_5288.SpecialisedAssemblyCompoundModalAnalysisAtASpeed':
        """SpecialisedAssemblyCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5288.SpecialisedAssemblyCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_modal_analysis_at_a_speed(self) -> '_5289.SpiralBevelGearCompoundModalAnalysisAtASpeed':
        """SpiralBevelGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5289.SpiralBevelGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5290.SpiralBevelGearMeshCompoundModalAnalysisAtASpeed':
        """SpiralBevelGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5290.SpiralBevelGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5291.SpiralBevelGearSetCompoundModalAnalysisAtASpeed':
        """SpiralBevelGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5291.SpiralBevelGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_modal_analysis_at_a_speed(self) -> '_5292.SpringDamperCompoundModalAnalysisAtASpeed':
        """SpringDamperCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5292.SpringDamperCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_modal_analysis_at_a_speed(self) -> '_5293.SpringDamperConnectionCompoundModalAnalysisAtASpeed':
        """SpringDamperConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5293.SpringDamperConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_modal_analysis_at_a_speed(self) -> '_5294.SpringDamperHalfCompoundModalAnalysisAtASpeed':
        """SpringDamperHalfCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5294.SpringDamperHalfCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_modal_analysis_at_a_speed(self) -> '_5295.StraightBevelDiffGearCompoundModalAnalysisAtASpeed':
        """StraightBevelDiffGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5295.StraightBevelDiffGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5296.StraightBevelDiffGearMeshCompoundModalAnalysisAtASpeed':
        """StraightBevelDiffGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5296.StraightBevelDiffGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5297.StraightBevelDiffGearSetCompoundModalAnalysisAtASpeed':
        """StraightBevelDiffGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5297.StraightBevelDiffGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_modal_analysis_at_a_speed(self) -> '_5298.StraightBevelGearCompoundModalAnalysisAtASpeed':
        """StraightBevelGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5298.StraightBevelGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5299.StraightBevelGearMeshCompoundModalAnalysisAtASpeed':
        """StraightBevelGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5299.StraightBevelGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5300.StraightBevelGearSetCompoundModalAnalysisAtASpeed':
        """StraightBevelGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5300.StraightBevelGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_modal_analysis_at_a_speed(self) -> '_5301.StraightBevelPlanetGearCompoundModalAnalysisAtASpeed':
        """StraightBevelPlanetGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5301.StraightBevelPlanetGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_modal_analysis_at_a_speed(self) -> '_5302.StraightBevelSunGearCompoundModalAnalysisAtASpeed':
        """StraightBevelSunGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5302.StraightBevelSunGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_modal_analysis_at_a_speed(self) -> '_5303.SynchroniserCompoundModalAnalysisAtASpeed':
        """SynchroniserCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5303.SynchroniserCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_modal_analysis_at_a_speed(self) -> '_5304.SynchroniserHalfCompoundModalAnalysisAtASpeed':
        """SynchroniserHalfCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5304.SynchroniserHalfCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_modal_analysis_at_a_speed(self) -> '_5305.SynchroniserPartCompoundModalAnalysisAtASpeed':
        """SynchroniserPartCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5305.SynchroniserPartCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_modal_analysis_at_a_speed(self) -> '_5306.SynchroniserSleeveCompoundModalAnalysisAtASpeed':
        """SynchroniserSleeveCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5306.SynchroniserSleeveCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_modal_analysis_at_a_speed(self) -> '_5307.TorqueConverterCompoundModalAnalysisAtASpeed':
        """TorqueConverterCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5307.TorqueConverterCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_modal_analysis_at_a_speed(self) -> '_5308.TorqueConverterConnectionCompoundModalAnalysisAtASpeed':
        """TorqueConverterConnectionCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5308.TorqueConverterConnectionCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_modal_analysis_at_a_speed(self) -> '_5309.TorqueConverterPumpCompoundModalAnalysisAtASpeed':
        """TorqueConverterPumpCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5309.TorqueConverterPumpCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_modal_analysis_at_a_speed(self) -> '_5310.TorqueConverterTurbineCompoundModalAnalysisAtASpeed':
        """TorqueConverterTurbineCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5310.TorqueConverterTurbineCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_modal_analysis_at_a_speed(self) -> '_5311.UnbalancedMassCompoundModalAnalysisAtASpeed':
        """UnbalancedMassCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5311.UnbalancedMassCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_modal_analysis_at_a_speed(self) -> '_5312.VirtualComponentCompoundModalAnalysisAtASpeed':
        """VirtualComponentCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5312.VirtualComponentCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_modal_analysis_at_a_speed(self) -> '_5313.WormGearCompoundModalAnalysisAtASpeed':
        """WormGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5313.WormGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5314.WormGearMeshCompoundModalAnalysisAtASpeed':
        """WormGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5314.WormGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5315.WormGearSetCompoundModalAnalysisAtASpeed':
        """WormGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5315.WormGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_modal_analysis_at_a_speed(self) -> '_5316.ZerolBevelGearCompoundModalAnalysisAtASpeed':
        """ZerolBevelGearCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5316.ZerolBevelGearCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_modal_analysis_at_a_speed(self) -> '_5317.ZerolBevelGearMeshCompoundModalAnalysisAtASpeed':
        """ZerolBevelGearMeshCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5317.ZerolBevelGearMeshCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_modal_analysis_at_a_speed(self) -> '_5318.ZerolBevelGearSetCompoundModalAnalysisAtASpeed':
        """ZerolBevelGearSetCompoundModalAnalysisAtASpeed: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5318.ZerolBevelGearSetCompoundModalAnalysisAtASpeed.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundModalAnalysisAtASpeed. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_multibody_dynamics_analysis(self) -> '_5319.AbstractAssemblyMultibodyDynamicsAnalysis':
        """AbstractAssemblyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5319.AbstractAssemblyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_multibody_dynamics_analysis(self) -> '_5320.AbstractShaftMultibodyDynamicsAnalysis':
        """AbstractShaftMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5320.AbstractShaftMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_multibody_dynamics_analysis(self) -> '_5321.AbstractShaftOrHousingMultibodyDynamicsAnalysis':
        """AbstractShaftOrHousingMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5321.AbstractShaftOrHousingMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_multibody_dynamics_analysis(self) -> '_5322.AbstractShaftToMountableComponentConnectionMultibodyDynamicsAnalysis':
        """AbstractShaftToMountableComponentConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5322.AbstractShaftToMountableComponentConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_multibody_dynamics_analysis(self) -> '_5323.AGMAGleasonConicalGearMeshMultibodyDynamicsAnalysis':
        """AGMAGleasonConicalGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5323.AGMAGleasonConicalGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_multibody_dynamics_analysis(self) -> '_5324.AGMAGleasonConicalGearMultibodyDynamicsAnalysis':
        """AGMAGleasonConicalGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5324.AGMAGleasonConicalGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_multibody_dynamics_analysis(self) -> '_5325.AGMAGleasonConicalGearSetMultibodyDynamicsAnalysis':
        """AGMAGleasonConicalGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5325.AGMAGleasonConicalGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_multibody_dynamics_analysis(self) -> '_5327.AssemblyMultibodyDynamicsAnalysis':
        """AssemblyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5327.AssemblyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_multibody_dynamics_analysis(self) -> '_5328.BearingMultibodyDynamicsAnalysis':
        """BearingMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5328.BearingMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_multibody_dynamics_analysis(self) -> '_5330.BeltConnectionMultibodyDynamicsAnalysis':
        """BeltConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5330.BeltConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_multibody_dynamics_analysis(self) -> '_5331.BeltDriveMultibodyDynamicsAnalysis':
        """BeltDriveMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5331.BeltDriveMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_multibody_dynamics_analysis(self) -> '_5332.BevelDifferentialGearMeshMultibodyDynamicsAnalysis':
        """BevelDifferentialGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5332.BevelDifferentialGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_multibody_dynamics_analysis(self) -> '_5333.BevelDifferentialGearMultibodyDynamicsAnalysis':
        """BevelDifferentialGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5333.BevelDifferentialGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_multibody_dynamics_analysis(self) -> '_5334.BevelDifferentialGearSetMultibodyDynamicsAnalysis':
        """BevelDifferentialGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5334.BevelDifferentialGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_multibody_dynamics_analysis(self) -> '_5335.BevelDifferentialPlanetGearMultibodyDynamicsAnalysis':
        """BevelDifferentialPlanetGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5335.BevelDifferentialPlanetGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_multibody_dynamics_analysis(self) -> '_5336.BevelDifferentialSunGearMultibodyDynamicsAnalysis':
        """BevelDifferentialSunGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5336.BevelDifferentialSunGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_multibody_dynamics_analysis(self) -> '_5337.BevelGearMeshMultibodyDynamicsAnalysis':
        """BevelGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5337.BevelGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_multibody_dynamics_analysis(self) -> '_5338.BevelGearMultibodyDynamicsAnalysis':
        """BevelGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5338.BevelGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_multibody_dynamics_analysis(self) -> '_5339.BevelGearSetMultibodyDynamicsAnalysis':
        """BevelGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5339.BevelGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_multibody_dynamics_analysis(self) -> '_5340.BoltedJointMultibodyDynamicsAnalysis':
        """BoltedJointMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5340.BoltedJointMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_multibody_dynamics_analysis(self) -> '_5341.BoltMultibodyDynamicsAnalysis':
        """BoltMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5341.BoltMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_multibody_dynamics_analysis(self) -> '_5342.ClutchConnectionMultibodyDynamicsAnalysis':
        """ClutchConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5342.ClutchConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_multibody_dynamics_analysis(self) -> '_5343.ClutchHalfMultibodyDynamicsAnalysis':
        """ClutchHalfMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5343.ClutchHalfMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_multibody_dynamics_analysis(self) -> '_5344.ClutchMultibodyDynamicsAnalysis':
        """ClutchMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5344.ClutchMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_multibody_dynamics_analysis(self) -> '_5346.CoaxialConnectionMultibodyDynamicsAnalysis':
        """CoaxialConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5346.CoaxialConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_multibody_dynamics_analysis(self) -> '_5347.ComponentMultibodyDynamicsAnalysis':
        """ComponentMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5347.ComponentMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_multibody_dynamics_analysis(self) -> '_5348.ConceptCouplingConnectionMultibodyDynamicsAnalysis':
        """ConceptCouplingConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5348.ConceptCouplingConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_multibody_dynamics_analysis(self) -> '_5349.ConceptCouplingHalfMultibodyDynamicsAnalysis':
        """ConceptCouplingHalfMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5349.ConceptCouplingHalfMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_multibody_dynamics_analysis(self) -> '_5350.ConceptCouplingMultibodyDynamicsAnalysis':
        """ConceptCouplingMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5350.ConceptCouplingMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_multibody_dynamics_analysis(self) -> '_5351.ConceptGearMeshMultibodyDynamicsAnalysis':
        """ConceptGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5351.ConceptGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_multibody_dynamics_analysis(self) -> '_5352.ConceptGearMultibodyDynamicsAnalysis':
        """ConceptGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5352.ConceptGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_multibody_dynamics_analysis(self) -> '_5353.ConceptGearSetMultibodyDynamicsAnalysis':
        """ConceptGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5353.ConceptGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_multibody_dynamics_analysis(self) -> '_5354.ConicalGearMeshMultibodyDynamicsAnalysis':
        """ConicalGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5354.ConicalGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_multibody_dynamics_analysis(self) -> '_5355.ConicalGearMultibodyDynamicsAnalysis':
        """ConicalGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5355.ConicalGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_multibody_dynamics_analysis(self) -> '_5356.ConicalGearSetMultibodyDynamicsAnalysis':
        """ConicalGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5356.ConicalGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_multibody_dynamics_analysis(self) -> '_5357.ConnectionMultibodyDynamicsAnalysis':
        """ConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5357.ConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_multibody_dynamics_analysis(self) -> '_5358.ConnectorMultibodyDynamicsAnalysis':
        """ConnectorMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5358.ConnectorMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_multibody_dynamics_analysis(self) -> '_5359.CouplingConnectionMultibodyDynamicsAnalysis':
        """CouplingConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5359.CouplingConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_multibody_dynamics_analysis(self) -> '_5360.CouplingHalfMultibodyDynamicsAnalysis':
        """CouplingHalfMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5360.CouplingHalfMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_multibody_dynamics_analysis(self) -> '_5361.CouplingMultibodyDynamicsAnalysis':
        """CouplingMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5361.CouplingMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_multibody_dynamics_analysis(self) -> '_5362.CVTBeltConnectionMultibodyDynamicsAnalysis':
        """CVTBeltConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5362.CVTBeltConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_multibody_dynamics_analysis(self) -> '_5363.CVTMultibodyDynamicsAnalysis':
        """CVTMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5363.CVTMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_multibody_dynamics_analysis(self) -> '_5364.CVTPulleyMultibodyDynamicsAnalysis':
        """CVTPulleyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5364.CVTPulleyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_multibody_dynamics_analysis(self) -> '_5365.CycloidalAssemblyMultibodyDynamicsAnalysis':
        """CycloidalAssemblyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5365.CycloidalAssemblyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_multibody_dynamics_analysis(self) -> '_5366.CycloidalDiscCentralBearingConnectionMultibodyDynamicsAnalysis':
        """CycloidalDiscCentralBearingConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5366.CycloidalDiscCentralBearingConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_multibody_dynamics_analysis(self) -> '_5367.CycloidalDiscMultibodyDynamicsAnalysis':
        """CycloidalDiscMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5367.CycloidalDiscMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_multibody_dynamics_analysis(self) -> '_5368.CycloidalDiscPlanetaryBearingConnectionMultibodyDynamicsAnalysis':
        """CycloidalDiscPlanetaryBearingConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5368.CycloidalDiscPlanetaryBearingConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_multibody_dynamics_analysis(self) -> '_5369.CylindricalGearMeshMultibodyDynamicsAnalysis':
        """CylindricalGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5369.CylindricalGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_multibody_dynamics_analysis(self) -> '_5370.CylindricalGearMultibodyDynamicsAnalysis':
        """CylindricalGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5370.CylindricalGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_multibody_dynamics_analysis(self) -> '_5371.CylindricalGearSetMultibodyDynamicsAnalysis':
        """CylindricalGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5371.CylindricalGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_multibody_dynamics_analysis(self) -> '_5372.CylindricalPlanetGearMultibodyDynamicsAnalysis':
        """CylindricalPlanetGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5372.CylindricalPlanetGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_multibody_dynamics_analysis(self) -> '_5373.DatumMultibodyDynamicsAnalysis':
        """DatumMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5373.DatumMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_multibody_dynamics_analysis(self) -> '_5374.ExternalCADModelMultibodyDynamicsAnalysis':
        """ExternalCADModelMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5374.ExternalCADModelMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_multibody_dynamics_analysis(self) -> '_5375.FaceGearMeshMultibodyDynamicsAnalysis':
        """FaceGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5375.FaceGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_multibody_dynamics_analysis(self) -> '_5376.FaceGearMultibodyDynamicsAnalysis':
        """FaceGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5376.FaceGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_multibody_dynamics_analysis(self) -> '_5377.FaceGearSetMultibodyDynamicsAnalysis':
        """FaceGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5377.FaceGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_multibody_dynamics_analysis(self) -> '_5378.FEPartMultibodyDynamicsAnalysis':
        """FEPartMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5378.FEPartMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_multibody_dynamics_analysis(self) -> '_5379.FlexiblePinAssemblyMultibodyDynamicsAnalysis':
        """FlexiblePinAssemblyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5379.FlexiblePinAssemblyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_multibody_dynamics_analysis(self) -> '_5380.GearMeshMultibodyDynamicsAnalysis':
        """GearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5380.GearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_multibody_dynamics_analysis(self) -> '_5382.GearMultibodyDynamicsAnalysis':
        """GearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5382.GearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_multibody_dynamics_analysis(self) -> '_5383.GearSetMultibodyDynamicsAnalysis':
        """GearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5383.GearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_multibody_dynamics_analysis(self) -> '_5384.GuideDxfModelMultibodyDynamicsAnalysis':
        """GuideDxfModelMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5384.GuideDxfModelMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_multibody_dynamics_analysis(self) -> '_5385.HypoidGearMeshMultibodyDynamicsAnalysis':
        """HypoidGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5385.HypoidGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_multibody_dynamics_analysis(self) -> '_5386.HypoidGearMultibodyDynamicsAnalysis':
        """HypoidGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5386.HypoidGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_multibody_dynamics_analysis(self) -> '_5387.HypoidGearSetMultibodyDynamicsAnalysis':
        """HypoidGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5387.HypoidGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_multibody_dynamics_analysis(self) -> '_5392.InterMountableComponentConnectionMultibodyDynamicsAnalysis':
        """InterMountableComponentConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5392.InterMountableComponentConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_multibody_dynamics_analysis(self) -> '_5393.KlingelnbergCycloPalloidConicalGearMeshMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidConicalGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5393.KlingelnbergCycloPalloidConicalGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_multibody_dynamics_analysis(self) -> '_5394.KlingelnbergCycloPalloidConicalGearMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidConicalGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5394.KlingelnbergCycloPalloidConicalGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_multibody_dynamics_analysis(self) -> '_5395.KlingelnbergCycloPalloidConicalGearSetMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5395.KlingelnbergCycloPalloidConicalGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_multibody_dynamics_analysis(self) -> '_5396.KlingelnbergCycloPalloidHypoidGearMeshMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidHypoidGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5396.KlingelnbergCycloPalloidHypoidGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_multibody_dynamics_analysis(self) -> '_5397.KlingelnbergCycloPalloidHypoidGearMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidHypoidGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5397.KlingelnbergCycloPalloidHypoidGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_multibody_dynamics_analysis(self) -> '_5398.KlingelnbergCycloPalloidHypoidGearSetMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5398.KlingelnbergCycloPalloidHypoidGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_multibody_dynamics_analysis(self) -> '_5399.KlingelnbergCycloPalloidSpiralBevelGearMeshMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5399.KlingelnbergCycloPalloidSpiralBevelGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_multibody_dynamics_analysis(self) -> '_5400.KlingelnbergCycloPalloidSpiralBevelGearMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5400.KlingelnbergCycloPalloidSpiralBevelGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_multibody_dynamics_analysis(self) -> '_5401.KlingelnbergCycloPalloidSpiralBevelGearSetMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5401.KlingelnbergCycloPalloidSpiralBevelGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_multibody_dynamics_analysis(self) -> '_5402.MassDiscMultibodyDynamicsAnalysis':
        """MassDiscMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5402.MassDiscMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_multibody_dynamics_analysis(self) -> '_5406.MeasurementComponentMultibodyDynamicsAnalysis':
        """MeasurementComponentMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5406.MeasurementComponentMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_multibody_dynamics_analysis(self) -> '_5407.MountableComponentMultibodyDynamicsAnalysis':
        """MountableComponentMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5407.MountableComponentMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_multibody_dynamics_analysis(self) -> '_5408.OilSealMultibodyDynamicsAnalysis':
        """OilSealMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5408.OilSealMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_multibody_dynamics_analysis(self) -> '_5409.PartMultibodyDynamicsAnalysis':
        """PartMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5409.PartMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_multibody_dynamics_analysis(self) -> '_5410.PartToPartShearCouplingConnectionMultibodyDynamicsAnalysis':
        """PartToPartShearCouplingConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5410.PartToPartShearCouplingConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_multibody_dynamics_analysis(self) -> '_5411.PartToPartShearCouplingHalfMultibodyDynamicsAnalysis':
        """PartToPartShearCouplingHalfMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5411.PartToPartShearCouplingHalfMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_multibody_dynamics_analysis(self) -> '_5412.PartToPartShearCouplingMultibodyDynamicsAnalysis':
        """PartToPartShearCouplingMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5412.PartToPartShearCouplingMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_multibody_dynamics_analysis(self) -> '_5413.PlanetaryConnectionMultibodyDynamicsAnalysis':
        """PlanetaryConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5413.PlanetaryConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_multibody_dynamics_analysis(self) -> '_5414.PlanetaryGearSetMultibodyDynamicsAnalysis':
        """PlanetaryGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5414.PlanetaryGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_multibody_dynamics_analysis(self) -> '_5415.PlanetCarrierMultibodyDynamicsAnalysis':
        """PlanetCarrierMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5415.PlanetCarrierMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_multibody_dynamics_analysis(self) -> '_5416.PointLoadMultibodyDynamicsAnalysis':
        """PointLoadMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5416.PointLoadMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_multibody_dynamics_analysis(self) -> '_5417.PowerLoadMultibodyDynamicsAnalysis':
        """PowerLoadMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5417.PowerLoadMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_multibody_dynamics_analysis(self) -> '_5418.PulleyMultibodyDynamicsAnalysis':
        """PulleyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5418.PulleyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_multibody_dynamics_analysis(self) -> '_5419.RingPinsMultibodyDynamicsAnalysis':
        """RingPinsMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5419.RingPinsMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_multibody_dynamics_analysis(self) -> '_5420.RingPinsToDiscConnectionMultibodyDynamicsAnalysis':
        """RingPinsToDiscConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5420.RingPinsToDiscConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_multibody_dynamics_analysis(self) -> '_5421.RollingRingAssemblyMultibodyDynamicsAnalysis':
        """RollingRingAssemblyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5421.RollingRingAssemblyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_multibody_dynamics_analysis(self) -> '_5422.RollingRingConnectionMultibodyDynamicsAnalysis':
        """RollingRingConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5422.RollingRingConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_multibody_dynamics_analysis(self) -> '_5423.RollingRingMultibodyDynamicsAnalysis':
        """RollingRingMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5423.RollingRingMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_multibody_dynamics_analysis(self) -> '_5424.RootAssemblyMultibodyDynamicsAnalysis':
        """RootAssemblyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5424.RootAssemblyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_multibody_dynamics_analysis(self) -> '_5427.ShaftHubConnectionMultibodyDynamicsAnalysis':
        """ShaftHubConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5427.ShaftHubConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_multibody_dynamics_analysis(self) -> '_5428.ShaftMultibodyDynamicsAnalysis':
        """ShaftMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5428.ShaftMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_multibody_dynamics_analysis(self) -> '_5429.ShaftToMountableComponentConnectionMultibodyDynamicsAnalysis':
        """ShaftToMountableComponentConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5429.ShaftToMountableComponentConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_multibody_dynamics_analysis(self) -> '_5431.SpecialisedAssemblyMultibodyDynamicsAnalysis':
        """SpecialisedAssemblyMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5431.SpecialisedAssemblyMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_multibody_dynamics_analysis(self) -> '_5432.SpiralBevelGearMeshMultibodyDynamicsAnalysis':
        """SpiralBevelGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5432.SpiralBevelGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_multibody_dynamics_analysis(self) -> '_5433.SpiralBevelGearMultibodyDynamicsAnalysis':
        """SpiralBevelGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5433.SpiralBevelGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_multibody_dynamics_analysis(self) -> '_5434.SpiralBevelGearSetMultibodyDynamicsAnalysis':
        """SpiralBevelGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5434.SpiralBevelGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_multibody_dynamics_analysis(self) -> '_5435.SpringDamperConnectionMultibodyDynamicsAnalysis':
        """SpringDamperConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5435.SpringDamperConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_multibody_dynamics_analysis(self) -> '_5436.SpringDamperHalfMultibodyDynamicsAnalysis':
        """SpringDamperHalfMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5436.SpringDamperHalfMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_multibody_dynamics_analysis(self) -> '_5437.SpringDamperMultibodyDynamicsAnalysis':
        """SpringDamperMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5437.SpringDamperMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_multibody_dynamics_analysis(self) -> '_5438.StraightBevelDiffGearMeshMultibodyDynamicsAnalysis':
        """StraightBevelDiffGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5438.StraightBevelDiffGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_multibody_dynamics_analysis(self) -> '_5439.StraightBevelDiffGearMultibodyDynamicsAnalysis':
        """StraightBevelDiffGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5439.StraightBevelDiffGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_multibody_dynamics_analysis(self) -> '_5440.StraightBevelDiffGearSetMultibodyDynamicsAnalysis':
        """StraightBevelDiffGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5440.StraightBevelDiffGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_multibody_dynamics_analysis(self) -> '_5441.StraightBevelGearMeshMultibodyDynamicsAnalysis':
        """StraightBevelGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5441.StraightBevelGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_multibody_dynamics_analysis(self) -> '_5442.StraightBevelGearMultibodyDynamicsAnalysis':
        """StraightBevelGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5442.StraightBevelGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_multibody_dynamics_analysis(self) -> '_5443.StraightBevelGearSetMultibodyDynamicsAnalysis':
        """StraightBevelGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5443.StraightBevelGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_multibody_dynamics_analysis(self) -> '_5444.StraightBevelPlanetGearMultibodyDynamicsAnalysis':
        """StraightBevelPlanetGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5444.StraightBevelPlanetGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_multibody_dynamics_analysis(self) -> '_5445.StraightBevelSunGearMultibodyDynamicsAnalysis':
        """StraightBevelSunGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5445.StraightBevelSunGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_multibody_dynamics_analysis(self) -> '_5446.SynchroniserHalfMultibodyDynamicsAnalysis':
        """SynchroniserHalfMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5446.SynchroniserHalfMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_multibody_dynamics_analysis(self) -> '_5447.SynchroniserMultibodyDynamicsAnalysis':
        """SynchroniserMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5447.SynchroniserMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_multibody_dynamics_analysis(self) -> '_5448.SynchroniserPartMultibodyDynamicsAnalysis':
        """SynchroniserPartMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5448.SynchroniserPartMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_multibody_dynamics_analysis(self) -> '_5449.SynchroniserSleeveMultibodyDynamicsAnalysis':
        """SynchroniserSleeveMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5449.SynchroniserSleeveMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_multibody_dynamics_analysis(self) -> '_5450.TorqueConverterConnectionMultibodyDynamicsAnalysis':
        """TorqueConverterConnectionMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5450.TorqueConverterConnectionMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_multibody_dynamics_analysis(self) -> '_5452.TorqueConverterMultibodyDynamicsAnalysis':
        """TorqueConverterMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5452.TorqueConverterMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_multibody_dynamics_analysis(self) -> '_5453.TorqueConverterPumpMultibodyDynamicsAnalysis':
        """TorqueConverterPumpMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5453.TorqueConverterPumpMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_multibody_dynamics_analysis(self) -> '_5455.TorqueConverterTurbineMultibodyDynamicsAnalysis':
        """TorqueConverterTurbineMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5455.TorqueConverterTurbineMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_multibody_dynamics_analysis(self) -> '_5456.UnbalancedMassMultibodyDynamicsAnalysis':
        """UnbalancedMassMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5456.UnbalancedMassMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_multibody_dynamics_analysis(self) -> '_5457.VirtualComponentMultibodyDynamicsAnalysis':
        """VirtualComponentMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5457.VirtualComponentMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_multibody_dynamics_analysis(self) -> '_5459.WormGearMeshMultibodyDynamicsAnalysis':
        """WormGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5459.WormGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_multibody_dynamics_analysis(self) -> '_5460.WormGearMultibodyDynamicsAnalysis':
        """WormGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5460.WormGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_multibody_dynamics_analysis(self) -> '_5461.WormGearSetMultibodyDynamicsAnalysis':
        """WormGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5461.WormGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_multibody_dynamics_analysis(self) -> '_5462.ZerolBevelGearMeshMultibodyDynamicsAnalysis':
        """ZerolBevelGearMeshMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5462.ZerolBevelGearMeshMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_multibody_dynamics_analysis(self) -> '_5463.ZerolBevelGearMultibodyDynamicsAnalysis':
        """ZerolBevelGearMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5463.ZerolBevelGearMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_multibody_dynamics_analysis(self) -> '_5464.ZerolBevelGearSetMultibodyDynamicsAnalysis':
        """ZerolBevelGearSetMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5464.ZerolBevelGearSetMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_multibody_dynamics_analysis(self) -> '_5471.AbstractAssemblyCompoundMultibodyDynamicsAnalysis':
        """AbstractAssemblyCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5471.AbstractAssemblyCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_multibody_dynamics_analysis(self) -> '_5472.AbstractShaftCompoundMultibodyDynamicsAnalysis':
        """AbstractShaftCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5472.AbstractShaftCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_multibody_dynamics_analysis(self) -> '_5473.AbstractShaftOrHousingCompoundMultibodyDynamicsAnalysis':
        """AbstractShaftOrHousingCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5473.AbstractShaftOrHousingCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_multibody_dynamics_analysis(self) -> '_5474.AbstractShaftToMountableComponentConnectionCompoundMultibodyDynamicsAnalysis':
        """AbstractShaftToMountableComponentConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5474.AbstractShaftToMountableComponentConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_multibody_dynamics_analysis(self) -> '_5475.AGMAGleasonConicalGearCompoundMultibodyDynamicsAnalysis':
        """AGMAGleasonConicalGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5475.AGMAGleasonConicalGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5476.AGMAGleasonConicalGearMeshCompoundMultibodyDynamicsAnalysis':
        """AGMAGleasonConicalGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5476.AGMAGleasonConicalGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_multibody_dynamics_analysis(self) -> '_5477.AGMAGleasonConicalGearSetCompoundMultibodyDynamicsAnalysis':
        """AGMAGleasonConicalGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5477.AGMAGleasonConicalGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_multibody_dynamics_analysis(self) -> '_5478.AssemblyCompoundMultibodyDynamicsAnalysis':
        """AssemblyCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5478.AssemblyCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_multibody_dynamics_analysis(self) -> '_5479.BearingCompoundMultibodyDynamicsAnalysis':
        """BearingCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5479.BearingCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_multibody_dynamics_analysis(self) -> '_5480.BeltConnectionCompoundMultibodyDynamicsAnalysis':
        """BeltConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5480.BeltConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_multibody_dynamics_analysis(self) -> '_5481.BeltDriveCompoundMultibodyDynamicsAnalysis':
        """BeltDriveCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5481.BeltDriveCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_multibody_dynamics_analysis(self) -> '_5482.BevelDifferentialGearCompoundMultibodyDynamicsAnalysis':
        """BevelDifferentialGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5482.BevelDifferentialGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5483.BevelDifferentialGearMeshCompoundMultibodyDynamicsAnalysis':
        """BevelDifferentialGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5483.BevelDifferentialGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_multibody_dynamics_analysis(self) -> '_5484.BevelDifferentialGearSetCompoundMultibodyDynamicsAnalysis':
        """BevelDifferentialGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5484.BevelDifferentialGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_multibody_dynamics_analysis(self) -> '_5485.BevelDifferentialPlanetGearCompoundMultibodyDynamicsAnalysis':
        """BevelDifferentialPlanetGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5485.BevelDifferentialPlanetGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_multibody_dynamics_analysis(self) -> '_5486.BevelDifferentialSunGearCompoundMultibodyDynamicsAnalysis':
        """BevelDifferentialSunGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5486.BevelDifferentialSunGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_multibody_dynamics_analysis(self) -> '_5487.BevelGearCompoundMultibodyDynamicsAnalysis':
        """BevelGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5487.BevelGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5488.BevelGearMeshCompoundMultibodyDynamicsAnalysis':
        """BevelGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5488.BevelGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_multibody_dynamics_analysis(self) -> '_5489.BevelGearSetCompoundMultibodyDynamicsAnalysis':
        """BevelGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5489.BevelGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_multibody_dynamics_analysis(self) -> '_5490.BoltCompoundMultibodyDynamicsAnalysis':
        """BoltCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5490.BoltCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_multibody_dynamics_analysis(self) -> '_5491.BoltedJointCompoundMultibodyDynamicsAnalysis':
        """BoltedJointCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5491.BoltedJointCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_multibody_dynamics_analysis(self) -> '_5492.ClutchCompoundMultibodyDynamicsAnalysis':
        """ClutchCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5492.ClutchCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_multibody_dynamics_analysis(self) -> '_5493.ClutchConnectionCompoundMultibodyDynamicsAnalysis':
        """ClutchConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5493.ClutchConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_multibody_dynamics_analysis(self) -> '_5494.ClutchHalfCompoundMultibodyDynamicsAnalysis':
        """ClutchHalfCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5494.ClutchHalfCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_multibody_dynamics_analysis(self) -> '_5495.CoaxialConnectionCompoundMultibodyDynamicsAnalysis':
        """CoaxialConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5495.CoaxialConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_multibody_dynamics_analysis(self) -> '_5496.ComponentCompoundMultibodyDynamicsAnalysis':
        """ComponentCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5496.ComponentCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_multibody_dynamics_analysis(self) -> '_5497.ConceptCouplingCompoundMultibodyDynamicsAnalysis':
        """ConceptCouplingCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5497.ConceptCouplingCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_multibody_dynamics_analysis(self) -> '_5498.ConceptCouplingConnectionCompoundMultibodyDynamicsAnalysis':
        """ConceptCouplingConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5498.ConceptCouplingConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_multibody_dynamics_analysis(self) -> '_5499.ConceptCouplingHalfCompoundMultibodyDynamicsAnalysis':
        """ConceptCouplingHalfCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5499.ConceptCouplingHalfCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_multibody_dynamics_analysis(self) -> '_5500.ConceptGearCompoundMultibodyDynamicsAnalysis':
        """ConceptGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5500.ConceptGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5501.ConceptGearMeshCompoundMultibodyDynamicsAnalysis':
        """ConceptGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5501.ConceptGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_multibody_dynamics_analysis(self) -> '_5502.ConceptGearSetCompoundMultibodyDynamicsAnalysis':
        """ConceptGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5502.ConceptGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_multibody_dynamics_analysis(self) -> '_5503.ConicalGearCompoundMultibodyDynamicsAnalysis':
        """ConicalGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5503.ConicalGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5504.ConicalGearMeshCompoundMultibodyDynamicsAnalysis':
        """ConicalGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5504.ConicalGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_multibody_dynamics_analysis(self) -> '_5505.ConicalGearSetCompoundMultibodyDynamicsAnalysis':
        """ConicalGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5505.ConicalGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_multibody_dynamics_analysis(self) -> '_5506.ConnectionCompoundMultibodyDynamicsAnalysis':
        """ConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5506.ConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_multibody_dynamics_analysis(self) -> '_5507.ConnectorCompoundMultibodyDynamicsAnalysis':
        """ConnectorCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5507.ConnectorCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_multibody_dynamics_analysis(self) -> '_5508.CouplingCompoundMultibodyDynamicsAnalysis':
        """CouplingCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5508.CouplingCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_multibody_dynamics_analysis(self) -> '_5509.CouplingConnectionCompoundMultibodyDynamicsAnalysis':
        """CouplingConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5509.CouplingConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_multibody_dynamics_analysis(self) -> '_5510.CouplingHalfCompoundMultibodyDynamicsAnalysis':
        """CouplingHalfCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5510.CouplingHalfCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_multibody_dynamics_analysis(self) -> '_5511.CVTBeltConnectionCompoundMultibodyDynamicsAnalysis':
        """CVTBeltConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5511.CVTBeltConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_multibody_dynamics_analysis(self) -> '_5512.CVTCompoundMultibodyDynamicsAnalysis':
        """CVTCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5512.CVTCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_multibody_dynamics_analysis(self) -> '_5513.CVTPulleyCompoundMultibodyDynamicsAnalysis':
        """CVTPulleyCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5513.CVTPulleyCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_multibody_dynamics_analysis(self) -> '_5514.CycloidalAssemblyCompoundMultibodyDynamicsAnalysis':
        """CycloidalAssemblyCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5514.CycloidalAssemblyCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_multibody_dynamics_analysis(self) -> '_5515.CycloidalDiscCentralBearingConnectionCompoundMultibodyDynamicsAnalysis':
        """CycloidalDiscCentralBearingConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5515.CycloidalDiscCentralBearingConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_multibody_dynamics_analysis(self) -> '_5516.CycloidalDiscCompoundMultibodyDynamicsAnalysis':
        """CycloidalDiscCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5516.CycloidalDiscCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_multibody_dynamics_analysis(self) -> '_5517.CycloidalDiscPlanetaryBearingConnectionCompoundMultibodyDynamicsAnalysis':
        """CycloidalDiscPlanetaryBearingConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5517.CycloidalDiscPlanetaryBearingConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_multibody_dynamics_analysis(self) -> '_5518.CylindricalGearCompoundMultibodyDynamicsAnalysis':
        """CylindricalGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5518.CylindricalGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5519.CylindricalGearMeshCompoundMultibodyDynamicsAnalysis':
        """CylindricalGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5519.CylindricalGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_multibody_dynamics_analysis(self) -> '_5520.CylindricalGearSetCompoundMultibodyDynamicsAnalysis':
        """CylindricalGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5520.CylindricalGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_multibody_dynamics_analysis(self) -> '_5521.CylindricalPlanetGearCompoundMultibodyDynamicsAnalysis':
        """CylindricalPlanetGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5521.CylindricalPlanetGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_multibody_dynamics_analysis(self) -> '_5522.DatumCompoundMultibodyDynamicsAnalysis':
        """DatumCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5522.DatumCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_multibody_dynamics_analysis(self) -> '_5523.ExternalCADModelCompoundMultibodyDynamicsAnalysis':
        """ExternalCADModelCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5523.ExternalCADModelCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_multibody_dynamics_analysis(self) -> '_5524.FaceGearCompoundMultibodyDynamicsAnalysis':
        """FaceGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5524.FaceGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5525.FaceGearMeshCompoundMultibodyDynamicsAnalysis':
        """FaceGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5525.FaceGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_multibody_dynamics_analysis(self) -> '_5526.FaceGearSetCompoundMultibodyDynamicsAnalysis':
        """FaceGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5526.FaceGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_multibody_dynamics_analysis(self) -> '_5527.FEPartCompoundMultibodyDynamicsAnalysis':
        """FEPartCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5527.FEPartCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_multibody_dynamics_analysis(self) -> '_5528.FlexiblePinAssemblyCompoundMultibodyDynamicsAnalysis':
        """FlexiblePinAssemblyCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5528.FlexiblePinAssemblyCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_multibody_dynamics_analysis(self) -> '_5529.GearCompoundMultibodyDynamicsAnalysis':
        """GearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5529.GearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5530.GearMeshCompoundMultibodyDynamicsAnalysis':
        """GearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5530.GearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_multibody_dynamics_analysis(self) -> '_5531.GearSetCompoundMultibodyDynamicsAnalysis':
        """GearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5531.GearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_multibody_dynamics_analysis(self) -> '_5532.GuideDxfModelCompoundMultibodyDynamicsAnalysis':
        """GuideDxfModelCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5532.GuideDxfModelCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_multibody_dynamics_analysis(self) -> '_5533.HypoidGearCompoundMultibodyDynamicsAnalysis':
        """HypoidGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5533.HypoidGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5534.HypoidGearMeshCompoundMultibodyDynamicsAnalysis':
        """HypoidGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5534.HypoidGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_multibody_dynamics_analysis(self) -> '_5535.HypoidGearSetCompoundMultibodyDynamicsAnalysis':
        """HypoidGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5535.HypoidGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_multibody_dynamics_analysis(self) -> '_5536.InterMountableComponentConnectionCompoundMultibodyDynamicsAnalysis':
        """InterMountableComponentConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5536.InterMountableComponentConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_multibody_dynamics_analysis(self) -> '_5537.KlingelnbergCycloPalloidConicalGearCompoundMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidConicalGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5537.KlingelnbergCycloPalloidConicalGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5538.KlingelnbergCycloPalloidConicalGearMeshCompoundMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5538.KlingelnbergCycloPalloidConicalGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_multibody_dynamics_analysis(self) -> '_5539.KlingelnbergCycloPalloidConicalGearSetCompoundMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5539.KlingelnbergCycloPalloidConicalGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_multibody_dynamics_analysis(self) -> '_5540.KlingelnbergCycloPalloidHypoidGearCompoundMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidHypoidGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5540.KlingelnbergCycloPalloidHypoidGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5541.KlingelnbergCycloPalloidHypoidGearMeshCompoundMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5541.KlingelnbergCycloPalloidHypoidGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_multibody_dynamics_analysis(self) -> '_5542.KlingelnbergCycloPalloidHypoidGearSetCompoundMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5542.KlingelnbergCycloPalloidHypoidGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_multibody_dynamics_analysis(self) -> '_5543.KlingelnbergCycloPalloidSpiralBevelGearCompoundMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5543.KlingelnbergCycloPalloidSpiralBevelGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5544.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5544.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_multibody_dynamics_analysis(self) -> '_5545.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundMultibodyDynamicsAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5545.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_multibody_dynamics_analysis(self) -> '_5546.MassDiscCompoundMultibodyDynamicsAnalysis':
        """MassDiscCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5546.MassDiscCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_multibody_dynamics_analysis(self) -> '_5547.MeasurementComponentCompoundMultibodyDynamicsAnalysis':
        """MeasurementComponentCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5547.MeasurementComponentCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_multibody_dynamics_analysis(self) -> '_5548.MountableComponentCompoundMultibodyDynamicsAnalysis':
        """MountableComponentCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5548.MountableComponentCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_multibody_dynamics_analysis(self) -> '_5549.OilSealCompoundMultibodyDynamicsAnalysis':
        """OilSealCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5549.OilSealCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_multibody_dynamics_analysis(self) -> '_5550.PartCompoundMultibodyDynamicsAnalysis':
        """PartCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5550.PartCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_multibody_dynamics_analysis(self) -> '_5551.PartToPartShearCouplingCompoundMultibodyDynamicsAnalysis':
        """PartToPartShearCouplingCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5551.PartToPartShearCouplingCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_multibody_dynamics_analysis(self) -> '_5552.PartToPartShearCouplingConnectionCompoundMultibodyDynamicsAnalysis':
        """PartToPartShearCouplingConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5552.PartToPartShearCouplingConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_multibody_dynamics_analysis(self) -> '_5553.PartToPartShearCouplingHalfCompoundMultibodyDynamicsAnalysis':
        """PartToPartShearCouplingHalfCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5553.PartToPartShearCouplingHalfCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_multibody_dynamics_analysis(self) -> '_5554.PlanetaryConnectionCompoundMultibodyDynamicsAnalysis':
        """PlanetaryConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5554.PlanetaryConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_multibody_dynamics_analysis(self) -> '_5555.PlanetaryGearSetCompoundMultibodyDynamicsAnalysis':
        """PlanetaryGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5555.PlanetaryGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_multibody_dynamics_analysis(self) -> '_5556.PlanetCarrierCompoundMultibodyDynamicsAnalysis':
        """PlanetCarrierCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5556.PlanetCarrierCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_multibody_dynamics_analysis(self) -> '_5557.PointLoadCompoundMultibodyDynamicsAnalysis':
        """PointLoadCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5557.PointLoadCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_multibody_dynamics_analysis(self) -> '_5558.PowerLoadCompoundMultibodyDynamicsAnalysis':
        """PowerLoadCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5558.PowerLoadCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_multibody_dynamics_analysis(self) -> '_5559.PulleyCompoundMultibodyDynamicsAnalysis':
        """PulleyCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5559.PulleyCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_multibody_dynamics_analysis(self) -> '_5560.RingPinsCompoundMultibodyDynamicsAnalysis':
        """RingPinsCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5560.RingPinsCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_multibody_dynamics_analysis(self) -> '_5561.RingPinsToDiscConnectionCompoundMultibodyDynamicsAnalysis':
        """RingPinsToDiscConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5561.RingPinsToDiscConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_multibody_dynamics_analysis(self) -> '_5562.RollingRingAssemblyCompoundMultibodyDynamicsAnalysis':
        """RollingRingAssemblyCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5562.RollingRingAssemblyCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_multibody_dynamics_analysis(self) -> '_5563.RollingRingCompoundMultibodyDynamicsAnalysis':
        """RollingRingCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5563.RollingRingCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_multibody_dynamics_analysis(self) -> '_5564.RollingRingConnectionCompoundMultibodyDynamicsAnalysis':
        """RollingRingConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5564.RollingRingConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_multibody_dynamics_analysis(self) -> '_5565.RootAssemblyCompoundMultibodyDynamicsAnalysis':
        """RootAssemblyCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5565.RootAssemblyCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_multibody_dynamics_analysis(self) -> '_5566.ShaftCompoundMultibodyDynamicsAnalysis':
        """ShaftCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5566.ShaftCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_multibody_dynamics_analysis(self) -> '_5567.ShaftHubConnectionCompoundMultibodyDynamicsAnalysis':
        """ShaftHubConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5567.ShaftHubConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_multibody_dynamics_analysis(self) -> '_5568.ShaftToMountableComponentConnectionCompoundMultibodyDynamicsAnalysis':
        """ShaftToMountableComponentConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5568.ShaftToMountableComponentConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_multibody_dynamics_analysis(self) -> '_5569.SpecialisedAssemblyCompoundMultibodyDynamicsAnalysis':
        """SpecialisedAssemblyCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5569.SpecialisedAssemblyCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_multibody_dynamics_analysis(self) -> '_5570.SpiralBevelGearCompoundMultibodyDynamicsAnalysis':
        """SpiralBevelGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5570.SpiralBevelGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5571.SpiralBevelGearMeshCompoundMultibodyDynamicsAnalysis':
        """SpiralBevelGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5571.SpiralBevelGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_multibody_dynamics_analysis(self) -> '_5572.SpiralBevelGearSetCompoundMultibodyDynamicsAnalysis':
        """SpiralBevelGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5572.SpiralBevelGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_multibody_dynamics_analysis(self) -> '_5573.SpringDamperCompoundMultibodyDynamicsAnalysis':
        """SpringDamperCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5573.SpringDamperCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_multibody_dynamics_analysis(self) -> '_5574.SpringDamperConnectionCompoundMultibodyDynamicsAnalysis':
        """SpringDamperConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5574.SpringDamperConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_multibody_dynamics_analysis(self) -> '_5575.SpringDamperHalfCompoundMultibodyDynamicsAnalysis':
        """SpringDamperHalfCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5575.SpringDamperHalfCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_multibody_dynamics_analysis(self) -> '_5576.StraightBevelDiffGearCompoundMultibodyDynamicsAnalysis':
        """StraightBevelDiffGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5576.StraightBevelDiffGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5577.StraightBevelDiffGearMeshCompoundMultibodyDynamicsAnalysis':
        """StraightBevelDiffGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5577.StraightBevelDiffGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_multibody_dynamics_analysis(self) -> '_5578.StraightBevelDiffGearSetCompoundMultibodyDynamicsAnalysis':
        """StraightBevelDiffGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5578.StraightBevelDiffGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_multibody_dynamics_analysis(self) -> '_5579.StraightBevelGearCompoundMultibodyDynamicsAnalysis':
        """StraightBevelGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5579.StraightBevelGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5580.StraightBevelGearMeshCompoundMultibodyDynamicsAnalysis':
        """StraightBevelGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5580.StraightBevelGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_multibody_dynamics_analysis(self) -> '_5581.StraightBevelGearSetCompoundMultibodyDynamicsAnalysis':
        """StraightBevelGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5581.StraightBevelGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_multibody_dynamics_analysis(self) -> '_5582.StraightBevelPlanetGearCompoundMultibodyDynamicsAnalysis':
        """StraightBevelPlanetGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5582.StraightBevelPlanetGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_multibody_dynamics_analysis(self) -> '_5583.StraightBevelSunGearCompoundMultibodyDynamicsAnalysis':
        """StraightBevelSunGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5583.StraightBevelSunGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_multibody_dynamics_analysis(self) -> '_5584.SynchroniserCompoundMultibodyDynamicsAnalysis':
        """SynchroniserCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5584.SynchroniserCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_multibody_dynamics_analysis(self) -> '_5585.SynchroniserHalfCompoundMultibodyDynamicsAnalysis':
        """SynchroniserHalfCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5585.SynchroniserHalfCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_multibody_dynamics_analysis(self) -> '_5586.SynchroniserPartCompoundMultibodyDynamicsAnalysis':
        """SynchroniserPartCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5586.SynchroniserPartCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_multibody_dynamics_analysis(self) -> '_5587.SynchroniserSleeveCompoundMultibodyDynamicsAnalysis':
        """SynchroniserSleeveCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5587.SynchroniserSleeveCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_multibody_dynamics_analysis(self) -> '_5588.TorqueConverterCompoundMultibodyDynamicsAnalysis':
        """TorqueConverterCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5588.TorqueConverterCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_multibody_dynamics_analysis(self) -> '_5589.TorqueConverterConnectionCompoundMultibodyDynamicsAnalysis':
        """TorqueConverterConnectionCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5589.TorqueConverterConnectionCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_multibody_dynamics_analysis(self) -> '_5590.TorqueConverterPumpCompoundMultibodyDynamicsAnalysis':
        """TorqueConverterPumpCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5590.TorqueConverterPumpCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_multibody_dynamics_analysis(self) -> '_5591.TorqueConverterTurbineCompoundMultibodyDynamicsAnalysis':
        """TorqueConverterTurbineCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5591.TorqueConverterTurbineCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_multibody_dynamics_analysis(self) -> '_5592.UnbalancedMassCompoundMultibodyDynamicsAnalysis':
        """UnbalancedMassCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5592.UnbalancedMassCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_multibody_dynamics_analysis(self) -> '_5593.VirtualComponentCompoundMultibodyDynamicsAnalysis':
        """VirtualComponentCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5593.VirtualComponentCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_multibody_dynamics_analysis(self) -> '_5594.WormGearCompoundMultibodyDynamicsAnalysis':
        """WormGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5594.WormGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5595.WormGearMeshCompoundMultibodyDynamicsAnalysis':
        """WormGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5595.WormGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_multibody_dynamics_analysis(self) -> '_5596.WormGearSetCompoundMultibodyDynamicsAnalysis':
        """WormGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5596.WormGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_multibody_dynamics_analysis(self) -> '_5597.ZerolBevelGearCompoundMultibodyDynamicsAnalysis':
        """ZerolBevelGearCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5597.ZerolBevelGearCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_multibody_dynamics_analysis(self) -> '_5598.ZerolBevelGearMeshCompoundMultibodyDynamicsAnalysis':
        """ZerolBevelGearMeshCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5598.ZerolBevelGearMeshCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_multibody_dynamics_analysis(self) -> '_5599.ZerolBevelGearSetCompoundMultibodyDynamicsAnalysis':
        """ZerolBevelGearSetCompoundMultibodyDynamicsAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5599.ZerolBevelGearSetCompoundMultibodyDynamicsAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundMultibodyDynamicsAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_harmonic_analysis(self) -> '_5620.AbstractAssemblyHarmonicAnalysis':
        """AbstractAssemblyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5620.AbstractAssemblyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_harmonic_analysis(self) -> '_5622.AbstractShaftHarmonicAnalysis':
        """AbstractShaftHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5622.AbstractShaftHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_harmonic_analysis(self) -> '_5623.AbstractShaftOrHousingHarmonicAnalysis':
        """AbstractShaftOrHousingHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5623.AbstractShaftOrHousingHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_harmonic_analysis(self) -> '_5624.AbstractShaftToMountableComponentConnectionHarmonicAnalysis':
        """AbstractShaftToMountableComponentConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5624.AbstractShaftToMountableComponentConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_harmonic_analysis(self) -> '_5625.AGMAGleasonConicalGearHarmonicAnalysis':
        """AGMAGleasonConicalGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5625.AGMAGleasonConicalGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_harmonic_analysis(self) -> '_5626.AGMAGleasonConicalGearMeshHarmonicAnalysis':
        """AGMAGleasonConicalGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5626.AGMAGleasonConicalGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_harmonic_analysis(self) -> '_5627.AGMAGleasonConicalGearSetHarmonicAnalysis':
        """AGMAGleasonConicalGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5627.AGMAGleasonConicalGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_harmonic_analysis(self) -> '_5628.AssemblyHarmonicAnalysis':
        """AssemblyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5628.AssemblyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_harmonic_analysis(self) -> '_5629.BearingHarmonicAnalysis':
        """BearingHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5629.BearingHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_harmonic_analysis(self) -> '_5630.BeltConnectionHarmonicAnalysis':
        """BeltConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5630.BeltConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_harmonic_analysis(self) -> '_5631.BeltDriveHarmonicAnalysis':
        """BeltDriveHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5631.BeltDriveHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_harmonic_analysis(self) -> '_5632.BevelDifferentialGearHarmonicAnalysis':
        """BevelDifferentialGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5632.BevelDifferentialGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_harmonic_analysis(self) -> '_5633.BevelDifferentialGearMeshHarmonicAnalysis':
        """BevelDifferentialGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5633.BevelDifferentialGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_harmonic_analysis(self) -> '_5634.BevelDifferentialGearSetHarmonicAnalysis':
        """BevelDifferentialGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5634.BevelDifferentialGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_harmonic_analysis(self) -> '_5635.BevelDifferentialPlanetGearHarmonicAnalysis':
        """BevelDifferentialPlanetGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5635.BevelDifferentialPlanetGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_harmonic_analysis(self) -> '_5636.BevelDifferentialSunGearHarmonicAnalysis':
        """BevelDifferentialSunGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5636.BevelDifferentialSunGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_harmonic_analysis(self) -> '_5637.BevelGearHarmonicAnalysis':
        """BevelGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5637.BevelGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_harmonic_analysis(self) -> '_5638.BevelGearMeshHarmonicAnalysis':
        """BevelGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5638.BevelGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_harmonic_analysis(self) -> '_5639.BevelGearSetHarmonicAnalysis':
        """BevelGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5639.BevelGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_harmonic_analysis(self) -> '_5640.BoltedJointHarmonicAnalysis':
        """BoltedJointHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5640.BoltedJointHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_harmonic_analysis(self) -> '_5641.BoltHarmonicAnalysis':
        """BoltHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5641.BoltHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_harmonic_analysis(self) -> '_5642.ClutchConnectionHarmonicAnalysis':
        """ClutchConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5642.ClutchConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_harmonic_analysis(self) -> '_5643.ClutchHalfHarmonicAnalysis':
        """ClutchHalfHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5643.ClutchHalfHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_harmonic_analysis(self) -> '_5644.ClutchHarmonicAnalysis':
        """ClutchHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5644.ClutchHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_harmonic_analysis(self) -> '_5645.CoaxialConnectionHarmonicAnalysis':
        """CoaxialConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5645.CoaxialConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_harmonic_analysis(self) -> '_5647.ComponentHarmonicAnalysis':
        """ComponentHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5647.ComponentHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_harmonic_analysis(self) -> '_5648.ConceptCouplingConnectionHarmonicAnalysis':
        """ConceptCouplingConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5648.ConceptCouplingConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_harmonic_analysis(self) -> '_5649.ConceptCouplingHalfHarmonicAnalysis':
        """ConceptCouplingHalfHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5649.ConceptCouplingHalfHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_harmonic_analysis(self) -> '_5650.ConceptCouplingHarmonicAnalysis':
        """ConceptCouplingHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5650.ConceptCouplingHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_harmonic_analysis(self) -> '_5651.ConceptGearHarmonicAnalysis':
        """ConceptGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5651.ConceptGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_harmonic_analysis(self) -> '_5652.ConceptGearMeshHarmonicAnalysis':
        """ConceptGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5652.ConceptGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_harmonic_analysis(self) -> '_5653.ConceptGearSetHarmonicAnalysis':
        """ConceptGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5653.ConceptGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_harmonic_analysis(self) -> '_5654.ConicalGearHarmonicAnalysis':
        """ConicalGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5654.ConicalGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_harmonic_analysis(self) -> '_5655.ConicalGearMeshHarmonicAnalysis':
        """ConicalGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5655.ConicalGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_harmonic_analysis(self) -> '_5656.ConicalGearSetHarmonicAnalysis':
        """ConicalGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5656.ConicalGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_harmonic_analysis(self) -> '_5657.ConnectionHarmonicAnalysis':
        """ConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5657.ConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_harmonic_analysis(self) -> '_5658.ConnectorHarmonicAnalysis':
        """ConnectorHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5658.ConnectorHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_harmonic_analysis(self) -> '_5659.CouplingConnectionHarmonicAnalysis':
        """CouplingConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5659.CouplingConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_harmonic_analysis(self) -> '_5660.CouplingHalfHarmonicAnalysis':
        """CouplingHalfHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5660.CouplingHalfHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_harmonic_analysis(self) -> '_5661.CouplingHarmonicAnalysis':
        """CouplingHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5661.CouplingHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_harmonic_analysis(self) -> '_5662.CVTBeltConnectionHarmonicAnalysis':
        """CVTBeltConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5662.CVTBeltConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_harmonic_analysis(self) -> '_5663.CVTHarmonicAnalysis':
        """CVTHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5663.CVTHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_harmonic_analysis(self) -> '_5664.CVTPulleyHarmonicAnalysis':
        """CVTPulleyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5664.CVTPulleyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_harmonic_analysis(self) -> '_5665.CycloidalAssemblyHarmonicAnalysis':
        """CycloidalAssemblyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5665.CycloidalAssemblyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_harmonic_analysis(self) -> '_5666.CycloidalDiscCentralBearingConnectionHarmonicAnalysis':
        """CycloidalDiscCentralBearingConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5666.CycloidalDiscCentralBearingConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_harmonic_analysis(self) -> '_5667.CycloidalDiscHarmonicAnalysis':
        """CycloidalDiscHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5667.CycloidalDiscHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_harmonic_analysis(self) -> '_5668.CycloidalDiscPlanetaryBearingConnectionHarmonicAnalysis':
        """CycloidalDiscPlanetaryBearingConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5668.CycloidalDiscPlanetaryBearingConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_harmonic_analysis(self) -> '_5669.CylindricalGearHarmonicAnalysis':
        """CylindricalGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5669.CylindricalGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_harmonic_analysis(self) -> '_5670.CylindricalGearMeshHarmonicAnalysis':
        """CylindricalGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5670.CylindricalGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_harmonic_analysis(self) -> '_5671.CylindricalGearSetHarmonicAnalysis':
        """CylindricalGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5671.CylindricalGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_harmonic_analysis(self) -> '_5672.CylindricalPlanetGearHarmonicAnalysis':
        """CylindricalPlanetGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5672.CylindricalPlanetGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_harmonic_analysis(self) -> '_5673.DatumHarmonicAnalysis':
        """DatumHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5673.DatumHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_harmonic_analysis(self) -> '_5686.ExternalCADModelHarmonicAnalysis':
        """ExternalCADModelHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5686.ExternalCADModelHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_harmonic_analysis(self) -> '_5687.FaceGearHarmonicAnalysis':
        """FaceGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5687.FaceGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_harmonic_analysis(self) -> '_5688.FaceGearMeshHarmonicAnalysis':
        """FaceGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5688.FaceGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_harmonic_analysis(self) -> '_5689.FaceGearSetHarmonicAnalysis':
        """FaceGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5689.FaceGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_harmonic_analysis(self) -> '_5690.FEPartHarmonicAnalysis':
        """FEPartHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5690.FEPartHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_harmonic_analysis(self) -> '_5691.FlexiblePinAssemblyHarmonicAnalysis':
        """FlexiblePinAssemblyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5691.FlexiblePinAssemblyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_harmonic_analysis(self) -> '_5693.GearHarmonicAnalysis':
        """GearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5693.GearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_harmonic_analysis(self) -> '_5695.GearMeshHarmonicAnalysis':
        """GearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5695.GearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_harmonic_analysis(self) -> '_5698.GearSetHarmonicAnalysis':
        """GearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5698.GearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_harmonic_analysis(self) -> '_5700.GuideDxfModelHarmonicAnalysis':
        """GuideDxfModelHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5700.GuideDxfModelHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_harmonic_analysis(self) -> '_5707.HypoidGearHarmonicAnalysis':
        """HypoidGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5707.HypoidGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_harmonic_analysis(self) -> '_5708.HypoidGearMeshHarmonicAnalysis':
        """HypoidGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5708.HypoidGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_harmonic_analysis(self) -> '_5709.HypoidGearSetHarmonicAnalysis':
        """HypoidGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5709.HypoidGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_harmonic_analysis(self) -> '_5710.InterMountableComponentConnectionHarmonicAnalysis':
        """InterMountableComponentConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5710.InterMountableComponentConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_harmonic_analysis(self) -> '_5711.KlingelnbergCycloPalloidConicalGearHarmonicAnalysis':
        """KlingelnbergCycloPalloidConicalGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5711.KlingelnbergCycloPalloidConicalGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_harmonic_analysis(self) -> '_5712.KlingelnbergCycloPalloidConicalGearMeshHarmonicAnalysis':
        """KlingelnbergCycloPalloidConicalGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5712.KlingelnbergCycloPalloidConicalGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_harmonic_analysis(self) -> '_5713.KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5713.KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_harmonic_analysis(self) -> '_5714.KlingelnbergCycloPalloidHypoidGearHarmonicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5714.KlingelnbergCycloPalloidHypoidGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_harmonic_analysis(self) -> '_5715.KlingelnbergCycloPalloidHypoidGearMeshHarmonicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5715.KlingelnbergCycloPalloidHypoidGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_harmonic_analysis(self) -> '_5716.KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5716.KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_harmonic_analysis(self) -> '_5717.KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5717.KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_harmonic_analysis(self) -> '_5718.KlingelnbergCycloPalloidSpiralBevelGearMeshHarmonicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5718.KlingelnbergCycloPalloidSpiralBevelGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_harmonic_analysis(self) -> '_5719.KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5719.KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_harmonic_analysis(self) -> '_5720.MassDiscHarmonicAnalysis':
        """MassDiscHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5720.MassDiscHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_harmonic_analysis(self) -> '_5721.MeasurementComponentHarmonicAnalysis':
        """MeasurementComponentHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5721.MeasurementComponentHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_harmonic_analysis(self) -> '_5722.MountableComponentHarmonicAnalysis':
        """MountableComponentHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5722.MountableComponentHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_harmonic_analysis(self) -> '_5723.OilSealHarmonicAnalysis':
        """OilSealHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5723.OilSealHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_harmonic_analysis(self) -> '_5724.PartHarmonicAnalysis':
        """PartHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5724.PartHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_harmonic_analysis(self) -> '_5725.PartToPartShearCouplingConnectionHarmonicAnalysis':
        """PartToPartShearCouplingConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5725.PartToPartShearCouplingConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_harmonic_analysis(self) -> '_5726.PartToPartShearCouplingHalfHarmonicAnalysis':
        """PartToPartShearCouplingHalfHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5726.PartToPartShearCouplingHalfHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_harmonic_analysis(self) -> '_5727.PartToPartShearCouplingHarmonicAnalysis':
        """PartToPartShearCouplingHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5727.PartToPartShearCouplingHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_harmonic_analysis(self) -> '_5729.PlanetaryConnectionHarmonicAnalysis':
        """PlanetaryConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5729.PlanetaryConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_harmonic_analysis(self) -> '_5730.PlanetaryGearSetHarmonicAnalysis':
        """PlanetaryGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5730.PlanetaryGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_harmonic_analysis(self) -> '_5731.PlanetCarrierHarmonicAnalysis':
        """PlanetCarrierHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5731.PlanetCarrierHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_harmonic_analysis(self) -> '_5732.PointLoadHarmonicAnalysis':
        """PointLoadHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5732.PointLoadHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_harmonic_analysis(self) -> '_5733.PowerLoadHarmonicAnalysis':
        """PowerLoadHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5733.PowerLoadHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_harmonic_analysis(self) -> '_5734.PulleyHarmonicAnalysis':
        """PulleyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5734.PulleyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_harmonic_analysis(self) -> '_5736.RingPinsHarmonicAnalysis':
        """RingPinsHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5736.RingPinsHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_harmonic_analysis(self) -> '_5737.RingPinsToDiscConnectionHarmonicAnalysis':
        """RingPinsToDiscConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5737.RingPinsToDiscConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_harmonic_analysis(self) -> '_5738.RollingRingAssemblyHarmonicAnalysis':
        """RollingRingAssemblyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5738.RollingRingAssemblyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_harmonic_analysis(self) -> '_5739.RollingRingConnectionHarmonicAnalysis':
        """RollingRingConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5739.RollingRingConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_harmonic_analysis(self) -> '_5740.RollingRingHarmonicAnalysis':
        """RollingRingHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5740.RollingRingHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_harmonic_analysis(self) -> '_5741.RootAssemblyHarmonicAnalysis':
        """RootAssemblyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5741.RootAssemblyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_harmonic_analysis(self) -> '_5742.ShaftHarmonicAnalysis':
        """ShaftHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5742.ShaftHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_harmonic_analysis(self) -> '_5743.ShaftHubConnectionHarmonicAnalysis':
        """ShaftHubConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5743.ShaftHubConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_harmonic_analysis(self) -> '_5744.ShaftToMountableComponentConnectionHarmonicAnalysis':
        """ShaftToMountableComponentConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5744.ShaftToMountableComponentConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_harmonic_analysis(self) -> '_5746.SpecialisedAssemblyHarmonicAnalysis':
        """SpecialisedAssemblyHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5746.SpecialisedAssemblyHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_harmonic_analysis(self) -> '_5748.SpiralBevelGearHarmonicAnalysis':
        """SpiralBevelGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5748.SpiralBevelGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_harmonic_analysis(self) -> '_5749.SpiralBevelGearMeshHarmonicAnalysis':
        """SpiralBevelGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5749.SpiralBevelGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_harmonic_analysis(self) -> '_5750.SpiralBevelGearSetHarmonicAnalysis':
        """SpiralBevelGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5750.SpiralBevelGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_harmonic_analysis(self) -> '_5751.SpringDamperConnectionHarmonicAnalysis':
        """SpringDamperConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5751.SpringDamperConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_harmonic_analysis(self) -> '_5752.SpringDamperHalfHarmonicAnalysis':
        """SpringDamperHalfHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5752.SpringDamperHalfHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_harmonic_analysis(self) -> '_5753.SpringDamperHarmonicAnalysis':
        """SpringDamperHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5753.SpringDamperHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_harmonic_analysis(self) -> '_5754.StraightBevelDiffGearHarmonicAnalysis':
        """StraightBevelDiffGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5754.StraightBevelDiffGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_harmonic_analysis(self) -> '_5755.StraightBevelDiffGearMeshHarmonicAnalysis':
        """StraightBevelDiffGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5755.StraightBevelDiffGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_harmonic_analysis(self) -> '_5756.StraightBevelDiffGearSetHarmonicAnalysis':
        """StraightBevelDiffGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5756.StraightBevelDiffGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_harmonic_analysis(self) -> '_5757.StraightBevelGearHarmonicAnalysis':
        """StraightBevelGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5757.StraightBevelGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_harmonic_analysis(self) -> '_5758.StraightBevelGearMeshHarmonicAnalysis':
        """StraightBevelGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5758.StraightBevelGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_harmonic_analysis(self) -> '_5759.StraightBevelGearSetHarmonicAnalysis':
        """StraightBevelGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5759.StraightBevelGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_harmonic_analysis(self) -> '_5760.StraightBevelPlanetGearHarmonicAnalysis':
        """StraightBevelPlanetGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5760.StraightBevelPlanetGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_harmonic_analysis(self) -> '_5761.StraightBevelSunGearHarmonicAnalysis':
        """StraightBevelSunGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5761.StraightBevelSunGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_harmonic_analysis(self) -> '_5762.SynchroniserHalfHarmonicAnalysis':
        """SynchroniserHalfHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5762.SynchroniserHalfHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_harmonic_analysis(self) -> '_5763.SynchroniserHarmonicAnalysis':
        """SynchroniserHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5763.SynchroniserHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_harmonic_analysis(self) -> '_5764.SynchroniserPartHarmonicAnalysis':
        """SynchroniserPartHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5764.SynchroniserPartHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_harmonic_analysis(self) -> '_5765.SynchroniserSleeveHarmonicAnalysis':
        """SynchroniserSleeveHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5765.SynchroniserSleeveHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_harmonic_analysis(self) -> '_5766.TorqueConverterConnectionHarmonicAnalysis':
        """TorqueConverterConnectionHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5766.TorqueConverterConnectionHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_harmonic_analysis(self) -> '_5767.TorqueConverterHarmonicAnalysis':
        """TorqueConverterHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5767.TorqueConverterHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_harmonic_analysis(self) -> '_5768.TorqueConverterPumpHarmonicAnalysis':
        """TorqueConverterPumpHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5768.TorqueConverterPumpHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_harmonic_analysis(self) -> '_5769.TorqueConverterTurbineHarmonicAnalysis':
        """TorqueConverterTurbineHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5769.TorqueConverterTurbineHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_harmonic_analysis(self) -> '_5771.UnbalancedMassHarmonicAnalysis':
        """UnbalancedMassHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5771.UnbalancedMassHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_harmonic_analysis(self) -> '_5772.VirtualComponentHarmonicAnalysis':
        """VirtualComponentHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5772.VirtualComponentHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_harmonic_analysis(self) -> '_5773.WormGearHarmonicAnalysis':
        """WormGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5773.WormGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_harmonic_analysis(self) -> '_5774.WormGearMeshHarmonicAnalysis':
        """WormGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5774.WormGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_harmonic_analysis(self) -> '_5775.WormGearSetHarmonicAnalysis':
        """WormGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5775.WormGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_harmonic_analysis(self) -> '_5776.ZerolBevelGearHarmonicAnalysis':
        """ZerolBevelGearHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5776.ZerolBevelGearHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_harmonic_analysis(self) -> '_5777.ZerolBevelGearMeshHarmonicAnalysis':
        """ZerolBevelGearMeshHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5777.ZerolBevelGearMeshHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_harmonic_analysis(self) -> '_5778.ZerolBevelGearSetHarmonicAnalysis':
        """ZerolBevelGearSetHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5778.ZerolBevelGearSetHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_harmonic_analysis(self) -> '_5814.AbstractAssemblyCompoundHarmonicAnalysis':
        """AbstractAssemblyCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5814.AbstractAssemblyCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_harmonic_analysis(self) -> '_5815.AbstractShaftCompoundHarmonicAnalysis':
        """AbstractShaftCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5815.AbstractShaftCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_harmonic_analysis(self) -> '_5816.AbstractShaftOrHousingCompoundHarmonicAnalysis':
        """AbstractShaftOrHousingCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5816.AbstractShaftOrHousingCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_harmonic_analysis(self) -> '_5817.AbstractShaftToMountableComponentConnectionCompoundHarmonicAnalysis':
        """AbstractShaftToMountableComponentConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5817.AbstractShaftToMountableComponentConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_harmonic_analysis(self) -> '_5818.AGMAGleasonConicalGearCompoundHarmonicAnalysis':
        """AGMAGleasonConicalGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5818.AGMAGleasonConicalGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_harmonic_analysis(self) -> '_5819.AGMAGleasonConicalGearMeshCompoundHarmonicAnalysis':
        """AGMAGleasonConicalGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5819.AGMAGleasonConicalGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_harmonic_analysis(self) -> '_5820.AGMAGleasonConicalGearSetCompoundHarmonicAnalysis':
        """AGMAGleasonConicalGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5820.AGMAGleasonConicalGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_harmonic_analysis(self) -> '_5821.AssemblyCompoundHarmonicAnalysis':
        """AssemblyCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5821.AssemblyCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_harmonic_analysis(self) -> '_5822.BearingCompoundHarmonicAnalysis':
        """BearingCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5822.BearingCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_harmonic_analysis(self) -> '_5823.BeltConnectionCompoundHarmonicAnalysis':
        """BeltConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5823.BeltConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_harmonic_analysis(self) -> '_5824.BeltDriveCompoundHarmonicAnalysis':
        """BeltDriveCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5824.BeltDriveCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_harmonic_analysis(self) -> '_5825.BevelDifferentialGearCompoundHarmonicAnalysis':
        """BevelDifferentialGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5825.BevelDifferentialGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_harmonic_analysis(self) -> '_5826.BevelDifferentialGearMeshCompoundHarmonicAnalysis':
        """BevelDifferentialGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5826.BevelDifferentialGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_harmonic_analysis(self) -> '_5827.BevelDifferentialGearSetCompoundHarmonicAnalysis':
        """BevelDifferentialGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5827.BevelDifferentialGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_harmonic_analysis(self) -> '_5828.BevelDifferentialPlanetGearCompoundHarmonicAnalysis':
        """BevelDifferentialPlanetGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5828.BevelDifferentialPlanetGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_harmonic_analysis(self) -> '_5829.BevelDifferentialSunGearCompoundHarmonicAnalysis':
        """BevelDifferentialSunGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5829.BevelDifferentialSunGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_harmonic_analysis(self) -> '_5830.BevelGearCompoundHarmonicAnalysis':
        """BevelGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5830.BevelGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_harmonic_analysis(self) -> '_5831.BevelGearMeshCompoundHarmonicAnalysis':
        """BevelGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5831.BevelGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_harmonic_analysis(self) -> '_5832.BevelGearSetCompoundHarmonicAnalysis':
        """BevelGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5832.BevelGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_harmonic_analysis(self) -> '_5833.BoltCompoundHarmonicAnalysis':
        """BoltCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5833.BoltCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_harmonic_analysis(self) -> '_5834.BoltedJointCompoundHarmonicAnalysis':
        """BoltedJointCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5834.BoltedJointCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_harmonic_analysis(self) -> '_5835.ClutchCompoundHarmonicAnalysis':
        """ClutchCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5835.ClutchCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_harmonic_analysis(self) -> '_5836.ClutchConnectionCompoundHarmonicAnalysis':
        """ClutchConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5836.ClutchConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_harmonic_analysis(self) -> '_5837.ClutchHalfCompoundHarmonicAnalysis':
        """ClutchHalfCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5837.ClutchHalfCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_harmonic_analysis(self) -> '_5838.CoaxialConnectionCompoundHarmonicAnalysis':
        """CoaxialConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5838.CoaxialConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_harmonic_analysis(self) -> '_5839.ComponentCompoundHarmonicAnalysis':
        """ComponentCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5839.ComponentCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_harmonic_analysis(self) -> '_5840.ConceptCouplingCompoundHarmonicAnalysis':
        """ConceptCouplingCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5840.ConceptCouplingCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_harmonic_analysis(self) -> '_5841.ConceptCouplingConnectionCompoundHarmonicAnalysis':
        """ConceptCouplingConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5841.ConceptCouplingConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_harmonic_analysis(self) -> '_5842.ConceptCouplingHalfCompoundHarmonicAnalysis':
        """ConceptCouplingHalfCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5842.ConceptCouplingHalfCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_harmonic_analysis(self) -> '_5843.ConceptGearCompoundHarmonicAnalysis':
        """ConceptGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5843.ConceptGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_harmonic_analysis(self) -> '_5844.ConceptGearMeshCompoundHarmonicAnalysis':
        """ConceptGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5844.ConceptGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_harmonic_analysis(self) -> '_5845.ConceptGearSetCompoundHarmonicAnalysis':
        """ConceptGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5845.ConceptGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_harmonic_analysis(self) -> '_5846.ConicalGearCompoundHarmonicAnalysis':
        """ConicalGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5846.ConicalGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_harmonic_analysis(self) -> '_5847.ConicalGearMeshCompoundHarmonicAnalysis':
        """ConicalGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5847.ConicalGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_harmonic_analysis(self) -> '_5848.ConicalGearSetCompoundHarmonicAnalysis':
        """ConicalGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5848.ConicalGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_harmonic_analysis(self) -> '_5849.ConnectionCompoundHarmonicAnalysis':
        """ConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5849.ConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_harmonic_analysis(self) -> '_5850.ConnectorCompoundHarmonicAnalysis':
        """ConnectorCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5850.ConnectorCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_harmonic_analysis(self) -> '_5851.CouplingCompoundHarmonicAnalysis':
        """CouplingCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5851.CouplingCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_harmonic_analysis(self) -> '_5852.CouplingConnectionCompoundHarmonicAnalysis':
        """CouplingConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5852.CouplingConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_harmonic_analysis(self) -> '_5853.CouplingHalfCompoundHarmonicAnalysis':
        """CouplingHalfCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5853.CouplingHalfCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_harmonic_analysis(self) -> '_5854.CVTBeltConnectionCompoundHarmonicAnalysis':
        """CVTBeltConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5854.CVTBeltConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_harmonic_analysis(self) -> '_5855.CVTCompoundHarmonicAnalysis':
        """CVTCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5855.CVTCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_harmonic_analysis(self) -> '_5856.CVTPulleyCompoundHarmonicAnalysis':
        """CVTPulleyCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5856.CVTPulleyCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_harmonic_analysis(self) -> '_5857.CycloidalAssemblyCompoundHarmonicAnalysis':
        """CycloidalAssemblyCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5857.CycloidalAssemblyCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_harmonic_analysis(self) -> '_5858.CycloidalDiscCentralBearingConnectionCompoundHarmonicAnalysis':
        """CycloidalDiscCentralBearingConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5858.CycloidalDiscCentralBearingConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_harmonic_analysis(self) -> '_5859.CycloidalDiscCompoundHarmonicAnalysis':
        """CycloidalDiscCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5859.CycloidalDiscCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_harmonic_analysis(self) -> '_5860.CycloidalDiscPlanetaryBearingConnectionCompoundHarmonicAnalysis':
        """CycloidalDiscPlanetaryBearingConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5860.CycloidalDiscPlanetaryBearingConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_harmonic_analysis(self) -> '_5861.CylindricalGearCompoundHarmonicAnalysis':
        """CylindricalGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5861.CylindricalGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_harmonic_analysis(self) -> '_5862.CylindricalGearMeshCompoundHarmonicAnalysis':
        """CylindricalGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5862.CylindricalGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_harmonic_analysis(self) -> '_5863.CylindricalGearSetCompoundHarmonicAnalysis':
        """CylindricalGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5863.CylindricalGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_harmonic_analysis(self) -> '_5864.CylindricalPlanetGearCompoundHarmonicAnalysis':
        """CylindricalPlanetGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5864.CylindricalPlanetGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_harmonic_analysis(self) -> '_5865.DatumCompoundHarmonicAnalysis':
        """DatumCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5865.DatumCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_harmonic_analysis(self) -> '_5866.ExternalCADModelCompoundHarmonicAnalysis':
        """ExternalCADModelCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5866.ExternalCADModelCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_harmonic_analysis(self) -> '_5867.FaceGearCompoundHarmonicAnalysis':
        """FaceGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5867.FaceGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_harmonic_analysis(self) -> '_5868.FaceGearMeshCompoundHarmonicAnalysis':
        """FaceGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5868.FaceGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_harmonic_analysis(self) -> '_5869.FaceGearSetCompoundHarmonicAnalysis':
        """FaceGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5869.FaceGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_harmonic_analysis(self) -> '_5870.FEPartCompoundHarmonicAnalysis':
        """FEPartCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5870.FEPartCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_harmonic_analysis(self) -> '_5871.FlexiblePinAssemblyCompoundHarmonicAnalysis':
        """FlexiblePinAssemblyCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5871.FlexiblePinAssemblyCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_harmonic_analysis(self) -> '_5872.GearCompoundHarmonicAnalysis':
        """GearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5872.GearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_harmonic_analysis(self) -> '_5873.GearMeshCompoundHarmonicAnalysis':
        """GearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5873.GearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_harmonic_analysis(self) -> '_5874.GearSetCompoundHarmonicAnalysis':
        """GearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5874.GearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_harmonic_analysis(self) -> '_5875.GuideDxfModelCompoundHarmonicAnalysis':
        """GuideDxfModelCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5875.GuideDxfModelCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_harmonic_analysis(self) -> '_5876.HypoidGearCompoundHarmonicAnalysis':
        """HypoidGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5876.HypoidGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_harmonic_analysis(self) -> '_5877.HypoidGearMeshCompoundHarmonicAnalysis':
        """HypoidGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5877.HypoidGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_harmonic_analysis(self) -> '_5878.HypoidGearSetCompoundHarmonicAnalysis':
        """HypoidGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5878.HypoidGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_harmonic_analysis(self) -> '_5879.InterMountableComponentConnectionCompoundHarmonicAnalysis':
        """InterMountableComponentConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5879.InterMountableComponentConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_harmonic_analysis(self) -> '_5880.KlingelnbergCycloPalloidConicalGearCompoundHarmonicAnalysis':
        """KlingelnbergCycloPalloidConicalGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5880.KlingelnbergCycloPalloidConicalGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_harmonic_analysis(self) -> '_5881.KlingelnbergCycloPalloidConicalGearMeshCompoundHarmonicAnalysis':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5881.KlingelnbergCycloPalloidConicalGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_harmonic_analysis(self) -> '_5882.KlingelnbergCycloPalloidConicalGearSetCompoundHarmonicAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5882.KlingelnbergCycloPalloidConicalGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_harmonic_analysis(self) -> '_5883.KlingelnbergCycloPalloidHypoidGearCompoundHarmonicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5883.KlingelnbergCycloPalloidHypoidGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_harmonic_analysis(self) -> '_5884.KlingelnbergCycloPalloidHypoidGearMeshCompoundHarmonicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5884.KlingelnbergCycloPalloidHypoidGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_harmonic_analysis(self) -> '_5885.KlingelnbergCycloPalloidHypoidGearSetCompoundHarmonicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5885.KlingelnbergCycloPalloidHypoidGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_harmonic_analysis(self) -> '_5886.KlingelnbergCycloPalloidSpiralBevelGearCompoundHarmonicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5886.KlingelnbergCycloPalloidSpiralBevelGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_harmonic_analysis(self) -> '_5887.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundHarmonicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5887.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_harmonic_analysis(self) -> '_5888.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundHarmonicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5888.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_harmonic_analysis(self) -> '_5889.MassDiscCompoundHarmonicAnalysis':
        """MassDiscCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5889.MassDiscCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_harmonic_analysis(self) -> '_5890.MeasurementComponentCompoundHarmonicAnalysis':
        """MeasurementComponentCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5890.MeasurementComponentCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_harmonic_analysis(self) -> '_5891.MountableComponentCompoundHarmonicAnalysis':
        """MountableComponentCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5891.MountableComponentCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_harmonic_analysis(self) -> '_5892.OilSealCompoundHarmonicAnalysis':
        """OilSealCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5892.OilSealCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_harmonic_analysis(self) -> '_5893.PartCompoundHarmonicAnalysis':
        """PartCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5893.PartCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_harmonic_analysis(self) -> '_5894.PartToPartShearCouplingCompoundHarmonicAnalysis':
        """PartToPartShearCouplingCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5894.PartToPartShearCouplingCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_harmonic_analysis(self) -> '_5895.PartToPartShearCouplingConnectionCompoundHarmonicAnalysis':
        """PartToPartShearCouplingConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5895.PartToPartShearCouplingConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_harmonic_analysis(self) -> '_5896.PartToPartShearCouplingHalfCompoundHarmonicAnalysis':
        """PartToPartShearCouplingHalfCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5896.PartToPartShearCouplingHalfCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_harmonic_analysis(self) -> '_5897.PlanetaryConnectionCompoundHarmonicAnalysis':
        """PlanetaryConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5897.PlanetaryConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_harmonic_analysis(self) -> '_5898.PlanetaryGearSetCompoundHarmonicAnalysis':
        """PlanetaryGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5898.PlanetaryGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_harmonic_analysis(self) -> '_5899.PlanetCarrierCompoundHarmonicAnalysis':
        """PlanetCarrierCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5899.PlanetCarrierCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_harmonic_analysis(self) -> '_5900.PointLoadCompoundHarmonicAnalysis':
        """PointLoadCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5900.PointLoadCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_harmonic_analysis(self) -> '_5901.PowerLoadCompoundHarmonicAnalysis':
        """PowerLoadCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5901.PowerLoadCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_harmonic_analysis(self) -> '_5902.PulleyCompoundHarmonicAnalysis':
        """PulleyCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5902.PulleyCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_harmonic_analysis(self) -> '_5903.RingPinsCompoundHarmonicAnalysis':
        """RingPinsCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5903.RingPinsCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_harmonic_analysis(self) -> '_5904.RingPinsToDiscConnectionCompoundHarmonicAnalysis':
        """RingPinsToDiscConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5904.RingPinsToDiscConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_harmonic_analysis(self) -> '_5905.RollingRingAssemblyCompoundHarmonicAnalysis':
        """RollingRingAssemblyCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5905.RollingRingAssemblyCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_harmonic_analysis(self) -> '_5906.RollingRingCompoundHarmonicAnalysis':
        """RollingRingCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5906.RollingRingCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_harmonic_analysis(self) -> '_5907.RollingRingConnectionCompoundHarmonicAnalysis':
        """RollingRingConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5907.RollingRingConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_harmonic_analysis(self) -> '_5908.RootAssemblyCompoundHarmonicAnalysis':
        """RootAssemblyCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5908.RootAssemblyCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_harmonic_analysis(self) -> '_5909.ShaftCompoundHarmonicAnalysis':
        """ShaftCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5909.ShaftCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_harmonic_analysis(self) -> '_5910.ShaftHubConnectionCompoundHarmonicAnalysis':
        """ShaftHubConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5910.ShaftHubConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_harmonic_analysis(self) -> '_5911.ShaftToMountableComponentConnectionCompoundHarmonicAnalysis':
        """ShaftToMountableComponentConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5911.ShaftToMountableComponentConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_harmonic_analysis(self) -> '_5912.SpecialisedAssemblyCompoundHarmonicAnalysis':
        """SpecialisedAssemblyCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5912.SpecialisedAssemblyCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_harmonic_analysis(self) -> '_5913.SpiralBevelGearCompoundHarmonicAnalysis':
        """SpiralBevelGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5913.SpiralBevelGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_harmonic_analysis(self) -> '_5914.SpiralBevelGearMeshCompoundHarmonicAnalysis':
        """SpiralBevelGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5914.SpiralBevelGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_harmonic_analysis(self) -> '_5915.SpiralBevelGearSetCompoundHarmonicAnalysis':
        """SpiralBevelGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5915.SpiralBevelGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_harmonic_analysis(self) -> '_5916.SpringDamperCompoundHarmonicAnalysis':
        """SpringDamperCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5916.SpringDamperCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_harmonic_analysis(self) -> '_5917.SpringDamperConnectionCompoundHarmonicAnalysis':
        """SpringDamperConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5917.SpringDamperConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_harmonic_analysis(self) -> '_5918.SpringDamperHalfCompoundHarmonicAnalysis':
        """SpringDamperHalfCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5918.SpringDamperHalfCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_harmonic_analysis(self) -> '_5919.StraightBevelDiffGearCompoundHarmonicAnalysis':
        """StraightBevelDiffGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5919.StraightBevelDiffGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_harmonic_analysis(self) -> '_5920.StraightBevelDiffGearMeshCompoundHarmonicAnalysis':
        """StraightBevelDiffGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5920.StraightBevelDiffGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_harmonic_analysis(self) -> '_5921.StraightBevelDiffGearSetCompoundHarmonicAnalysis':
        """StraightBevelDiffGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5921.StraightBevelDiffGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_harmonic_analysis(self) -> '_5922.StraightBevelGearCompoundHarmonicAnalysis':
        """StraightBevelGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5922.StraightBevelGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_harmonic_analysis(self) -> '_5923.StraightBevelGearMeshCompoundHarmonicAnalysis':
        """StraightBevelGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5923.StraightBevelGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_harmonic_analysis(self) -> '_5924.StraightBevelGearSetCompoundHarmonicAnalysis':
        """StraightBevelGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5924.StraightBevelGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_harmonic_analysis(self) -> '_5925.StraightBevelPlanetGearCompoundHarmonicAnalysis':
        """StraightBevelPlanetGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5925.StraightBevelPlanetGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_harmonic_analysis(self) -> '_5926.StraightBevelSunGearCompoundHarmonicAnalysis':
        """StraightBevelSunGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5926.StraightBevelSunGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_harmonic_analysis(self) -> '_5927.SynchroniserCompoundHarmonicAnalysis':
        """SynchroniserCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5927.SynchroniserCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_harmonic_analysis(self) -> '_5928.SynchroniserHalfCompoundHarmonicAnalysis':
        """SynchroniserHalfCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5928.SynchroniserHalfCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_harmonic_analysis(self) -> '_5929.SynchroniserPartCompoundHarmonicAnalysis':
        """SynchroniserPartCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5929.SynchroniserPartCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_harmonic_analysis(self) -> '_5930.SynchroniserSleeveCompoundHarmonicAnalysis':
        """SynchroniserSleeveCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5930.SynchroniserSleeveCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_harmonic_analysis(self) -> '_5931.TorqueConverterCompoundHarmonicAnalysis':
        """TorqueConverterCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5931.TorqueConverterCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_harmonic_analysis(self) -> '_5932.TorqueConverterConnectionCompoundHarmonicAnalysis':
        """TorqueConverterConnectionCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5932.TorqueConverterConnectionCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_harmonic_analysis(self) -> '_5933.TorqueConverterPumpCompoundHarmonicAnalysis':
        """TorqueConverterPumpCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5933.TorqueConverterPumpCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_harmonic_analysis(self) -> '_5934.TorqueConverterTurbineCompoundHarmonicAnalysis':
        """TorqueConverterTurbineCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5934.TorqueConverterTurbineCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_harmonic_analysis(self) -> '_5935.UnbalancedMassCompoundHarmonicAnalysis':
        """UnbalancedMassCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5935.UnbalancedMassCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_harmonic_analysis(self) -> '_5936.VirtualComponentCompoundHarmonicAnalysis':
        """VirtualComponentCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5936.VirtualComponentCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_harmonic_analysis(self) -> '_5937.WormGearCompoundHarmonicAnalysis':
        """WormGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5937.WormGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_harmonic_analysis(self) -> '_5938.WormGearMeshCompoundHarmonicAnalysis':
        """WormGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5938.WormGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_harmonic_analysis(self) -> '_5939.WormGearSetCompoundHarmonicAnalysis':
        """WormGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5939.WormGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_harmonic_analysis(self) -> '_5940.ZerolBevelGearCompoundHarmonicAnalysis':
        """ZerolBevelGearCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5940.ZerolBevelGearCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_harmonic_analysis(self) -> '_5941.ZerolBevelGearMeshCompoundHarmonicAnalysis':
        """ZerolBevelGearMeshCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5941.ZerolBevelGearMeshCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_harmonic_analysis(self) -> '_5942.ZerolBevelGearSetCompoundHarmonicAnalysis':
        """ZerolBevelGearSetCompoundHarmonicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5942.ZerolBevelGearSetCompoundHarmonicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundHarmonicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_harmonic_analysis_of_single_excitation(self) -> '_5943.AbstractAssemblyHarmonicAnalysisOfSingleExcitation':
        """AbstractAssemblyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5943.AbstractAssemblyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_harmonic_analysis_of_single_excitation(self) -> '_5944.AbstractShaftHarmonicAnalysisOfSingleExcitation':
        """AbstractShaftHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5944.AbstractShaftHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_harmonic_analysis_of_single_excitation(self) -> '_5945.AbstractShaftOrHousingHarmonicAnalysisOfSingleExcitation':
        """AbstractShaftOrHousingHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5945.AbstractShaftOrHousingHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_harmonic_analysis_of_single_excitation(self) -> '_5946.AbstractShaftToMountableComponentConnectionHarmonicAnalysisOfSingleExcitation':
        """AbstractShaftToMountableComponentConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5946.AbstractShaftToMountableComponentConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_harmonic_analysis_of_single_excitation(self) -> '_5947.AGMAGleasonConicalGearHarmonicAnalysisOfSingleExcitation':
        """AGMAGleasonConicalGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5947.AGMAGleasonConicalGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_5948.AGMAGleasonConicalGearMeshHarmonicAnalysisOfSingleExcitation':
        """AGMAGleasonConicalGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5948.AGMAGleasonConicalGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_harmonic_analysis_of_single_excitation(self) -> '_5949.AGMAGleasonConicalGearSetHarmonicAnalysisOfSingleExcitation':
        """AGMAGleasonConicalGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5949.AGMAGleasonConicalGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_harmonic_analysis_of_single_excitation(self) -> '_5950.AssemblyHarmonicAnalysisOfSingleExcitation':
        """AssemblyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5950.AssemblyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_harmonic_analysis_of_single_excitation(self) -> '_5951.BearingHarmonicAnalysisOfSingleExcitation':
        """BearingHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5951.BearingHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_harmonic_analysis_of_single_excitation(self) -> '_5952.BeltConnectionHarmonicAnalysisOfSingleExcitation':
        """BeltConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5952.BeltConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_harmonic_analysis_of_single_excitation(self) -> '_5953.BeltDriveHarmonicAnalysisOfSingleExcitation':
        """BeltDriveHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5953.BeltDriveHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_harmonic_analysis_of_single_excitation(self) -> '_5954.BevelDifferentialGearHarmonicAnalysisOfSingleExcitation':
        """BevelDifferentialGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5954.BevelDifferentialGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_5955.BevelDifferentialGearMeshHarmonicAnalysisOfSingleExcitation':
        """BevelDifferentialGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5955.BevelDifferentialGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_harmonic_analysis_of_single_excitation(self) -> '_5956.BevelDifferentialGearSetHarmonicAnalysisOfSingleExcitation':
        """BevelDifferentialGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5956.BevelDifferentialGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_harmonic_analysis_of_single_excitation(self) -> '_5957.BevelDifferentialPlanetGearHarmonicAnalysisOfSingleExcitation':
        """BevelDifferentialPlanetGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5957.BevelDifferentialPlanetGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_harmonic_analysis_of_single_excitation(self) -> '_5958.BevelDifferentialSunGearHarmonicAnalysisOfSingleExcitation':
        """BevelDifferentialSunGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5958.BevelDifferentialSunGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_harmonic_analysis_of_single_excitation(self) -> '_5959.BevelGearHarmonicAnalysisOfSingleExcitation':
        """BevelGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5959.BevelGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_5960.BevelGearMeshHarmonicAnalysisOfSingleExcitation':
        """BevelGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5960.BevelGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_harmonic_analysis_of_single_excitation(self) -> '_5961.BevelGearSetHarmonicAnalysisOfSingleExcitation':
        """BevelGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5961.BevelGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_harmonic_analysis_of_single_excitation(self) -> '_5962.BoltedJointHarmonicAnalysisOfSingleExcitation':
        """BoltedJointHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5962.BoltedJointHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_harmonic_analysis_of_single_excitation(self) -> '_5963.BoltHarmonicAnalysisOfSingleExcitation':
        """BoltHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5963.BoltHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_harmonic_analysis_of_single_excitation(self) -> '_5964.ClutchConnectionHarmonicAnalysisOfSingleExcitation':
        """ClutchConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5964.ClutchConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_harmonic_analysis_of_single_excitation(self) -> '_5965.ClutchHalfHarmonicAnalysisOfSingleExcitation':
        """ClutchHalfHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5965.ClutchHalfHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_harmonic_analysis_of_single_excitation(self) -> '_5966.ClutchHarmonicAnalysisOfSingleExcitation':
        """ClutchHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5966.ClutchHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_harmonic_analysis_of_single_excitation(self) -> '_5967.CoaxialConnectionHarmonicAnalysisOfSingleExcitation':
        """CoaxialConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5967.CoaxialConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_harmonic_analysis_of_single_excitation(self) -> '_5968.ComponentHarmonicAnalysisOfSingleExcitation':
        """ComponentHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5968.ComponentHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_harmonic_analysis_of_single_excitation(self) -> '_5969.ConceptCouplingConnectionHarmonicAnalysisOfSingleExcitation':
        """ConceptCouplingConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5969.ConceptCouplingConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_harmonic_analysis_of_single_excitation(self) -> '_5970.ConceptCouplingHalfHarmonicAnalysisOfSingleExcitation':
        """ConceptCouplingHalfHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5970.ConceptCouplingHalfHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_harmonic_analysis_of_single_excitation(self) -> '_5971.ConceptCouplingHarmonicAnalysisOfSingleExcitation':
        """ConceptCouplingHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5971.ConceptCouplingHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_harmonic_analysis_of_single_excitation(self) -> '_5972.ConceptGearHarmonicAnalysisOfSingleExcitation':
        """ConceptGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5972.ConceptGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_5973.ConceptGearMeshHarmonicAnalysisOfSingleExcitation':
        """ConceptGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5973.ConceptGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_harmonic_analysis_of_single_excitation(self) -> '_5974.ConceptGearSetHarmonicAnalysisOfSingleExcitation':
        """ConceptGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5974.ConceptGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_harmonic_analysis_of_single_excitation(self) -> '_5975.ConicalGearHarmonicAnalysisOfSingleExcitation':
        """ConicalGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5975.ConicalGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_5976.ConicalGearMeshHarmonicAnalysisOfSingleExcitation':
        """ConicalGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5976.ConicalGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_harmonic_analysis_of_single_excitation(self) -> '_5977.ConicalGearSetHarmonicAnalysisOfSingleExcitation':
        """ConicalGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5977.ConicalGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_harmonic_analysis_of_single_excitation(self) -> '_5978.ConnectionHarmonicAnalysisOfSingleExcitation':
        """ConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5978.ConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_harmonic_analysis_of_single_excitation(self) -> '_5979.ConnectorHarmonicAnalysisOfSingleExcitation':
        """ConnectorHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5979.ConnectorHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_harmonic_analysis_of_single_excitation(self) -> '_5980.CouplingConnectionHarmonicAnalysisOfSingleExcitation':
        """CouplingConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5980.CouplingConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_harmonic_analysis_of_single_excitation(self) -> '_5981.CouplingHalfHarmonicAnalysisOfSingleExcitation':
        """CouplingHalfHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5981.CouplingHalfHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_harmonic_analysis_of_single_excitation(self) -> '_5982.CouplingHarmonicAnalysisOfSingleExcitation':
        """CouplingHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5982.CouplingHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_harmonic_analysis_of_single_excitation(self) -> '_5983.CVTBeltConnectionHarmonicAnalysisOfSingleExcitation':
        """CVTBeltConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5983.CVTBeltConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_harmonic_analysis_of_single_excitation(self) -> '_5984.CVTHarmonicAnalysisOfSingleExcitation':
        """CVTHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5984.CVTHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_harmonic_analysis_of_single_excitation(self) -> '_5985.CVTPulleyHarmonicAnalysisOfSingleExcitation':
        """CVTPulleyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5985.CVTPulleyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_harmonic_analysis_of_single_excitation(self) -> '_5986.CycloidalAssemblyHarmonicAnalysisOfSingleExcitation':
        """CycloidalAssemblyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5986.CycloidalAssemblyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_harmonic_analysis_of_single_excitation(self) -> '_5987.CycloidalDiscCentralBearingConnectionHarmonicAnalysisOfSingleExcitation':
        """CycloidalDiscCentralBearingConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5987.CycloidalDiscCentralBearingConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_harmonic_analysis_of_single_excitation(self) -> '_5988.CycloidalDiscHarmonicAnalysisOfSingleExcitation':
        """CycloidalDiscHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5988.CycloidalDiscHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_harmonic_analysis_of_single_excitation(self) -> '_5989.CycloidalDiscPlanetaryBearingConnectionHarmonicAnalysisOfSingleExcitation':
        """CycloidalDiscPlanetaryBearingConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5989.CycloidalDiscPlanetaryBearingConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_harmonic_analysis_of_single_excitation(self) -> '_5990.CylindricalGearHarmonicAnalysisOfSingleExcitation':
        """CylindricalGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5990.CylindricalGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_5991.CylindricalGearMeshHarmonicAnalysisOfSingleExcitation':
        """CylindricalGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5991.CylindricalGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_harmonic_analysis_of_single_excitation(self) -> '_5992.CylindricalGearSetHarmonicAnalysisOfSingleExcitation':
        """CylindricalGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5992.CylindricalGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_harmonic_analysis_of_single_excitation(self) -> '_5993.CylindricalPlanetGearHarmonicAnalysisOfSingleExcitation':
        """CylindricalPlanetGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5993.CylindricalPlanetGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_harmonic_analysis_of_single_excitation(self) -> '_5994.DatumHarmonicAnalysisOfSingleExcitation':
        """DatumHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5994.DatumHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_harmonic_analysis_of_single_excitation(self) -> '_5995.ExternalCADModelHarmonicAnalysisOfSingleExcitation':
        """ExternalCADModelHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5995.ExternalCADModelHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_harmonic_analysis_of_single_excitation(self) -> '_5996.FaceGearHarmonicAnalysisOfSingleExcitation':
        """FaceGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5996.FaceGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_5997.FaceGearMeshHarmonicAnalysisOfSingleExcitation':
        """FaceGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5997.FaceGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_harmonic_analysis_of_single_excitation(self) -> '_5998.FaceGearSetHarmonicAnalysisOfSingleExcitation':
        """FaceGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5998.FaceGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_harmonic_analysis_of_single_excitation(self) -> '_5999.FEPartHarmonicAnalysisOfSingleExcitation':
        """FEPartHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _5999.FEPartHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_harmonic_analysis_of_single_excitation(self) -> '_6000.FlexiblePinAssemblyHarmonicAnalysisOfSingleExcitation':
        """FlexiblePinAssemblyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6000.FlexiblePinAssemblyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_harmonic_analysis_of_single_excitation(self) -> '_6001.GearHarmonicAnalysisOfSingleExcitation':
        """GearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6001.GearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_6002.GearMeshHarmonicAnalysisOfSingleExcitation':
        """GearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6002.GearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6003.GearSetHarmonicAnalysisOfSingleExcitation':
        """GearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6003.GearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_harmonic_analysis_of_single_excitation(self) -> '_6004.GuideDxfModelHarmonicAnalysisOfSingleExcitation':
        """GuideDxfModelHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6004.GuideDxfModelHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_harmonic_analysis_of_single_excitation(self) -> '_6006.HypoidGearHarmonicAnalysisOfSingleExcitation':
        """HypoidGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6006.HypoidGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_6007.HypoidGearMeshHarmonicAnalysisOfSingleExcitation':
        """HypoidGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6007.HypoidGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6008.HypoidGearSetHarmonicAnalysisOfSingleExcitation':
        """HypoidGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6008.HypoidGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_harmonic_analysis_of_single_excitation(self) -> '_6009.InterMountableComponentConnectionHarmonicAnalysisOfSingleExcitation':
        """InterMountableComponentConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6009.InterMountableComponentConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_harmonic_analysis_of_single_excitation(self) -> '_6010.KlingelnbergCycloPalloidConicalGearHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidConicalGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6010.KlingelnbergCycloPalloidConicalGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_6011.KlingelnbergCycloPalloidConicalGearMeshHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidConicalGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6011.KlingelnbergCycloPalloidConicalGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6012.KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6012.KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_harmonic_analysis_of_single_excitation(self) -> '_6013.KlingelnbergCycloPalloidHypoidGearHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidHypoidGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6013.KlingelnbergCycloPalloidHypoidGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_6014.KlingelnbergCycloPalloidHypoidGearMeshHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidHypoidGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6014.KlingelnbergCycloPalloidHypoidGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6015.KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6015.KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_harmonic_analysis_of_single_excitation(self) -> '_6016.KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6016.KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_6017.KlingelnbergCycloPalloidSpiralBevelGearMeshHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6017.KlingelnbergCycloPalloidSpiralBevelGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6018.KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6018.KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_harmonic_analysis_of_single_excitation(self) -> '_6019.MassDiscHarmonicAnalysisOfSingleExcitation':
        """MassDiscHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6019.MassDiscHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_harmonic_analysis_of_single_excitation(self) -> '_6020.MeasurementComponentHarmonicAnalysisOfSingleExcitation':
        """MeasurementComponentHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6020.MeasurementComponentHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_harmonic_analysis_of_single_excitation(self) -> '_6021.MountableComponentHarmonicAnalysisOfSingleExcitation':
        """MountableComponentHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6021.MountableComponentHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_harmonic_analysis_of_single_excitation(self) -> '_6022.OilSealHarmonicAnalysisOfSingleExcitation':
        """OilSealHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6022.OilSealHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_harmonic_analysis_of_single_excitation(self) -> '_6023.PartHarmonicAnalysisOfSingleExcitation':
        """PartHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6023.PartHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_harmonic_analysis_of_single_excitation(self) -> '_6024.PartToPartShearCouplingConnectionHarmonicAnalysisOfSingleExcitation':
        """PartToPartShearCouplingConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6024.PartToPartShearCouplingConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_harmonic_analysis_of_single_excitation(self) -> '_6025.PartToPartShearCouplingHalfHarmonicAnalysisOfSingleExcitation':
        """PartToPartShearCouplingHalfHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6025.PartToPartShearCouplingHalfHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_harmonic_analysis_of_single_excitation(self) -> '_6026.PartToPartShearCouplingHarmonicAnalysisOfSingleExcitation':
        """PartToPartShearCouplingHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6026.PartToPartShearCouplingHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_harmonic_analysis_of_single_excitation(self) -> '_6027.PlanetaryConnectionHarmonicAnalysisOfSingleExcitation':
        """PlanetaryConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6027.PlanetaryConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6028.PlanetaryGearSetHarmonicAnalysisOfSingleExcitation':
        """PlanetaryGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6028.PlanetaryGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_harmonic_analysis_of_single_excitation(self) -> '_6029.PlanetCarrierHarmonicAnalysisOfSingleExcitation':
        """PlanetCarrierHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6029.PlanetCarrierHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_harmonic_analysis_of_single_excitation(self) -> '_6030.PointLoadHarmonicAnalysisOfSingleExcitation':
        """PointLoadHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6030.PointLoadHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_harmonic_analysis_of_single_excitation(self) -> '_6031.PowerLoadHarmonicAnalysisOfSingleExcitation':
        """PowerLoadHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6031.PowerLoadHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_harmonic_analysis_of_single_excitation(self) -> '_6032.PulleyHarmonicAnalysisOfSingleExcitation':
        """PulleyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6032.PulleyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_harmonic_analysis_of_single_excitation(self) -> '_6033.RingPinsHarmonicAnalysisOfSingleExcitation':
        """RingPinsHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6033.RingPinsHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_harmonic_analysis_of_single_excitation(self) -> '_6034.RingPinsToDiscConnectionHarmonicAnalysisOfSingleExcitation':
        """RingPinsToDiscConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6034.RingPinsToDiscConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_harmonic_analysis_of_single_excitation(self) -> '_6035.RollingRingAssemblyHarmonicAnalysisOfSingleExcitation':
        """RollingRingAssemblyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6035.RollingRingAssemblyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_harmonic_analysis_of_single_excitation(self) -> '_6036.RollingRingConnectionHarmonicAnalysisOfSingleExcitation':
        """RollingRingConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6036.RollingRingConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_harmonic_analysis_of_single_excitation(self) -> '_6037.RollingRingHarmonicAnalysisOfSingleExcitation':
        """RollingRingHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6037.RollingRingHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_harmonic_analysis_of_single_excitation(self) -> '_6038.RootAssemblyHarmonicAnalysisOfSingleExcitation':
        """RootAssemblyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6038.RootAssemblyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_harmonic_analysis_of_single_excitation(self) -> '_6039.ShaftHarmonicAnalysisOfSingleExcitation':
        """ShaftHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6039.ShaftHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_harmonic_analysis_of_single_excitation(self) -> '_6040.ShaftHubConnectionHarmonicAnalysisOfSingleExcitation':
        """ShaftHubConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6040.ShaftHubConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_harmonic_analysis_of_single_excitation(self) -> '_6041.ShaftToMountableComponentConnectionHarmonicAnalysisOfSingleExcitation':
        """ShaftToMountableComponentConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6041.ShaftToMountableComponentConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_harmonic_analysis_of_single_excitation(self) -> '_6042.SpecialisedAssemblyHarmonicAnalysisOfSingleExcitation':
        """SpecialisedAssemblyHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6042.SpecialisedAssemblyHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_harmonic_analysis_of_single_excitation(self) -> '_6043.SpiralBevelGearHarmonicAnalysisOfSingleExcitation':
        """SpiralBevelGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6043.SpiralBevelGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_6044.SpiralBevelGearMeshHarmonicAnalysisOfSingleExcitation':
        """SpiralBevelGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6044.SpiralBevelGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6045.SpiralBevelGearSetHarmonicAnalysisOfSingleExcitation':
        """SpiralBevelGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6045.SpiralBevelGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_harmonic_analysis_of_single_excitation(self) -> '_6046.SpringDamperConnectionHarmonicAnalysisOfSingleExcitation':
        """SpringDamperConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6046.SpringDamperConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_harmonic_analysis_of_single_excitation(self) -> '_6047.SpringDamperHalfHarmonicAnalysisOfSingleExcitation':
        """SpringDamperHalfHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6047.SpringDamperHalfHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_harmonic_analysis_of_single_excitation(self) -> '_6048.SpringDamperHarmonicAnalysisOfSingleExcitation':
        """SpringDamperHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6048.SpringDamperHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_harmonic_analysis_of_single_excitation(self) -> '_6049.StraightBevelDiffGearHarmonicAnalysisOfSingleExcitation':
        """StraightBevelDiffGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6049.StraightBevelDiffGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_6050.StraightBevelDiffGearMeshHarmonicAnalysisOfSingleExcitation':
        """StraightBevelDiffGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6050.StraightBevelDiffGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6051.StraightBevelDiffGearSetHarmonicAnalysisOfSingleExcitation':
        """StraightBevelDiffGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6051.StraightBevelDiffGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_harmonic_analysis_of_single_excitation(self) -> '_6052.StraightBevelGearHarmonicAnalysisOfSingleExcitation':
        """StraightBevelGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6052.StraightBevelGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_6053.StraightBevelGearMeshHarmonicAnalysisOfSingleExcitation':
        """StraightBevelGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6053.StraightBevelGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6054.StraightBevelGearSetHarmonicAnalysisOfSingleExcitation':
        """StraightBevelGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6054.StraightBevelGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_harmonic_analysis_of_single_excitation(self) -> '_6055.StraightBevelPlanetGearHarmonicAnalysisOfSingleExcitation':
        """StraightBevelPlanetGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6055.StraightBevelPlanetGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_harmonic_analysis_of_single_excitation(self) -> '_6056.StraightBevelSunGearHarmonicAnalysisOfSingleExcitation':
        """StraightBevelSunGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6056.StraightBevelSunGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_harmonic_analysis_of_single_excitation(self) -> '_6057.SynchroniserHalfHarmonicAnalysisOfSingleExcitation':
        """SynchroniserHalfHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6057.SynchroniserHalfHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_harmonic_analysis_of_single_excitation(self) -> '_6058.SynchroniserHarmonicAnalysisOfSingleExcitation':
        """SynchroniserHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6058.SynchroniserHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_harmonic_analysis_of_single_excitation(self) -> '_6059.SynchroniserPartHarmonicAnalysisOfSingleExcitation':
        """SynchroniserPartHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6059.SynchroniserPartHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_harmonic_analysis_of_single_excitation(self) -> '_6060.SynchroniserSleeveHarmonicAnalysisOfSingleExcitation':
        """SynchroniserSleeveHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6060.SynchroniserSleeveHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_harmonic_analysis_of_single_excitation(self) -> '_6061.TorqueConverterConnectionHarmonicAnalysisOfSingleExcitation':
        """TorqueConverterConnectionHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6061.TorqueConverterConnectionHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_harmonic_analysis_of_single_excitation(self) -> '_6062.TorqueConverterHarmonicAnalysisOfSingleExcitation':
        """TorqueConverterHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6062.TorqueConverterHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_harmonic_analysis_of_single_excitation(self) -> '_6063.TorqueConverterPumpHarmonicAnalysisOfSingleExcitation':
        """TorqueConverterPumpHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6063.TorqueConverterPumpHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_harmonic_analysis_of_single_excitation(self) -> '_6064.TorqueConverterTurbineHarmonicAnalysisOfSingleExcitation':
        """TorqueConverterTurbineHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6064.TorqueConverterTurbineHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_harmonic_analysis_of_single_excitation(self) -> '_6065.UnbalancedMassHarmonicAnalysisOfSingleExcitation':
        """UnbalancedMassHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6065.UnbalancedMassHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_harmonic_analysis_of_single_excitation(self) -> '_6066.VirtualComponentHarmonicAnalysisOfSingleExcitation':
        """VirtualComponentHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6066.VirtualComponentHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_harmonic_analysis_of_single_excitation(self) -> '_6067.WormGearHarmonicAnalysisOfSingleExcitation':
        """WormGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6067.WormGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_6068.WormGearMeshHarmonicAnalysisOfSingleExcitation':
        """WormGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6068.WormGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6069.WormGearSetHarmonicAnalysisOfSingleExcitation':
        """WormGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6069.WormGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_harmonic_analysis_of_single_excitation(self) -> '_6070.ZerolBevelGearHarmonicAnalysisOfSingleExcitation':
        """ZerolBevelGearHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6070.ZerolBevelGearHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_harmonic_analysis_of_single_excitation(self) -> '_6071.ZerolBevelGearMeshHarmonicAnalysisOfSingleExcitation':
        """ZerolBevelGearMeshHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6071.ZerolBevelGearMeshHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_harmonic_analysis_of_single_excitation(self) -> '_6072.ZerolBevelGearSetHarmonicAnalysisOfSingleExcitation':
        """ZerolBevelGearSetHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6072.ZerolBevelGearSetHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_harmonic_analysis_of_single_excitation(self) -> '_6073.AbstractAssemblyCompoundHarmonicAnalysisOfSingleExcitation':
        """AbstractAssemblyCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6073.AbstractAssemblyCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_harmonic_analysis_of_single_excitation(self) -> '_6074.AbstractShaftCompoundHarmonicAnalysisOfSingleExcitation':
        """AbstractShaftCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6074.AbstractShaftCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_harmonic_analysis_of_single_excitation(self) -> '_6075.AbstractShaftOrHousingCompoundHarmonicAnalysisOfSingleExcitation':
        """AbstractShaftOrHousingCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6075.AbstractShaftOrHousingCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6076.AbstractShaftToMountableComponentConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """AbstractShaftToMountableComponentConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6076.AbstractShaftToMountableComponentConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6077.AGMAGleasonConicalGearCompoundHarmonicAnalysisOfSingleExcitation':
        """AGMAGleasonConicalGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6077.AGMAGleasonConicalGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6078.AGMAGleasonConicalGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """AGMAGleasonConicalGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6078.AGMAGleasonConicalGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6079.AGMAGleasonConicalGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """AGMAGleasonConicalGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6079.AGMAGleasonConicalGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_harmonic_analysis_of_single_excitation(self) -> '_6080.AssemblyCompoundHarmonicAnalysisOfSingleExcitation':
        """AssemblyCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6080.AssemblyCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_harmonic_analysis_of_single_excitation(self) -> '_6081.BearingCompoundHarmonicAnalysisOfSingleExcitation':
        """BearingCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6081.BearingCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6082.BeltConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """BeltConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6082.BeltConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_harmonic_analysis_of_single_excitation(self) -> '_6083.BeltDriveCompoundHarmonicAnalysisOfSingleExcitation':
        """BeltDriveCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6083.BeltDriveCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6084.BevelDifferentialGearCompoundHarmonicAnalysisOfSingleExcitation':
        """BevelDifferentialGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6084.BevelDifferentialGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6085.BevelDifferentialGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """BevelDifferentialGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6085.BevelDifferentialGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6086.BevelDifferentialGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """BevelDifferentialGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6086.BevelDifferentialGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6087.BevelDifferentialPlanetGearCompoundHarmonicAnalysisOfSingleExcitation':
        """BevelDifferentialPlanetGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6087.BevelDifferentialPlanetGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6088.BevelDifferentialSunGearCompoundHarmonicAnalysisOfSingleExcitation':
        """BevelDifferentialSunGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6088.BevelDifferentialSunGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6089.BevelGearCompoundHarmonicAnalysisOfSingleExcitation':
        """BevelGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6089.BevelGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6090.BevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """BevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6090.BevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6091.BevelGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """BevelGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6091.BevelGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_harmonic_analysis_of_single_excitation(self) -> '_6092.BoltCompoundHarmonicAnalysisOfSingleExcitation':
        """BoltCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6092.BoltCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_harmonic_analysis_of_single_excitation(self) -> '_6093.BoltedJointCompoundHarmonicAnalysisOfSingleExcitation':
        """BoltedJointCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6093.BoltedJointCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_harmonic_analysis_of_single_excitation(self) -> '_6094.ClutchCompoundHarmonicAnalysisOfSingleExcitation':
        """ClutchCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6094.ClutchCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6095.ClutchConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """ClutchConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6095.ClutchConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_harmonic_analysis_of_single_excitation(self) -> '_6096.ClutchHalfCompoundHarmonicAnalysisOfSingleExcitation':
        """ClutchHalfCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6096.ClutchHalfCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6097.CoaxialConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """CoaxialConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6097.CoaxialConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_harmonic_analysis_of_single_excitation(self) -> '_6098.ComponentCompoundHarmonicAnalysisOfSingleExcitation':
        """ComponentCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6098.ComponentCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_harmonic_analysis_of_single_excitation(self) -> '_6099.ConceptCouplingCompoundHarmonicAnalysisOfSingleExcitation':
        """ConceptCouplingCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6099.ConceptCouplingCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6100.ConceptCouplingConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """ConceptCouplingConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6100.ConceptCouplingConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_harmonic_analysis_of_single_excitation(self) -> '_6101.ConceptCouplingHalfCompoundHarmonicAnalysisOfSingleExcitation':
        """ConceptCouplingHalfCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6101.ConceptCouplingHalfCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6102.ConceptGearCompoundHarmonicAnalysisOfSingleExcitation':
        """ConceptGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6102.ConceptGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6103.ConceptGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """ConceptGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6103.ConceptGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6104.ConceptGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """ConceptGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6104.ConceptGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6105.ConicalGearCompoundHarmonicAnalysisOfSingleExcitation':
        """ConicalGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6105.ConicalGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6106.ConicalGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """ConicalGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6106.ConicalGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6107.ConicalGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """ConicalGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6107.ConicalGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6108.ConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """ConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6108.ConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_harmonic_analysis_of_single_excitation(self) -> '_6109.ConnectorCompoundHarmonicAnalysisOfSingleExcitation':
        """ConnectorCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6109.ConnectorCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_harmonic_analysis_of_single_excitation(self) -> '_6110.CouplingCompoundHarmonicAnalysisOfSingleExcitation':
        """CouplingCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6110.CouplingCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6111.CouplingConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """CouplingConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6111.CouplingConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_harmonic_analysis_of_single_excitation(self) -> '_6112.CouplingHalfCompoundHarmonicAnalysisOfSingleExcitation':
        """CouplingHalfCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6112.CouplingHalfCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6113.CVTBeltConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """CVTBeltConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6113.CVTBeltConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_harmonic_analysis_of_single_excitation(self) -> '_6114.CVTCompoundHarmonicAnalysisOfSingleExcitation':
        """CVTCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6114.CVTCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_harmonic_analysis_of_single_excitation(self) -> '_6115.CVTPulleyCompoundHarmonicAnalysisOfSingleExcitation':
        """CVTPulleyCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6115.CVTPulleyCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_harmonic_analysis_of_single_excitation(self) -> '_6116.CycloidalAssemblyCompoundHarmonicAnalysisOfSingleExcitation':
        """CycloidalAssemblyCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6116.CycloidalAssemblyCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6117.CycloidalDiscCentralBearingConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """CycloidalDiscCentralBearingConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6117.CycloidalDiscCentralBearingConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_harmonic_analysis_of_single_excitation(self) -> '_6118.CycloidalDiscCompoundHarmonicAnalysisOfSingleExcitation':
        """CycloidalDiscCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6118.CycloidalDiscCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6119.CycloidalDiscPlanetaryBearingConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """CycloidalDiscPlanetaryBearingConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6119.CycloidalDiscPlanetaryBearingConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6120.CylindricalGearCompoundHarmonicAnalysisOfSingleExcitation':
        """CylindricalGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6120.CylindricalGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6121.CylindricalGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """CylindricalGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6121.CylindricalGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6122.CylindricalGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """CylindricalGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6122.CylindricalGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6123.CylindricalPlanetGearCompoundHarmonicAnalysisOfSingleExcitation':
        """CylindricalPlanetGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6123.CylindricalPlanetGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_harmonic_analysis_of_single_excitation(self) -> '_6124.DatumCompoundHarmonicAnalysisOfSingleExcitation':
        """DatumCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6124.DatumCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_harmonic_analysis_of_single_excitation(self) -> '_6125.ExternalCADModelCompoundHarmonicAnalysisOfSingleExcitation':
        """ExternalCADModelCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6125.ExternalCADModelCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6126.FaceGearCompoundHarmonicAnalysisOfSingleExcitation':
        """FaceGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6126.FaceGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6127.FaceGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """FaceGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6127.FaceGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6128.FaceGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """FaceGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6128.FaceGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_harmonic_analysis_of_single_excitation(self) -> '_6129.FEPartCompoundHarmonicAnalysisOfSingleExcitation':
        """FEPartCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6129.FEPartCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_harmonic_analysis_of_single_excitation(self) -> '_6130.FlexiblePinAssemblyCompoundHarmonicAnalysisOfSingleExcitation':
        """FlexiblePinAssemblyCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6130.FlexiblePinAssemblyCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6131.GearCompoundHarmonicAnalysisOfSingleExcitation':
        """GearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6131.GearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6132.GearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """GearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6132.GearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6133.GearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """GearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6133.GearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_harmonic_analysis_of_single_excitation(self) -> '_6134.GuideDxfModelCompoundHarmonicAnalysisOfSingleExcitation':
        """GuideDxfModelCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6134.GuideDxfModelCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6135.HypoidGearCompoundHarmonicAnalysisOfSingleExcitation':
        """HypoidGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6135.HypoidGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6136.HypoidGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """HypoidGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6136.HypoidGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6137.HypoidGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """HypoidGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6137.HypoidGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6138.InterMountableComponentConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """InterMountableComponentConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6138.InterMountableComponentConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6139.KlingelnbergCycloPalloidConicalGearCompoundHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidConicalGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6139.KlingelnbergCycloPalloidConicalGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6140.KlingelnbergCycloPalloidConicalGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6140.KlingelnbergCycloPalloidConicalGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6141.KlingelnbergCycloPalloidConicalGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidConicalGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6141.KlingelnbergCycloPalloidConicalGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6142.KlingelnbergCycloPalloidHypoidGearCompoundHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidHypoidGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6142.KlingelnbergCycloPalloidHypoidGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6143.KlingelnbergCycloPalloidHypoidGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6143.KlingelnbergCycloPalloidHypoidGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6144.KlingelnbergCycloPalloidHypoidGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6144.KlingelnbergCycloPalloidHypoidGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6145.KlingelnbergCycloPalloidSpiralBevelGearCompoundHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6145.KlingelnbergCycloPalloidSpiralBevelGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6146.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6146.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6147.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6147.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_harmonic_analysis_of_single_excitation(self) -> '_6148.MassDiscCompoundHarmonicAnalysisOfSingleExcitation':
        """MassDiscCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6148.MassDiscCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_harmonic_analysis_of_single_excitation(self) -> '_6149.MeasurementComponentCompoundHarmonicAnalysisOfSingleExcitation':
        """MeasurementComponentCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6149.MeasurementComponentCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_harmonic_analysis_of_single_excitation(self) -> '_6150.MountableComponentCompoundHarmonicAnalysisOfSingleExcitation':
        """MountableComponentCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6150.MountableComponentCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_harmonic_analysis_of_single_excitation(self) -> '_6151.OilSealCompoundHarmonicAnalysisOfSingleExcitation':
        """OilSealCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6151.OilSealCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_harmonic_analysis_of_single_excitation(self) -> '_6152.PartCompoundHarmonicAnalysisOfSingleExcitation':
        """PartCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6152.PartCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_harmonic_analysis_of_single_excitation(self) -> '_6153.PartToPartShearCouplingCompoundHarmonicAnalysisOfSingleExcitation':
        """PartToPartShearCouplingCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6153.PartToPartShearCouplingCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6154.PartToPartShearCouplingConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """PartToPartShearCouplingConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6154.PartToPartShearCouplingConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_harmonic_analysis_of_single_excitation(self) -> '_6155.PartToPartShearCouplingHalfCompoundHarmonicAnalysisOfSingleExcitation':
        """PartToPartShearCouplingHalfCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6155.PartToPartShearCouplingHalfCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6156.PlanetaryConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """PlanetaryConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6156.PlanetaryConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6157.PlanetaryGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """PlanetaryGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6157.PlanetaryGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_harmonic_analysis_of_single_excitation(self) -> '_6158.PlanetCarrierCompoundHarmonicAnalysisOfSingleExcitation':
        """PlanetCarrierCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6158.PlanetCarrierCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_harmonic_analysis_of_single_excitation(self) -> '_6159.PointLoadCompoundHarmonicAnalysisOfSingleExcitation':
        """PointLoadCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6159.PointLoadCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_harmonic_analysis_of_single_excitation(self) -> '_6160.PowerLoadCompoundHarmonicAnalysisOfSingleExcitation':
        """PowerLoadCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6160.PowerLoadCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_harmonic_analysis_of_single_excitation(self) -> '_6161.PulleyCompoundHarmonicAnalysisOfSingleExcitation':
        """PulleyCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6161.PulleyCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_harmonic_analysis_of_single_excitation(self) -> '_6162.RingPinsCompoundHarmonicAnalysisOfSingleExcitation':
        """RingPinsCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6162.RingPinsCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6163.RingPinsToDiscConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """RingPinsToDiscConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6163.RingPinsToDiscConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_harmonic_analysis_of_single_excitation(self) -> '_6164.RollingRingAssemblyCompoundHarmonicAnalysisOfSingleExcitation':
        """RollingRingAssemblyCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6164.RollingRingAssemblyCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_harmonic_analysis_of_single_excitation(self) -> '_6165.RollingRingCompoundHarmonicAnalysisOfSingleExcitation':
        """RollingRingCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6165.RollingRingCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6166.RollingRingConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """RollingRingConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6166.RollingRingConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_harmonic_analysis_of_single_excitation(self) -> '_6167.RootAssemblyCompoundHarmonicAnalysisOfSingleExcitation':
        """RootAssemblyCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6167.RootAssemblyCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_harmonic_analysis_of_single_excitation(self) -> '_6168.ShaftCompoundHarmonicAnalysisOfSingleExcitation':
        """ShaftCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6168.ShaftCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6169.ShaftHubConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """ShaftHubConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6169.ShaftHubConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6170.ShaftToMountableComponentConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """ShaftToMountableComponentConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6170.ShaftToMountableComponentConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_harmonic_analysis_of_single_excitation(self) -> '_6171.SpecialisedAssemblyCompoundHarmonicAnalysisOfSingleExcitation':
        """SpecialisedAssemblyCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6171.SpecialisedAssemblyCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6172.SpiralBevelGearCompoundHarmonicAnalysisOfSingleExcitation':
        """SpiralBevelGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6172.SpiralBevelGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6173.SpiralBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """SpiralBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6173.SpiralBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6174.SpiralBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """SpiralBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6174.SpiralBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_harmonic_analysis_of_single_excitation(self) -> '_6175.SpringDamperCompoundHarmonicAnalysisOfSingleExcitation':
        """SpringDamperCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6175.SpringDamperCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6176.SpringDamperConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """SpringDamperConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6176.SpringDamperConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_harmonic_analysis_of_single_excitation(self) -> '_6177.SpringDamperHalfCompoundHarmonicAnalysisOfSingleExcitation':
        """SpringDamperHalfCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6177.SpringDamperHalfCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6178.StraightBevelDiffGearCompoundHarmonicAnalysisOfSingleExcitation':
        """StraightBevelDiffGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6178.StraightBevelDiffGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6179.StraightBevelDiffGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """StraightBevelDiffGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6179.StraightBevelDiffGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6180.StraightBevelDiffGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """StraightBevelDiffGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6180.StraightBevelDiffGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6181.StraightBevelGearCompoundHarmonicAnalysisOfSingleExcitation':
        """StraightBevelGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6181.StraightBevelGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6182.StraightBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """StraightBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6182.StraightBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6183.StraightBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """StraightBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6183.StraightBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6184.StraightBevelPlanetGearCompoundHarmonicAnalysisOfSingleExcitation':
        """StraightBevelPlanetGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6184.StraightBevelPlanetGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6185.StraightBevelSunGearCompoundHarmonicAnalysisOfSingleExcitation':
        """StraightBevelSunGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6185.StraightBevelSunGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_harmonic_analysis_of_single_excitation(self) -> '_6186.SynchroniserCompoundHarmonicAnalysisOfSingleExcitation':
        """SynchroniserCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6186.SynchroniserCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_harmonic_analysis_of_single_excitation(self) -> '_6187.SynchroniserHalfCompoundHarmonicAnalysisOfSingleExcitation':
        """SynchroniserHalfCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6187.SynchroniserHalfCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_harmonic_analysis_of_single_excitation(self) -> '_6188.SynchroniserPartCompoundHarmonicAnalysisOfSingleExcitation':
        """SynchroniserPartCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6188.SynchroniserPartCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_harmonic_analysis_of_single_excitation(self) -> '_6189.SynchroniserSleeveCompoundHarmonicAnalysisOfSingleExcitation':
        """SynchroniserSleeveCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6189.SynchroniserSleeveCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_harmonic_analysis_of_single_excitation(self) -> '_6190.TorqueConverterCompoundHarmonicAnalysisOfSingleExcitation':
        """TorqueConverterCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6190.TorqueConverterCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_harmonic_analysis_of_single_excitation(self) -> '_6191.TorqueConverterConnectionCompoundHarmonicAnalysisOfSingleExcitation':
        """TorqueConverterConnectionCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6191.TorqueConverterConnectionCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_harmonic_analysis_of_single_excitation(self) -> '_6192.TorqueConverterPumpCompoundHarmonicAnalysisOfSingleExcitation':
        """TorqueConverterPumpCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6192.TorqueConverterPumpCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_harmonic_analysis_of_single_excitation(self) -> '_6193.TorqueConverterTurbineCompoundHarmonicAnalysisOfSingleExcitation':
        """TorqueConverterTurbineCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6193.TorqueConverterTurbineCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_harmonic_analysis_of_single_excitation(self) -> '_6194.UnbalancedMassCompoundHarmonicAnalysisOfSingleExcitation':
        """UnbalancedMassCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6194.UnbalancedMassCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_harmonic_analysis_of_single_excitation(self) -> '_6195.VirtualComponentCompoundHarmonicAnalysisOfSingleExcitation':
        """VirtualComponentCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6195.VirtualComponentCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6196.WormGearCompoundHarmonicAnalysisOfSingleExcitation':
        """WormGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6196.WormGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6197.WormGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """WormGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6197.WormGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6198.WormGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """WormGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6198.WormGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_harmonic_analysis_of_single_excitation(self) -> '_6199.ZerolBevelGearCompoundHarmonicAnalysisOfSingleExcitation':
        """ZerolBevelGearCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6199.ZerolBevelGearCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_harmonic_analysis_of_single_excitation(self) -> '_6200.ZerolBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation':
        """ZerolBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6200.ZerolBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_harmonic_analysis_of_single_excitation(self) -> '_6201.ZerolBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation':
        """ZerolBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6201.ZerolBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundHarmonicAnalysisOfSingleExcitation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_dynamic_analysis(self) -> '_6211.AbstractAssemblyDynamicAnalysis':
        """AbstractAssemblyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6211.AbstractAssemblyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_dynamic_analysis(self) -> '_6212.AbstractShaftDynamicAnalysis':
        """AbstractShaftDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6212.AbstractShaftDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_dynamic_analysis(self) -> '_6213.AbstractShaftOrHousingDynamicAnalysis':
        """AbstractShaftOrHousingDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6213.AbstractShaftOrHousingDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_dynamic_analysis(self) -> '_6214.AbstractShaftToMountableComponentConnectionDynamicAnalysis':
        """AbstractShaftToMountableComponentConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6214.AbstractShaftToMountableComponentConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_dynamic_analysis(self) -> '_6215.AGMAGleasonConicalGearDynamicAnalysis':
        """AGMAGleasonConicalGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6215.AGMAGleasonConicalGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_dynamic_analysis(self) -> '_6216.AGMAGleasonConicalGearMeshDynamicAnalysis':
        """AGMAGleasonConicalGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6216.AGMAGleasonConicalGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_dynamic_analysis(self) -> '_6217.AGMAGleasonConicalGearSetDynamicAnalysis':
        """AGMAGleasonConicalGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6217.AGMAGleasonConicalGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_dynamic_analysis(self) -> '_6218.AssemblyDynamicAnalysis':
        """AssemblyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6218.AssemblyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_dynamic_analysis(self) -> '_6219.BearingDynamicAnalysis':
        """BearingDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6219.BearingDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_dynamic_analysis(self) -> '_6220.BeltConnectionDynamicAnalysis':
        """BeltConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6220.BeltConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_dynamic_analysis(self) -> '_6221.BeltDriveDynamicAnalysis':
        """BeltDriveDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6221.BeltDriveDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_dynamic_analysis(self) -> '_6222.BevelDifferentialGearDynamicAnalysis':
        """BevelDifferentialGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6222.BevelDifferentialGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_dynamic_analysis(self) -> '_6223.BevelDifferentialGearMeshDynamicAnalysis':
        """BevelDifferentialGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6223.BevelDifferentialGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_dynamic_analysis(self) -> '_6224.BevelDifferentialGearSetDynamicAnalysis':
        """BevelDifferentialGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6224.BevelDifferentialGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_dynamic_analysis(self) -> '_6225.BevelDifferentialPlanetGearDynamicAnalysis':
        """BevelDifferentialPlanetGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6225.BevelDifferentialPlanetGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_dynamic_analysis(self) -> '_6226.BevelDifferentialSunGearDynamicAnalysis':
        """BevelDifferentialSunGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6226.BevelDifferentialSunGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_dynamic_analysis(self) -> '_6227.BevelGearDynamicAnalysis':
        """BevelGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6227.BevelGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_dynamic_analysis(self) -> '_6228.BevelGearMeshDynamicAnalysis':
        """BevelGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6228.BevelGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_dynamic_analysis(self) -> '_6229.BevelGearSetDynamicAnalysis':
        """BevelGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6229.BevelGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_dynamic_analysis(self) -> '_6230.BoltDynamicAnalysis':
        """BoltDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6230.BoltDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_dynamic_analysis(self) -> '_6231.BoltedJointDynamicAnalysis':
        """BoltedJointDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6231.BoltedJointDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_dynamic_analysis(self) -> '_6232.ClutchConnectionDynamicAnalysis':
        """ClutchConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6232.ClutchConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_dynamic_analysis(self) -> '_6233.ClutchDynamicAnalysis':
        """ClutchDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6233.ClutchDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_dynamic_analysis(self) -> '_6234.ClutchHalfDynamicAnalysis':
        """ClutchHalfDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6234.ClutchHalfDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_dynamic_analysis(self) -> '_6235.CoaxialConnectionDynamicAnalysis':
        """CoaxialConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6235.CoaxialConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_dynamic_analysis(self) -> '_6236.ComponentDynamicAnalysis':
        """ComponentDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6236.ComponentDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_dynamic_analysis(self) -> '_6237.ConceptCouplingConnectionDynamicAnalysis':
        """ConceptCouplingConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6237.ConceptCouplingConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_dynamic_analysis(self) -> '_6238.ConceptCouplingDynamicAnalysis':
        """ConceptCouplingDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6238.ConceptCouplingDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_dynamic_analysis(self) -> '_6239.ConceptCouplingHalfDynamicAnalysis':
        """ConceptCouplingHalfDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6239.ConceptCouplingHalfDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_dynamic_analysis(self) -> '_6240.ConceptGearDynamicAnalysis':
        """ConceptGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6240.ConceptGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_dynamic_analysis(self) -> '_6241.ConceptGearMeshDynamicAnalysis':
        """ConceptGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6241.ConceptGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_dynamic_analysis(self) -> '_6242.ConceptGearSetDynamicAnalysis':
        """ConceptGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6242.ConceptGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_dynamic_analysis(self) -> '_6243.ConicalGearDynamicAnalysis':
        """ConicalGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6243.ConicalGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_dynamic_analysis(self) -> '_6244.ConicalGearMeshDynamicAnalysis':
        """ConicalGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6244.ConicalGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_dynamic_analysis(self) -> '_6245.ConicalGearSetDynamicAnalysis':
        """ConicalGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6245.ConicalGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_dynamic_analysis(self) -> '_6246.ConnectionDynamicAnalysis':
        """ConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6246.ConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_dynamic_analysis(self) -> '_6247.ConnectorDynamicAnalysis':
        """ConnectorDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6247.ConnectorDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_dynamic_analysis(self) -> '_6248.CouplingConnectionDynamicAnalysis':
        """CouplingConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6248.CouplingConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_dynamic_analysis(self) -> '_6249.CouplingDynamicAnalysis':
        """CouplingDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6249.CouplingDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_dynamic_analysis(self) -> '_6250.CouplingHalfDynamicAnalysis':
        """CouplingHalfDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6250.CouplingHalfDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_dynamic_analysis(self) -> '_6251.CVTBeltConnectionDynamicAnalysis':
        """CVTBeltConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6251.CVTBeltConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_dynamic_analysis(self) -> '_6252.CVTDynamicAnalysis':
        """CVTDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6252.CVTDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_dynamic_analysis(self) -> '_6253.CVTPulleyDynamicAnalysis':
        """CVTPulleyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6253.CVTPulleyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_dynamic_analysis(self) -> '_6254.CycloidalAssemblyDynamicAnalysis':
        """CycloidalAssemblyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6254.CycloidalAssemblyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_dynamic_analysis(self) -> '_6255.CycloidalDiscCentralBearingConnectionDynamicAnalysis':
        """CycloidalDiscCentralBearingConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6255.CycloidalDiscCentralBearingConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_dynamic_analysis(self) -> '_6256.CycloidalDiscDynamicAnalysis':
        """CycloidalDiscDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6256.CycloidalDiscDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_dynamic_analysis(self) -> '_6257.CycloidalDiscPlanetaryBearingConnectionDynamicAnalysis':
        """CycloidalDiscPlanetaryBearingConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6257.CycloidalDiscPlanetaryBearingConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_dynamic_analysis(self) -> '_6258.CylindricalGearDynamicAnalysis':
        """CylindricalGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6258.CylindricalGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_dynamic_analysis(self) -> '_6259.CylindricalGearMeshDynamicAnalysis':
        """CylindricalGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6259.CylindricalGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_dynamic_analysis(self) -> '_6260.CylindricalGearSetDynamicAnalysis':
        """CylindricalGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6260.CylindricalGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_dynamic_analysis(self) -> '_6261.CylindricalPlanetGearDynamicAnalysis':
        """CylindricalPlanetGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6261.CylindricalPlanetGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_dynamic_analysis(self) -> '_6262.DatumDynamicAnalysis':
        """DatumDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6262.DatumDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_dynamic_analysis(self) -> '_6264.ExternalCADModelDynamicAnalysis':
        """ExternalCADModelDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6264.ExternalCADModelDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_dynamic_analysis(self) -> '_6265.FaceGearDynamicAnalysis':
        """FaceGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6265.FaceGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_dynamic_analysis(self) -> '_6266.FaceGearMeshDynamicAnalysis':
        """FaceGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6266.FaceGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_dynamic_analysis(self) -> '_6267.FaceGearSetDynamicAnalysis':
        """FaceGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6267.FaceGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_dynamic_analysis(self) -> '_6268.FEPartDynamicAnalysis':
        """FEPartDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6268.FEPartDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_dynamic_analysis(self) -> '_6269.FlexiblePinAssemblyDynamicAnalysis':
        """FlexiblePinAssemblyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6269.FlexiblePinAssemblyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_dynamic_analysis(self) -> '_6270.GearDynamicAnalysis':
        """GearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6270.GearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_dynamic_analysis(self) -> '_6271.GearMeshDynamicAnalysis':
        """GearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6271.GearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_dynamic_analysis(self) -> '_6272.GearSetDynamicAnalysis':
        """GearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6272.GearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_dynamic_analysis(self) -> '_6273.GuideDxfModelDynamicAnalysis':
        """GuideDxfModelDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6273.GuideDxfModelDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_dynamic_analysis(self) -> '_6274.HypoidGearDynamicAnalysis':
        """HypoidGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6274.HypoidGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_dynamic_analysis(self) -> '_6275.HypoidGearMeshDynamicAnalysis':
        """HypoidGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6275.HypoidGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_dynamic_analysis(self) -> '_6276.HypoidGearSetDynamicAnalysis':
        """HypoidGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6276.HypoidGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_dynamic_analysis(self) -> '_6277.InterMountableComponentConnectionDynamicAnalysis':
        """InterMountableComponentConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6277.InterMountableComponentConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_dynamic_analysis(self) -> '_6278.KlingelnbergCycloPalloidConicalGearDynamicAnalysis':
        """KlingelnbergCycloPalloidConicalGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6278.KlingelnbergCycloPalloidConicalGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_dynamic_analysis(self) -> '_6279.KlingelnbergCycloPalloidConicalGearMeshDynamicAnalysis':
        """KlingelnbergCycloPalloidConicalGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6279.KlingelnbergCycloPalloidConicalGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_dynamic_analysis(self) -> '_6280.KlingelnbergCycloPalloidConicalGearSetDynamicAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6280.KlingelnbergCycloPalloidConicalGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_dynamic_analysis(self) -> '_6281.KlingelnbergCycloPalloidHypoidGearDynamicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6281.KlingelnbergCycloPalloidHypoidGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_dynamic_analysis(self) -> '_6282.KlingelnbergCycloPalloidHypoidGearMeshDynamicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6282.KlingelnbergCycloPalloidHypoidGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_dynamic_analysis(self) -> '_6283.KlingelnbergCycloPalloidHypoidGearSetDynamicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6283.KlingelnbergCycloPalloidHypoidGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_dynamic_analysis(self) -> '_6284.KlingelnbergCycloPalloidSpiralBevelGearDynamicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6284.KlingelnbergCycloPalloidSpiralBevelGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_dynamic_analysis(self) -> '_6285.KlingelnbergCycloPalloidSpiralBevelGearMeshDynamicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6285.KlingelnbergCycloPalloidSpiralBevelGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_dynamic_analysis(self) -> '_6286.KlingelnbergCycloPalloidSpiralBevelGearSetDynamicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6286.KlingelnbergCycloPalloidSpiralBevelGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_dynamic_analysis(self) -> '_6287.MassDiscDynamicAnalysis':
        """MassDiscDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6287.MassDiscDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_dynamic_analysis(self) -> '_6288.MeasurementComponentDynamicAnalysis':
        """MeasurementComponentDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6288.MeasurementComponentDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_dynamic_analysis(self) -> '_6289.MountableComponentDynamicAnalysis':
        """MountableComponentDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6289.MountableComponentDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_dynamic_analysis(self) -> '_6290.OilSealDynamicAnalysis':
        """OilSealDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6290.OilSealDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_dynamic_analysis(self) -> '_6291.PartDynamicAnalysis':
        """PartDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6291.PartDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_dynamic_analysis(self) -> '_6292.PartToPartShearCouplingConnectionDynamicAnalysis':
        """PartToPartShearCouplingConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6292.PartToPartShearCouplingConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_dynamic_analysis(self) -> '_6293.PartToPartShearCouplingDynamicAnalysis':
        """PartToPartShearCouplingDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6293.PartToPartShearCouplingDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_dynamic_analysis(self) -> '_6294.PartToPartShearCouplingHalfDynamicAnalysis':
        """PartToPartShearCouplingHalfDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6294.PartToPartShearCouplingHalfDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_dynamic_analysis(self) -> '_6295.PlanetaryConnectionDynamicAnalysis':
        """PlanetaryConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6295.PlanetaryConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_dynamic_analysis(self) -> '_6296.PlanetaryGearSetDynamicAnalysis':
        """PlanetaryGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6296.PlanetaryGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_dynamic_analysis(self) -> '_6297.PlanetCarrierDynamicAnalysis':
        """PlanetCarrierDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6297.PlanetCarrierDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_dynamic_analysis(self) -> '_6298.PointLoadDynamicAnalysis':
        """PointLoadDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6298.PointLoadDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_dynamic_analysis(self) -> '_6299.PowerLoadDynamicAnalysis':
        """PowerLoadDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6299.PowerLoadDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_dynamic_analysis(self) -> '_6300.PulleyDynamicAnalysis':
        """PulleyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6300.PulleyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_dynamic_analysis(self) -> '_6301.RingPinsDynamicAnalysis':
        """RingPinsDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6301.RingPinsDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_dynamic_analysis(self) -> '_6302.RingPinsToDiscConnectionDynamicAnalysis':
        """RingPinsToDiscConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6302.RingPinsToDiscConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_dynamic_analysis(self) -> '_6303.RollingRingAssemblyDynamicAnalysis':
        """RollingRingAssemblyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6303.RollingRingAssemblyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_dynamic_analysis(self) -> '_6304.RollingRingConnectionDynamicAnalysis':
        """RollingRingConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6304.RollingRingConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_dynamic_analysis(self) -> '_6305.RollingRingDynamicAnalysis':
        """RollingRingDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6305.RollingRingDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_dynamic_analysis(self) -> '_6306.RootAssemblyDynamicAnalysis':
        """RootAssemblyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6306.RootAssemblyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_dynamic_analysis(self) -> '_6307.ShaftDynamicAnalysis':
        """ShaftDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6307.ShaftDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_dynamic_analysis(self) -> '_6308.ShaftHubConnectionDynamicAnalysis':
        """ShaftHubConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6308.ShaftHubConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_dynamic_analysis(self) -> '_6309.ShaftToMountableComponentConnectionDynamicAnalysis':
        """ShaftToMountableComponentConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6309.ShaftToMountableComponentConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_dynamic_analysis(self) -> '_6310.SpecialisedAssemblyDynamicAnalysis':
        """SpecialisedAssemblyDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6310.SpecialisedAssemblyDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_dynamic_analysis(self) -> '_6311.SpiralBevelGearDynamicAnalysis':
        """SpiralBevelGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6311.SpiralBevelGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_dynamic_analysis(self) -> '_6312.SpiralBevelGearMeshDynamicAnalysis':
        """SpiralBevelGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6312.SpiralBevelGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_dynamic_analysis(self) -> '_6313.SpiralBevelGearSetDynamicAnalysis':
        """SpiralBevelGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6313.SpiralBevelGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_dynamic_analysis(self) -> '_6314.SpringDamperConnectionDynamicAnalysis':
        """SpringDamperConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6314.SpringDamperConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_dynamic_analysis(self) -> '_6315.SpringDamperDynamicAnalysis':
        """SpringDamperDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6315.SpringDamperDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_dynamic_analysis(self) -> '_6316.SpringDamperHalfDynamicAnalysis':
        """SpringDamperHalfDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6316.SpringDamperHalfDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_dynamic_analysis(self) -> '_6317.StraightBevelDiffGearDynamicAnalysis':
        """StraightBevelDiffGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6317.StraightBevelDiffGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_dynamic_analysis(self) -> '_6318.StraightBevelDiffGearMeshDynamicAnalysis':
        """StraightBevelDiffGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6318.StraightBevelDiffGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_dynamic_analysis(self) -> '_6319.StraightBevelDiffGearSetDynamicAnalysis':
        """StraightBevelDiffGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6319.StraightBevelDiffGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_dynamic_analysis(self) -> '_6320.StraightBevelGearDynamicAnalysis':
        """StraightBevelGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6320.StraightBevelGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_dynamic_analysis(self) -> '_6321.StraightBevelGearMeshDynamicAnalysis':
        """StraightBevelGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6321.StraightBevelGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_dynamic_analysis(self) -> '_6322.StraightBevelGearSetDynamicAnalysis':
        """StraightBevelGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6322.StraightBevelGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_dynamic_analysis(self) -> '_6323.StraightBevelPlanetGearDynamicAnalysis':
        """StraightBevelPlanetGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6323.StraightBevelPlanetGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_dynamic_analysis(self) -> '_6324.StraightBevelSunGearDynamicAnalysis':
        """StraightBevelSunGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6324.StraightBevelSunGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_dynamic_analysis(self) -> '_6325.SynchroniserDynamicAnalysis':
        """SynchroniserDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6325.SynchroniserDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_dynamic_analysis(self) -> '_6326.SynchroniserHalfDynamicAnalysis':
        """SynchroniserHalfDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6326.SynchroniserHalfDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_dynamic_analysis(self) -> '_6327.SynchroniserPartDynamicAnalysis':
        """SynchroniserPartDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6327.SynchroniserPartDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_dynamic_analysis(self) -> '_6328.SynchroniserSleeveDynamicAnalysis':
        """SynchroniserSleeveDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6328.SynchroniserSleeveDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_dynamic_analysis(self) -> '_6329.TorqueConverterConnectionDynamicAnalysis':
        """TorqueConverterConnectionDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6329.TorqueConverterConnectionDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_dynamic_analysis(self) -> '_6330.TorqueConverterDynamicAnalysis':
        """TorqueConverterDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6330.TorqueConverterDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_dynamic_analysis(self) -> '_6331.TorqueConverterPumpDynamicAnalysis':
        """TorqueConverterPumpDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6331.TorqueConverterPumpDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_dynamic_analysis(self) -> '_6332.TorqueConverterTurbineDynamicAnalysis':
        """TorqueConverterTurbineDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6332.TorqueConverterTurbineDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_dynamic_analysis(self) -> '_6333.UnbalancedMassDynamicAnalysis':
        """UnbalancedMassDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6333.UnbalancedMassDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_dynamic_analysis(self) -> '_6334.VirtualComponentDynamicAnalysis':
        """VirtualComponentDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6334.VirtualComponentDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_dynamic_analysis(self) -> '_6335.WormGearDynamicAnalysis':
        """WormGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6335.WormGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_dynamic_analysis(self) -> '_6336.WormGearMeshDynamicAnalysis':
        """WormGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6336.WormGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_dynamic_analysis(self) -> '_6337.WormGearSetDynamicAnalysis':
        """WormGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6337.WormGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_dynamic_analysis(self) -> '_6338.ZerolBevelGearDynamicAnalysis':
        """ZerolBevelGearDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6338.ZerolBevelGearDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_dynamic_analysis(self) -> '_6339.ZerolBevelGearMeshDynamicAnalysis':
        """ZerolBevelGearMeshDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6339.ZerolBevelGearMeshDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_dynamic_analysis(self) -> '_6340.ZerolBevelGearSetDynamicAnalysis':
        """ZerolBevelGearSetDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6340.ZerolBevelGearSetDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_dynamic_analysis(self) -> '_6341.AbstractAssemblyCompoundDynamicAnalysis':
        """AbstractAssemblyCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6341.AbstractAssemblyCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_dynamic_analysis(self) -> '_6342.AbstractShaftCompoundDynamicAnalysis':
        """AbstractShaftCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6342.AbstractShaftCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_dynamic_analysis(self) -> '_6343.AbstractShaftOrHousingCompoundDynamicAnalysis':
        """AbstractShaftOrHousingCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6343.AbstractShaftOrHousingCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_dynamic_analysis(self) -> '_6344.AbstractShaftToMountableComponentConnectionCompoundDynamicAnalysis':
        """AbstractShaftToMountableComponentConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6344.AbstractShaftToMountableComponentConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_dynamic_analysis(self) -> '_6345.AGMAGleasonConicalGearCompoundDynamicAnalysis':
        """AGMAGleasonConicalGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6345.AGMAGleasonConicalGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_dynamic_analysis(self) -> '_6346.AGMAGleasonConicalGearMeshCompoundDynamicAnalysis':
        """AGMAGleasonConicalGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6346.AGMAGleasonConicalGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_dynamic_analysis(self) -> '_6347.AGMAGleasonConicalGearSetCompoundDynamicAnalysis':
        """AGMAGleasonConicalGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6347.AGMAGleasonConicalGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_dynamic_analysis(self) -> '_6348.AssemblyCompoundDynamicAnalysis':
        """AssemblyCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6348.AssemblyCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_dynamic_analysis(self) -> '_6349.BearingCompoundDynamicAnalysis':
        """BearingCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6349.BearingCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_dynamic_analysis(self) -> '_6350.BeltConnectionCompoundDynamicAnalysis':
        """BeltConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6350.BeltConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_dynamic_analysis(self) -> '_6351.BeltDriveCompoundDynamicAnalysis':
        """BeltDriveCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6351.BeltDriveCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_dynamic_analysis(self) -> '_6352.BevelDifferentialGearCompoundDynamicAnalysis':
        """BevelDifferentialGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6352.BevelDifferentialGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_dynamic_analysis(self) -> '_6353.BevelDifferentialGearMeshCompoundDynamicAnalysis':
        """BevelDifferentialGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6353.BevelDifferentialGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_dynamic_analysis(self) -> '_6354.BevelDifferentialGearSetCompoundDynamicAnalysis':
        """BevelDifferentialGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6354.BevelDifferentialGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_dynamic_analysis(self) -> '_6355.BevelDifferentialPlanetGearCompoundDynamicAnalysis':
        """BevelDifferentialPlanetGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6355.BevelDifferentialPlanetGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_dynamic_analysis(self) -> '_6356.BevelDifferentialSunGearCompoundDynamicAnalysis':
        """BevelDifferentialSunGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6356.BevelDifferentialSunGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_dynamic_analysis(self) -> '_6357.BevelGearCompoundDynamicAnalysis':
        """BevelGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6357.BevelGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_dynamic_analysis(self) -> '_6358.BevelGearMeshCompoundDynamicAnalysis':
        """BevelGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6358.BevelGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_dynamic_analysis(self) -> '_6359.BevelGearSetCompoundDynamicAnalysis':
        """BevelGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6359.BevelGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_dynamic_analysis(self) -> '_6360.BoltCompoundDynamicAnalysis':
        """BoltCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6360.BoltCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_dynamic_analysis(self) -> '_6361.BoltedJointCompoundDynamicAnalysis':
        """BoltedJointCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6361.BoltedJointCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_dynamic_analysis(self) -> '_6362.ClutchCompoundDynamicAnalysis':
        """ClutchCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6362.ClutchCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_dynamic_analysis(self) -> '_6363.ClutchConnectionCompoundDynamicAnalysis':
        """ClutchConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6363.ClutchConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_dynamic_analysis(self) -> '_6364.ClutchHalfCompoundDynamicAnalysis':
        """ClutchHalfCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6364.ClutchHalfCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_dynamic_analysis(self) -> '_6365.CoaxialConnectionCompoundDynamicAnalysis':
        """CoaxialConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6365.CoaxialConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_dynamic_analysis(self) -> '_6366.ComponentCompoundDynamicAnalysis':
        """ComponentCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6366.ComponentCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_dynamic_analysis(self) -> '_6367.ConceptCouplingCompoundDynamicAnalysis':
        """ConceptCouplingCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6367.ConceptCouplingCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_dynamic_analysis(self) -> '_6368.ConceptCouplingConnectionCompoundDynamicAnalysis':
        """ConceptCouplingConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6368.ConceptCouplingConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_dynamic_analysis(self) -> '_6369.ConceptCouplingHalfCompoundDynamicAnalysis':
        """ConceptCouplingHalfCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6369.ConceptCouplingHalfCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_dynamic_analysis(self) -> '_6370.ConceptGearCompoundDynamicAnalysis':
        """ConceptGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6370.ConceptGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_dynamic_analysis(self) -> '_6371.ConceptGearMeshCompoundDynamicAnalysis':
        """ConceptGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6371.ConceptGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_dynamic_analysis(self) -> '_6372.ConceptGearSetCompoundDynamicAnalysis':
        """ConceptGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6372.ConceptGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_dynamic_analysis(self) -> '_6373.ConicalGearCompoundDynamicAnalysis':
        """ConicalGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6373.ConicalGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_dynamic_analysis(self) -> '_6374.ConicalGearMeshCompoundDynamicAnalysis':
        """ConicalGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6374.ConicalGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_dynamic_analysis(self) -> '_6375.ConicalGearSetCompoundDynamicAnalysis':
        """ConicalGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6375.ConicalGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_dynamic_analysis(self) -> '_6376.ConnectionCompoundDynamicAnalysis':
        """ConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6376.ConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_dynamic_analysis(self) -> '_6377.ConnectorCompoundDynamicAnalysis':
        """ConnectorCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6377.ConnectorCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_dynamic_analysis(self) -> '_6378.CouplingCompoundDynamicAnalysis':
        """CouplingCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6378.CouplingCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_dynamic_analysis(self) -> '_6379.CouplingConnectionCompoundDynamicAnalysis':
        """CouplingConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6379.CouplingConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_dynamic_analysis(self) -> '_6380.CouplingHalfCompoundDynamicAnalysis':
        """CouplingHalfCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6380.CouplingHalfCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_dynamic_analysis(self) -> '_6381.CVTBeltConnectionCompoundDynamicAnalysis':
        """CVTBeltConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6381.CVTBeltConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_dynamic_analysis(self) -> '_6382.CVTCompoundDynamicAnalysis':
        """CVTCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6382.CVTCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_dynamic_analysis(self) -> '_6383.CVTPulleyCompoundDynamicAnalysis':
        """CVTPulleyCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6383.CVTPulleyCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_dynamic_analysis(self) -> '_6384.CycloidalAssemblyCompoundDynamicAnalysis':
        """CycloidalAssemblyCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6384.CycloidalAssemblyCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_dynamic_analysis(self) -> '_6385.CycloidalDiscCentralBearingConnectionCompoundDynamicAnalysis':
        """CycloidalDiscCentralBearingConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6385.CycloidalDiscCentralBearingConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_dynamic_analysis(self) -> '_6386.CycloidalDiscCompoundDynamicAnalysis':
        """CycloidalDiscCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6386.CycloidalDiscCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_dynamic_analysis(self) -> '_6387.CycloidalDiscPlanetaryBearingConnectionCompoundDynamicAnalysis':
        """CycloidalDiscPlanetaryBearingConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6387.CycloidalDiscPlanetaryBearingConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_dynamic_analysis(self) -> '_6388.CylindricalGearCompoundDynamicAnalysis':
        """CylindricalGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6388.CylindricalGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_dynamic_analysis(self) -> '_6389.CylindricalGearMeshCompoundDynamicAnalysis':
        """CylindricalGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6389.CylindricalGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_dynamic_analysis(self) -> '_6390.CylindricalGearSetCompoundDynamicAnalysis':
        """CylindricalGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6390.CylindricalGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_dynamic_analysis(self) -> '_6391.CylindricalPlanetGearCompoundDynamicAnalysis':
        """CylindricalPlanetGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6391.CylindricalPlanetGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_dynamic_analysis(self) -> '_6392.DatumCompoundDynamicAnalysis':
        """DatumCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6392.DatumCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_dynamic_analysis(self) -> '_6393.ExternalCADModelCompoundDynamicAnalysis':
        """ExternalCADModelCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6393.ExternalCADModelCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_dynamic_analysis(self) -> '_6394.FaceGearCompoundDynamicAnalysis':
        """FaceGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6394.FaceGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_dynamic_analysis(self) -> '_6395.FaceGearMeshCompoundDynamicAnalysis':
        """FaceGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6395.FaceGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_dynamic_analysis(self) -> '_6396.FaceGearSetCompoundDynamicAnalysis':
        """FaceGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6396.FaceGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_dynamic_analysis(self) -> '_6397.FEPartCompoundDynamicAnalysis':
        """FEPartCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6397.FEPartCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_dynamic_analysis(self) -> '_6398.FlexiblePinAssemblyCompoundDynamicAnalysis':
        """FlexiblePinAssemblyCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6398.FlexiblePinAssemblyCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_dynamic_analysis(self) -> '_6399.GearCompoundDynamicAnalysis':
        """GearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6399.GearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_dynamic_analysis(self) -> '_6400.GearMeshCompoundDynamicAnalysis':
        """GearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6400.GearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_dynamic_analysis(self) -> '_6401.GearSetCompoundDynamicAnalysis':
        """GearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6401.GearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_dynamic_analysis(self) -> '_6402.GuideDxfModelCompoundDynamicAnalysis':
        """GuideDxfModelCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6402.GuideDxfModelCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_dynamic_analysis(self) -> '_6403.HypoidGearCompoundDynamicAnalysis':
        """HypoidGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6403.HypoidGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_dynamic_analysis(self) -> '_6404.HypoidGearMeshCompoundDynamicAnalysis':
        """HypoidGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6404.HypoidGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_dynamic_analysis(self) -> '_6405.HypoidGearSetCompoundDynamicAnalysis':
        """HypoidGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6405.HypoidGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_dynamic_analysis(self) -> '_6406.InterMountableComponentConnectionCompoundDynamicAnalysis':
        """InterMountableComponentConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6406.InterMountableComponentConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_dynamic_analysis(self) -> '_6407.KlingelnbergCycloPalloidConicalGearCompoundDynamicAnalysis':
        """KlingelnbergCycloPalloidConicalGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6407.KlingelnbergCycloPalloidConicalGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_dynamic_analysis(self) -> '_6408.KlingelnbergCycloPalloidConicalGearMeshCompoundDynamicAnalysis':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6408.KlingelnbergCycloPalloidConicalGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_dynamic_analysis(self) -> '_6409.KlingelnbergCycloPalloidConicalGearSetCompoundDynamicAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6409.KlingelnbergCycloPalloidConicalGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_dynamic_analysis(self) -> '_6410.KlingelnbergCycloPalloidHypoidGearCompoundDynamicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6410.KlingelnbergCycloPalloidHypoidGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_dynamic_analysis(self) -> '_6411.KlingelnbergCycloPalloidHypoidGearMeshCompoundDynamicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6411.KlingelnbergCycloPalloidHypoidGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_dynamic_analysis(self) -> '_6412.KlingelnbergCycloPalloidHypoidGearSetCompoundDynamicAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6412.KlingelnbergCycloPalloidHypoidGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_dynamic_analysis(self) -> '_6413.KlingelnbergCycloPalloidSpiralBevelGearCompoundDynamicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6413.KlingelnbergCycloPalloidSpiralBevelGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_dynamic_analysis(self) -> '_6414.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundDynamicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6414.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_dynamic_analysis(self) -> '_6415.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundDynamicAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6415.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_dynamic_analysis(self) -> '_6416.MassDiscCompoundDynamicAnalysis':
        """MassDiscCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6416.MassDiscCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_dynamic_analysis(self) -> '_6417.MeasurementComponentCompoundDynamicAnalysis':
        """MeasurementComponentCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6417.MeasurementComponentCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_dynamic_analysis(self) -> '_6418.MountableComponentCompoundDynamicAnalysis':
        """MountableComponentCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6418.MountableComponentCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_dynamic_analysis(self) -> '_6419.OilSealCompoundDynamicAnalysis':
        """OilSealCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6419.OilSealCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_dynamic_analysis(self) -> '_6420.PartCompoundDynamicAnalysis':
        """PartCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6420.PartCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_dynamic_analysis(self) -> '_6421.PartToPartShearCouplingCompoundDynamicAnalysis':
        """PartToPartShearCouplingCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6421.PartToPartShearCouplingCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_dynamic_analysis(self) -> '_6422.PartToPartShearCouplingConnectionCompoundDynamicAnalysis':
        """PartToPartShearCouplingConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6422.PartToPartShearCouplingConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_dynamic_analysis(self) -> '_6423.PartToPartShearCouplingHalfCompoundDynamicAnalysis':
        """PartToPartShearCouplingHalfCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6423.PartToPartShearCouplingHalfCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_dynamic_analysis(self) -> '_6424.PlanetaryConnectionCompoundDynamicAnalysis':
        """PlanetaryConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6424.PlanetaryConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_dynamic_analysis(self) -> '_6425.PlanetaryGearSetCompoundDynamicAnalysis':
        """PlanetaryGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6425.PlanetaryGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_dynamic_analysis(self) -> '_6426.PlanetCarrierCompoundDynamicAnalysis':
        """PlanetCarrierCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6426.PlanetCarrierCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_dynamic_analysis(self) -> '_6427.PointLoadCompoundDynamicAnalysis':
        """PointLoadCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6427.PointLoadCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_dynamic_analysis(self) -> '_6428.PowerLoadCompoundDynamicAnalysis':
        """PowerLoadCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6428.PowerLoadCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_dynamic_analysis(self) -> '_6429.PulleyCompoundDynamicAnalysis':
        """PulleyCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6429.PulleyCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_dynamic_analysis(self) -> '_6430.RingPinsCompoundDynamicAnalysis':
        """RingPinsCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6430.RingPinsCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_dynamic_analysis(self) -> '_6431.RingPinsToDiscConnectionCompoundDynamicAnalysis':
        """RingPinsToDiscConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6431.RingPinsToDiscConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_dynamic_analysis(self) -> '_6432.RollingRingAssemblyCompoundDynamicAnalysis':
        """RollingRingAssemblyCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6432.RollingRingAssemblyCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_dynamic_analysis(self) -> '_6433.RollingRingCompoundDynamicAnalysis':
        """RollingRingCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6433.RollingRingCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_dynamic_analysis(self) -> '_6434.RollingRingConnectionCompoundDynamicAnalysis':
        """RollingRingConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6434.RollingRingConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_dynamic_analysis(self) -> '_6435.RootAssemblyCompoundDynamicAnalysis':
        """RootAssemblyCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6435.RootAssemblyCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_dynamic_analysis(self) -> '_6436.ShaftCompoundDynamicAnalysis':
        """ShaftCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6436.ShaftCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_dynamic_analysis(self) -> '_6437.ShaftHubConnectionCompoundDynamicAnalysis':
        """ShaftHubConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6437.ShaftHubConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_dynamic_analysis(self) -> '_6438.ShaftToMountableComponentConnectionCompoundDynamicAnalysis':
        """ShaftToMountableComponentConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6438.ShaftToMountableComponentConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_dynamic_analysis(self) -> '_6439.SpecialisedAssemblyCompoundDynamicAnalysis':
        """SpecialisedAssemblyCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6439.SpecialisedAssemblyCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_dynamic_analysis(self) -> '_6440.SpiralBevelGearCompoundDynamicAnalysis':
        """SpiralBevelGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6440.SpiralBevelGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_dynamic_analysis(self) -> '_6441.SpiralBevelGearMeshCompoundDynamicAnalysis':
        """SpiralBevelGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6441.SpiralBevelGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_dynamic_analysis(self) -> '_6442.SpiralBevelGearSetCompoundDynamicAnalysis':
        """SpiralBevelGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6442.SpiralBevelGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_dynamic_analysis(self) -> '_6443.SpringDamperCompoundDynamicAnalysis':
        """SpringDamperCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6443.SpringDamperCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_dynamic_analysis(self) -> '_6444.SpringDamperConnectionCompoundDynamicAnalysis':
        """SpringDamperConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6444.SpringDamperConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_dynamic_analysis(self) -> '_6445.SpringDamperHalfCompoundDynamicAnalysis':
        """SpringDamperHalfCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6445.SpringDamperHalfCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_dynamic_analysis(self) -> '_6446.StraightBevelDiffGearCompoundDynamicAnalysis':
        """StraightBevelDiffGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6446.StraightBevelDiffGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_dynamic_analysis(self) -> '_6447.StraightBevelDiffGearMeshCompoundDynamicAnalysis':
        """StraightBevelDiffGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6447.StraightBevelDiffGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_dynamic_analysis(self) -> '_6448.StraightBevelDiffGearSetCompoundDynamicAnalysis':
        """StraightBevelDiffGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6448.StraightBevelDiffGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_dynamic_analysis(self) -> '_6449.StraightBevelGearCompoundDynamicAnalysis':
        """StraightBevelGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6449.StraightBevelGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_dynamic_analysis(self) -> '_6450.StraightBevelGearMeshCompoundDynamicAnalysis':
        """StraightBevelGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6450.StraightBevelGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_dynamic_analysis(self) -> '_6451.StraightBevelGearSetCompoundDynamicAnalysis':
        """StraightBevelGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6451.StraightBevelGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_dynamic_analysis(self) -> '_6452.StraightBevelPlanetGearCompoundDynamicAnalysis':
        """StraightBevelPlanetGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6452.StraightBevelPlanetGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_dynamic_analysis(self) -> '_6453.StraightBevelSunGearCompoundDynamicAnalysis':
        """StraightBevelSunGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6453.StraightBevelSunGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_dynamic_analysis(self) -> '_6454.SynchroniserCompoundDynamicAnalysis':
        """SynchroniserCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6454.SynchroniserCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_dynamic_analysis(self) -> '_6455.SynchroniserHalfCompoundDynamicAnalysis':
        """SynchroniserHalfCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6455.SynchroniserHalfCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_dynamic_analysis(self) -> '_6456.SynchroniserPartCompoundDynamicAnalysis':
        """SynchroniserPartCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6456.SynchroniserPartCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_dynamic_analysis(self) -> '_6457.SynchroniserSleeveCompoundDynamicAnalysis':
        """SynchroniserSleeveCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6457.SynchroniserSleeveCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_dynamic_analysis(self) -> '_6458.TorqueConverterCompoundDynamicAnalysis':
        """TorqueConverterCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6458.TorqueConverterCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_dynamic_analysis(self) -> '_6459.TorqueConverterConnectionCompoundDynamicAnalysis':
        """TorqueConverterConnectionCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6459.TorqueConverterConnectionCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_dynamic_analysis(self) -> '_6460.TorqueConverterPumpCompoundDynamicAnalysis':
        """TorqueConverterPumpCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6460.TorqueConverterPumpCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_dynamic_analysis(self) -> '_6461.TorqueConverterTurbineCompoundDynamicAnalysis':
        """TorqueConverterTurbineCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6461.TorqueConverterTurbineCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_dynamic_analysis(self) -> '_6462.UnbalancedMassCompoundDynamicAnalysis':
        """UnbalancedMassCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6462.UnbalancedMassCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_dynamic_analysis(self) -> '_6463.VirtualComponentCompoundDynamicAnalysis':
        """VirtualComponentCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6463.VirtualComponentCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_dynamic_analysis(self) -> '_6464.WormGearCompoundDynamicAnalysis':
        """WormGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6464.WormGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_dynamic_analysis(self) -> '_6465.WormGearMeshCompoundDynamicAnalysis':
        """WormGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6465.WormGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_dynamic_analysis(self) -> '_6466.WormGearSetCompoundDynamicAnalysis':
        """WormGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6466.WormGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_dynamic_analysis(self) -> '_6467.ZerolBevelGearCompoundDynamicAnalysis':
        """ZerolBevelGearCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6467.ZerolBevelGearCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_dynamic_analysis(self) -> '_6468.ZerolBevelGearMeshCompoundDynamicAnalysis':
        """ZerolBevelGearMeshCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6468.ZerolBevelGearMeshCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_dynamic_analysis(self) -> '_6469.ZerolBevelGearSetCompoundDynamicAnalysis':
        """ZerolBevelGearSetCompoundDynamicAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6469.ZerolBevelGearSetCompoundDynamicAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundDynamicAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_critical_speed_analysis(self) -> '_6476.AbstractAssemblyCriticalSpeedAnalysis':
        """AbstractAssemblyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6476.AbstractAssemblyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_critical_speed_analysis(self) -> '_6477.AbstractShaftCriticalSpeedAnalysis':
        """AbstractShaftCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6477.AbstractShaftCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_critical_speed_analysis(self) -> '_6478.AbstractShaftOrHousingCriticalSpeedAnalysis':
        """AbstractShaftOrHousingCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6478.AbstractShaftOrHousingCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_critical_speed_analysis(self) -> '_6479.AbstractShaftToMountableComponentConnectionCriticalSpeedAnalysis':
        """AbstractShaftToMountableComponentConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6479.AbstractShaftToMountableComponentConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_critical_speed_analysis(self) -> '_6480.AGMAGleasonConicalGearCriticalSpeedAnalysis':
        """AGMAGleasonConicalGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6480.AGMAGleasonConicalGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_critical_speed_analysis(self) -> '_6481.AGMAGleasonConicalGearMeshCriticalSpeedAnalysis':
        """AGMAGleasonConicalGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6481.AGMAGleasonConicalGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_critical_speed_analysis(self) -> '_6482.AGMAGleasonConicalGearSetCriticalSpeedAnalysis':
        """AGMAGleasonConicalGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6482.AGMAGleasonConicalGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_critical_speed_analysis(self) -> '_6483.AssemblyCriticalSpeedAnalysis':
        """AssemblyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6483.AssemblyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_critical_speed_analysis(self) -> '_6484.BearingCriticalSpeedAnalysis':
        """BearingCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6484.BearingCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_critical_speed_analysis(self) -> '_6485.BeltConnectionCriticalSpeedAnalysis':
        """BeltConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6485.BeltConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_critical_speed_analysis(self) -> '_6486.BeltDriveCriticalSpeedAnalysis':
        """BeltDriveCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6486.BeltDriveCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_critical_speed_analysis(self) -> '_6487.BevelDifferentialGearCriticalSpeedAnalysis':
        """BevelDifferentialGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6487.BevelDifferentialGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_critical_speed_analysis(self) -> '_6488.BevelDifferentialGearMeshCriticalSpeedAnalysis':
        """BevelDifferentialGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6488.BevelDifferentialGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_critical_speed_analysis(self) -> '_6489.BevelDifferentialGearSetCriticalSpeedAnalysis':
        """BevelDifferentialGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6489.BevelDifferentialGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_critical_speed_analysis(self) -> '_6490.BevelDifferentialPlanetGearCriticalSpeedAnalysis':
        """BevelDifferentialPlanetGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6490.BevelDifferentialPlanetGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_critical_speed_analysis(self) -> '_6491.BevelDifferentialSunGearCriticalSpeedAnalysis':
        """BevelDifferentialSunGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6491.BevelDifferentialSunGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_critical_speed_analysis(self) -> '_6492.BevelGearCriticalSpeedAnalysis':
        """BevelGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6492.BevelGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_critical_speed_analysis(self) -> '_6493.BevelGearMeshCriticalSpeedAnalysis':
        """BevelGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6493.BevelGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_critical_speed_analysis(self) -> '_6494.BevelGearSetCriticalSpeedAnalysis':
        """BevelGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6494.BevelGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_critical_speed_analysis(self) -> '_6495.BoltCriticalSpeedAnalysis':
        """BoltCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6495.BoltCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_critical_speed_analysis(self) -> '_6496.BoltedJointCriticalSpeedAnalysis':
        """BoltedJointCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6496.BoltedJointCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_critical_speed_analysis(self) -> '_6497.ClutchConnectionCriticalSpeedAnalysis':
        """ClutchConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6497.ClutchConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_critical_speed_analysis(self) -> '_6498.ClutchCriticalSpeedAnalysis':
        """ClutchCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6498.ClutchCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_critical_speed_analysis(self) -> '_6499.ClutchHalfCriticalSpeedAnalysis':
        """ClutchHalfCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6499.ClutchHalfCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_critical_speed_analysis(self) -> '_6500.CoaxialConnectionCriticalSpeedAnalysis':
        """CoaxialConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6500.CoaxialConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_critical_speed_analysis(self) -> '_6501.ComponentCriticalSpeedAnalysis':
        """ComponentCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6501.ComponentCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_critical_speed_analysis(self) -> '_6502.ConceptCouplingConnectionCriticalSpeedAnalysis':
        """ConceptCouplingConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6502.ConceptCouplingConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_critical_speed_analysis(self) -> '_6503.ConceptCouplingCriticalSpeedAnalysis':
        """ConceptCouplingCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6503.ConceptCouplingCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_critical_speed_analysis(self) -> '_6504.ConceptCouplingHalfCriticalSpeedAnalysis':
        """ConceptCouplingHalfCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6504.ConceptCouplingHalfCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_critical_speed_analysis(self) -> '_6505.ConceptGearCriticalSpeedAnalysis':
        """ConceptGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6505.ConceptGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_critical_speed_analysis(self) -> '_6506.ConceptGearMeshCriticalSpeedAnalysis':
        """ConceptGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6506.ConceptGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_critical_speed_analysis(self) -> '_6507.ConceptGearSetCriticalSpeedAnalysis':
        """ConceptGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6507.ConceptGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_critical_speed_analysis(self) -> '_6508.ConicalGearCriticalSpeedAnalysis':
        """ConicalGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6508.ConicalGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_critical_speed_analysis(self) -> '_6509.ConicalGearMeshCriticalSpeedAnalysis':
        """ConicalGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6509.ConicalGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_critical_speed_analysis(self) -> '_6510.ConicalGearSetCriticalSpeedAnalysis':
        """ConicalGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6510.ConicalGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_critical_speed_analysis(self) -> '_6511.ConnectionCriticalSpeedAnalysis':
        """ConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6511.ConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_critical_speed_analysis(self) -> '_6512.ConnectorCriticalSpeedAnalysis':
        """ConnectorCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6512.ConnectorCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_critical_speed_analysis(self) -> '_6513.CouplingConnectionCriticalSpeedAnalysis':
        """CouplingConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6513.CouplingConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_critical_speed_analysis(self) -> '_6514.CouplingCriticalSpeedAnalysis':
        """CouplingCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6514.CouplingCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_critical_speed_analysis(self) -> '_6515.CouplingHalfCriticalSpeedAnalysis':
        """CouplingHalfCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6515.CouplingHalfCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_critical_speed_analysis(self) -> '_6518.CVTBeltConnectionCriticalSpeedAnalysis':
        """CVTBeltConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6518.CVTBeltConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_critical_speed_analysis(self) -> '_6519.CVTCriticalSpeedAnalysis':
        """CVTCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6519.CVTCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_critical_speed_analysis(self) -> '_6520.CVTPulleyCriticalSpeedAnalysis':
        """CVTPulleyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6520.CVTPulleyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_critical_speed_analysis(self) -> '_6521.CycloidalAssemblyCriticalSpeedAnalysis':
        """CycloidalAssemblyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6521.CycloidalAssemblyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_critical_speed_analysis(self) -> '_6522.CycloidalDiscCentralBearingConnectionCriticalSpeedAnalysis':
        """CycloidalDiscCentralBearingConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6522.CycloidalDiscCentralBearingConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_critical_speed_analysis(self) -> '_6523.CycloidalDiscCriticalSpeedAnalysis':
        """CycloidalDiscCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6523.CycloidalDiscCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_critical_speed_analysis(self) -> '_6524.CycloidalDiscPlanetaryBearingConnectionCriticalSpeedAnalysis':
        """CycloidalDiscPlanetaryBearingConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6524.CycloidalDiscPlanetaryBearingConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_critical_speed_analysis(self) -> '_6525.CylindricalGearCriticalSpeedAnalysis':
        """CylindricalGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6525.CylindricalGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_critical_speed_analysis(self) -> '_6526.CylindricalGearMeshCriticalSpeedAnalysis':
        """CylindricalGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6526.CylindricalGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_critical_speed_analysis(self) -> '_6527.CylindricalGearSetCriticalSpeedAnalysis':
        """CylindricalGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6527.CylindricalGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_critical_speed_analysis(self) -> '_6528.CylindricalPlanetGearCriticalSpeedAnalysis':
        """CylindricalPlanetGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6528.CylindricalPlanetGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_critical_speed_analysis(self) -> '_6529.DatumCriticalSpeedAnalysis':
        """DatumCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6529.DatumCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_critical_speed_analysis(self) -> '_6530.ExternalCADModelCriticalSpeedAnalysis':
        """ExternalCADModelCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6530.ExternalCADModelCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_critical_speed_analysis(self) -> '_6531.FaceGearCriticalSpeedAnalysis':
        """FaceGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6531.FaceGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_critical_speed_analysis(self) -> '_6532.FaceGearMeshCriticalSpeedAnalysis':
        """FaceGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6532.FaceGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_critical_speed_analysis(self) -> '_6533.FaceGearSetCriticalSpeedAnalysis':
        """FaceGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6533.FaceGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_critical_speed_analysis(self) -> '_6534.FEPartCriticalSpeedAnalysis':
        """FEPartCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6534.FEPartCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_critical_speed_analysis(self) -> '_6535.FlexiblePinAssemblyCriticalSpeedAnalysis':
        """FlexiblePinAssemblyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6535.FlexiblePinAssemblyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_critical_speed_analysis(self) -> '_6536.GearCriticalSpeedAnalysis':
        """GearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6536.GearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_critical_speed_analysis(self) -> '_6537.GearMeshCriticalSpeedAnalysis':
        """GearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6537.GearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_critical_speed_analysis(self) -> '_6538.GearSetCriticalSpeedAnalysis':
        """GearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6538.GearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_critical_speed_analysis(self) -> '_6539.GuideDxfModelCriticalSpeedAnalysis':
        """GuideDxfModelCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6539.GuideDxfModelCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_critical_speed_analysis(self) -> '_6540.HypoidGearCriticalSpeedAnalysis':
        """HypoidGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6540.HypoidGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_critical_speed_analysis(self) -> '_6541.HypoidGearMeshCriticalSpeedAnalysis':
        """HypoidGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6541.HypoidGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_critical_speed_analysis(self) -> '_6542.HypoidGearSetCriticalSpeedAnalysis':
        """HypoidGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6542.HypoidGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_critical_speed_analysis(self) -> '_6543.InterMountableComponentConnectionCriticalSpeedAnalysis':
        """InterMountableComponentConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6543.InterMountableComponentConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_critical_speed_analysis(self) -> '_6544.KlingelnbergCycloPalloidConicalGearCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidConicalGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6544.KlingelnbergCycloPalloidConicalGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_critical_speed_analysis(self) -> '_6545.KlingelnbergCycloPalloidConicalGearMeshCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidConicalGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6545.KlingelnbergCycloPalloidConicalGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_critical_speed_analysis(self) -> '_6546.KlingelnbergCycloPalloidConicalGearSetCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6546.KlingelnbergCycloPalloidConicalGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_critical_speed_analysis(self) -> '_6547.KlingelnbergCycloPalloidHypoidGearCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidHypoidGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6547.KlingelnbergCycloPalloidHypoidGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_critical_speed_analysis(self) -> '_6548.KlingelnbergCycloPalloidHypoidGearMeshCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidHypoidGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6548.KlingelnbergCycloPalloidHypoidGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_critical_speed_analysis(self) -> '_6549.KlingelnbergCycloPalloidHypoidGearSetCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6549.KlingelnbergCycloPalloidHypoidGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_critical_speed_analysis(self) -> '_6550.KlingelnbergCycloPalloidSpiralBevelGearCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6550.KlingelnbergCycloPalloidSpiralBevelGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_critical_speed_analysis(self) -> '_6551.KlingelnbergCycloPalloidSpiralBevelGearMeshCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6551.KlingelnbergCycloPalloidSpiralBevelGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_critical_speed_analysis(self) -> '_6552.KlingelnbergCycloPalloidSpiralBevelGearSetCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6552.KlingelnbergCycloPalloidSpiralBevelGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_critical_speed_analysis(self) -> '_6553.MassDiscCriticalSpeedAnalysis':
        """MassDiscCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6553.MassDiscCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_critical_speed_analysis(self) -> '_6554.MeasurementComponentCriticalSpeedAnalysis':
        """MeasurementComponentCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6554.MeasurementComponentCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_critical_speed_analysis(self) -> '_6555.MountableComponentCriticalSpeedAnalysis':
        """MountableComponentCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6555.MountableComponentCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_critical_speed_analysis(self) -> '_6556.OilSealCriticalSpeedAnalysis':
        """OilSealCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6556.OilSealCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_critical_speed_analysis(self) -> '_6557.PartCriticalSpeedAnalysis':
        """PartCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6557.PartCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_critical_speed_analysis(self) -> '_6558.PartToPartShearCouplingConnectionCriticalSpeedAnalysis':
        """PartToPartShearCouplingConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6558.PartToPartShearCouplingConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_critical_speed_analysis(self) -> '_6559.PartToPartShearCouplingCriticalSpeedAnalysis':
        """PartToPartShearCouplingCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6559.PartToPartShearCouplingCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_critical_speed_analysis(self) -> '_6560.PartToPartShearCouplingHalfCriticalSpeedAnalysis':
        """PartToPartShearCouplingHalfCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6560.PartToPartShearCouplingHalfCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_critical_speed_analysis(self) -> '_6561.PlanetaryConnectionCriticalSpeedAnalysis':
        """PlanetaryConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6561.PlanetaryConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_critical_speed_analysis(self) -> '_6562.PlanetaryGearSetCriticalSpeedAnalysis':
        """PlanetaryGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6562.PlanetaryGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_critical_speed_analysis(self) -> '_6563.PlanetCarrierCriticalSpeedAnalysis':
        """PlanetCarrierCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6563.PlanetCarrierCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_critical_speed_analysis(self) -> '_6564.PointLoadCriticalSpeedAnalysis':
        """PointLoadCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6564.PointLoadCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_critical_speed_analysis(self) -> '_6565.PowerLoadCriticalSpeedAnalysis':
        """PowerLoadCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6565.PowerLoadCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_critical_speed_analysis(self) -> '_6566.PulleyCriticalSpeedAnalysis':
        """PulleyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6566.PulleyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_critical_speed_analysis(self) -> '_6567.RingPinsCriticalSpeedAnalysis':
        """RingPinsCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6567.RingPinsCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_critical_speed_analysis(self) -> '_6568.RingPinsToDiscConnectionCriticalSpeedAnalysis':
        """RingPinsToDiscConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6568.RingPinsToDiscConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_critical_speed_analysis(self) -> '_6569.RollingRingAssemblyCriticalSpeedAnalysis':
        """RollingRingAssemblyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6569.RollingRingAssemblyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_critical_speed_analysis(self) -> '_6570.RollingRingConnectionCriticalSpeedAnalysis':
        """RollingRingConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6570.RollingRingConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_critical_speed_analysis(self) -> '_6571.RollingRingCriticalSpeedAnalysis':
        """RollingRingCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6571.RollingRingCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_critical_speed_analysis(self) -> '_6572.RootAssemblyCriticalSpeedAnalysis':
        """RootAssemblyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6572.RootAssemblyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_critical_speed_analysis(self) -> '_6573.ShaftCriticalSpeedAnalysis':
        """ShaftCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6573.ShaftCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_critical_speed_analysis(self) -> '_6574.ShaftHubConnectionCriticalSpeedAnalysis':
        """ShaftHubConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6574.ShaftHubConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_critical_speed_analysis(self) -> '_6575.ShaftToMountableComponentConnectionCriticalSpeedAnalysis':
        """ShaftToMountableComponentConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6575.ShaftToMountableComponentConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_critical_speed_analysis(self) -> '_6576.SpecialisedAssemblyCriticalSpeedAnalysis':
        """SpecialisedAssemblyCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6576.SpecialisedAssemblyCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_critical_speed_analysis(self) -> '_6577.SpiralBevelGearCriticalSpeedAnalysis':
        """SpiralBevelGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6577.SpiralBevelGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_critical_speed_analysis(self) -> '_6578.SpiralBevelGearMeshCriticalSpeedAnalysis':
        """SpiralBevelGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6578.SpiralBevelGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_critical_speed_analysis(self) -> '_6579.SpiralBevelGearSetCriticalSpeedAnalysis':
        """SpiralBevelGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6579.SpiralBevelGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_critical_speed_analysis(self) -> '_6580.SpringDamperConnectionCriticalSpeedAnalysis':
        """SpringDamperConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6580.SpringDamperConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_critical_speed_analysis(self) -> '_6581.SpringDamperCriticalSpeedAnalysis':
        """SpringDamperCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6581.SpringDamperCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_critical_speed_analysis(self) -> '_6582.SpringDamperHalfCriticalSpeedAnalysis':
        """SpringDamperHalfCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6582.SpringDamperHalfCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_critical_speed_analysis(self) -> '_6583.StraightBevelDiffGearCriticalSpeedAnalysis':
        """StraightBevelDiffGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6583.StraightBevelDiffGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_critical_speed_analysis(self) -> '_6584.StraightBevelDiffGearMeshCriticalSpeedAnalysis':
        """StraightBevelDiffGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6584.StraightBevelDiffGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_critical_speed_analysis(self) -> '_6585.StraightBevelDiffGearSetCriticalSpeedAnalysis':
        """StraightBevelDiffGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6585.StraightBevelDiffGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_critical_speed_analysis(self) -> '_6586.StraightBevelGearCriticalSpeedAnalysis':
        """StraightBevelGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6586.StraightBevelGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_critical_speed_analysis(self) -> '_6587.StraightBevelGearMeshCriticalSpeedAnalysis':
        """StraightBevelGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6587.StraightBevelGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_critical_speed_analysis(self) -> '_6588.StraightBevelGearSetCriticalSpeedAnalysis':
        """StraightBevelGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6588.StraightBevelGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_critical_speed_analysis(self) -> '_6589.StraightBevelPlanetGearCriticalSpeedAnalysis':
        """StraightBevelPlanetGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6589.StraightBevelPlanetGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_critical_speed_analysis(self) -> '_6590.StraightBevelSunGearCriticalSpeedAnalysis':
        """StraightBevelSunGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6590.StraightBevelSunGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_critical_speed_analysis(self) -> '_6591.SynchroniserCriticalSpeedAnalysis':
        """SynchroniserCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6591.SynchroniserCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_critical_speed_analysis(self) -> '_6592.SynchroniserHalfCriticalSpeedAnalysis':
        """SynchroniserHalfCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6592.SynchroniserHalfCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_critical_speed_analysis(self) -> '_6593.SynchroniserPartCriticalSpeedAnalysis':
        """SynchroniserPartCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6593.SynchroniserPartCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_critical_speed_analysis(self) -> '_6594.SynchroniserSleeveCriticalSpeedAnalysis':
        """SynchroniserSleeveCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6594.SynchroniserSleeveCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_critical_speed_analysis(self) -> '_6595.TorqueConverterConnectionCriticalSpeedAnalysis':
        """TorqueConverterConnectionCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6595.TorqueConverterConnectionCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_critical_speed_analysis(self) -> '_6596.TorqueConverterCriticalSpeedAnalysis':
        """TorqueConverterCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6596.TorqueConverterCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_critical_speed_analysis(self) -> '_6597.TorqueConverterPumpCriticalSpeedAnalysis':
        """TorqueConverterPumpCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6597.TorqueConverterPumpCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_critical_speed_analysis(self) -> '_6598.TorqueConverterTurbineCriticalSpeedAnalysis':
        """TorqueConverterTurbineCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6598.TorqueConverterTurbineCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_critical_speed_analysis(self) -> '_6599.UnbalancedMassCriticalSpeedAnalysis':
        """UnbalancedMassCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6599.UnbalancedMassCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_critical_speed_analysis(self) -> '_6600.VirtualComponentCriticalSpeedAnalysis':
        """VirtualComponentCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6600.VirtualComponentCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_critical_speed_analysis(self) -> '_6601.WormGearCriticalSpeedAnalysis':
        """WormGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6601.WormGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_critical_speed_analysis(self) -> '_6602.WormGearMeshCriticalSpeedAnalysis':
        """WormGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6602.WormGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_critical_speed_analysis(self) -> '_6603.WormGearSetCriticalSpeedAnalysis':
        """WormGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6603.WormGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_critical_speed_analysis(self) -> '_6604.ZerolBevelGearCriticalSpeedAnalysis':
        """ZerolBevelGearCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6604.ZerolBevelGearCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_critical_speed_analysis(self) -> '_6605.ZerolBevelGearMeshCriticalSpeedAnalysis':
        """ZerolBevelGearMeshCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6605.ZerolBevelGearMeshCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_critical_speed_analysis(self) -> '_6606.ZerolBevelGearSetCriticalSpeedAnalysis':
        """ZerolBevelGearSetCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6606.ZerolBevelGearSetCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_critical_speed_analysis(self) -> '_6607.AbstractAssemblyCompoundCriticalSpeedAnalysis':
        """AbstractAssemblyCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6607.AbstractAssemblyCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_critical_speed_analysis(self) -> '_6608.AbstractShaftCompoundCriticalSpeedAnalysis':
        """AbstractShaftCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6608.AbstractShaftCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_critical_speed_analysis(self) -> '_6609.AbstractShaftOrHousingCompoundCriticalSpeedAnalysis':
        """AbstractShaftOrHousingCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6609.AbstractShaftOrHousingCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_critical_speed_analysis(self) -> '_6610.AbstractShaftToMountableComponentConnectionCompoundCriticalSpeedAnalysis':
        """AbstractShaftToMountableComponentConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6610.AbstractShaftToMountableComponentConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_critical_speed_analysis(self) -> '_6611.AGMAGleasonConicalGearCompoundCriticalSpeedAnalysis':
        """AGMAGleasonConicalGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6611.AGMAGleasonConicalGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_critical_speed_analysis(self) -> '_6612.AGMAGleasonConicalGearMeshCompoundCriticalSpeedAnalysis':
        """AGMAGleasonConicalGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6612.AGMAGleasonConicalGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_critical_speed_analysis(self) -> '_6613.AGMAGleasonConicalGearSetCompoundCriticalSpeedAnalysis':
        """AGMAGleasonConicalGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6613.AGMAGleasonConicalGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_critical_speed_analysis(self) -> '_6614.AssemblyCompoundCriticalSpeedAnalysis':
        """AssemblyCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6614.AssemblyCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_critical_speed_analysis(self) -> '_6615.BearingCompoundCriticalSpeedAnalysis':
        """BearingCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6615.BearingCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_critical_speed_analysis(self) -> '_6616.BeltConnectionCompoundCriticalSpeedAnalysis':
        """BeltConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6616.BeltConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_critical_speed_analysis(self) -> '_6617.BeltDriveCompoundCriticalSpeedAnalysis':
        """BeltDriveCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6617.BeltDriveCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_critical_speed_analysis(self) -> '_6618.BevelDifferentialGearCompoundCriticalSpeedAnalysis':
        """BevelDifferentialGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6618.BevelDifferentialGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_critical_speed_analysis(self) -> '_6619.BevelDifferentialGearMeshCompoundCriticalSpeedAnalysis':
        """BevelDifferentialGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6619.BevelDifferentialGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_critical_speed_analysis(self) -> '_6620.BevelDifferentialGearSetCompoundCriticalSpeedAnalysis':
        """BevelDifferentialGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6620.BevelDifferentialGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_critical_speed_analysis(self) -> '_6621.BevelDifferentialPlanetGearCompoundCriticalSpeedAnalysis':
        """BevelDifferentialPlanetGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6621.BevelDifferentialPlanetGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_critical_speed_analysis(self) -> '_6622.BevelDifferentialSunGearCompoundCriticalSpeedAnalysis':
        """BevelDifferentialSunGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6622.BevelDifferentialSunGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_critical_speed_analysis(self) -> '_6623.BevelGearCompoundCriticalSpeedAnalysis':
        """BevelGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6623.BevelGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_critical_speed_analysis(self) -> '_6624.BevelGearMeshCompoundCriticalSpeedAnalysis':
        """BevelGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6624.BevelGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_critical_speed_analysis(self) -> '_6625.BevelGearSetCompoundCriticalSpeedAnalysis':
        """BevelGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6625.BevelGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_critical_speed_analysis(self) -> '_6626.BoltCompoundCriticalSpeedAnalysis':
        """BoltCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6626.BoltCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_critical_speed_analysis(self) -> '_6627.BoltedJointCompoundCriticalSpeedAnalysis':
        """BoltedJointCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6627.BoltedJointCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_critical_speed_analysis(self) -> '_6628.ClutchCompoundCriticalSpeedAnalysis':
        """ClutchCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6628.ClutchCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_critical_speed_analysis(self) -> '_6629.ClutchConnectionCompoundCriticalSpeedAnalysis':
        """ClutchConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6629.ClutchConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_critical_speed_analysis(self) -> '_6630.ClutchHalfCompoundCriticalSpeedAnalysis':
        """ClutchHalfCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6630.ClutchHalfCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_critical_speed_analysis(self) -> '_6631.CoaxialConnectionCompoundCriticalSpeedAnalysis':
        """CoaxialConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6631.CoaxialConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_critical_speed_analysis(self) -> '_6632.ComponentCompoundCriticalSpeedAnalysis':
        """ComponentCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6632.ComponentCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_critical_speed_analysis(self) -> '_6633.ConceptCouplingCompoundCriticalSpeedAnalysis':
        """ConceptCouplingCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6633.ConceptCouplingCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_critical_speed_analysis(self) -> '_6634.ConceptCouplingConnectionCompoundCriticalSpeedAnalysis':
        """ConceptCouplingConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6634.ConceptCouplingConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_critical_speed_analysis(self) -> '_6635.ConceptCouplingHalfCompoundCriticalSpeedAnalysis':
        """ConceptCouplingHalfCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6635.ConceptCouplingHalfCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_critical_speed_analysis(self) -> '_6636.ConceptGearCompoundCriticalSpeedAnalysis':
        """ConceptGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6636.ConceptGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_critical_speed_analysis(self) -> '_6637.ConceptGearMeshCompoundCriticalSpeedAnalysis':
        """ConceptGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6637.ConceptGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_critical_speed_analysis(self) -> '_6638.ConceptGearSetCompoundCriticalSpeedAnalysis':
        """ConceptGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6638.ConceptGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_critical_speed_analysis(self) -> '_6639.ConicalGearCompoundCriticalSpeedAnalysis':
        """ConicalGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6639.ConicalGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_critical_speed_analysis(self) -> '_6640.ConicalGearMeshCompoundCriticalSpeedAnalysis':
        """ConicalGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6640.ConicalGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_critical_speed_analysis(self) -> '_6641.ConicalGearSetCompoundCriticalSpeedAnalysis':
        """ConicalGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6641.ConicalGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_critical_speed_analysis(self) -> '_6642.ConnectionCompoundCriticalSpeedAnalysis':
        """ConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6642.ConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_critical_speed_analysis(self) -> '_6643.ConnectorCompoundCriticalSpeedAnalysis':
        """ConnectorCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6643.ConnectorCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_critical_speed_analysis(self) -> '_6644.CouplingCompoundCriticalSpeedAnalysis':
        """CouplingCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6644.CouplingCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_critical_speed_analysis(self) -> '_6645.CouplingConnectionCompoundCriticalSpeedAnalysis':
        """CouplingConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6645.CouplingConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_critical_speed_analysis(self) -> '_6646.CouplingHalfCompoundCriticalSpeedAnalysis':
        """CouplingHalfCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6646.CouplingHalfCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_critical_speed_analysis(self) -> '_6647.CVTBeltConnectionCompoundCriticalSpeedAnalysis':
        """CVTBeltConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6647.CVTBeltConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_critical_speed_analysis(self) -> '_6648.CVTCompoundCriticalSpeedAnalysis':
        """CVTCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6648.CVTCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_critical_speed_analysis(self) -> '_6649.CVTPulleyCompoundCriticalSpeedAnalysis':
        """CVTPulleyCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6649.CVTPulleyCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_critical_speed_analysis(self) -> '_6650.CycloidalAssemblyCompoundCriticalSpeedAnalysis':
        """CycloidalAssemblyCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6650.CycloidalAssemblyCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_critical_speed_analysis(self) -> '_6651.CycloidalDiscCentralBearingConnectionCompoundCriticalSpeedAnalysis':
        """CycloidalDiscCentralBearingConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6651.CycloidalDiscCentralBearingConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_critical_speed_analysis(self) -> '_6652.CycloidalDiscCompoundCriticalSpeedAnalysis':
        """CycloidalDiscCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6652.CycloidalDiscCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_critical_speed_analysis(self) -> '_6653.CycloidalDiscPlanetaryBearingConnectionCompoundCriticalSpeedAnalysis':
        """CycloidalDiscPlanetaryBearingConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6653.CycloidalDiscPlanetaryBearingConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_critical_speed_analysis(self) -> '_6654.CylindricalGearCompoundCriticalSpeedAnalysis':
        """CylindricalGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6654.CylindricalGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_critical_speed_analysis(self) -> '_6655.CylindricalGearMeshCompoundCriticalSpeedAnalysis':
        """CylindricalGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6655.CylindricalGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_critical_speed_analysis(self) -> '_6656.CylindricalGearSetCompoundCriticalSpeedAnalysis':
        """CylindricalGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6656.CylindricalGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_critical_speed_analysis(self) -> '_6657.CylindricalPlanetGearCompoundCriticalSpeedAnalysis':
        """CylindricalPlanetGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6657.CylindricalPlanetGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_critical_speed_analysis(self) -> '_6658.DatumCompoundCriticalSpeedAnalysis':
        """DatumCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6658.DatumCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_critical_speed_analysis(self) -> '_6659.ExternalCADModelCompoundCriticalSpeedAnalysis':
        """ExternalCADModelCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6659.ExternalCADModelCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_critical_speed_analysis(self) -> '_6660.FaceGearCompoundCriticalSpeedAnalysis':
        """FaceGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6660.FaceGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_critical_speed_analysis(self) -> '_6661.FaceGearMeshCompoundCriticalSpeedAnalysis':
        """FaceGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6661.FaceGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_critical_speed_analysis(self) -> '_6662.FaceGearSetCompoundCriticalSpeedAnalysis':
        """FaceGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6662.FaceGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_critical_speed_analysis(self) -> '_6663.FEPartCompoundCriticalSpeedAnalysis':
        """FEPartCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6663.FEPartCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_critical_speed_analysis(self) -> '_6664.FlexiblePinAssemblyCompoundCriticalSpeedAnalysis':
        """FlexiblePinAssemblyCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6664.FlexiblePinAssemblyCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_critical_speed_analysis(self) -> '_6665.GearCompoundCriticalSpeedAnalysis':
        """GearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6665.GearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_critical_speed_analysis(self) -> '_6666.GearMeshCompoundCriticalSpeedAnalysis':
        """GearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6666.GearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_critical_speed_analysis(self) -> '_6667.GearSetCompoundCriticalSpeedAnalysis':
        """GearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6667.GearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_critical_speed_analysis(self) -> '_6668.GuideDxfModelCompoundCriticalSpeedAnalysis':
        """GuideDxfModelCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6668.GuideDxfModelCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_critical_speed_analysis(self) -> '_6669.HypoidGearCompoundCriticalSpeedAnalysis':
        """HypoidGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6669.HypoidGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_critical_speed_analysis(self) -> '_6670.HypoidGearMeshCompoundCriticalSpeedAnalysis':
        """HypoidGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6670.HypoidGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_critical_speed_analysis(self) -> '_6671.HypoidGearSetCompoundCriticalSpeedAnalysis':
        """HypoidGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6671.HypoidGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_critical_speed_analysis(self) -> '_6672.InterMountableComponentConnectionCompoundCriticalSpeedAnalysis':
        """InterMountableComponentConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6672.InterMountableComponentConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_critical_speed_analysis(self) -> '_6673.KlingelnbergCycloPalloidConicalGearCompoundCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidConicalGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6673.KlingelnbergCycloPalloidConicalGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_critical_speed_analysis(self) -> '_6674.KlingelnbergCycloPalloidConicalGearMeshCompoundCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6674.KlingelnbergCycloPalloidConicalGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_critical_speed_analysis(self) -> '_6675.KlingelnbergCycloPalloidConicalGearSetCompoundCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidConicalGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6675.KlingelnbergCycloPalloidConicalGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_critical_speed_analysis(self) -> '_6676.KlingelnbergCycloPalloidHypoidGearCompoundCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidHypoidGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6676.KlingelnbergCycloPalloidHypoidGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_critical_speed_analysis(self) -> '_6677.KlingelnbergCycloPalloidHypoidGearMeshCompoundCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6677.KlingelnbergCycloPalloidHypoidGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_critical_speed_analysis(self) -> '_6678.KlingelnbergCycloPalloidHypoidGearSetCompoundCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6678.KlingelnbergCycloPalloidHypoidGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_critical_speed_analysis(self) -> '_6679.KlingelnbergCycloPalloidSpiralBevelGearCompoundCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6679.KlingelnbergCycloPalloidSpiralBevelGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_critical_speed_analysis(self) -> '_6680.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6680.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_critical_speed_analysis(self) -> '_6681.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundCriticalSpeedAnalysis':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6681.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_critical_speed_analysis(self) -> '_6682.MassDiscCompoundCriticalSpeedAnalysis':
        """MassDiscCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6682.MassDiscCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_critical_speed_analysis(self) -> '_6683.MeasurementComponentCompoundCriticalSpeedAnalysis':
        """MeasurementComponentCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6683.MeasurementComponentCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_critical_speed_analysis(self) -> '_6684.MountableComponentCompoundCriticalSpeedAnalysis':
        """MountableComponentCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6684.MountableComponentCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_critical_speed_analysis(self) -> '_6685.OilSealCompoundCriticalSpeedAnalysis':
        """OilSealCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6685.OilSealCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_critical_speed_analysis(self) -> '_6686.PartCompoundCriticalSpeedAnalysis':
        """PartCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6686.PartCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_critical_speed_analysis(self) -> '_6687.PartToPartShearCouplingCompoundCriticalSpeedAnalysis':
        """PartToPartShearCouplingCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6687.PartToPartShearCouplingCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_critical_speed_analysis(self) -> '_6688.PartToPartShearCouplingConnectionCompoundCriticalSpeedAnalysis':
        """PartToPartShearCouplingConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6688.PartToPartShearCouplingConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_critical_speed_analysis(self) -> '_6689.PartToPartShearCouplingHalfCompoundCriticalSpeedAnalysis':
        """PartToPartShearCouplingHalfCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6689.PartToPartShearCouplingHalfCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_critical_speed_analysis(self) -> '_6690.PlanetaryConnectionCompoundCriticalSpeedAnalysis':
        """PlanetaryConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6690.PlanetaryConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_critical_speed_analysis(self) -> '_6691.PlanetaryGearSetCompoundCriticalSpeedAnalysis':
        """PlanetaryGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6691.PlanetaryGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_critical_speed_analysis(self) -> '_6692.PlanetCarrierCompoundCriticalSpeedAnalysis':
        """PlanetCarrierCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6692.PlanetCarrierCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_critical_speed_analysis(self) -> '_6693.PointLoadCompoundCriticalSpeedAnalysis':
        """PointLoadCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6693.PointLoadCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_critical_speed_analysis(self) -> '_6694.PowerLoadCompoundCriticalSpeedAnalysis':
        """PowerLoadCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6694.PowerLoadCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_critical_speed_analysis(self) -> '_6695.PulleyCompoundCriticalSpeedAnalysis':
        """PulleyCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6695.PulleyCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_critical_speed_analysis(self) -> '_6696.RingPinsCompoundCriticalSpeedAnalysis':
        """RingPinsCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6696.RingPinsCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_critical_speed_analysis(self) -> '_6697.RingPinsToDiscConnectionCompoundCriticalSpeedAnalysis':
        """RingPinsToDiscConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6697.RingPinsToDiscConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_critical_speed_analysis(self) -> '_6698.RollingRingAssemblyCompoundCriticalSpeedAnalysis':
        """RollingRingAssemblyCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6698.RollingRingAssemblyCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_critical_speed_analysis(self) -> '_6699.RollingRingCompoundCriticalSpeedAnalysis':
        """RollingRingCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6699.RollingRingCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_critical_speed_analysis(self) -> '_6700.RollingRingConnectionCompoundCriticalSpeedAnalysis':
        """RollingRingConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6700.RollingRingConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_critical_speed_analysis(self) -> '_6701.RootAssemblyCompoundCriticalSpeedAnalysis':
        """RootAssemblyCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6701.RootAssemblyCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_critical_speed_analysis(self) -> '_6702.ShaftCompoundCriticalSpeedAnalysis':
        """ShaftCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6702.ShaftCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_critical_speed_analysis(self) -> '_6703.ShaftHubConnectionCompoundCriticalSpeedAnalysis':
        """ShaftHubConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6703.ShaftHubConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_critical_speed_analysis(self) -> '_6704.ShaftToMountableComponentConnectionCompoundCriticalSpeedAnalysis':
        """ShaftToMountableComponentConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6704.ShaftToMountableComponentConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_critical_speed_analysis(self) -> '_6705.SpecialisedAssemblyCompoundCriticalSpeedAnalysis':
        """SpecialisedAssemblyCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6705.SpecialisedAssemblyCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_critical_speed_analysis(self) -> '_6706.SpiralBevelGearCompoundCriticalSpeedAnalysis':
        """SpiralBevelGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6706.SpiralBevelGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_critical_speed_analysis(self) -> '_6707.SpiralBevelGearMeshCompoundCriticalSpeedAnalysis':
        """SpiralBevelGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6707.SpiralBevelGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_critical_speed_analysis(self) -> '_6708.SpiralBevelGearSetCompoundCriticalSpeedAnalysis':
        """SpiralBevelGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6708.SpiralBevelGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_critical_speed_analysis(self) -> '_6709.SpringDamperCompoundCriticalSpeedAnalysis':
        """SpringDamperCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6709.SpringDamperCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_critical_speed_analysis(self) -> '_6710.SpringDamperConnectionCompoundCriticalSpeedAnalysis':
        """SpringDamperConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6710.SpringDamperConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_critical_speed_analysis(self) -> '_6711.SpringDamperHalfCompoundCriticalSpeedAnalysis':
        """SpringDamperHalfCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6711.SpringDamperHalfCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_critical_speed_analysis(self) -> '_6712.StraightBevelDiffGearCompoundCriticalSpeedAnalysis':
        """StraightBevelDiffGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6712.StraightBevelDiffGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_critical_speed_analysis(self) -> '_6713.StraightBevelDiffGearMeshCompoundCriticalSpeedAnalysis':
        """StraightBevelDiffGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6713.StraightBevelDiffGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_critical_speed_analysis(self) -> '_6714.StraightBevelDiffGearSetCompoundCriticalSpeedAnalysis':
        """StraightBevelDiffGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6714.StraightBevelDiffGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_critical_speed_analysis(self) -> '_6715.StraightBevelGearCompoundCriticalSpeedAnalysis':
        """StraightBevelGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6715.StraightBevelGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_critical_speed_analysis(self) -> '_6716.StraightBevelGearMeshCompoundCriticalSpeedAnalysis':
        """StraightBevelGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6716.StraightBevelGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_critical_speed_analysis(self) -> '_6717.StraightBevelGearSetCompoundCriticalSpeedAnalysis':
        """StraightBevelGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6717.StraightBevelGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_critical_speed_analysis(self) -> '_6718.StraightBevelPlanetGearCompoundCriticalSpeedAnalysis':
        """StraightBevelPlanetGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6718.StraightBevelPlanetGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_critical_speed_analysis(self) -> '_6719.StraightBevelSunGearCompoundCriticalSpeedAnalysis':
        """StraightBevelSunGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6719.StraightBevelSunGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_critical_speed_analysis(self) -> '_6720.SynchroniserCompoundCriticalSpeedAnalysis':
        """SynchroniserCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6720.SynchroniserCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_critical_speed_analysis(self) -> '_6721.SynchroniserHalfCompoundCriticalSpeedAnalysis':
        """SynchroniserHalfCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6721.SynchroniserHalfCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_critical_speed_analysis(self) -> '_6722.SynchroniserPartCompoundCriticalSpeedAnalysis':
        """SynchroniserPartCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6722.SynchroniserPartCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_critical_speed_analysis(self) -> '_6723.SynchroniserSleeveCompoundCriticalSpeedAnalysis':
        """SynchroniserSleeveCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6723.SynchroniserSleeveCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_critical_speed_analysis(self) -> '_6724.TorqueConverterCompoundCriticalSpeedAnalysis':
        """TorqueConverterCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6724.TorqueConverterCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_critical_speed_analysis(self) -> '_6725.TorqueConverterConnectionCompoundCriticalSpeedAnalysis':
        """TorqueConverterConnectionCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6725.TorqueConverterConnectionCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_critical_speed_analysis(self) -> '_6726.TorqueConverterPumpCompoundCriticalSpeedAnalysis':
        """TorqueConverterPumpCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6726.TorqueConverterPumpCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_critical_speed_analysis(self) -> '_6727.TorqueConverterTurbineCompoundCriticalSpeedAnalysis':
        """TorqueConverterTurbineCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6727.TorqueConverterTurbineCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_critical_speed_analysis(self) -> '_6728.UnbalancedMassCompoundCriticalSpeedAnalysis':
        """UnbalancedMassCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6728.UnbalancedMassCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_critical_speed_analysis(self) -> '_6729.VirtualComponentCompoundCriticalSpeedAnalysis':
        """VirtualComponentCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6729.VirtualComponentCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_critical_speed_analysis(self) -> '_6730.WormGearCompoundCriticalSpeedAnalysis':
        """WormGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6730.WormGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_critical_speed_analysis(self) -> '_6731.WormGearMeshCompoundCriticalSpeedAnalysis':
        """WormGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6731.WormGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_critical_speed_analysis(self) -> '_6732.WormGearSetCompoundCriticalSpeedAnalysis':
        """WormGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6732.WormGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_critical_speed_analysis(self) -> '_6733.ZerolBevelGearCompoundCriticalSpeedAnalysis':
        """ZerolBevelGearCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6733.ZerolBevelGearCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_critical_speed_analysis(self) -> '_6734.ZerolBevelGearMeshCompoundCriticalSpeedAnalysis':
        """ZerolBevelGearMeshCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6734.ZerolBevelGearMeshCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_critical_speed_analysis(self) -> '_6735.ZerolBevelGearSetCompoundCriticalSpeedAnalysis':
        """ZerolBevelGearSetCompoundCriticalSpeedAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6735.ZerolBevelGearSetCompoundCriticalSpeedAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundCriticalSpeedAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_load_case(self) -> '_6739.AbstractAssemblyLoadCase':
        """AbstractAssemblyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6739.AbstractAssemblyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_load_case(self) -> '_6740.AbstractShaftLoadCase':
        """AbstractShaftLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6740.AbstractShaftLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_load_case(self) -> '_6741.AbstractShaftOrHousingLoadCase':
        """AbstractShaftOrHousingLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6741.AbstractShaftOrHousingLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_load_case(self) -> '_6742.AbstractShaftToMountableComponentConnectionLoadCase':
        """AbstractShaftToMountableComponentConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6742.AbstractShaftToMountableComponentConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_load_case(self) -> '_6746.AGMAGleasonConicalGearLoadCase':
        """AGMAGleasonConicalGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6746.AGMAGleasonConicalGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_load_case(self) -> '_6747.AGMAGleasonConicalGearMeshLoadCase':
        """AGMAGleasonConicalGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6747.AGMAGleasonConicalGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_load_case(self) -> '_6748.AGMAGleasonConicalGearSetLoadCase':
        """AGMAGleasonConicalGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6748.AGMAGleasonConicalGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_load_case(self) -> '_6751.AssemblyLoadCase':
        """AssemblyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6751.AssemblyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_load_case(self) -> '_6752.BearingLoadCase':
        """BearingLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6752.BearingLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_load_case(self) -> '_6753.BeltConnectionLoadCase':
        """BeltConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6753.BeltConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_load_case(self) -> '_6754.BeltDriveLoadCase':
        """BeltDriveLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6754.BeltDriveLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_load_case(self) -> '_6755.BevelDifferentialGearLoadCase':
        """BevelDifferentialGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6755.BevelDifferentialGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_load_case(self) -> '_6756.BevelDifferentialGearMeshLoadCase':
        """BevelDifferentialGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6756.BevelDifferentialGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_load_case(self) -> '_6757.BevelDifferentialGearSetLoadCase':
        """BevelDifferentialGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6757.BevelDifferentialGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_load_case(self) -> '_6758.BevelDifferentialPlanetGearLoadCase':
        """BevelDifferentialPlanetGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6758.BevelDifferentialPlanetGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_load_case(self) -> '_6759.BevelDifferentialSunGearLoadCase':
        """BevelDifferentialSunGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6759.BevelDifferentialSunGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_load_case(self) -> '_6760.BevelGearLoadCase':
        """BevelGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6760.BevelGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_load_case(self) -> '_6761.BevelGearMeshLoadCase':
        """BevelGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6761.BevelGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_load_case(self) -> '_6762.BevelGearSetLoadCase':
        """BevelGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6762.BevelGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_load_case(self) -> '_6763.BoltedJointLoadCase':
        """BoltedJointLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6763.BoltedJointLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_load_case(self) -> '_6764.BoltLoadCase':
        """BoltLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6764.BoltLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_load_case(self) -> '_6765.ClutchConnectionLoadCase':
        """ClutchConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6765.ClutchConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_load_case(self) -> '_6766.ClutchHalfLoadCase':
        """ClutchHalfLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6766.ClutchHalfLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_load_case(self) -> '_6767.ClutchLoadCase':
        """ClutchLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6767.ClutchLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_load_case(self) -> '_6768.CoaxialConnectionLoadCase':
        """CoaxialConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6768.CoaxialConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_load_case(self) -> '_6769.ComponentLoadCase':
        """ComponentLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6769.ComponentLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_load_case(self) -> '_6770.ConceptCouplingConnectionLoadCase':
        """ConceptCouplingConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6770.ConceptCouplingConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_load_case(self) -> '_6771.ConceptCouplingHalfLoadCase':
        """ConceptCouplingHalfLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6771.ConceptCouplingHalfLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_load_case(self) -> '_6772.ConceptCouplingLoadCase':
        """ConceptCouplingLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6772.ConceptCouplingLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_load_case(self) -> '_6773.ConceptGearLoadCase':
        """ConceptGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6773.ConceptGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_load_case(self) -> '_6774.ConceptGearMeshLoadCase':
        """ConceptGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6774.ConceptGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_load_case(self) -> '_6775.ConceptGearSetLoadCase':
        """ConceptGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6775.ConceptGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_load_case(self) -> '_6776.ConicalGearLoadCase':
        """ConicalGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6776.ConicalGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_load_case(self) -> '_6778.ConicalGearMeshLoadCase':
        """ConicalGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6778.ConicalGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_load_case(self) -> '_6780.ConicalGearSetLoadCase':
        """ConicalGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6780.ConicalGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_load_case(self) -> '_6781.ConnectionLoadCase':
        """ConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6781.ConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_load_case(self) -> '_6782.ConnectorLoadCase':
        """ConnectorLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6782.ConnectorLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_load_case(self) -> '_6783.CouplingConnectionLoadCase':
        """CouplingConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6783.CouplingConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_load_case(self) -> '_6784.CouplingHalfLoadCase':
        """CouplingHalfLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6784.CouplingHalfLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_load_case(self) -> '_6785.CouplingLoadCase':
        """CouplingLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6785.CouplingLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_load_case(self) -> '_6786.CVTBeltConnectionLoadCase':
        """CVTBeltConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6786.CVTBeltConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_load_case(self) -> '_6787.CVTLoadCase':
        """CVTLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6787.CVTLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_load_case(self) -> '_6788.CVTPulleyLoadCase':
        """CVTPulleyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6788.CVTPulleyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_load_case(self) -> '_6789.CycloidalAssemblyLoadCase':
        """CycloidalAssemblyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6789.CycloidalAssemblyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_load_case(self) -> '_6790.CycloidalDiscCentralBearingConnectionLoadCase':
        """CycloidalDiscCentralBearingConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6790.CycloidalDiscCentralBearingConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_load_case(self) -> '_6791.CycloidalDiscLoadCase':
        """CycloidalDiscLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6791.CycloidalDiscLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_load_case(self) -> '_6792.CycloidalDiscPlanetaryBearingConnectionLoadCase':
        """CycloidalDiscPlanetaryBearingConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6792.CycloidalDiscPlanetaryBearingConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_load_case(self) -> '_6793.CylindricalGearLoadCase':
        """CylindricalGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6793.CylindricalGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_load_case(self) -> '_6795.CylindricalGearMeshLoadCase':
        """CylindricalGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6795.CylindricalGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_load_case(self) -> '_6797.CylindricalGearSetLoadCase':
        """CylindricalGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6797.CylindricalGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_load_case(self) -> '_6798.CylindricalPlanetGearLoadCase':
        """CylindricalPlanetGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6798.CylindricalPlanetGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_load_case(self) -> '_6801.DatumLoadCase':
        """DatumLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6801.DatumLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_load_case(self) -> '_6815.ExternalCADModelLoadCase':
        """ExternalCADModelLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6815.ExternalCADModelLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_load_case(self) -> '_6816.FaceGearLoadCase':
        """FaceGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6816.FaceGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_load_case(self) -> '_6817.FaceGearMeshLoadCase':
        """FaceGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6817.FaceGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_load_case(self) -> '_6818.FaceGearSetLoadCase':
        """FaceGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6818.FaceGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_load_case(self) -> '_6819.FEPartLoadCase':
        """FEPartLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6819.FEPartLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_load_case(self) -> '_6820.FlexiblePinAssemblyLoadCase':
        """FlexiblePinAssemblyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6820.FlexiblePinAssemblyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_load_case(self) -> '_6822.GearLoadCase':
        """GearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6822.GearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_load_case(self) -> '_6824.GearMeshLoadCase':
        """GearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6824.GearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_load_case(self) -> '_6827.GearSetLoadCase':
        """GearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6827.GearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_load_case(self) -> '_6828.GuideDxfModelLoadCase':
        """GuideDxfModelLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6828.GuideDxfModelLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_load_case(self) -> '_6837.HypoidGearLoadCase':
        """HypoidGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6837.HypoidGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_load_case(self) -> '_6838.HypoidGearMeshLoadCase':
        """HypoidGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6838.HypoidGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_load_case(self) -> '_6839.HypoidGearSetLoadCase':
        """HypoidGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6839.HypoidGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_load_case(self) -> '_6843.InterMountableComponentConnectionLoadCase':
        """InterMountableComponentConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6843.InterMountableComponentConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_load_case(self) -> '_6844.KlingelnbergCycloPalloidConicalGearLoadCase':
        """KlingelnbergCycloPalloidConicalGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6844.KlingelnbergCycloPalloidConicalGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_load_case(self) -> '_6845.KlingelnbergCycloPalloidConicalGearMeshLoadCase':
        """KlingelnbergCycloPalloidConicalGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6845.KlingelnbergCycloPalloidConicalGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_load_case(self) -> '_6846.KlingelnbergCycloPalloidConicalGearSetLoadCase':
        """KlingelnbergCycloPalloidConicalGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6846.KlingelnbergCycloPalloidConicalGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_load_case(self) -> '_6847.KlingelnbergCycloPalloidHypoidGearLoadCase':
        """KlingelnbergCycloPalloidHypoidGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6847.KlingelnbergCycloPalloidHypoidGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_load_case(self) -> '_6848.KlingelnbergCycloPalloidHypoidGearMeshLoadCase':
        """KlingelnbergCycloPalloidHypoidGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6848.KlingelnbergCycloPalloidHypoidGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_load_case(self) -> '_6849.KlingelnbergCycloPalloidHypoidGearSetLoadCase':
        """KlingelnbergCycloPalloidHypoidGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6849.KlingelnbergCycloPalloidHypoidGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_load_case(self) -> '_6850.KlingelnbergCycloPalloidSpiralBevelGearLoadCase':
        """KlingelnbergCycloPalloidSpiralBevelGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6850.KlingelnbergCycloPalloidSpiralBevelGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_load_case(self) -> '_6851.KlingelnbergCycloPalloidSpiralBevelGearMeshLoadCase':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6851.KlingelnbergCycloPalloidSpiralBevelGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_load_case(self) -> '_6852.KlingelnbergCycloPalloidSpiralBevelGearSetLoadCase':
        """KlingelnbergCycloPalloidSpiralBevelGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6852.KlingelnbergCycloPalloidSpiralBevelGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_load_case(self) -> '_6853.MassDiscLoadCase':
        """MassDiscLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6853.MassDiscLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_load_case(self) -> '_6854.MeasurementComponentLoadCase':
        """MeasurementComponentLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6854.MeasurementComponentLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_load_case(self) -> '_6856.MountableComponentLoadCase':
        """MountableComponentLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6856.MountableComponentLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_load_case(self) -> '_6858.OilSealLoadCase':
        """OilSealLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6858.OilSealLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_load_case(self) -> '_6860.PartLoadCase':
        """PartLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6860.PartLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_load_case(self) -> '_6861.PartToPartShearCouplingConnectionLoadCase':
        """PartToPartShearCouplingConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6861.PartToPartShearCouplingConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_load_case(self) -> '_6862.PartToPartShearCouplingHalfLoadCase':
        """PartToPartShearCouplingHalfLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6862.PartToPartShearCouplingHalfLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_load_case(self) -> '_6863.PartToPartShearCouplingLoadCase':
        """PartToPartShearCouplingLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6863.PartToPartShearCouplingLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_load_case(self) -> '_6864.PlanetaryConnectionLoadCase':
        """PlanetaryConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6864.PlanetaryConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_load_case(self) -> '_6865.PlanetaryGearSetLoadCase':
        """PlanetaryGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6865.PlanetaryGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_load_case(self) -> '_6867.PlanetCarrierLoadCase':
        """PlanetCarrierLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6867.PlanetCarrierLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_load_case(self) -> '_6870.PointLoadLoadCase':
        """PointLoadLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6870.PointLoadLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_load_case(self) -> '_6871.PowerLoadLoadCase':
        """PowerLoadLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6871.PowerLoadLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_load_case(self) -> '_6872.PulleyLoadCase':
        """PulleyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6872.PulleyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_load_case(self) -> '_6875.RingPinsLoadCase':
        """RingPinsLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6875.RingPinsLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_load_case(self) -> '_6876.RingPinsToDiscConnectionLoadCase':
        """RingPinsToDiscConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6876.RingPinsToDiscConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_load_case(self) -> '_6877.RollingRingAssemblyLoadCase':
        """RollingRingAssemblyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6877.RollingRingAssemblyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_load_case(self) -> '_6878.RollingRingConnectionLoadCase':
        """RollingRingConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6878.RollingRingConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_load_case(self) -> '_6879.RollingRingLoadCase':
        """RollingRingLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6879.RollingRingLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_load_case(self) -> '_6880.RootAssemblyLoadCase':
        """RootAssemblyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6880.RootAssemblyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_load_case(self) -> '_6881.ShaftHubConnectionLoadCase':
        """ShaftHubConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6881.ShaftHubConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_load_case(self) -> '_6882.ShaftLoadCase':
        """ShaftLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6882.ShaftLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_load_case(self) -> '_6883.ShaftToMountableComponentConnectionLoadCase':
        """ShaftToMountableComponentConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6883.ShaftToMountableComponentConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_load_case(self) -> '_6884.SpecialisedAssemblyLoadCase':
        """SpecialisedAssemblyLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6884.SpecialisedAssemblyLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_load_case(self) -> '_6885.SpiralBevelGearLoadCase':
        """SpiralBevelGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6885.SpiralBevelGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_load_case(self) -> '_6886.SpiralBevelGearMeshLoadCase':
        """SpiralBevelGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6886.SpiralBevelGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_load_case(self) -> '_6887.SpiralBevelGearSetLoadCase':
        """SpiralBevelGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6887.SpiralBevelGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_load_case(self) -> '_6888.SpringDamperConnectionLoadCase':
        """SpringDamperConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6888.SpringDamperConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_load_case(self) -> '_6889.SpringDamperHalfLoadCase':
        """SpringDamperHalfLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6889.SpringDamperHalfLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_load_case(self) -> '_6890.SpringDamperLoadCase':
        """SpringDamperLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6890.SpringDamperLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_load_case(self) -> '_6891.StraightBevelDiffGearLoadCase':
        """StraightBevelDiffGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6891.StraightBevelDiffGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_load_case(self) -> '_6892.StraightBevelDiffGearMeshLoadCase':
        """StraightBevelDiffGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6892.StraightBevelDiffGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_load_case(self) -> '_6893.StraightBevelDiffGearSetLoadCase':
        """StraightBevelDiffGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6893.StraightBevelDiffGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_load_case(self) -> '_6894.StraightBevelGearLoadCase':
        """StraightBevelGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6894.StraightBevelGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_load_case(self) -> '_6895.StraightBevelGearMeshLoadCase':
        """StraightBevelGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6895.StraightBevelGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_load_case(self) -> '_6896.StraightBevelGearSetLoadCase':
        """StraightBevelGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6896.StraightBevelGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_load_case(self) -> '_6897.StraightBevelPlanetGearLoadCase':
        """StraightBevelPlanetGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6897.StraightBevelPlanetGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_load_case(self) -> '_6898.StraightBevelSunGearLoadCase':
        """StraightBevelSunGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6898.StraightBevelSunGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_load_case(self) -> '_6899.SynchroniserHalfLoadCase':
        """SynchroniserHalfLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6899.SynchroniserHalfLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_load_case(self) -> '_6900.SynchroniserLoadCase':
        """SynchroniserLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6900.SynchroniserLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_load_case(self) -> '_6901.SynchroniserPartLoadCase':
        """SynchroniserPartLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6901.SynchroniserPartLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_load_case(self) -> '_6902.SynchroniserSleeveLoadCase':
        """SynchroniserSleeveLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6902.SynchroniserSleeveLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_load_case(self) -> '_6904.TorqueConverterConnectionLoadCase':
        """TorqueConverterConnectionLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6904.TorqueConverterConnectionLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_load_case(self) -> '_6905.TorqueConverterLoadCase':
        """TorqueConverterLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6905.TorqueConverterLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_load_case(self) -> '_6906.TorqueConverterPumpLoadCase':
        """TorqueConverterPumpLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6906.TorqueConverterPumpLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_load_case(self) -> '_6907.TorqueConverterTurbineLoadCase':
        """TorqueConverterTurbineLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6907.TorqueConverterTurbineLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_load_case(self) -> '_6912.UnbalancedMassLoadCase':
        """UnbalancedMassLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6912.UnbalancedMassLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_load_case(self) -> '_6913.VirtualComponentLoadCase':
        """VirtualComponentLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6913.VirtualComponentLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_load_case(self) -> '_6914.WormGearLoadCase':
        """WormGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6914.WormGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_load_case(self) -> '_6915.WormGearMeshLoadCase':
        """WormGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6915.WormGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_load_case(self) -> '_6916.WormGearSetLoadCase':
        """WormGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6916.WormGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_load_case(self) -> '_6917.ZerolBevelGearLoadCase':
        """ZerolBevelGearLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6917.ZerolBevelGearLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_load_case(self) -> '_6918.ZerolBevelGearMeshLoadCase':
        """ZerolBevelGearMeshLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6918.ZerolBevelGearMeshLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_load_case(self) -> '_6919.ZerolBevelGearSetLoadCase':
        """ZerolBevelGearSetLoadCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6919.ZerolBevelGearSetLoadCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetLoadCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_advanced_time_stepping_analysis_for_modulation(self) -> '_6937.AbstractAssemblyAdvancedTimeSteppingAnalysisForModulation':
        """AbstractAssemblyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6937.AbstractAssemblyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_advanced_time_stepping_analysis_for_modulation(self) -> '_6938.AbstractShaftAdvancedTimeSteppingAnalysisForModulation':
        """AbstractShaftAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6938.AbstractShaftAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_advanced_time_stepping_analysis_for_modulation(self) -> '_6939.AbstractShaftOrHousingAdvancedTimeSteppingAnalysisForModulation':
        """AbstractShaftOrHousingAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6939.AbstractShaftOrHousingAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_6940.AbstractShaftToMountableComponentConnectionAdvancedTimeSteppingAnalysisForModulation':
        """AbstractShaftToMountableComponentConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6940.AbstractShaftToMountableComponentConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6944.AGMAGleasonConicalGearAdvancedTimeSteppingAnalysisForModulation':
        """AGMAGleasonConicalGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6944.AGMAGleasonConicalGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_6945.AGMAGleasonConicalGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """AGMAGleasonConicalGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6945.AGMAGleasonConicalGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_6946.AGMAGleasonConicalGearSetAdvancedTimeSteppingAnalysisForModulation':
        """AGMAGleasonConicalGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6946.AGMAGleasonConicalGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_advanced_time_stepping_analysis_for_modulation(self) -> '_6947.AssemblyAdvancedTimeSteppingAnalysisForModulation':
        """AssemblyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6947.AssemblyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_advanced_time_stepping_analysis_for_modulation(self) -> '_6949.BearingAdvancedTimeSteppingAnalysisForModulation':
        """BearingAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6949.BearingAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_6950.BeltConnectionAdvancedTimeSteppingAnalysisForModulation':
        """BeltConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6950.BeltConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_advanced_time_stepping_analysis_for_modulation(self) -> '_6951.BeltDriveAdvancedTimeSteppingAnalysisForModulation':
        """BeltDriveAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6951.BeltDriveAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6952.BevelDifferentialGearAdvancedTimeSteppingAnalysisForModulation':
        """BevelDifferentialGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6952.BevelDifferentialGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_6953.BevelDifferentialGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """BevelDifferentialGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6953.BevelDifferentialGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_6954.BevelDifferentialGearSetAdvancedTimeSteppingAnalysisForModulation':
        """BevelDifferentialGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6954.BevelDifferentialGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6955.BevelDifferentialPlanetGearAdvancedTimeSteppingAnalysisForModulation':
        """BevelDifferentialPlanetGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6955.BevelDifferentialPlanetGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6956.BevelDifferentialSunGearAdvancedTimeSteppingAnalysisForModulation':
        """BevelDifferentialSunGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6956.BevelDifferentialSunGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6957.BevelGearAdvancedTimeSteppingAnalysisForModulation':
        """BevelGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6957.BevelGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_6958.BevelGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """BevelGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6958.BevelGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_6959.BevelGearSetAdvancedTimeSteppingAnalysisForModulation':
        """BevelGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6959.BevelGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_advanced_time_stepping_analysis_for_modulation(self) -> '_6960.BoltAdvancedTimeSteppingAnalysisForModulation':
        """BoltAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6960.BoltAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_advanced_time_stepping_analysis_for_modulation(self) -> '_6961.BoltedJointAdvancedTimeSteppingAnalysisForModulation':
        """BoltedJointAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6961.BoltedJointAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_advanced_time_stepping_analysis_for_modulation(self) -> '_6962.ClutchAdvancedTimeSteppingAnalysisForModulation':
        """ClutchAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6962.ClutchAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_6963.ClutchConnectionAdvancedTimeSteppingAnalysisForModulation':
        """ClutchConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6963.ClutchConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_advanced_time_stepping_analysis_for_modulation(self) -> '_6964.ClutchHalfAdvancedTimeSteppingAnalysisForModulation':
        """ClutchHalfAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6964.ClutchHalfAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_6965.CoaxialConnectionAdvancedTimeSteppingAnalysisForModulation':
        """CoaxialConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6965.CoaxialConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_advanced_time_stepping_analysis_for_modulation(self) -> '_6966.ComponentAdvancedTimeSteppingAnalysisForModulation':
        """ComponentAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6966.ComponentAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_advanced_time_stepping_analysis_for_modulation(self) -> '_6967.ConceptCouplingAdvancedTimeSteppingAnalysisForModulation':
        """ConceptCouplingAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6967.ConceptCouplingAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_6968.ConceptCouplingConnectionAdvancedTimeSteppingAnalysisForModulation':
        """ConceptCouplingConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6968.ConceptCouplingConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_advanced_time_stepping_analysis_for_modulation(self) -> '_6969.ConceptCouplingHalfAdvancedTimeSteppingAnalysisForModulation':
        """ConceptCouplingHalfAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6969.ConceptCouplingHalfAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6970.ConceptGearAdvancedTimeSteppingAnalysisForModulation':
        """ConceptGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6970.ConceptGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_6971.ConceptGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """ConceptGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6971.ConceptGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_6972.ConceptGearSetAdvancedTimeSteppingAnalysisForModulation':
        """ConceptGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6972.ConceptGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6973.ConicalGearAdvancedTimeSteppingAnalysisForModulation':
        """ConicalGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6973.ConicalGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_6974.ConicalGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """ConicalGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6974.ConicalGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_6975.ConicalGearSetAdvancedTimeSteppingAnalysisForModulation':
        """ConicalGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6975.ConicalGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_6976.ConnectionAdvancedTimeSteppingAnalysisForModulation':
        """ConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6976.ConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_advanced_time_stepping_analysis_for_modulation(self) -> '_6977.ConnectorAdvancedTimeSteppingAnalysisForModulation':
        """ConnectorAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6977.ConnectorAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_advanced_time_stepping_analysis_for_modulation(self) -> '_6978.CouplingAdvancedTimeSteppingAnalysisForModulation':
        """CouplingAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6978.CouplingAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_6979.CouplingConnectionAdvancedTimeSteppingAnalysisForModulation':
        """CouplingConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6979.CouplingConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_advanced_time_stepping_analysis_for_modulation(self) -> '_6980.CouplingHalfAdvancedTimeSteppingAnalysisForModulation':
        """CouplingHalfAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6980.CouplingHalfAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_advanced_time_stepping_analysis_for_modulation(self) -> '_6981.CVTAdvancedTimeSteppingAnalysisForModulation':
        """CVTAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6981.CVTAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_6982.CVTBeltConnectionAdvancedTimeSteppingAnalysisForModulation':
        """CVTBeltConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6982.CVTBeltConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_advanced_time_stepping_analysis_for_modulation(self) -> '_6983.CVTPulleyAdvancedTimeSteppingAnalysisForModulation':
        """CVTPulleyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6983.CVTPulleyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_advanced_time_stepping_analysis_for_modulation(self) -> '_6984.CycloidalAssemblyAdvancedTimeSteppingAnalysisForModulation':
        """CycloidalAssemblyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6984.CycloidalAssemblyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_advanced_time_stepping_analysis_for_modulation(self) -> '_6985.CycloidalDiscAdvancedTimeSteppingAnalysisForModulation':
        """CycloidalDiscAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6985.CycloidalDiscAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_6986.CycloidalDiscCentralBearingConnectionAdvancedTimeSteppingAnalysisForModulation':
        """CycloidalDiscCentralBearingConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6986.CycloidalDiscCentralBearingConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_6987.CycloidalDiscPlanetaryBearingConnectionAdvancedTimeSteppingAnalysisForModulation':
        """CycloidalDiscPlanetaryBearingConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6987.CycloidalDiscPlanetaryBearingConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6988.CylindricalGearAdvancedTimeSteppingAnalysisForModulation':
        """CylindricalGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6988.CylindricalGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_6989.CylindricalGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """CylindricalGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6989.CylindricalGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_6990.CylindricalGearSetAdvancedTimeSteppingAnalysisForModulation':
        """CylindricalGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6990.CylindricalGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6991.CylindricalPlanetGearAdvancedTimeSteppingAnalysisForModulation':
        """CylindricalPlanetGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6991.CylindricalPlanetGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_advanced_time_stepping_analysis_for_modulation(self) -> '_6992.DatumAdvancedTimeSteppingAnalysisForModulation':
        """DatumAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6992.DatumAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_advanced_time_stepping_analysis_for_modulation(self) -> '_6993.ExternalCADModelAdvancedTimeSteppingAnalysisForModulation':
        """ExternalCADModelAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6993.ExternalCADModelAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6994.FaceGearAdvancedTimeSteppingAnalysisForModulation':
        """FaceGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6994.FaceGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_6995.FaceGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """FaceGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6995.FaceGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_6996.FaceGearSetAdvancedTimeSteppingAnalysisForModulation':
        """FaceGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6996.FaceGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_advanced_time_stepping_analysis_for_modulation(self) -> '_6997.FEPartAdvancedTimeSteppingAnalysisForModulation':
        """FEPartAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6997.FEPartAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_advanced_time_stepping_analysis_for_modulation(self) -> '_6998.FlexiblePinAssemblyAdvancedTimeSteppingAnalysisForModulation':
        """FlexiblePinAssemblyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6998.FlexiblePinAssemblyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_6999.GearAdvancedTimeSteppingAnalysisForModulation':
        """GearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _6999.GearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_7000.GearMeshAdvancedTimeSteppingAnalysisForModulation':
        """GearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7000.GearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7001.GearSetAdvancedTimeSteppingAnalysisForModulation':
        """GearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7001.GearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_advanced_time_stepping_analysis_for_modulation(self) -> '_7002.GuideDxfModelAdvancedTimeSteppingAnalysisForModulation':
        """GuideDxfModelAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7002.GuideDxfModelAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7004.HypoidGearAdvancedTimeSteppingAnalysisForModulation':
        """HypoidGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7004.HypoidGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_7005.HypoidGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """HypoidGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7005.HypoidGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7006.HypoidGearSetAdvancedTimeSteppingAnalysisForModulation':
        """HypoidGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7006.HypoidGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_7007.InterMountableComponentConnectionAdvancedTimeSteppingAnalysisForModulation':
        """InterMountableComponentConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7007.InterMountableComponentConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7008.KlingelnbergCycloPalloidConicalGearAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidConicalGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7008.KlingelnbergCycloPalloidConicalGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_7009.KlingelnbergCycloPalloidConicalGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidConicalGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7009.KlingelnbergCycloPalloidConicalGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7010.KlingelnbergCycloPalloidConicalGearSetAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidConicalGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7010.KlingelnbergCycloPalloidConicalGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7011.KlingelnbergCycloPalloidHypoidGearAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidHypoidGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7011.KlingelnbergCycloPalloidHypoidGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_7012.KlingelnbergCycloPalloidHypoidGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidHypoidGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7012.KlingelnbergCycloPalloidHypoidGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7013.KlingelnbergCycloPalloidHypoidGearSetAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidHypoidGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7013.KlingelnbergCycloPalloidHypoidGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7014.KlingelnbergCycloPalloidSpiralBevelGearAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidSpiralBevelGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7014.KlingelnbergCycloPalloidSpiralBevelGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_7015.KlingelnbergCycloPalloidSpiralBevelGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7015.KlingelnbergCycloPalloidSpiralBevelGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7016.KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7016.KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_advanced_time_stepping_analysis_for_modulation(self) -> '_7017.MassDiscAdvancedTimeSteppingAnalysisForModulation':
        """MassDiscAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7017.MassDiscAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_advanced_time_stepping_analysis_for_modulation(self) -> '_7018.MeasurementComponentAdvancedTimeSteppingAnalysisForModulation':
        """MeasurementComponentAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7018.MeasurementComponentAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_advanced_time_stepping_analysis_for_modulation(self) -> '_7019.MountableComponentAdvancedTimeSteppingAnalysisForModulation':
        """MountableComponentAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7019.MountableComponentAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_advanced_time_stepping_analysis_for_modulation(self) -> '_7020.OilSealAdvancedTimeSteppingAnalysisForModulation':
        """OilSealAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7020.OilSealAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_advanced_time_stepping_analysis_for_modulation(self) -> '_7021.PartAdvancedTimeSteppingAnalysisForModulation':
        """PartAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7021.PartAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_advanced_time_stepping_analysis_for_modulation(self) -> '_7022.PartToPartShearCouplingAdvancedTimeSteppingAnalysisForModulation':
        """PartToPartShearCouplingAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7022.PartToPartShearCouplingAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_7023.PartToPartShearCouplingConnectionAdvancedTimeSteppingAnalysisForModulation':
        """PartToPartShearCouplingConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7023.PartToPartShearCouplingConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_advanced_time_stepping_analysis_for_modulation(self) -> '_7024.PartToPartShearCouplingHalfAdvancedTimeSteppingAnalysisForModulation':
        """PartToPartShearCouplingHalfAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7024.PartToPartShearCouplingHalfAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_7025.PlanetaryConnectionAdvancedTimeSteppingAnalysisForModulation':
        """PlanetaryConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7025.PlanetaryConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7026.PlanetaryGearSetAdvancedTimeSteppingAnalysisForModulation':
        """PlanetaryGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7026.PlanetaryGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_advanced_time_stepping_analysis_for_modulation(self) -> '_7027.PlanetCarrierAdvancedTimeSteppingAnalysisForModulation':
        """PlanetCarrierAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7027.PlanetCarrierAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_advanced_time_stepping_analysis_for_modulation(self) -> '_7028.PointLoadAdvancedTimeSteppingAnalysisForModulation':
        """PointLoadAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7028.PointLoadAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_advanced_time_stepping_analysis_for_modulation(self) -> '_7029.PowerLoadAdvancedTimeSteppingAnalysisForModulation':
        """PowerLoadAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7029.PowerLoadAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_advanced_time_stepping_analysis_for_modulation(self) -> '_7030.PulleyAdvancedTimeSteppingAnalysisForModulation':
        """PulleyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7030.PulleyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_advanced_time_stepping_analysis_for_modulation(self) -> '_7031.RingPinsAdvancedTimeSteppingAnalysisForModulation':
        """RingPinsAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7031.RingPinsAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_7032.RingPinsToDiscConnectionAdvancedTimeSteppingAnalysisForModulation':
        """RingPinsToDiscConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7032.RingPinsToDiscConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_advanced_time_stepping_analysis_for_modulation(self) -> '_7033.RollingRingAdvancedTimeSteppingAnalysisForModulation':
        """RollingRingAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7033.RollingRingAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_advanced_time_stepping_analysis_for_modulation(self) -> '_7034.RollingRingAssemblyAdvancedTimeSteppingAnalysisForModulation':
        """RollingRingAssemblyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7034.RollingRingAssemblyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_7035.RollingRingConnectionAdvancedTimeSteppingAnalysisForModulation':
        """RollingRingConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7035.RollingRingConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_advanced_time_stepping_analysis_for_modulation(self) -> '_7036.RootAssemblyAdvancedTimeSteppingAnalysisForModulation':
        """RootAssemblyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7036.RootAssemblyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_advanced_time_stepping_analysis_for_modulation(self) -> '_7037.ShaftAdvancedTimeSteppingAnalysisForModulation':
        """ShaftAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7037.ShaftAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_7038.ShaftHubConnectionAdvancedTimeSteppingAnalysisForModulation':
        """ShaftHubConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7038.ShaftHubConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_7039.ShaftToMountableComponentConnectionAdvancedTimeSteppingAnalysisForModulation':
        """ShaftToMountableComponentConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7039.ShaftToMountableComponentConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_advanced_time_stepping_analysis_for_modulation(self) -> '_7040.SpecialisedAssemblyAdvancedTimeSteppingAnalysisForModulation':
        """SpecialisedAssemblyAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7040.SpecialisedAssemblyAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7041.SpiralBevelGearAdvancedTimeSteppingAnalysisForModulation':
        """SpiralBevelGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7041.SpiralBevelGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_7042.SpiralBevelGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """SpiralBevelGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7042.SpiralBevelGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7043.SpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation':
        """SpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7043.SpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_advanced_time_stepping_analysis_for_modulation(self) -> '_7044.SpringDamperAdvancedTimeSteppingAnalysisForModulation':
        """SpringDamperAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7044.SpringDamperAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_7045.SpringDamperConnectionAdvancedTimeSteppingAnalysisForModulation':
        """SpringDamperConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7045.SpringDamperConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_advanced_time_stepping_analysis_for_modulation(self) -> '_7046.SpringDamperHalfAdvancedTimeSteppingAnalysisForModulation':
        """SpringDamperHalfAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7046.SpringDamperHalfAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7047.StraightBevelDiffGearAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelDiffGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7047.StraightBevelDiffGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_7048.StraightBevelDiffGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelDiffGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7048.StraightBevelDiffGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7049.StraightBevelDiffGearSetAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelDiffGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7049.StraightBevelDiffGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7050.StraightBevelGearAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7050.StraightBevelGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_7051.StraightBevelGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7051.StraightBevelGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7052.StraightBevelGearSetAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7052.StraightBevelGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7053.StraightBevelPlanetGearAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelPlanetGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7053.StraightBevelPlanetGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7054.StraightBevelSunGearAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelSunGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7054.StraightBevelSunGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_advanced_time_stepping_analysis_for_modulation(self) -> '_7055.SynchroniserAdvancedTimeSteppingAnalysisForModulation':
        """SynchroniserAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7055.SynchroniserAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_advanced_time_stepping_analysis_for_modulation(self) -> '_7056.SynchroniserHalfAdvancedTimeSteppingAnalysisForModulation':
        """SynchroniserHalfAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7056.SynchroniserHalfAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_advanced_time_stepping_analysis_for_modulation(self) -> '_7057.SynchroniserPartAdvancedTimeSteppingAnalysisForModulation':
        """SynchroniserPartAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7057.SynchroniserPartAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_advanced_time_stepping_analysis_for_modulation(self) -> '_7058.SynchroniserSleeveAdvancedTimeSteppingAnalysisForModulation':
        """SynchroniserSleeveAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7058.SynchroniserSleeveAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_advanced_time_stepping_analysis_for_modulation(self) -> '_7059.TorqueConverterAdvancedTimeSteppingAnalysisForModulation':
        """TorqueConverterAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7059.TorqueConverterAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_advanced_time_stepping_analysis_for_modulation(self) -> '_7060.TorqueConverterConnectionAdvancedTimeSteppingAnalysisForModulation':
        """TorqueConverterConnectionAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7060.TorqueConverterConnectionAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_advanced_time_stepping_analysis_for_modulation(self) -> '_7061.TorqueConverterPumpAdvancedTimeSteppingAnalysisForModulation':
        """TorqueConverterPumpAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7061.TorqueConverterPumpAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_advanced_time_stepping_analysis_for_modulation(self) -> '_7062.TorqueConverterTurbineAdvancedTimeSteppingAnalysisForModulation':
        """TorqueConverterTurbineAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7062.TorqueConverterTurbineAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_advanced_time_stepping_analysis_for_modulation(self) -> '_7063.UnbalancedMassAdvancedTimeSteppingAnalysisForModulation':
        """UnbalancedMassAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7063.UnbalancedMassAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_advanced_time_stepping_analysis_for_modulation(self) -> '_7064.VirtualComponentAdvancedTimeSteppingAnalysisForModulation':
        """VirtualComponentAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7064.VirtualComponentAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7065.WormGearAdvancedTimeSteppingAnalysisForModulation':
        """WormGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7065.WormGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_7066.WormGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """WormGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7066.WormGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7067.WormGearSetAdvancedTimeSteppingAnalysisForModulation':
        """WormGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7067.WormGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_advanced_time_stepping_analysis_for_modulation(self) -> '_7068.ZerolBevelGearAdvancedTimeSteppingAnalysisForModulation':
        """ZerolBevelGearAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7068.ZerolBevelGearAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_advanced_time_stepping_analysis_for_modulation(self) -> '_7069.ZerolBevelGearMeshAdvancedTimeSteppingAnalysisForModulation':
        """ZerolBevelGearMeshAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7069.ZerolBevelGearMeshAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_advanced_time_stepping_analysis_for_modulation(self) -> '_7070.ZerolBevelGearSetAdvancedTimeSteppingAnalysisForModulation':
        """ZerolBevelGearSetAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7070.ZerolBevelGearSetAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7071.AbstractAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation':
        """AbstractAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7071.AbstractAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7072.AbstractShaftCompoundAdvancedTimeSteppingAnalysisForModulation':
        """AbstractShaftCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7072.AbstractShaftCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7073.AbstractShaftOrHousingCompoundAdvancedTimeSteppingAnalysisForModulation':
        """AbstractShaftOrHousingCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7073.AbstractShaftOrHousingCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7074.AbstractShaftToMountableComponentConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """AbstractShaftToMountableComponentConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7074.AbstractShaftToMountableComponentConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7075.AGMAGleasonConicalGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """AGMAGleasonConicalGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7075.AGMAGleasonConicalGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7076.AGMAGleasonConicalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """AGMAGleasonConicalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7076.AGMAGleasonConicalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7077.AGMAGleasonConicalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """AGMAGleasonConicalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7077.AGMAGleasonConicalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7078.AssemblyCompoundAdvancedTimeSteppingAnalysisForModulation':
        """AssemblyCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7078.AssemblyCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7079.BearingCompoundAdvancedTimeSteppingAnalysisForModulation':
        """BearingCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7079.BearingCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7080.BeltConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """BeltConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7080.BeltConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7081.BeltDriveCompoundAdvancedTimeSteppingAnalysisForModulation':
        """BeltDriveCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7081.BeltDriveCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7082.BevelDifferentialGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """BevelDifferentialGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7082.BevelDifferentialGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7083.BevelDifferentialGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """BevelDifferentialGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7083.BevelDifferentialGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7084.BevelDifferentialGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """BevelDifferentialGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7084.BevelDifferentialGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7085.BevelDifferentialPlanetGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """BevelDifferentialPlanetGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7085.BevelDifferentialPlanetGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7086.BevelDifferentialSunGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """BevelDifferentialSunGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7086.BevelDifferentialSunGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7087.BevelGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """BevelGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7087.BevelGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7088.BevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """BevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7088.BevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7089.BevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """BevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7089.BevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7090.BoltCompoundAdvancedTimeSteppingAnalysisForModulation':
        """BoltCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7090.BoltCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7091.BoltedJointCompoundAdvancedTimeSteppingAnalysisForModulation':
        """BoltedJointCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7091.BoltedJointCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7092.ClutchCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ClutchCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7092.ClutchCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7093.ClutchConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ClutchConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7093.ClutchConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7094.ClutchHalfCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ClutchHalfCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7094.ClutchHalfCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7095.CoaxialConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """CoaxialConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7095.CoaxialConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7096.ComponentCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ComponentCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7096.ComponentCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7097.ConceptCouplingCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ConceptCouplingCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7097.ConceptCouplingCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7098.ConceptCouplingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ConceptCouplingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7098.ConceptCouplingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7099.ConceptCouplingHalfCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ConceptCouplingHalfCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7099.ConceptCouplingHalfCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7100.ConceptGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ConceptGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7100.ConceptGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7101.ConceptGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ConceptGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7101.ConceptGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7102.ConceptGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ConceptGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7102.ConceptGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7103.ConicalGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ConicalGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7103.ConicalGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7104.ConicalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ConicalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7104.ConicalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7105.ConicalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ConicalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7105.ConicalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7106.ConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7106.ConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7107.ConnectorCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ConnectorCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7107.ConnectorCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7108.CouplingCompoundAdvancedTimeSteppingAnalysisForModulation':
        """CouplingCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7108.CouplingCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7109.CouplingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """CouplingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7109.CouplingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7110.CouplingHalfCompoundAdvancedTimeSteppingAnalysisForModulation':
        """CouplingHalfCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7110.CouplingHalfCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7111.CVTBeltConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """CVTBeltConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7111.CVTBeltConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7112.CVTCompoundAdvancedTimeSteppingAnalysisForModulation':
        """CVTCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7112.CVTCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7113.CVTPulleyCompoundAdvancedTimeSteppingAnalysisForModulation':
        """CVTPulleyCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7113.CVTPulleyCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7114.CycloidalAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation':
        """CycloidalAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7114.CycloidalAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7115.CycloidalDiscCentralBearingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """CycloidalDiscCentralBearingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7115.CycloidalDiscCentralBearingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7116.CycloidalDiscCompoundAdvancedTimeSteppingAnalysisForModulation':
        """CycloidalDiscCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7116.CycloidalDiscCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7117.CycloidalDiscPlanetaryBearingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """CycloidalDiscPlanetaryBearingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7117.CycloidalDiscPlanetaryBearingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7118.CylindricalGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """CylindricalGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7118.CylindricalGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7119.CylindricalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """CylindricalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7119.CylindricalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7120.CylindricalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """CylindricalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7120.CylindricalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7121.CylindricalPlanetGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """CylindricalPlanetGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7121.CylindricalPlanetGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7122.DatumCompoundAdvancedTimeSteppingAnalysisForModulation':
        """DatumCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7122.DatumCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7123.ExternalCADModelCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ExternalCADModelCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7123.ExternalCADModelCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7124.FaceGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """FaceGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7124.FaceGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7125.FaceGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """FaceGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7125.FaceGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7126.FaceGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """FaceGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7126.FaceGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7127.FEPartCompoundAdvancedTimeSteppingAnalysisForModulation':
        """FEPartCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7127.FEPartCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7128.FlexiblePinAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation':
        """FlexiblePinAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7128.FlexiblePinAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7129.GearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """GearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7129.GearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7130.GearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """GearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7130.GearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7131.GearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """GearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7131.GearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7132.GuideDxfModelCompoundAdvancedTimeSteppingAnalysisForModulation':
        """GuideDxfModelCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7132.GuideDxfModelCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7133.HypoidGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """HypoidGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7133.HypoidGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7134.HypoidGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """HypoidGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7134.HypoidGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7135.HypoidGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """HypoidGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7135.HypoidGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7136.InterMountableComponentConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """InterMountableComponentConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7136.InterMountableComponentConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7137.KlingelnbergCycloPalloidConicalGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidConicalGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7137.KlingelnbergCycloPalloidConicalGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7138.KlingelnbergCycloPalloidConicalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7138.KlingelnbergCycloPalloidConicalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7139.KlingelnbergCycloPalloidConicalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidConicalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7139.KlingelnbergCycloPalloidConicalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7140.KlingelnbergCycloPalloidHypoidGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidHypoidGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7140.KlingelnbergCycloPalloidHypoidGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7141.KlingelnbergCycloPalloidHypoidGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7141.KlingelnbergCycloPalloidHypoidGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7142.KlingelnbergCycloPalloidHypoidGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7142.KlingelnbergCycloPalloidHypoidGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7143.KlingelnbergCycloPalloidSpiralBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7143.KlingelnbergCycloPalloidSpiralBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7144.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7144.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7145.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7145.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7146.MassDiscCompoundAdvancedTimeSteppingAnalysisForModulation':
        """MassDiscCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7146.MassDiscCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7147.MeasurementComponentCompoundAdvancedTimeSteppingAnalysisForModulation':
        """MeasurementComponentCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7147.MeasurementComponentCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7148.MountableComponentCompoundAdvancedTimeSteppingAnalysisForModulation':
        """MountableComponentCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7148.MountableComponentCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7149.OilSealCompoundAdvancedTimeSteppingAnalysisForModulation':
        """OilSealCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7149.OilSealCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7150.PartCompoundAdvancedTimeSteppingAnalysisForModulation':
        """PartCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7150.PartCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7151.PartToPartShearCouplingCompoundAdvancedTimeSteppingAnalysisForModulation':
        """PartToPartShearCouplingCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7151.PartToPartShearCouplingCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7152.PartToPartShearCouplingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """PartToPartShearCouplingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7152.PartToPartShearCouplingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7153.PartToPartShearCouplingHalfCompoundAdvancedTimeSteppingAnalysisForModulation':
        """PartToPartShearCouplingHalfCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7153.PartToPartShearCouplingHalfCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7154.PlanetaryConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """PlanetaryConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7154.PlanetaryConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7155.PlanetaryGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """PlanetaryGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7155.PlanetaryGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7156.PlanetCarrierCompoundAdvancedTimeSteppingAnalysisForModulation':
        """PlanetCarrierCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7156.PlanetCarrierCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7157.PointLoadCompoundAdvancedTimeSteppingAnalysisForModulation':
        """PointLoadCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7157.PointLoadCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7158.PowerLoadCompoundAdvancedTimeSteppingAnalysisForModulation':
        """PowerLoadCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7158.PowerLoadCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7159.PulleyCompoundAdvancedTimeSteppingAnalysisForModulation':
        """PulleyCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7159.PulleyCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7160.RingPinsCompoundAdvancedTimeSteppingAnalysisForModulation':
        """RingPinsCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7160.RingPinsCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7161.RingPinsToDiscConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """RingPinsToDiscConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7161.RingPinsToDiscConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7162.RollingRingAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation':
        """RollingRingAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7162.RollingRingAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7163.RollingRingCompoundAdvancedTimeSteppingAnalysisForModulation':
        """RollingRingCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7163.RollingRingCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7164.RollingRingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """RollingRingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7164.RollingRingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7165.RootAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation':
        """RootAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7165.RootAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7166.ShaftCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ShaftCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7166.ShaftCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7167.ShaftHubConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ShaftHubConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7167.ShaftHubConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7168.ShaftToMountableComponentConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ShaftToMountableComponentConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7168.ShaftToMountableComponentConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7169.SpecialisedAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation':
        """SpecialisedAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7169.SpecialisedAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7170.SpiralBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """SpiralBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7170.SpiralBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7171.SpiralBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """SpiralBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7171.SpiralBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7172.SpiralBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """SpiralBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7172.SpiralBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7173.SpringDamperCompoundAdvancedTimeSteppingAnalysisForModulation':
        """SpringDamperCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7173.SpringDamperCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7174.SpringDamperConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """SpringDamperConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7174.SpringDamperConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7175.SpringDamperHalfCompoundAdvancedTimeSteppingAnalysisForModulation':
        """SpringDamperHalfCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7175.SpringDamperHalfCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7176.StraightBevelDiffGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelDiffGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7176.StraightBevelDiffGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7177.StraightBevelDiffGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelDiffGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7177.StraightBevelDiffGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7178.StraightBevelDiffGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelDiffGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7178.StraightBevelDiffGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7179.StraightBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7179.StraightBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7180.StraightBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7180.StraightBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7181.StraightBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7181.StraightBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7182.StraightBevelPlanetGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelPlanetGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7182.StraightBevelPlanetGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7183.StraightBevelSunGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """StraightBevelSunGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7183.StraightBevelSunGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7184.SynchroniserCompoundAdvancedTimeSteppingAnalysisForModulation':
        """SynchroniserCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7184.SynchroniserCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7185.SynchroniserHalfCompoundAdvancedTimeSteppingAnalysisForModulation':
        """SynchroniserHalfCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7185.SynchroniserHalfCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7186.SynchroniserPartCompoundAdvancedTimeSteppingAnalysisForModulation':
        """SynchroniserPartCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7186.SynchroniserPartCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7187.SynchroniserSleeveCompoundAdvancedTimeSteppingAnalysisForModulation':
        """SynchroniserSleeveCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7187.SynchroniserSleeveCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7188.TorqueConverterCompoundAdvancedTimeSteppingAnalysisForModulation':
        """TorqueConverterCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7188.TorqueConverterCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7189.TorqueConverterConnectionCompoundAdvancedTimeSteppingAnalysisForModulation':
        """TorqueConverterConnectionCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7189.TorqueConverterConnectionCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7190.TorqueConverterPumpCompoundAdvancedTimeSteppingAnalysisForModulation':
        """TorqueConverterPumpCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7190.TorqueConverterPumpCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7191.TorqueConverterTurbineCompoundAdvancedTimeSteppingAnalysisForModulation':
        """TorqueConverterTurbineCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7191.TorqueConverterTurbineCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7192.UnbalancedMassCompoundAdvancedTimeSteppingAnalysisForModulation':
        """UnbalancedMassCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7192.UnbalancedMassCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7193.VirtualComponentCompoundAdvancedTimeSteppingAnalysisForModulation':
        """VirtualComponentCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7193.VirtualComponentCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7194.WormGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """WormGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7194.WormGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7195.WormGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """WormGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7195.WormGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7196.WormGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """WormGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7196.WormGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7197.ZerolBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ZerolBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7197.ZerolBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7198.ZerolBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ZerolBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7198.ZerolBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_advanced_time_stepping_analysis_for_modulation(self) -> '_7199.ZerolBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation':
        """ZerolBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7199.ZerolBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundAdvancedTimeSteppingAnalysisForModulation. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_advanced_system_deflection(self) -> '_7200.AbstractAssemblyAdvancedSystemDeflection':
        """AbstractAssemblyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7200.AbstractAssemblyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_advanced_system_deflection(self) -> '_7201.AbstractShaftAdvancedSystemDeflection':
        """AbstractShaftAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7201.AbstractShaftAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_advanced_system_deflection(self) -> '_7202.AbstractShaftOrHousingAdvancedSystemDeflection':
        """AbstractShaftOrHousingAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7202.AbstractShaftOrHousingAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_advanced_system_deflection(self) -> '_7203.AbstractShaftToMountableComponentConnectionAdvancedSystemDeflection':
        """AbstractShaftToMountableComponentConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7203.AbstractShaftToMountableComponentConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_advanced_system_deflection(self) -> '_7207.AGMAGleasonConicalGearAdvancedSystemDeflection':
        """AGMAGleasonConicalGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7207.AGMAGleasonConicalGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_advanced_system_deflection(self) -> '_7208.AGMAGleasonConicalGearMeshAdvancedSystemDeflection':
        """AGMAGleasonConicalGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7208.AGMAGleasonConicalGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_advanced_system_deflection(self) -> '_7209.AGMAGleasonConicalGearSetAdvancedSystemDeflection':
        """AGMAGleasonConicalGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7209.AGMAGleasonConicalGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_advanced_system_deflection(self) -> '_7210.AssemblyAdvancedSystemDeflection':
        """AssemblyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7210.AssemblyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_advanced_system_deflection(self) -> '_7211.BearingAdvancedSystemDeflection':
        """BearingAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7211.BearingAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_advanced_system_deflection(self) -> '_7212.BeltConnectionAdvancedSystemDeflection':
        """BeltConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7212.BeltConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_advanced_system_deflection(self) -> '_7213.BeltDriveAdvancedSystemDeflection':
        """BeltDriveAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7213.BeltDriveAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_advanced_system_deflection(self) -> '_7214.BevelDifferentialGearAdvancedSystemDeflection':
        """BevelDifferentialGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7214.BevelDifferentialGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_advanced_system_deflection(self) -> '_7215.BevelDifferentialGearMeshAdvancedSystemDeflection':
        """BevelDifferentialGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7215.BevelDifferentialGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_advanced_system_deflection(self) -> '_7216.BevelDifferentialGearSetAdvancedSystemDeflection':
        """BevelDifferentialGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7216.BevelDifferentialGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_advanced_system_deflection(self) -> '_7217.BevelDifferentialPlanetGearAdvancedSystemDeflection':
        """BevelDifferentialPlanetGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7217.BevelDifferentialPlanetGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_advanced_system_deflection(self) -> '_7218.BevelDifferentialSunGearAdvancedSystemDeflection':
        """BevelDifferentialSunGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7218.BevelDifferentialSunGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_advanced_system_deflection(self) -> '_7219.BevelGearAdvancedSystemDeflection':
        """BevelGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7219.BevelGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_advanced_system_deflection(self) -> '_7220.BevelGearMeshAdvancedSystemDeflection':
        """BevelGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7220.BevelGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_advanced_system_deflection(self) -> '_7221.BevelGearSetAdvancedSystemDeflection':
        """BevelGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7221.BevelGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_advanced_system_deflection(self) -> '_7222.BoltAdvancedSystemDeflection':
        """BoltAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7222.BoltAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_advanced_system_deflection(self) -> '_7223.BoltedJointAdvancedSystemDeflection':
        """BoltedJointAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7223.BoltedJointAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_advanced_system_deflection(self) -> '_7224.ClutchAdvancedSystemDeflection':
        """ClutchAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7224.ClutchAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_advanced_system_deflection(self) -> '_7225.ClutchConnectionAdvancedSystemDeflection':
        """ClutchConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7225.ClutchConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_advanced_system_deflection(self) -> '_7226.ClutchHalfAdvancedSystemDeflection':
        """ClutchHalfAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7226.ClutchHalfAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_advanced_system_deflection(self) -> '_7227.CoaxialConnectionAdvancedSystemDeflection':
        """CoaxialConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7227.CoaxialConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_advanced_system_deflection(self) -> '_7228.ComponentAdvancedSystemDeflection':
        """ComponentAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7228.ComponentAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_advanced_system_deflection(self) -> '_7229.ConceptCouplingAdvancedSystemDeflection':
        """ConceptCouplingAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7229.ConceptCouplingAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_advanced_system_deflection(self) -> '_7230.ConceptCouplingConnectionAdvancedSystemDeflection':
        """ConceptCouplingConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7230.ConceptCouplingConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_advanced_system_deflection(self) -> '_7231.ConceptCouplingHalfAdvancedSystemDeflection':
        """ConceptCouplingHalfAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7231.ConceptCouplingHalfAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_advanced_system_deflection(self) -> '_7232.ConceptGearAdvancedSystemDeflection':
        """ConceptGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7232.ConceptGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_advanced_system_deflection(self) -> '_7233.ConceptGearMeshAdvancedSystemDeflection':
        """ConceptGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7233.ConceptGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_advanced_system_deflection(self) -> '_7234.ConceptGearSetAdvancedSystemDeflection':
        """ConceptGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7234.ConceptGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_advanced_system_deflection(self) -> '_7235.ConicalGearAdvancedSystemDeflection':
        """ConicalGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7235.ConicalGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_advanced_system_deflection(self) -> '_7236.ConicalGearMeshAdvancedSystemDeflection':
        """ConicalGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7236.ConicalGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_advanced_system_deflection(self) -> '_7237.ConicalGearSetAdvancedSystemDeflection':
        """ConicalGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7237.ConicalGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_advanced_system_deflection(self) -> '_7238.ConnectionAdvancedSystemDeflection':
        """ConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7238.ConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_advanced_system_deflection(self) -> '_7239.ConnectorAdvancedSystemDeflection':
        """ConnectorAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7239.ConnectorAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_advanced_system_deflection(self) -> '_7241.CouplingAdvancedSystemDeflection':
        """CouplingAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7241.CouplingAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_advanced_system_deflection(self) -> '_7242.CouplingConnectionAdvancedSystemDeflection':
        """CouplingConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7242.CouplingConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_advanced_system_deflection(self) -> '_7243.CouplingHalfAdvancedSystemDeflection':
        """CouplingHalfAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7243.CouplingHalfAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_advanced_system_deflection(self) -> '_7244.CVTAdvancedSystemDeflection':
        """CVTAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7244.CVTAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_advanced_system_deflection(self) -> '_7245.CVTBeltConnectionAdvancedSystemDeflection':
        """CVTBeltConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7245.CVTBeltConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_advanced_system_deflection(self) -> '_7246.CVTPulleyAdvancedSystemDeflection':
        """CVTPulleyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7246.CVTPulleyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_advanced_system_deflection(self) -> '_7247.CycloidalAssemblyAdvancedSystemDeflection':
        """CycloidalAssemblyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7247.CycloidalAssemblyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_advanced_system_deflection(self) -> '_7248.CycloidalDiscAdvancedSystemDeflection':
        """CycloidalDiscAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7248.CycloidalDiscAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_advanced_system_deflection(self) -> '_7249.CycloidalDiscCentralBearingConnectionAdvancedSystemDeflection':
        """CycloidalDiscCentralBearingConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7249.CycloidalDiscCentralBearingConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_advanced_system_deflection(self) -> '_7250.CycloidalDiscPlanetaryBearingConnectionAdvancedSystemDeflection':
        """CycloidalDiscPlanetaryBearingConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7250.CycloidalDiscPlanetaryBearingConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_advanced_system_deflection(self) -> '_7251.CylindricalGearAdvancedSystemDeflection':
        """CylindricalGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7251.CylindricalGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_advanced_system_deflection(self) -> '_7252.CylindricalGearMeshAdvancedSystemDeflection':
        """CylindricalGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7252.CylindricalGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_advanced_system_deflection(self) -> '_7253.CylindricalGearSetAdvancedSystemDeflection':
        """CylindricalGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7253.CylindricalGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_advanced_system_deflection(self) -> '_7255.CylindricalPlanetGearAdvancedSystemDeflection':
        """CylindricalPlanetGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7255.CylindricalPlanetGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_advanced_system_deflection(self) -> '_7256.DatumAdvancedSystemDeflection':
        """DatumAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7256.DatumAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_advanced_system_deflection(self) -> '_7257.ExternalCADModelAdvancedSystemDeflection':
        """ExternalCADModelAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7257.ExternalCADModelAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_advanced_system_deflection(self) -> '_7258.FaceGearAdvancedSystemDeflection':
        """FaceGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7258.FaceGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_advanced_system_deflection(self) -> '_7259.FaceGearMeshAdvancedSystemDeflection':
        """FaceGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7259.FaceGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_advanced_system_deflection(self) -> '_7260.FaceGearSetAdvancedSystemDeflection':
        """FaceGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7260.FaceGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_advanced_system_deflection(self) -> '_7261.FEPartAdvancedSystemDeflection':
        """FEPartAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7261.FEPartAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_advanced_system_deflection(self) -> '_7262.FlexiblePinAssemblyAdvancedSystemDeflection':
        """FlexiblePinAssemblyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7262.FlexiblePinAssemblyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_advanced_system_deflection(self) -> '_7263.GearAdvancedSystemDeflection':
        """GearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7263.GearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_advanced_system_deflection(self) -> '_7264.GearMeshAdvancedSystemDeflection':
        """GearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7264.GearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_advanced_system_deflection(self) -> '_7265.GearSetAdvancedSystemDeflection':
        """GearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7265.GearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_advanced_system_deflection(self) -> '_7266.GuideDxfModelAdvancedSystemDeflection':
        """GuideDxfModelAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7266.GuideDxfModelAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_advanced_system_deflection(self) -> '_7267.HypoidGearAdvancedSystemDeflection':
        """HypoidGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7267.HypoidGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_advanced_system_deflection(self) -> '_7268.HypoidGearMeshAdvancedSystemDeflection':
        """HypoidGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7268.HypoidGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_advanced_system_deflection(self) -> '_7269.HypoidGearSetAdvancedSystemDeflection':
        """HypoidGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7269.HypoidGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_advanced_system_deflection(self) -> '_7270.InterMountableComponentConnectionAdvancedSystemDeflection':
        """InterMountableComponentConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7270.InterMountableComponentConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_advanced_system_deflection(self) -> '_7271.KlingelnbergCycloPalloidConicalGearAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7271.KlingelnbergCycloPalloidConicalGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_advanced_system_deflection(self) -> '_7272.KlingelnbergCycloPalloidConicalGearMeshAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7272.KlingelnbergCycloPalloidConicalGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_advanced_system_deflection(self) -> '_7273.KlingelnbergCycloPalloidConicalGearSetAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7273.KlingelnbergCycloPalloidConicalGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_advanced_system_deflection(self) -> '_7274.KlingelnbergCycloPalloidHypoidGearAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7274.KlingelnbergCycloPalloidHypoidGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_advanced_system_deflection(self) -> '_7275.KlingelnbergCycloPalloidHypoidGearMeshAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7275.KlingelnbergCycloPalloidHypoidGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_advanced_system_deflection(self) -> '_7276.KlingelnbergCycloPalloidHypoidGearSetAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7276.KlingelnbergCycloPalloidHypoidGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_advanced_system_deflection(self) -> '_7277.KlingelnbergCycloPalloidSpiralBevelGearAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7277.KlingelnbergCycloPalloidSpiralBevelGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_advanced_system_deflection(self) -> '_7278.KlingelnbergCycloPalloidSpiralBevelGearMeshAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7278.KlingelnbergCycloPalloidSpiralBevelGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_advanced_system_deflection(self) -> '_7279.KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7279.KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_advanced_system_deflection(self) -> '_7281.MassDiscAdvancedSystemDeflection':
        """MassDiscAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7281.MassDiscAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_advanced_system_deflection(self) -> '_7282.MeasurementComponentAdvancedSystemDeflection':
        """MeasurementComponentAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7282.MeasurementComponentAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_advanced_system_deflection(self) -> '_7283.MountableComponentAdvancedSystemDeflection':
        """MountableComponentAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7283.MountableComponentAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_advanced_system_deflection(self) -> '_7284.OilSealAdvancedSystemDeflection':
        """OilSealAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7284.OilSealAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_advanced_system_deflection(self) -> '_7285.PartAdvancedSystemDeflection':
        """PartAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7285.PartAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_advanced_system_deflection(self) -> '_7286.PartToPartShearCouplingAdvancedSystemDeflection':
        """PartToPartShearCouplingAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7286.PartToPartShearCouplingAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_advanced_system_deflection(self) -> '_7287.PartToPartShearCouplingConnectionAdvancedSystemDeflection':
        """PartToPartShearCouplingConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7287.PartToPartShearCouplingConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_advanced_system_deflection(self) -> '_7288.PartToPartShearCouplingHalfAdvancedSystemDeflection':
        """PartToPartShearCouplingHalfAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7288.PartToPartShearCouplingHalfAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_advanced_system_deflection(self) -> '_7289.PlanetaryConnectionAdvancedSystemDeflection':
        """PlanetaryConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7289.PlanetaryConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_advanced_system_deflection(self) -> '_7290.PlanetaryGearSetAdvancedSystemDeflection':
        """PlanetaryGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7290.PlanetaryGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_advanced_system_deflection(self) -> '_7291.PlanetCarrierAdvancedSystemDeflection':
        """PlanetCarrierAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7291.PlanetCarrierAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_advanced_system_deflection(self) -> '_7292.PointLoadAdvancedSystemDeflection':
        """PointLoadAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7292.PointLoadAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_advanced_system_deflection(self) -> '_7293.PowerLoadAdvancedSystemDeflection':
        """PowerLoadAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7293.PowerLoadAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_advanced_system_deflection(self) -> '_7294.PulleyAdvancedSystemDeflection':
        """PulleyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7294.PulleyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_advanced_system_deflection(self) -> '_7295.RingPinsAdvancedSystemDeflection':
        """RingPinsAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7295.RingPinsAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_advanced_system_deflection(self) -> '_7296.RingPinsToDiscConnectionAdvancedSystemDeflection':
        """RingPinsToDiscConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7296.RingPinsToDiscConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_advanced_system_deflection(self) -> '_7297.RollingRingAdvancedSystemDeflection':
        """RollingRingAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7297.RollingRingAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_advanced_system_deflection(self) -> '_7298.RollingRingAssemblyAdvancedSystemDeflection':
        """RollingRingAssemblyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7298.RollingRingAssemblyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_advanced_system_deflection(self) -> '_7299.RollingRingConnectionAdvancedSystemDeflection':
        """RollingRingConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7299.RollingRingConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_advanced_system_deflection(self) -> '_7300.RootAssemblyAdvancedSystemDeflection':
        """RootAssemblyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7300.RootAssemblyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_advanced_system_deflection(self) -> '_7301.ShaftAdvancedSystemDeflection':
        """ShaftAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7301.ShaftAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_advanced_system_deflection(self) -> '_7302.ShaftHubConnectionAdvancedSystemDeflection':
        """ShaftHubConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7302.ShaftHubConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_advanced_system_deflection(self) -> '_7303.ShaftToMountableComponentConnectionAdvancedSystemDeflection':
        """ShaftToMountableComponentConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7303.ShaftToMountableComponentConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_advanced_system_deflection(self) -> '_7304.SpecialisedAssemblyAdvancedSystemDeflection':
        """SpecialisedAssemblyAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7304.SpecialisedAssemblyAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_advanced_system_deflection(self) -> '_7305.SpiralBevelGearAdvancedSystemDeflection':
        """SpiralBevelGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7305.SpiralBevelGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_advanced_system_deflection(self) -> '_7306.SpiralBevelGearMeshAdvancedSystemDeflection':
        """SpiralBevelGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7306.SpiralBevelGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_advanced_system_deflection(self) -> '_7307.SpiralBevelGearSetAdvancedSystemDeflection':
        """SpiralBevelGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7307.SpiralBevelGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_advanced_system_deflection(self) -> '_7308.SpringDamperAdvancedSystemDeflection':
        """SpringDamperAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7308.SpringDamperAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_advanced_system_deflection(self) -> '_7309.SpringDamperConnectionAdvancedSystemDeflection':
        """SpringDamperConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7309.SpringDamperConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_advanced_system_deflection(self) -> '_7310.SpringDamperHalfAdvancedSystemDeflection':
        """SpringDamperHalfAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7310.SpringDamperHalfAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_advanced_system_deflection(self) -> '_7311.StraightBevelDiffGearAdvancedSystemDeflection':
        """StraightBevelDiffGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7311.StraightBevelDiffGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_advanced_system_deflection(self) -> '_7312.StraightBevelDiffGearMeshAdvancedSystemDeflection':
        """StraightBevelDiffGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7312.StraightBevelDiffGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_advanced_system_deflection(self) -> '_7313.StraightBevelDiffGearSetAdvancedSystemDeflection':
        """StraightBevelDiffGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7313.StraightBevelDiffGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_advanced_system_deflection(self) -> '_7314.StraightBevelGearAdvancedSystemDeflection':
        """StraightBevelGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7314.StraightBevelGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_advanced_system_deflection(self) -> '_7315.StraightBevelGearMeshAdvancedSystemDeflection':
        """StraightBevelGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7315.StraightBevelGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_advanced_system_deflection(self) -> '_7316.StraightBevelGearSetAdvancedSystemDeflection':
        """StraightBevelGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7316.StraightBevelGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_advanced_system_deflection(self) -> '_7317.StraightBevelPlanetGearAdvancedSystemDeflection':
        """StraightBevelPlanetGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7317.StraightBevelPlanetGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_advanced_system_deflection(self) -> '_7318.StraightBevelSunGearAdvancedSystemDeflection':
        """StraightBevelSunGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7318.StraightBevelSunGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_advanced_system_deflection(self) -> '_7319.SynchroniserAdvancedSystemDeflection':
        """SynchroniserAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7319.SynchroniserAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_advanced_system_deflection(self) -> '_7320.SynchroniserHalfAdvancedSystemDeflection':
        """SynchroniserHalfAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7320.SynchroniserHalfAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_advanced_system_deflection(self) -> '_7321.SynchroniserPartAdvancedSystemDeflection':
        """SynchroniserPartAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7321.SynchroniserPartAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_advanced_system_deflection(self) -> '_7322.SynchroniserSleeveAdvancedSystemDeflection':
        """SynchroniserSleeveAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7322.SynchroniserSleeveAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_advanced_system_deflection(self) -> '_7323.TorqueConverterAdvancedSystemDeflection':
        """TorqueConverterAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7323.TorqueConverterAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_advanced_system_deflection(self) -> '_7324.TorqueConverterConnectionAdvancedSystemDeflection':
        """TorqueConverterConnectionAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7324.TorqueConverterConnectionAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_advanced_system_deflection(self) -> '_7325.TorqueConverterPumpAdvancedSystemDeflection':
        """TorqueConverterPumpAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7325.TorqueConverterPumpAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_advanced_system_deflection(self) -> '_7326.TorqueConverterTurbineAdvancedSystemDeflection':
        """TorqueConverterTurbineAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7326.TorqueConverterTurbineAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_advanced_system_deflection(self) -> '_7328.UnbalancedMassAdvancedSystemDeflection':
        """UnbalancedMassAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7328.UnbalancedMassAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_advanced_system_deflection(self) -> '_7329.VirtualComponentAdvancedSystemDeflection':
        """VirtualComponentAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7329.VirtualComponentAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_advanced_system_deflection(self) -> '_7330.WormGearAdvancedSystemDeflection':
        """WormGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7330.WormGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_advanced_system_deflection(self) -> '_7331.WormGearMeshAdvancedSystemDeflection':
        """WormGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7331.WormGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_advanced_system_deflection(self) -> '_7332.WormGearSetAdvancedSystemDeflection':
        """WormGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7332.WormGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_advanced_system_deflection(self) -> '_7333.ZerolBevelGearAdvancedSystemDeflection':
        """ZerolBevelGearAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7333.ZerolBevelGearAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_advanced_system_deflection(self) -> '_7334.ZerolBevelGearMeshAdvancedSystemDeflection':
        """ZerolBevelGearMeshAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7334.ZerolBevelGearMeshAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_advanced_system_deflection(self) -> '_7335.ZerolBevelGearSetAdvancedSystemDeflection':
        """ZerolBevelGearSetAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7335.ZerolBevelGearSetAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_assembly_compound_advanced_system_deflection(self) -> '_7336.AbstractAssemblyCompoundAdvancedSystemDeflection':
        """AbstractAssemblyCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7336.AbstractAssemblyCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractAssemblyCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_compound_advanced_system_deflection(self) -> '_7337.AbstractShaftCompoundAdvancedSystemDeflection':
        """AbstractShaftCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7337.AbstractShaftCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_or_housing_compound_advanced_system_deflection(self) -> '_7338.AbstractShaftOrHousingCompoundAdvancedSystemDeflection':
        """AbstractShaftOrHousingCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7338.AbstractShaftOrHousingCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftOrHousingCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_abstract_shaft_to_mountable_component_connection_compound_advanced_system_deflection(self) -> '_7339.AbstractShaftToMountableComponentConnectionCompoundAdvancedSystemDeflection':
        """AbstractShaftToMountableComponentConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7339.AbstractShaftToMountableComponentConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AbstractShaftToMountableComponentConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_compound_advanced_system_deflection(self) -> '_7340.AGMAGleasonConicalGearCompoundAdvancedSystemDeflection':
        """AGMAGleasonConicalGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7340.AGMAGleasonConicalGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_mesh_compound_advanced_system_deflection(self) -> '_7341.AGMAGleasonConicalGearMeshCompoundAdvancedSystemDeflection':
        """AGMAGleasonConicalGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7341.AGMAGleasonConicalGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_agma_gleason_conical_gear_set_compound_advanced_system_deflection(self) -> '_7342.AGMAGleasonConicalGearSetCompoundAdvancedSystemDeflection':
        """AGMAGleasonConicalGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7342.AGMAGleasonConicalGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AGMAGleasonConicalGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_assembly_compound_advanced_system_deflection(self) -> '_7343.AssemblyCompoundAdvancedSystemDeflection':
        """AssemblyCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7343.AssemblyCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to AssemblyCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bearing_compound_advanced_system_deflection(self) -> '_7344.BearingCompoundAdvancedSystemDeflection':
        """BearingCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7344.BearingCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BearingCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_connection_compound_advanced_system_deflection(self) -> '_7345.BeltConnectionCompoundAdvancedSystemDeflection':
        """BeltConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7345.BeltConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_belt_drive_compound_advanced_system_deflection(self) -> '_7346.BeltDriveCompoundAdvancedSystemDeflection':
        """BeltDriveCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7346.BeltDriveCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BeltDriveCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_compound_advanced_system_deflection(self) -> '_7347.BevelDifferentialGearCompoundAdvancedSystemDeflection':
        """BevelDifferentialGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7347.BevelDifferentialGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_mesh_compound_advanced_system_deflection(self) -> '_7348.BevelDifferentialGearMeshCompoundAdvancedSystemDeflection':
        """BevelDifferentialGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7348.BevelDifferentialGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_gear_set_compound_advanced_system_deflection(self) -> '_7349.BevelDifferentialGearSetCompoundAdvancedSystemDeflection':
        """BevelDifferentialGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7349.BevelDifferentialGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_planet_gear_compound_advanced_system_deflection(self) -> '_7350.BevelDifferentialPlanetGearCompoundAdvancedSystemDeflection':
        """BevelDifferentialPlanetGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7350.BevelDifferentialPlanetGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialPlanetGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_differential_sun_gear_compound_advanced_system_deflection(self) -> '_7351.BevelDifferentialSunGearCompoundAdvancedSystemDeflection':
        """BevelDifferentialSunGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7351.BevelDifferentialSunGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelDifferentialSunGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_compound_advanced_system_deflection(self) -> '_7352.BevelGearCompoundAdvancedSystemDeflection':
        """BevelGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7352.BevelGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_mesh_compound_advanced_system_deflection(self) -> '_7353.BevelGearMeshCompoundAdvancedSystemDeflection':
        """BevelGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7353.BevelGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bevel_gear_set_compound_advanced_system_deflection(self) -> '_7354.BevelGearSetCompoundAdvancedSystemDeflection':
        """BevelGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7354.BevelGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BevelGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolt_compound_advanced_system_deflection(self) -> '_7355.BoltCompoundAdvancedSystemDeflection':
        """BoltCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7355.BoltCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_bolted_joint_compound_advanced_system_deflection(self) -> '_7356.BoltedJointCompoundAdvancedSystemDeflection':
        """BoltedJointCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7356.BoltedJointCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to BoltedJointCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_compound_advanced_system_deflection(self) -> '_7357.ClutchCompoundAdvancedSystemDeflection':
        """ClutchCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7357.ClutchCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_connection_compound_advanced_system_deflection(self) -> '_7358.ClutchConnectionCompoundAdvancedSystemDeflection':
        """ClutchConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7358.ClutchConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_clutch_half_compound_advanced_system_deflection(self) -> '_7359.ClutchHalfCompoundAdvancedSystemDeflection':
        """ClutchHalfCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7359.ClutchHalfCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ClutchHalfCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coaxial_connection_compound_advanced_system_deflection(self) -> '_7360.CoaxialConnectionCompoundAdvancedSystemDeflection':
        """CoaxialConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7360.CoaxialConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CoaxialConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_component_compound_advanced_system_deflection(self) -> '_7361.ComponentCompoundAdvancedSystemDeflection':
        """ComponentCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7361.ComponentCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ComponentCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_compound_advanced_system_deflection(self) -> '_7362.ConceptCouplingCompoundAdvancedSystemDeflection':
        """ConceptCouplingCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7362.ConceptCouplingCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_connection_compound_advanced_system_deflection(self) -> '_7363.ConceptCouplingConnectionCompoundAdvancedSystemDeflection':
        """ConceptCouplingConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7363.ConceptCouplingConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_coupling_half_compound_advanced_system_deflection(self) -> '_7364.ConceptCouplingHalfCompoundAdvancedSystemDeflection':
        """ConceptCouplingHalfCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7364.ConceptCouplingHalfCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptCouplingHalfCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_compound_advanced_system_deflection(self) -> '_7365.ConceptGearCompoundAdvancedSystemDeflection':
        """ConceptGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7365.ConceptGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_mesh_compound_advanced_system_deflection(self) -> '_7366.ConceptGearMeshCompoundAdvancedSystemDeflection':
        """ConceptGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7366.ConceptGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_concept_gear_set_compound_advanced_system_deflection(self) -> '_7367.ConceptGearSetCompoundAdvancedSystemDeflection':
        """ConceptGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7367.ConceptGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConceptGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_compound_advanced_system_deflection(self) -> '_7368.ConicalGearCompoundAdvancedSystemDeflection':
        """ConicalGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7368.ConicalGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_mesh_compound_advanced_system_deflection(self) -> '_7369.ConicalGearMeshCompoundAdvancedSystemDeflection':
        """ConicalGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7369.ConicalGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_conical_gear_set_compound_advanced_system_deflection(self) -> '_7370.ConicalGearSetCompoundAdvancedSystemDeflection':
        """ConicalGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7370.ConicalGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConicalGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_advanced_system_deflection(self) -> '_7371.ConnectionCompoundAdvancedSystemDeflection':
        """ConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7371.ConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connector_compound_advanced_system_deflection(self) -> '_7372.ConnectorCompoundAdvancedSystemDeflection':
        """ConnectorCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7372.ConnectorCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectorCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_compound_advanced_system_deflection(self) -> '_7373.CouplingCompoundAdvancedSystemDeflection':
        """CouplingCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7373.CouplingCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_connection_compound_advanced_system_deflection(self) -> '_7374.CouplingConnectionCompoundAdvancedSystemDeflection':
        """CouplingConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7374.CouplingConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_coupling_half_compound_advanced_system_deflection(self) -> '_7375.CouplingHalfCompoundAdvancedSystemDeflection':
        """CouplingHalfCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7375.CouplingHalfCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CouplingHalfCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_belt_connection_compound_advanced_system_deflection(self) -> '_7376.CVTBeltConnectionCompoundAdvancedSystemDeflection':
        """CVTBeltConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7376.CVTBeltConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTBeltConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_compound_advanced_system_deflection(self) -> '_7377.CVTCompoundAdvancedSystemDeflection':
        """CVTCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7377.CVTCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cvt_pulley_compound_advanced_system_deflection(self) -> '_7378.CVTPulleyCompoundAdvancedSystemDeflection':
        """CVTPulleyCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7378.CVTPulleyCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CVTPulleyCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_assembly_compound_advanced_system_deflection(self) -> '_7379.CycloidalAssemblyCompoundAdvancedSystemDeflection':
        """CycloidalAssemblyCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7379.CycloidalAssemblyCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalAssemblyCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_central_bearing_connection_compound_advanced_system_deflection(self) -> '_7380.CycloidalDiscCentralBearingConnectionCompoundAdvancedSystemDeflection':
        """CycloidalDiscCentralBearingConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7380.CycloidalDiscCentralBearingConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCentralBearingConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_compound_advanced_system_deflection(self) -> '_7381.CycloidalDiscCompoundAdvancedSystemDeflection':
        """CycloidalDiscCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7381.CycloidalDiscCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cycloidal_disc_planetary_bearing_connection_compound_advanced_system_deflection(self) -> '_7382.CycloidalDiscPlanetaryBearingConnectionCompoundAdvancedSystemDeflection':
        """CycloidalDiscPlanetaryBearingConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7382.CycloidalDiscPlanetaryBearingConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CycloidalDiscPlanetaryBearingConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_compound_advanced_system_deflection(self) -> '_7383.CylindricalGearCompoundAdvancedSystemDeflection':
        """CylindricalGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7383.CylindricalGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_mesh_compound_advanced_system_deflection(self) -> '_7384.CylindricalGearMeshCompoundAdvancedSystemDeflection':
        """CylindricalGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7384.CylindricalGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_gear_set_compound_advanced_system_deflection(self) -> '_7385.CylindricalGearSetCompoundAdvancedSystemDeflection':
        """CylindricalGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7385.CylindricalGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_cylindrical_planet_gear_compound_advanced_system_deflection(self) -> '_7386.CylindricalPlanetGearCompoundAdvancedSystemDeflection':
        """CylindricalPlanetGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7386.CylindricalPlanetGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to CylindricalPlanetGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_datum_compound_advanced_system_deflection(self) -> '_7387.DatumCompoundAdvancedSystemDeflection':
        """DatumCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7387.DatumCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DatumCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_external_cad_model_compound_advanced_system_deflection(self) -> '_7388.ExternalCADModelCompoundAdvancedSystemDeflection':
        """ExternalCADModelCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7388.ExternalCADModelCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ExternalCADModelCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_compound_advanced_system_deflection(self) -> '_7389.FaceGearCompoundAdvancedSystemDeflection':
        """FaceGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7389.FaceGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_mesh_compound_advanced_system_deflection(self) -> '_7390.FaceGearMeshCompoundAdvancedSystemDeflection':
        """FaceGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7390.FaceGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_face_gear_set_compound_advanced_system_deflection(self) -> '_7391.FaceGearSetCompoundAdvancedSystemDeflection':
        """FaceGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7391.FaceGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FaceGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_fe_part_compound_advanced_system_deflection(self) -> '_7392.FEPartCompoundAdvancedSystemDeflection':
        """FEPartCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7392.FEPartCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FEPartCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_flexible_pin_assembly_compound_advanced_system_deflection(self) -> '_7393.FlexiblePinAssemblyCompoundAdvancedSystemDeflection':
        """FlexiblePinAssemblyCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7393.FlexiblePinAssemblyCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to FlexiblePinAssemblyCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_compound_advanced_system_deflection(self) -> '_7394.GearCompoundAdvancedSystemDeflection':
        """GearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7394.GearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_mesh_compound_advanced_system_deflection(self) -> '_7395.GearMeshCompoundAdvancedSystemDeflection':
        """GearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7395.GearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_gear_set_compound_advanced_system_deflection(self) -> '_7396.GearSetCompoundAdvancedSystemDeflection':
        """GearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7396.GearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_guide_dxf_model_compound_advanced_system_deflection(self) -> '_7397.GuideDxfModelCompoundAdvancedSystemDeflection':
        """GuideDxfModelCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7397.GuideDxfModelCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to GuideDxfModelCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_compound_advanced_system_deflection(self) -> '_7398.HypoidGearCompoundAdvancedSystemDeflection':
        """HypoidGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7398.HypoidGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_mesh_compound_advanced_system_deflection(self) -> '_7399.HypoidGearMeshCompoundAdvancedSystemDeflection':
        """HypoidGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7399.HypoidGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_hypoid_gear_set_compound_advanced_system_deflection(self) -> '_7400.HypoidGearSetCompoundAdvancedSystemDeflection':
        """HypoidGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7400.HypoidGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to HypoidGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_inter_mountable_component_connection_compound_advanced_system_deflection(self) -> '_7401.InterMountableComponentConnectionCompoundAdvancedSystemDeflection':
        """InterMountableComponentConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7401.InterMountableComponentConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to InterMountableComponentConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_compound_advanced_system_deflection(self) -> '_7402.KlingelnbergCycloPalloidConicalGearCompoundAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7402.KlingelnbergCycloPalloidConicalGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_mesh_compound_advanced_system_deflection(self) -> '_7403.KlingelnbergCycloPalloidConicalGearMeshCompoundAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7403.KlingelnbergCycloPalloidConicalGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_conical_gear_set_compound_advanced_system_deflection(self) -> '_7404.KlingelnbergCycloPalloidConicalGearSetCompoundAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidConicalGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7404.KlingelnbergCycloPalloidConicalGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidConicalGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_compound_advanced_system_deflection(self) -> '_7405.KlingelnbergCycloPalloidHypoidGearCompoundAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7405.KlingelnbergCycloPalloidHypoidGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_mesh_compound_advanced_system_deflection(self) -> '_7406.KlingelnbergCycloPalloidHypoidGearMeshCompoundAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7406.KlingelnbergCycloPalloidHypoidGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_hypoid_gear_set_compound_advanced_system_deflection(self) -> '_7407.KlingelnbergCycloPalloidHypoidGearSetCompoundAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidHypoidGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7407.KlingelnbergCycloPalloidHypoidGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidHypoidGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_compound_advanced_system_deflection(self) -> '_7408.KlingelnbergCycloPalloidSpiralBevelGearCompoundAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7408.KlingelnbergCycloPalloidSpiralBevelGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_mesh_compound_advanced_system_deflection(self) -> '_7409.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7409.KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_klingelnberg_cyclo_palloid_spiral_bevel_gear_set_compound_advanced_system_deflection(self) -> '_7410.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundAdvancedSystemDeflection':
        """KlingelnbergCycloPalloidSpiralBevelGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7410.KlingelnbergCycloPalloidSpiralBevelGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to KlingelnbergCycloPalloidSpiralBevelGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mass_disc_compound_advanced_system_deflection(self) -> '_7411.MassDiscCompoundAdvancedSystemDeflection':
        """MassDiscCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7411.MassDiscCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MassDiscCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_measurement_component_compound_advanced_system_deflection(self) -> '_7412.MeasurementComponentCompoundAdvancedSystemDeflection':
        """MeasurementComponentCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7412.MeasurementComponentCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MeasurementComponentCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_mountable_component_compound_advanced_system_deflection(self) -> '_7413.MountableComponentCompoundAdvancedSystemDeflection':
        """MountableComponentCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7413.MountableComponentCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to MountableComponentCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_oil_seal_compound_advanced_system_deflection(self) -> '_7414.OilSealCompoundAdvancedSystemDeflection':
        """OilSealCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7414.OilSealCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to OilSealCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_advanced_system_deflection(self) -> '_7415.PartCompoundAdvancedSystemDeflection':
        """PartCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7415.PartCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_compound_advanced_system_deflection(self) -> '_7416.PartToPartShearCouplingCompoundAdvancedSystemDeflection':
        """PartToPartShearCouplingCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7416.PartToPartShearCouplingCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_connection_compound_advanced_system_deflection(self) -> '_7417.PartToPartShearCouplingConnectionCompoundAdvancedSystemDeflection':
        """PartToPartShearCouplingConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7417.PartToPartShearCouplingConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_to_part_shear_coupling_half_compound_advanced_system_deflection(self) -> '_7418.PartToPartShearCouplingHalfCompoundAdvancedSystemDeflection':
        """PartToPartShearCouplingHalfCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7418.PartToPartShearCouplingHalfCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartToPartShearCouplingHalfCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_connection_compound_advanced_system_deflection(self) -> '_7419.PlanetaryConnectionCompoundAdvancedSystemDeflection':
        """PlanetaryConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7419.PlanetaryConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planetary_gear_set_compound_advanced_system_deflection(self) -> '_7420.PlanetaryGearSetCompoundAdvancedSystemDeflection':
        """PlanetaryGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7420.PlanetaryGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetaryGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_planet_carrier_compound_advanced_system_deflection(self) -> '_7421.PlanetCarrierCompoundAdvancedSystemDeflection':
        """PlanetCarrierCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7421.PlanetCarrierCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PlanetCarrierCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_point_load_compound_advanced_system_deflection(self) -> '_7422.PointLoadCompoundAdvancedSystemDeflection':
        """PointLoadCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7422.PointLoadCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PointLoadCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_power_load_compound_advanced_system_deflection(self) -> '_7423.PowerLoadCompoundAdvancedSystemDeflection':
        """PowerLoadCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7423.PowerLoadCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PowerLoadCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_pulley_compound_advanced_system_deflection(self) -> '_7424.PulleyCompoundAdvancedSystemDeflection':
        """PulleyCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7424.PulleyCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PulleyCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_compound_advanced_system_deflection(self) -> '_7425.RingPinsCompoundAdvancedSystemDeflection':
        """RingPinsCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7425.RingPinsCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_ring_pins_to_disc_connection_compound_advanced_system_deflection(self) -> '_7426.RingPinsToDiscConnectionCompoundAdvancedSystemDeflection':
        """RingPinsToDiscConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7426.RingPinsToDiscConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RingPinsToDiscConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_assembly_compound_advanced_system_deflection(self) -> '_7427.RollingRingAssemblyCompoundAdvancedSystemDeflection':
        """RollingRingAssemblyCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7427.RollingRingAssemblyCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingAssemblyCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_compound_advanced_system_deflection(self) -> '_7428.RollingRingCompoundAdvancedSystemDeflection':
        """RollingRingCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7428.RollingRingCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_rolling_ring_connection_compound_advanced_system_deflection(self) -> '_7429.RollingRingConnectionCompoundAdvancedSystemDeflection':
        """RollingRingConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7429.RollingRingConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RollingRingConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_root_assembly_compound_advanced_system_deflection(self) -> '_7430.RootAssemblyCompoundAdvancedSystemDeflection':
        """RootAssemblyCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7430.RootAssemblyCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to RootAssemblyCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_compound_advanced_system_deflection(self) -> '_7431.ShaftCompoundAdvancedSystemDeflection':
        """ShaftCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7431.ShaftCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_hub_connection_compound_advanced_system_deflection(self) -> '_7432.ShaftHubConnectionCompoundAdvancedSystemDeflection':
        """ShaftHubConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7432.ShaftHubConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftHubConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_shaft_to_mountable_component_connection_compound_advanced_system_deflection(self) -> '_7433.ShaftToMountableComponentConnectionCompoundAdvancedSystemDeflection':
        """ShaftToMountableComponentConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7433.ShaftToMountableComponentConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ShaftToMountableComponentConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_specialised_assembly_compound_advanced_system_deflection(self) -> '_7434.SpecialisedAssemblyCompoundAdvancedSystemDeflection':
        """SpecialisedAssemblyCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7434.SpecialisedAssemblyCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpecialisedAssemblyCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_compound_advanced_system_deflection(self) -> '_7435.SpiralBevelGearCompoundAdvancedSystemDeflection':
        """SpiralBevelGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7435.SpiralBevelGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_mesh_compound_advanced_system_deflection(self) -> '_7436.SpiralBevelGearMeshCompoundAdvancedSystemDeflection':
        """SpiralBevelGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7436.SpiralBevelGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spiral_bevel_gear_set_compound_advanced_system_deflection(self) -> '_7437.SpiralBevelGearSetCompoundAdvancedSystemDeflection':
        """SpiralBevelGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7437.SpiralBevelGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpiralBevelGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_compound_advanced_system_deflection(self) -> '_7438.SpringDamperCompoundAdvancedSystemDeflection':
        """SpringDamperCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7438.SpringDamperCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_connection_compound_advanced_system_deflection(self) -> '_7439.SpringDamperConnectionCompoundAdvancedSystemDeflection':
        """SpringDamperConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7439.SpringDamperConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_spring_damper_half_compound_advanced_system_deflection(self) -> '_7440.SpringDamperHalfCompoundAdvancedSystemDeflection':
        """SpringDamperHalfCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7440.SpringDamperHalfCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SpringDamperHalfCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_compound_advanced_system_deflection(self) -> '_7441.StraightBevelDiffGearCompoundAdvancedSystemDeflection':
        """StraightBevelDiffGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7441.StraightBevelDiffGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_mesh_compound_advanced_system_deflection(self) -> '_7442.StraightBevelDiffGearMeshCompoundAdvancedSystemDeflection':
        """StraightBevelDiffGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7442.StraightBevelDiffGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_diff_gear_set_compound_advanced_system_deflection(self) -> '_7443.StraightBevelDiffGearSetCompoundAdvancedSystemDeflection':
        """StraightBevelDiffGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7443.StraightBevelDiffGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelDiffGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_compound_advanced_system_deflection(self) -> '_7444.StraightBevelGearCompoundAdvancedSystemDeflection':
        """StraightBevelGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7444.StraightBevelGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_mesh_compound_advanced_system_deflection(self) -> '_7445.StraightBevelGearMeshCompoundAdvancedSystemDeflection':
        """StraightBevelGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7445.StraightBevelGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_gear_set_compound_advanced_system_deflection(self) -> '_7446.StraightBevelGearSetCompoundAdvancedSystemDeflection':
        """StraightBevelGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7446.StraightBevelGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_planet_gear_compound_advanced_system_deflection(self) -> '_7447.StraightBevelPlanetGearCompoundAdvancedSystemDeflection':
        """StraightBevelPlanetGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7447.StraightBevelPlanetGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelPlanetGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_straight_bevel_sun_gear_compound_advanced_system_deflection(self) -> '_7448.StraightBevelSunGearCompoundAdvancedSystemDeflection':
        """StraightBevelSunGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7448.StraightBevelSunGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to StraightBevelSunGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_compound_advanced_system_deflection(self) -> '_7449.SynchroniserCompoundAdvancedSystemDeflection':
        """SynchroniserCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7449.SynchroniserCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_half_compound_advanced_system_deflection(self) -> '_7450.SynchroniserHalfCompoundAdvancedSystemDeflection':
        """SynchroniserHalfCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7450.SynchroniserHalfCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserHalfCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_part_compound_advanced_system_deflection(self) -> '_7451.SynchroniserPartCompoundAdvancedSystemDeflection':
        """SynchroniserPartCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7451.SynchroniserPartCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserPartCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_synchroniser_sleeve_compound_advanced_system_deflection(self) -> '_7452.SynchroniserSleeveCompoundAdvancedSystemDeflection':
        """SynchroniserSleeveCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7452.SynchroniserSleeveCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to SynchroniserSleeveCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_compound_advanced_system_deflection(self) -> '_7453.TorqueConverterCompoundAdvancedSystemDeflection':
        """TorqueConverterCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7453.TorqueConverterCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_connection_compound_advanced_system_deflection(self) -> '_7454.TorqueConverterConnectionCompoundAdvancedSystemDeflection':
        """TorqueConverterConnectionCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7454.TorqueConverterConnectionCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterConnectionCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_pump_compound_advanced_system_deflection(self) -> '_7455.TorqueConverterPumpCompoundAdvancedSystemDeflection':
        """TorqueConverterPumpCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7455.TorqueConverterPumpCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterPumpCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_torque_converter_turbine_compound_advanced_system_deflection(self) -> '_7456.TorqueConverterTurbineCompoundAdvancedSystemDeflection':
        """TorqueConverterTurbineCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7456.TorqueConverterTurbineCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to TorqueConverterTurbineCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_unbalanced_mass_compound_advanced_system_deflection(self) -> '_7457.UnbalancedMassCompoundAdvancedSystemDeflection':
        """UnbalancedMassCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7457.UnbalancedMassCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to UnbalancedMassCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_virtual_component_compound_advanced_system_deflection(self) -> '_7458.VirtualComponentCompoundAdvancedSystemDeflection':
        """VirtualComponentCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7458.VirtualComponentCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to VirtualComponentCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_compound_advanced_system_deflection(self) -> '_7459.WormGearCompoundAdvancedSystemDeflection':
        """WormGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7459.WormGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_mesh_compound_advanced_system_deflection(self) -> '_7460.WormGearMeshCompoundAdvancedSystemDeflection':
        """WormGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7460.WormGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_worm_gear_set_compound_advanced_system_deflection(self) -> '_7461.WormGearSetCompoundAdvancedSystemDeflection':
        """WormGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7461.WormGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to WormGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_compound_advanced_system_deflection(self) -> '_7462.ZerolBevelGearCompoundAdvancedSystemDeflection':
        """ZerolBevelGearCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7462.ZerolBevelGearCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_mesh_compound_advanced_system_deflection(self) -> '_7463.ZerolBevelGearMeshCompoundAdvancedSystemDeflection':
        """ZerolBevelGearMeshCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7463.ZerolBevelGearMeshCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearMeshCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_zerol_bevel_gear_set_compound_advanced_system_deflection(self) -> '_7464.ZerolBevelGearSetCompoundAdvancedSystemDeflection':
        """ZerolBevelGearSetCompoundAdvancedSystemDeflection: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7464.ZerolBevelGearSetCompoundAdvancedSystemDeflection.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ZerolBevelGearSetCompoundAdvancedSystemDeflection. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_analysis_case(self) -> '_7468.ConnectionAnalysisCase':
        """ConnectionAnalysisCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7468.ConnectionAnalysisCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionAnalysisCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_compound_analysis(self) -> '_7469.ConnectionCompoundAnalysis':
        """ConnectionCompoundAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7469.ConnectionCompoundAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionCompoundAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_fe_analysis(self) -> '_7470.ConnectionFEAnalysis':
        """ConnectionFEAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7470.ConnectionFEAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionFEAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_static_load_analysis_case(self) -> '_7471.ConnectionStaticLoadAnalysisCase':
        """ConnectionStaticLoadAnalysisCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7471.ConnectionStaticLoadAnalysisCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionStaticLoadAnalysisCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_connection_time_series_load_analysis_case(self) -> '_7472.ConnectionTimeSeriesLoadAnalysisCase':
        """ConnectionTimeSeriesLoadAnalysisCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7472.ConnectionTimeSeriesLoadAnalysisCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to ConnectionTimeSeriesLoadAnalysisCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_design_entity_compound_analysis(self) -> '_7473.DesignEntityCompoundAnalysis':
        """DesignEntityCompoundAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7473.DesignEntityCompoundAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to DesignEntityCompoundAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_analysis_case(self) -> '_7475.PartAnalysisCase':
        """PartAnalysisCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7475.PartAnalysisCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartAnalysisCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_compound_analysis(self) -> '_7476.PartCompoundAnalysis':
        """PartCompoundAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7476.PartCompoundAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartCompoundAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_fe_analysis(self) -> '_7477.PartFEAnalysis':
        """PartFEAnalysis: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7477.PartFEAnalysis.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartFEAnalysis. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_static_load_analysis_case(self) -> '_7478.PartStaticLoadAnalysisCase':
        """PartStaticLoadAnalysisCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7478.PartStaticLoadAnalysisCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartStaticLoadAnalysisCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None

    @property
    def planetary_original_of_type_part_time_series_load_analysis_case(self) -> '_7479.PartTimeSeriesLoadAnalysisCase':
        """PartTimeSeriesLoadAnalysisCase: 'PlanetaryOriginal' is the original name of this property.

        Note:
            This property is readonly.
        """

        temp = self.wrapped.PlanetaryOriginal

        if temp is None:
            return None

        if _7479.PartTimeSeriesLoadAnalysisCase.TYPE not in temp.__class__.__mro__:
            raise CastException('Failed to cast planetary_original to PartTimeSeriesLoadAnalysisCase. Expected: {}.'.format(temp.__class__.__qualname__))

        type_ = temp.GetType()
        return constructor.new(type_.Namespace, type_.Name)(temp) if temp is not None else None
