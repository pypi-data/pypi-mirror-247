from _typeshed import Incomplete

class IO:
    def save_excel(self, fp: str, *data, header: bool = ..., index: bool = ...): ...
    def load_excel(self, fp: str, sheet: str = ..., header: bool = ...): ...
    def save_npz(self, fp: str, *data: dict): ...
    def load_npz(self, fp, **argkeys): ...
    def save_csv(self, fp: str, *dataFrame: dict): ...
    def load_csv(self, fp: str): ...
    def svae_txt(self, fp: str, data: dict): ...
    def load_txt(self, fp: str, sep: Incomplete | None = ..., start_row: int = ..., end_row: int = ..., start_column: int = ..., end_column: int = ...): ...
    def save_mat(self, fp: str, mdict: dict = ...): ...
    def load_mat(self, fp: str, keys: dict = ..., default: Incomplete | None = ...): ...
    def user_save_npz_2d(self, fp: str, train_p: Incomplete | None = ..., train_x: Incomplete | None = ..., train_y: Incomplete | None = ..., test_p: Incomplete | None = ..., test_x: Incomplete | None = ..., test_y: Incomplete | None = ...): ...
    def user_load_npz_2d(self, fp: str): ...
    def user_save_npz_3d(self, fp: str, train_p: Incomplete | None = ..., train_x: Incomplete | None = ..., train_y: Incomplete | None = ..., train_z: Incomplete | None = ..., test_p: Incomplete | None = ..., test_x: Incomplete | None = ..., test_y: Incomplete | None = ..., test_z: Incomplete | None = ...): ...
    def user_load_npz_3d(self, fp: str): ...
    def dataset_save_npz(self, fp: str, train_inputs: Incomplete | None = ..., train_outputs: Incomplete | None = ..., test_inputs: Incomplete | None = ..., test_outputs: Incomplete | None = ...): ...
    def dataset_load_npz(self, fp: str): ...
    def data_sort(self, sfp: str, dfp: str = ..., column: int = ...): ...
