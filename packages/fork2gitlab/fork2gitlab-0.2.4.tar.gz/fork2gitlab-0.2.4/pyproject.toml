[tool.poetry]
name = "fork2gitlab"
version = "0.2.4"
description = "A script to help forking a project to gitlab and keeping it updated downstream"
authors = ["LoveIsGrief <loveisgrief@tuta.io>"]
license = "GPL-3.0-or-later"
readme = "README.md"
homepage = "https://gitlab.com/NamingThingsIsHard/collaboration/fork2gitlab"
repository = "https://gitlab.com/NamingThingsIsHard/collaboration/fork2gitlab"
keywords = [
    "cron",
    "forking",
    "gitlab",
    "script",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: POSIX",
    "Topic :: Software Development :: Version Control :: Git"
]

[tool.poetry.dependencies]
python = "^3.7"
python-gitlab = "^3.15.0"
cliff = "^3.1.0"

[tool.poetry.group.dev.dependencies]
coverage = "^5.5"
ruff = "^0.1.8"
mypy = "^1.4.1"

[tool.poetry.scripts]
f2g = 'fork2gitlab.main:main'

[tool.poetry.urls]
"Bug Tracker" = "https://gitlab.com/NamingThingsIsHard/collaboration/fork2gitlab/-/issues"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

line-length = 120
indent-width = 4

# Assume Python 3.8
target-version = "py37"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    # pycodestyle
    "E4", "E7", "E9",
    # Pyflakes
    "F",
    # isort
    "I",
]
# Avoid enforcing line-length violations (`E501`)
# Avoid enforcing Do not use bare `except` ('E722)
ignore = ["E501", "E722"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


[tool.mypy]
ignore_missing_imports = true
warn_return_any = true
exclude = ["tests"]
#check-untyped-defs = true  # Add to remove notification [annotation-unchecked]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
