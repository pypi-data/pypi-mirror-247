from __gin__ import dynamic_registration

import rave
from rave import core
from rave import dataset
from rave import blocks
from rave import discriminator
from rave import transforms

from torchaudio import transforms as ta_transforms

import torch.nn as nn

include "configs/v1.gin"

KERNEL_SIZE = 3
DILATIONS = [
    [1, 3, 9],
    [1, 3, 9],
    [1, 3, 9],
    [1, 3],
]
ENCODER_RATIOS = [2, 2, 2]
RATIOS = [4, 4, 4, 2]
CAPACITY = 96
NOISE_AUGMENTATION = 0

# MELSPEC PROPERTIES
N_FFT = 2048
N_MELS = 128
HOP_LENGTH = 256
NUM_GRU_LAYERS = 2

core.AudioDistanceV1.log_epsilon = 1e-7

core.get_augmented_latent_size:
    latent_size = %LATENT_SIZE
    noise_augmentation = %NOISE_AUGMENTATION

# AUGMENTATIONS
dataset.get_dataset:
    augmentations = [
        @augmentations/transforms.RandomCompress(),
        # @augmentations/transforms.FrequencyMasking()
    ]

augmentations/transforms.RandomCompress:
    amp_range = [-60,-10]
    threshold=-40
    prob = 0.5

ta_transforms.MelSpectrogram:
    sample_rate = %SAMPLING_RATE
    n_fft = %N_FFT
    win_length = %N_FFT
    hop_length = %HOP_LENGTH
    normalized = True
    n_mels = %N_MELS

# ENCODER
blocks.EncoderV2:
    data_size = %N_MELS
    ratios = %ENCODER_RATIOS
    capacity = %CAPACITY
    latent_size = %LATENT_SIZE
    n_out = 2
    kernel_size = %KERNEL_SIZE
    dilations = %DILATIONS

blocks.VariationalEncoder:
    encoder = @variational/blocks.EncoderV2

# GENERATOR
blocks.GeneratorV2:
    data_size = %N_BAND
    capacity = %CAPACITY
    ratios = %RATIOS
    latent_size = @core.get_augmented_latent_size()
    kernel_size = %KERNEL_SIZE
    dilations = %DILATIONS
    amplitude_modulation = True

# DISCRIMINATOR
periods/discriminator.ConvNet:
    conv = @nn.Conv2d
    kernel_size = (5, 1)

spectral/discriminator.ConvNet:
    conv = @nn.Conv1d
    kernel_size = 5
    stride = 2

discriminator.MultiPeriodDiscriminator:
    periods = [2, 3, 5, 7, 11]
    convnet = @periods/discriminator.ConvNet

discriminator.MultiScaleSpectralDiscriminator1d:
    scales = [4096, 2048, 1024, 512, 256]
    convnet = @spectral/discriminator.ConvNet

discriminator.CombineDiscriminators:
    discriminators = [
        @discriminator.MultiPeriodDiscriminator,
        @discriminator.MultiScaleDiscriminator,
        # @discriminator.MultiScaleSpectralDiscriminator1d,
    ]

feature_matching/core.mean_difference:
    relative = True

# RAVE
rave.RAVE:
    discriminator = @discriminator.CombineDiscriminators
    valid_signal_crop = True
    num_skipped_features = 1
    decoder = @blocks.GeneratorV2
    phase_1_duration = 1000000
    spectrogram = @ta_transforms.MelSpectrogram()
    update_discriminator_every = 4
    input_mode = "mel"
    output_mode = "pqmf"
    audio_monitor_epochs = 10
    
