[project]
name = "nipy"
dynamic = ['version']
license = {file = "LICENSE"}
description  = 'A python package for analysis of neuroimaging data'
readme = 'README.rst'
classifiers = ["Development Status :: 3 - Alpha",
               "Environment :: Console",
               "Intended Audience :: Science/Research",
               "License :: OSI Approved :: BSD License",
               "Operating System :: OS Independent",
               "Programming Language :: Python",
               "Topic :: Scientific/Engineering"]
dependencies = [
    'numpy>=1.22',
    'scipy>=1.8',
    'nibabel>=3.2',
    'sympy>=1.9',
    'transforms3d'
]

[[project.maintainers]]
name = 'nipy developers'
email = 'neuroimaging@python.org'

[project.urls]
Homepage = 'https://nipy.org/nipy'
Documentation = 'http://nipy.org/nipy/documentation.html'
Source = 'https://github.com/nipy/nipy'
Download = 'https://pypi.org/project/nipy/#files'
Tracker = 'https://github.com/nipy/nipy/issues'

[project.optional-dependencies]
developer = [
    'pre-commit',
    'rtoml',
]
docs = [
    'sphinx>=7.0',
    'numpydoc>=1.6.0',
    'matplotlib',
    'texext',
    'ipython'
]
optional = [
    'matplotlib>=3',
]
test = [
    'matplotlib>=3',
    'pytest>=7.2',
    'pytest-cov>=4.0',
    'pytest-doctestplus'
]

[build-system]
build-backend = "mesonpy"
requires = [
  "meson-python>=0.13",
  "ninja",
  "setuptools",
  "cython>=3",
  # From Numpy 1.25, Numpy is always backwards compatible for any given Python
  # version.  See:
  # https://numpy.org/doc/stable/release/1.25.0-notes.html#compiling-against-the-numpy-c-api-is-now-backwards-compatible-by-default
  "numpy>=1.25; python_version > '3.8'",
  # NEP29-minimum as of Sep 21, 2023
  "numpy==1.22; python_version >= '3.7' and python_version < '3.9'",
]

[project.scripts]
nipy_3dto4d = 'nipy.cli.img3dto4d:main'
nipy_4dto3d = 'nipy.cli.img4dto3d:main'
nipy_4d_realign = 'nipy.cli.realign4d:main'
nipy_tsdiffana = 'nipy.cli.tsdiffana:main'
nipy_diagnose = 'nipy.cli.diagnose:main'

[tool.ruff]
line-length = 88
target-version = 'py39'
select = [
    'I',
    'UP',
    'C4',
    'E713',
    'PIE',
    'PGH003',
    'PLR0402',
    'SIM101',
    'SIM109',
    'SIM110',
    'SIM111',
    'SIM118',
    'SIM2'
]

[tool.spin]
package = 'nipy'

[tool.spin.commands]
Build = [
    'spin.cmds.meson.build',
    'spin.cmds.meson.test'
]
Environments = [
    'spin.cmds.meson.ipython',
    'spin.cmds.meson.python',
    'spin.cmds.meson.run'
]
